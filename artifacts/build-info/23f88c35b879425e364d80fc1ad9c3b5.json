{
	"id": "23f88c35b879425e364d80fc1ad9c3b5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"hopium/etf/main/etf-token.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.30;\n\nimport {Initializable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport {ERC20Upgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\n\nimport \"hopium/common/interface/imDirectory.sol\";\nimport \"hopium/etf/interface/imEtfRouter.sol\";\nimport \"hopium/etf/interface/imEtfTokenEvents.sol\";\n\n/// @notice Cloneable ETF ERC20 with per-clone name/symbol via initialize()\n/// @dev Uses OZ *Upgradeable* ERC20 so name/symbol can be set at runtime.\n///      Access control (onlyEtfRouter/onlyOwner) resolves via ImDirectory.\ncontract EtfToken is Initializable, ERC20Upgradeable, ImEtfRouter, ImEtfTokenEvents {\n    bool private _initialized;\n\n    /// @dev The logic/implementation constructor runs once when you deploy the master.\n    ///      Clones DO NOT run constructors, they use initialize().\n    constructor(address _directory) ImDirectory(_directory) {\n        // Prevent the implementation from being used directly post-deployment.\n        // (No state to lock here; modifiers rely on Directory anyway.)\n    }\n\n    /// @notice One-time initializer for clones (constructors don't run for proxies)\n    function initialize(string memory name_, string memory symbol_, address directory_) external initializer {\n        require(!_initialized, \"EtfToken: already initialized\");\n        _initialized = true;\n\n        // Wire Directory for this clone first (so modifiers work)\n        _setDirectory(directory_);\n\n        // Initialize ERC20 storage (name/symbol)\n        __ERC20_init(name_, symbol_);\n    }\n\n    /// @notice Router-controlled mint\n    function mint(address to, uint256 amount) external onlyEtfRouter {\n        _mint(to, amount);\n    }\n\n    /// @notice Router-controlled burn\n    function burn(address from, uint256 amount) external onlyEtfRouter {\n        _burn(from, amount);\n    }\n\n    /// @dev OZ v5 central hook for transfer/mint/burn; forward event to EtfTokenEvents\n    function _update(address from, address to, uint256 value) internal override {\n        super._update(from, to, value); // state + standard Transfer event\n\n        IEtfTokenEvents etfTokenEvents = getEtfTokenEvents();\n        require(address(etfTokenEvents) != address(0), \"EtfToken: events contract not set\");\n        etfTokenEvents.emitTransferEvent(from, to, value);\n    }\n}\n"
			},
			"hopium/etf/interface/imEtfTokenEvents.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.30;\n\nimport \"hopium/common/interface/imDirectory.sol\";\n\ninterface IEtfTokenEvents {\n    function emitTransferEvent(address fromAddress, address toAddress, uint256 transferAmount) external;\n}\n\nabstract contract ImEtfTokenEvents is ImDirectory {\n\n    function getEtfTokenEvents() internal view virtual returns (IEtfTokenEvents) {\n        return IEtfTokenEvents(fetchFromDirectory(\"etf-token-events\"));\n    }\n    \n}"
			},
			"hopium/etf/interface/imEtfRouter.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.30;\n\nimport \"hopium/common/interface/imDirectory.sol\";\n\ninterface IEtfRouter {\n    \n}\n\nabstract contract ImEtfRouter is ImDirectory {\n\n    function getEtfRouter() internal view virtual returns (IEtfRouter) {\n        return IEtfRouter(fetchFromDirectory(\"etf-router\"));\n    }\n\n    modifier onlyEtfRouter() {\n        require(msg.sender == fetchFromDirectory(\"etf-router\"), \"msg.sender is not etf router\");\n        _;\n    }\n}"
			},
			"hopium/common/interface/imDirectory.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.30;\n\n/// @notice Interface used by the registry to talk to the external directory.\ninterface IDirectory {\n    function owner() external view returns (address);\n    function fetchFromDirectory(string memory _key) external view returns (address);\n}\n\nabstract contract ImDirectory {\n    IDirectory public Directory;\n\n    constructor(address _directory) {\n        _setDirectory(_directory); // no modifier here\n    }\n\n    function changeDirectoryAddress(address _directory) external onlyOwner {\n        _setDirectory(_directory);\n    }\n\n    function _setDirectory(address _directory) internal {\n        require(_directory != address(0), \"Directory cannot be zero address\");\n        require(_directory.code.length > 0, \"Directory must be a contract\");\n\n        // Sanity check the interface\n        try IDirectory(_directory).owner() returns (address) {\n            Directory = IDirectory(_directory);\n        } catch {\n            revert(\"Directory address does not implement owner()\");\n        }\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == Directory.owner(), \"Caller is not the owner\");\n        _;\n    }\n\n    function owner() public view returns (address) {\n        return Directory.owner();\n    }\n\n    function fetchFromDirectory(string memory _key) public view returns (address) {\n        return Directory.fetchFromDirectory(_key);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xfcd09c2aa8cc3f93e12545454359f901965db312bc03833daf84de0c03e05022\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07701188648d2ab83dab1037808298585264559bddf243bd8929037adcb984b0\",\"dweb:/ipfs/QmavmG5REdHCAWsZ8Cag26BCxAq27DRKGxr3uBg5ZYxQ51\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hopium/common/interface/imDirectory.sol": {
				"IDirectory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_key",
									"type": "string"
								}
							],
							"name": "fetchFromDirectory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"fetchFromDirectory(string)": "27262618",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"fetchFromDirectory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface used by the registry to talk to the external directory.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/common/interface/imDirectory.sol\":\"IDirectory\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Interface used by the registry to talk to the external directory.",
						"version": 1
					}
				},
				"ImDirectory": {
					"abi": [
						{
							"inputs": [],
							"name": "Directory",
							"outputs": [
								{
									"internalType": "contract IDirectory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_directory",
									"type": "address"
								}
							],
							"name": "changeDirectoryAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_key",
									"type": "string"
								}
							],
							"name": "fetchFromDirectory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"Directory()": "658a847a",
							"changeDirectoryAddress(address)": "ba4c7be1",
							"fetchFromDirectory(string)": "27262618",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Directory\",\"outputs\":[{\"internalType\":\"contract IDirectory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_directory\",\"type\":\"address\"}],\"name\":\"changeDirectoryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"fetchFromDirectory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/common/interface/imDirectory.sol\":\"ImDirectory\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1190,
								"contract": "hopium/common/interface/imDirectory.sol:ImDirectory",
								"label": "Directory",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDirectory)1187"
							}
						],
						"types": {
							"t_contract(IDirectory)1187": {
								"encoding": "inplace",
								"label": "contract IDirectory",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hopium/etf/interface/imEtfRouter.sol": {
				"IEtfRouter": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/etf/interface/imEtfRouter.sol\":\"IEtfRouter\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]},\"hopium/etf/interface/imEtfRouter.sol\":{\"keccak256\":\"0x9ef2dafe8d3bf78ea2372470cd04070489e0d2324d91a8fbc7c3867a8eabc9f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a558b98b69ec2677eb516606b18553fb1ea77376d5db15cef8ef4283c7b7ad95\",\"dweb:/ipfs/Qmdey7B1K99bf8XbQ3NAS1RMntRkziFFitrBQQpzM2hqiz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ImEtfRouter": {
					"abi": [
						{
							"inputs": [],
							"name": "Directory",
							"outputs": [
								{
									"internalType": "contract IDirectory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_directory",
									"type": "address"
								}
							],
							"name": "changeDirectoryAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_key",
									"type": "string"
								}
							],
							"name": "fetchFromDirectory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"Directory()": "658a847a",
							"changeDirectoryAddress(address)": "ba4c7be1",
							"fetchFromDirectory(string)": "27262618",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Directory\",\"outputs\":[{\"internalType\":\"contract IDirectory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_directory\",\"type\":\"address\"}],\"name\":\"changeDirectoryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"fetchFromDirectory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/etf/interface/imEtfRouter.sol\":\"ImEtfRouter\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]},\"hopium/etf/interface/imEtfRouter.sol\":{\"keccak256\":\"0x9ef2dafe8d3bf78ea2372470cd04070489e0d2324d91a8fbc7c3867a8eabc9f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a558b98b69ec2677eb516606b18553fb1ea77376d5db15cef8ef4283c7b7ad95\",\"dweb:/ipfs/Qmdey7B1K99bf8XbQ3NAS1RMntRkziFFitrBQQpzM2hqiz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1190,
								"contract": "hopium/etf/interface/imEtfRouter.sol:ImEtfRouter",
								"label": "Directory",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDirectory)1187"
							}
						],
						"types": {
							"t_contract(IDirectory)1187": {
								"encoding": "inplace",
								"label": "contract IDirectory",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hopium/etf/interface/imEtfTokenEvents.sol": {
				"IEtfTokenEvents": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "fromAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "toAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "transferAmount",
									"type": "uint256"
								}
							],
							"name": "emitTransferEvent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"emitTransferEvent(address,address,uint256)": "a6d49dca"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"transferAmount\",\"type\":\"uint256\"}],\"name\":\"emitTransferEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/etf/interface/imEtfTokenEvents.sol\":\"IEtfTokenEvents\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]},\"hopium/etf/interface/imEtfTokenEvents.sol\":{\"keccak256\":\"0x8c8d2994faa15185ec07293b444929d13c29333095497cb115fc85c74281b6ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae3ff09139579ca9d5bc67db27812228e0dcff828da15bb1f8d6b31955733e59\",\"dweb:/ipfs/QmVuuXMiHzfY9cbDpL5RApszivFUQF1MjELYvZH1A5wTUT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ImEtfTokenEvents": {
					"abi": [
						{
							"inputs": [],
							"name": "Directory",
							"outputs": [
								{
									"internalType": "contract IDirectory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_directory",
									"type": "address"
								}
							],
							"name": "changeDirectoryAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_key",
									"type": "string"
								}
							],
							"name": "fetchFromDirectory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"Directory()": "658a847a",
							"changeDirectoryAddress(address)": "ba4c7be1",
							"fetchFromDirectory(string)": "27262618",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Directory\",\"outputs\":[{\"internalType\":\"contract IDirectory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_directory\",\"type\":\"address\"}],\"name\":\"changeDirectoryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"fetchFromDirectory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/etf/interface/imEtfTokenEvents.sol\":\"ImEtfTokenEvents\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]},\"hopium/etf/interface/imEtfTokenEvents.sol\":{\"keccak256\":\"0x8c8d2994faa15185ec07293b444929d13c29333095497cb115fc85c74281b6ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae3ff09139579ca9d5bc67db27812228e0dcff828da15bb1f8d6b31955733e59\",\"dweb:/ipfs/QmVuuXMiHzfY9cbDpL5RApszivFUQF1MjELYvZH1A5wTUT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1190,
								"contract": "hopium/etf/interface/imEtfTokenEvents.sol:ImEtfTokenEvents",
								"label": "Directory",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDirectory)1187"
							}
						],
						"types": {
							"t_contract(IDirectory)1187": {
								"encoding": "inplace",
								"label": "contract IDirectory",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hopium/etf/main/etf-token.sol": {
				"EtfToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_directory",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Directory",
							"outputs": [
								{
									"internalType": "contract IDirectory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_directory",
									"type": "address"
								}
							],
							"name": "changeDirectoryAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_key",
									"type": "string"
								}
							],
							"name": "fetchFromDirectory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "directory_",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Uses OZ *Upgradeable* ERC20 so name/symbol can be set at runtime.      Access control (onlyEtfRouter/onlyOwner) resolves via ImDirectory.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "The logic/implementation constructor runs once when you deploy the master.      Clones DO NOT run constructors, they use initialize()."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"hopium/etf/main/etf-token.sol\":635:2378  contract EtfToken is Initializable, ERC20Upgradeable, ImEtfRouter, ImEtfTokenEvents {... */\n  mstore(0x40, 0x80)\n    /* \"hopium/etf/main/etf-token.sol\":913:1128  constructor(address _directory) ImDirectory(_directory) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"hopium/etf/main/etf-token.sol\":957:967  _directory */\n  dup1\n    /* \"hopium/common/interface/imDirectory.sol\":412:437  _setDirectory(_directory) */\n  tag_7\n    /* \"hopium/common/interface/imDirectory.sol\":426:436  _directory */\n  dup2\n    /* \"hopium/common/interface/imDirectory.sol\":412:425  _setDirectory */\n  shl(0x20, tag_8)\n    /* \"hopium/common/interface/imDirectory.sol\":412:437  _setDirectory(_directory) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"hopium/common/interface/imDirectory.sol\":370:464  constructor(address _directory) {... */\n  pop\n    /* \"hopium/etf/main/etf-token.sol\":913:1128  constructor(address _directory) ImDirectory(_directory) {... */\n  pop\n    /* \"hopium/etf/main/etf-token.sol\":635:2378  contract EtfToken is Initializable, ERC20Upgradeable, ImEtfRouter, ImEtfTokenEvents {... */\n  jump(tag_10)\n    /* \"hopium/common/interface/imDirectory.sol\":589:1050  function _setDirectory(address _directory) internal {... */\ntag_8:\n    /* \"hopium/common/interface/imDirectory.sol\":681:682  0 */\n  0x00\n    /* \"hopium/common/interface/imDirectory.sol\":659:683  _directory != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"hopium/common/interface/imDirectory.sol\":659:669  _directory */\n  dup2\n    /* \"hopium/common/interface/imDirectory.sol\":659:683  _directory != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"hopium/common/interface/imDirectory.sol\":651:720  require(_directory != address(0), \"Directory cannot be zero address\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"hopium/common/interface/imDirectory.sol\":763:764  0 */\n  0x00\n    /* \"hopium/common/interface/imDirectory.sol\":738:748  _directory */\n  dup2\n    /* \"hopium/common/interface/imDirectory.sol\":738:760  _directory.code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"hopium/common/interface/imDirectory.sol\":738:764  _directory.code.length > 0 */\n  gt\n    /* \"hopium/common/interface/imDirectory.sol\":730:797  require(_directory.code.length > 0, \"Directory must be a contract\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"hopium/common/interface/imDirectory.sol\":861:871  _directory */\n  dup1\n    /* \"hopium/common/interface/imDirectory.sol\":850:878  IDirectory(_directory).owner */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8da5cb5b\n    /* \"hopium/common/interface/imDirectory.sol\":850:880  IDirectory(_directory).owner() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  swap3\n  pop\n  pop\n  pop\n  dup1\n  iszero\n  tag_18\n  jumpi\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_19\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_19:\n  0x01\ntag_18:\n    /* \"hopium/common/interface/imDirectory.sol\":846:1044  try IDirectory(_directory).owner() returns (address) {... */\n  tag_20\n  jumpi\n    /* \"hopium/common/interface/imDirectory.sol\":979:1033  revert(\"Directory address does not implement owner()\") */\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"hopium/common/interface/imDirectory.sol\":846:1044  try IDirectory(_directory).owner() returns (address) {... */\ntag_20:\n    /* \"hopium/common/interface/imDirectory.sol\":936:946  _directory */\n  dup2\n    /* \"hopium/common/interface/imDirectory.sol\":913:922  Directory */\n  0x00\n  0x00\n    /* \"hopium/common/interface/imDirectory.sol\":913:947  Directory = IDirectory(_directory) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"hopium/common/interface/imDirectory.sol\":881:958  returns (address) {... */\n  pop\n    /* \"hopium/common/interface/imDirectory.sol\":589:1050  function _setDirectory(address _directory) internal {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_28:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_30:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_31:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_47\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_30\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_32:\n    /* \"#utility.yul\":641:665   */\n  tag_49\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_31\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_50:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_33:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_52\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_32\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_55\n  tag_28\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":932:1051   */\ntag_54:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_56\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_33\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1371   */\ntag_34:\n    /* \"#utility.yul\":1286:1297   */\n  0x00\n    /* \"#utility.yul\":1320:1326   */\n  dup3\n    /* \"#utility.yul\":1315:1318   */\n  dup3\n    /* \"#utility.yul\":1308:1327   */\n  mstore\n    /* \"#utility.yul\":1360:1364   */\n  0x20\n    /* \"#utility.yul\":1355:1358   */\n  dup3\n    /* \"#utility.yul\":1351:1365   */\n  add\n    /* \"#utility.yul\":1336:1365   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1371   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1377:1559   */\ntag_35:\n    /* \"#utility.yul\":1517:1551   */\n  0x4469726563746f72792063616e6e6f74206265207a65726f2061646472657373\n    /* \"#utility.yul\":1513:1514   */\n  0x00\n    /* \"#utility.yul\":1505:1511   */\n  dup3\n    /* \"#utility.yul\":1501:1515   */\n  add\n    /* \"#utility.yul\":1494:1552   */\n  mstore\n    /* \"#utility.yul\":1377:1559   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1565:1931   */\ntag_36:\n    /* \"#utility.yul\":1707:1710   */\n  0x00\n    /* \"#utility.yul\":1728:1795   */\n  tag_60\n    /* \"#utility.yul\":1792:1794   */\n  0x20\n    /* \"#utility.yul\":1787:1790   */\n  dup4\n    /* \"#utility.yul\":1728:1795   */\n  tag_34\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1721:1795   */\n  swap2\n  pop\n    /* \"#utility.yul\":1804:1897   */\n  tag_61\n    /* \"#utility.yul\":1893:1896   */\n  dup3\n    /* \"#utility.yul\":1804:1897   */\n  tag_35\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1922:1924   */\n  0x20\n    /* \"#utility.yul\":1917:1920   */\n  dup3\n    /* \"#utility.yul\":1913:1925   */\n  add\n    /* \"#utility.yul\":1906:1925   */\n  swap1\n  pop\n    /* \"#utility.yul\":1565:1931   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1937:2356   */\ntag_14:\n    /* \"#utility.yul\":2103:2107   */\n  0x00\n    /* \"#utility.yul\":2141:2143   */\n  0x20\n    /* \"#utility.yul\":2130:2139   */\n  dup3\n    /* \"#utility.yul\":2126:2144   */\n  add\n    /* \"#utility.yul\":2118:2144   */\n  swap1\n  pop\n    /* \"#utility.yul\":2190:2199   */\n  dup2\n    /* \"#utility.yul\":2184:2188   */\n  dup2\n    /* \"#utility.yul\":2180:2200   */\n  sub\n    /* \"#utility.yul\":2176:2177   */\n  0x00\n    /* \"#utility.yul\":2165:2174   */\n  dup4\n    /* \"#utility.yul\":2161:2178   */\n  add\n    /* \"#utility.yul\":2154:2201   */\n  mstore\n    /* \"#utility.yul\":2218:2349   */\n  tag_63\n    /* \"#utility.yul\":2344:2348   */\n  dup2\n    /* \"#utility.yul\":2218:2349   */\n  tag_36\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2210:2349   */\n  swap1\n  pop\n    /* \"#utility.yul\":1937:2356   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2362:2540   */\ntag_37:\n    /* \"#utility.yul\":2502:2532   */\n  0x4469726563746f7279206d757374206265206120636f6e747261637400000000\n    /* \"#utility.yul\":2498:2499   */\n  0x00\n    /* \"#utility.yul\":2490:2496   */\n  dup3\n    /* \"#utility.yul\":2486:2500   */\n  add\n    /* \"#utility.yul\":2479:2533   */\n  mstore\n    /* \"#utility.yul\":2362:2540   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2546:2912   */\ntag_38:\n    /* \"#utility.yul\":2688:2691   */\n  0x00\n    /* \"#utility.yul\":2709:2776   */\n  tag_66\n    /* \"#utility.yul\":2773:2775   */\n  0x1c\n    /* \"#utility.yul\":2768:2771   */\n  dup4\n    /* \"#utility.yul\":2709:2776   */\n  tag_34\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2702:2776   */\n  swap2\n  pop\n    /* \"#utility.yul\":2785:2878   */\n  tag_67\n    /* \"#utility.yul\":2874:2877   */\n  dup3\n    /* \"#utility.yul\":2785:2878   */\n  tag_37\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2903:2905   */\n  0x20\n    /* \"#utility.yul\":2898:2901   */\n  dup3\n    /* \"#utility.yul\":2894:2906   */\n  add\n    /* \"#utility.yul\":2887:2906   */\n  swap1\n  pop\n    /* \"#utility.yul\":2546:2912   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2918:3337   */\ntag_17:\n    /* \"#utility.yul\":3084:3088   */\n  0x00\n    /* \"#utility.yul\":3122:3124   */\n  0x20\n    /* \"#utility.yul\":3111:3120   */\n  dup3\n    /* \"#utility.yul\":3107:3125   */\n  add\n    /* \"#utility.yul\":3099:3125   */\n  swap1\n  pop\n    /* \"#utility.yul\":3171:3180   */\n  dup2\n    /* \"#utility.yul\":3165:3169   */\n  dup2\n    /* \"#utility.yul\":3161:3181   */\n  sub\n    /* \"#utility.yul\":3157:3158   */\n  0x00\n    /* \"#utility.yul\":3146:3155   */\n  dup4\n    /* \"#utility.yul\":3142:3159   */\n  add\n    /* \"#utility.yul\":3135:3182   */\n  mstore\n    /* \"#utility.yul\":3199:3330   */\n  tag_69\n    /* \"#utility.yul\":3325:3329   */\n  dup2\n    /* \"#utility.yul\":3199:3330   */\n  tag_38\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":3191:3330   */\n  swap1\n  pop\n    /* \"#utility.yul\":2918:3337   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3343:3574   */\ntag_39:\n    /* \"#utility.yul\":3483:3517   */\n  0x4469726563746f7279206164647265737320646f6573206e6f7420696d706c65\n    /* \"#utility.yul\":3479:3480   */\n  0x00\n    /* \"#utility.yul\":3471:3477   */\n  dup3\n    /* \"#utility.yul\":3467:3481   */\n  add\n    /* \"#utility.yul\":3460:3518   */\n  mstore\n    /* \"#utility.yul\":3552:3566   */\n  0x6d656e74206f776e657228290000000000000000000000000000000000000000\n    /* \"#utility.yul\":3547:3549   */\n  0x20\n    /* \"#utility.yul\":3539:3545   */\n  dup3\n    /* \"#utility.yul\":3535:3550   */\n  add\n    /* \"#utility.yul\":3528:3567   */\n  mstore\n    /* \"#utility.yul\":3343:3574   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3580:3946   */\ntag_40:\n    /* \"#utility.yul\":3722:3725   */\n  0x00\n    /* \"#utility.yul\":3743:3810   */\n  tag_72\n    /* \"#utility.yul\":3807:3809   */\n  0x2c\n    /* \"#utility.yul\":3802:3805   */\n  dup4\n    /* \"#utility.yul\":3743:3810   */\n  tag_34\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":3736:3810   */\n  swap2\n  pop\n    /* \"#utility.yul\":3819:3912   */\n  tag_73\n    /* \"#utility.yul\":3908:3911   */\n  dup3\n    /* \"#utility.yul\":3819:3912   */\n  tag_39\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3937:3939   */\n  0x40\n    /* \"#utility.yul\":3932:3935   */\n  dup3\n    /* \"#utility.yul\":3928:3940   */\n  add\n    /* \"#utility.yul\":3921:3940   */\n  swap1\n  pop\n    /* \"#utility.yul\":3580:3946   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3952:4371   */\ntag_25:\n    /* \"#utility.yul\":4118:4122   */\n  0x00\n    /* \"#utility.yul\":4156:4158   */\n  0x20\n    /* \"#utility.yul\":4145:4154   */\n  dup3\n    /* \"#utility.yul\":4141:4159   */\n  add\n    /* \"#utility.yul\":4133:4159   */\n  swap1\n  pop\n    /* \"#utility.yul\":4205:4214   */\n  dup2\n    /* \"#utility.yul\":4199:4203   */\n  dup2\n    /* \"#utility.yul\":4195:4215   */\n  sub\n    /* \"#utility.yul\":4191:4192   */\n  0x00\n    /* \"#utility.yul\":4180:4189   */\n  dup4\n    /* \"#utility.yul\":4176:4193   */\n  add\n    /* \"#utility.yul\":4169:4216   */\n  mstore\n    /* \"#utility.yul\":4233:4364   */\n  tag_75\n    /* \"#utility.yul\":4359:4363   */\n  dup2\n    /* \"#utility.yul\":4233:4364   */\n  tag_40\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":4225:4364   */\n  swap1\n  pop\n    /* \"#utility.yul\":3952:4371   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"hopium/etf/main/etf-token.sol\":635:2378  contract EtfToken is Initializable, ERC20Upgradeable, ImEtfRouter, ImEtfTokenEvents {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"hopium/etf/main/etf-token.sol\":635:2378  contract EtfToken is Initializable, ERC20Upgradeable, ImEtfRouter, ImEtfTokenEvents {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x658a847a\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x9dc29fac\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xba4c7be1\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x658a847a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x23b872dd\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x27262618\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x077f224a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/etf/main/etf-token.sol\":1219:1617  function initialize(string memory name_, string memory symbol_, address directory_) external initializer {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5114:5300  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3850:4002  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5892:6136  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/common/interface/imDirectory.sol\":1272:1408  function fetchFromDirectory(string memory _key) public view returns (address) {... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3735:3817  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/etf/main/etf-token.sol\":1662:1761  function mint(address to, uint256 amount) external onlyEtfRouter {... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"hopium/common/interface/imDirectory.sol\":336:363  IDirectory public Directory */\n    tag_11:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4035:4206  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/common/interface/imDirectory.sol\":1178:1266  function owner() public view returns (address) {... */\n    tag_13:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2954:3102  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/etf/main/etf-token.sol\":1806:1909  function burn(address from, uint256 amount) external onlyEtfRouter {... */\n    tag_15:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4401:4579  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/common/interface/imDirectory.sol\":470:583  function changeDirectoryAddress(address _directory) external onlyOwner {... */\n    tag_17:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4612:4807  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2742:2755  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2767:2789  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2810  _getERC20Storage() */\n      tag_89\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2808  _getERC20Storage */\n      tag_90\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2810  _getERC20Storage() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2767:2810  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2827:2828  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2827:2834  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2820:2834  return $._name */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_92\n      jump\t// in\n    tag_93:\n      dup1\n      iszero\n      tag_94\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_95\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_94)\n    tag_95:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_96:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_96\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"hopium/etf/main/etf-token.sol\":1219:1617  function initialize(string memory name_, string memory symbol_, address directory_) external initializer {... */\n    tag_29:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_99\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4721  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4739:4740  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4735  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4740  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_100\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4744:4758  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n    tag_100:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4758  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4785  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4803:4804  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4799  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_101\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4837:4838  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4816:4820  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4833  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4838  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n    tag_101:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4838  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4854:4866  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4866  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_102\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4871:4883  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4870:4883  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n      iszero\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4906:4929  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4966:4967  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4950  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4963  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4981:4995  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n      iszero\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5029:5033  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5012  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5026  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5033  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n    tag_104:\n        /* \"hopium/etf/main/etf-token.sol\":1343:1355  _initialized */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"hopium/etf/main/etf-token.sol\":1342:1355  !_initialized */\n      iszero\n        /* \"hopium/etf/main/etf-token.sol\":1334:1389  require(!_initialized, \"EtfToken: already initialized\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"hopium/etf/main/etf-token.sol\":1414:1418  true */\n      0x01\n        /* \"hopium/etf/main/etf-token.sol\":1399:1411  _initialized */\n      0x00\n      0x14\n        /* \"hopium/etf/main/etf-token.sol\":1399:1418  _initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"hopium/etf/main/etf-token.sol\":1496:1521  _setDirectory(directory_) */\n      tag_109\n        /* \"hopium/etf/main/etf-token.sol\":1510:1520  directory_ */\n      dup7\n        /* \"hopium/etf/main/etf-token.sol\":1496:1509  _setDirectory */\n      tag_110\n        /* \"hopium/etf/main/etf-token.sol\":1496:1521  _setDirectory(directory_) */\n      jump\t// in\n    tag_109:\n        /* \"hopium/etf/main/etf-token.sol\":1582:1610  __ERC20_init(name_, symbol_) */\n      tag_111\n        /* \"hopium/etf/main/etf-token.sol\":1595:1600  name_ */\n      dup9\n        /* \"hopium/etf/main/etf-token.sol\":1602:1609  symbol_ */\n      dup9\n        /* \"hopium/etf/main/etf-token.sol\":1582:1594  __ERC20_init */\n      tag_112\n        /* \"hopium/etf/main/etf-token.sol\":1582:1610  __ERC20_init(name_, symbol_) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5068:5082  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n      iszero\n      tag_113\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5116:5121  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5099  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5113  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5121  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5152:5153  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5171  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"hopium/etf/main/etf-token.sol\":1219:1617  function initialize(string memory name_, string memory symbol_, address directory_) external initializer {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5114:5300  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5187:5191  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5203:5216  address owner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5219:5231  _msgSender() */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5219:5229  _msgSender */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5219:5231  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5203:5231  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5241:5272  _approve(owner, spender, value) */\n      tag_119\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5250:5255  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5257:5264  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5266:5271  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5241:5249  _approve */\n      tag_120\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5241:5272  _approve(owner, spender, value) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5289:5293  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5282:5293  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5114:5300  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3850:4002  function totalSupply() public view virtual returns (uint256) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3902:3909  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3921:3943  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3946:3964  _getERC20Storage() */\n      tag_122\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3946:3962  _getERC20Storage */\n      tag_90\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3946:3964  _getERC20Storage() */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3921:3964  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3981:3982  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3981:3995  $._totalSupply */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3974:3995  return $._totalSupply */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3850:4002  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5892:6136  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5979:5983  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5995:6010  address spender */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6013:6025  _msgSender() */\n      tag_124\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6013:6023  _msgSender */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6013:6025  _msgSender() */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5995:6025  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6035:6072  _spendAllowance(from, spender, value) */\n      tag_125\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6051:6055  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6057:6064  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6066:6071  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6035:6050  _spendAllowance */\n      tag_126\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6035:6072  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6082:6108  _transfer(from, to, value) */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6092:6096  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6098:6100  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6102:6107  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6082:6091  _transfer */\n      tag_128\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6082:6108  _transfer(from, to, value) */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6125:6129  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6118:6129  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5892:6136  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"hopium/common/interface/imDirectory.sol\":1272:1408  function fetchFromDirectory(string memory _key) public view returns (address) {... */\n    tag_48:\n        /* \"hopium/common/interface/imDirectory.sol\":1341:1348  address */\n      0x00\n        /* \"hopium/common/interface/imDirectory.sol\":1367:1376  Directory */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/common/interface/imDirectory.sol\":1367:1395  Directory.fetchFromDirectory */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x27262618\n        /* \"hopium/common/interface/imDirectory.sol\":1396:1400  _key */\n      dup4\n        /* \"hopium/common/interface/imDirectory.sol\":1367:1401  Directory.fetchFromDirectory(_key) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_130:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_132\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"hopium/common/interface/imDirectory.sol\":1360:1401  return Directory.fetchFromDirectory(_key) */\n      swap1\n      pop\n        /* \"hopium/common/interface/imDirectory.sol\":1272:1408  function fetchFromDirectory(string memory _key) public view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3735:3817  function decimals() public view virtual returns (uint8) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3784:3789  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3808:3810  18 */\n      0x12\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3801:3810  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3735:3817  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"hopium/etf/main/etf-token.sol\":1662:1761  function mint(address to, uint256 amount) external onlyEtfRouter {... */\n    tag_57:\n        /* \"hopium/etf/interface/imEtfRouter.sol\":389:421  fetchFromDirectory(\"etf-router\") */\n      tag_137\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x6574662d726f7574657200000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"hopium/etf/interface/imEtfRouter.sol\":389:407  fetchFromDirectory */\n      tag_48\n        /* \"hopium/etf/interface/imEtfRouter.sol\":389:421  fetchFromDirectory(\"etf-router\") */\n      jump\t// in\n    tag_137:\n        /* \"hopium/etf/interface/imEtfRouter.sol\":375:421  msg.sender == fetchFromDirectory(\"etf-router\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/etf/interface/imEtfRouter.sol\":375:385  msg.sender */\n      caller\n        /* \"hopium/etf/interface/imEtfRouter.sol\":375:421  msg.sender == fetchFromDirectory(\"etf-router\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"hopium/etf/interface/imEtfRouter.sol\":367:454  require(msg.sender == fetchFromDirectory(\"etf-router\"), \"msg.sender is not etf router\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"hopium/etf/main/etf-token.sol\":1737:1754  _mint(to, amount) */\n      tag_142\n        /* \"hopium/etf/main/etf-token.sol\":1743:1745  to */\n      dup3\n        /* \"hopium/etf/main/etf-token.sol\":1747:1753  amount */\n      dup3\n        /* \"hopium/etf/main/etf-token.sol\":1737:1742  _mint */\n      tag_143\n        /* \"hopium/etf/main/etf-token.sol\":1737:1754  _mint(to, amount) */\n      jump\t// in\n    tag_142:\n        /* \"hopium/etf/main/etf-token.sol\":1662:1761  function mint(address to, uint256 amount) external onlyEtfRouter {... */\n      pop\n      pop\n      jump\t// out\n        /* \"hopium/common/interface/imDirectory.sol\":336:363  IDirectory public Directory */\n    tag_59:\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4035:4206  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4100:4107  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4119:4141  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4144:4162  _getERC20Storage() */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4144:4160  _getERC20Storage */\n      tag_90\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4144:4162  _getERC20Storage() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4119:4162  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4179:4180  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4179:4190  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4179:4199  $._balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4191:4198  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4179:4199  $._balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4172:4199  return $._balances[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4035:4206  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"hopium/common/interface/imDirectory.sol\":1178:1266  function owner() public view returns (address) {... */\n    tag_68:\n        /* \"hopium/common/interface/imDirectory.sol\":1216:1223  address */\n      0x00\n        /* \"hopium/common/interface/imDirectory.sol\":1242:1251  Directory */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/common/interface/imDirectory.sol\":1242:1257  Directory.owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"hopium/common/interface/imDirectory.sol\":1242:1259  Directory.owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_148\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_149\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_149:\n        /* \"hopium/common/interface/imDirectory.sol\":1235:1259  return Directory.owner() */\n      swap1\n      pop\n        /* \"hopium/common/interface/imDirectory.sol\":1178:1266  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2954:3102  function symbol() public view virtual returns (string memory) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3001:3014  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3026:3048  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3051:3069  _getERC20Storage() */\n      tag_151\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3051:3067  _getERC20Storage */\n      tag_90\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3051:3069  _getERC20Storage() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3026:3069  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3086:3087  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3086:3095  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3079:3095  return $._symbol */\n      dup1\n      sload\n      tag_152\n      swap1\n      tag_92\n      jump\t// in\n    tag_152:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_153\n      swap1\n      tag_92\n      jump\t// in\n    tag_153:\n      dup1\n      iszero\n      tag_154\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_155\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_154)\n    tag_155:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_156:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_156\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_154:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2954:3102  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"hopium/etf/main/etf-token.sol\":1806:1909  function burn(address from, uint256 amount) external onlyEtfRouter {... */\n    tag_75:\n        /* \"hopium/etf/interface/imEtfRouter.sol\":389:421  fetchFromDirectory(\"etf-router\") */\n      tag_158\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x6574662d726f7574657200000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"hopium/etf/interface/imEtfRouter.sol\":389:407  fetchFromDirectory */\n      tag_48\n        /* \"hopium/etf/interface/imEtfRouter.sol\":389:421  fetchFromDirectory(\"etf-router\") */\n      jump\t// in\n    tag_158:\n        /* \"hopium/etf/interface/imEtfRouter.sol\":375:421  msg.sender == fetchFromDirectory(\"etf-router\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/etf/interface/imEtfRouter.sol\":375:385  msg.sender */\n      caller\n        /* \"hopium/etf/interface/imEtfRouter.sol\":375:421  msg.sender == fetchFromDirectory(\"etf-router\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"hopium/etf/interface/imEtfRouter.sol\":367:454  require(msg.sender == fetchFromDirectory(\"etf-router\"), \"msg.sender is not etf router\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_140\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"hopium/etf/main/etf-token.sol\":1883:1902  _burn(from, amount) */\n      tag_162\n        /* \"hopium/etf/main/etf-token.sol\":1889:1893  from */\n      dup3\n        /* \"hopium/etf/main/etf-token.sol\":1895:1901  amount */\n      dup3\n        /* \"hopium/etf/main/etf-token.sol\":1883:1888  _burn */\n      tag_163\n        /* \"hopium/etf/main/etf-token.sol\":1883:1902  _burn(from, amount) */\n      jump\t// in\n    tag_162:\n        /* \"hopium/etf/main/etf-token.sol\":1806:1909  function burn(address from, uint256 amount) external onlyEtfRouter {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4401:4579  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4470:4474  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4486:4499  address owner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4502:4514  _msgSender() */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4502:4512  _msgSender */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4502:4514  _msgSender() */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4486:4514  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4524:4551  _transfer(owner, to, value) */\n      tag_166\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4534:4539  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4541:4543  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4545:4550  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4524:4533  _transfer */\n      tag_128\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4524:4551  _transfer(owner, to, value) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4568:4572  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4561:4572  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4401:4579  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"hopium/common/interface/imDirectory.sol\":470:583  function changeDirectoryAddress(address _directory) external onlyOwner {... */\n    tag_82:\n        /* \"hopium/common/interface/imDirectory.sol\":1109:1118  Directory */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/common/interface/imDirectory.sol\":1109:1124  Directory.owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"hopium/common/interface/imDirectory.sol\":1109:1126  Directory.owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_170\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_170:\n        /* \"hopium/common/interface/imDirectory.sol\":1095:1126  msg.sender == Directory.owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/common/interface/imDirectory.sol\":1095:1105  msg.sender */\n      caller\n        /* \"hopium/common/interface/imDirectory.sol\":1095:1126  msg.sender == Directory.owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"hopium/common/interface/imDirectory.sol\":1087:1154  require(msg.sender == Directory.owner(), \"Caller is not the owner\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"hopium/common/interface/imDirectory.sol\":551:576  _setDirectory(_directory) */\n      tag_175\n        /* \"hopium/common/interface/imDirectory.sol\":565:575  _directory */\n      dup2\n        /* \"hopium/common/interface/imDirectory.sol\":551:564  _setDirectory */\n      tag_110\n        /* \"hopium/common/interface/imDirectory.sol\":551:576  _setDirectory(_directory) */\n      jump\t// in\n    tag_175:\n        /* \"hopium/common/interface/imDirectory.sol\":470:583  function changeDirectoryAddress(address _directory) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4612:4807  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4692:4699  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4711:4733  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4736:4754  _getERC20Storage() */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4736:4752  _getERC20Storage */\n      tag_90\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4736:4754  _getERC20Storage() */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4711:4754  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4771:4772  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4771:4784  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4771:4791  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4785:4790  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4771:4791  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4771:4800  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4792:4799  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4771:4800  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4764:4800  return $._allowances[owner][spender] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4612:4807  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1997:2019  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2064:2084  ERC20StorageLocation */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2054:2084  $.slot := ERC20StorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9129:9159  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9183  bytes32 slot */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      tag_180\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9211  _initializableStorageSlot */\n      tag_181\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9213  bytes32 slot = _initializableStorageSlot() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9256:9260  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9246:9260  $.slot := slot */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9232:9270  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"hopium/common/interface/imDirectory.sol\":589:1050  function _setDirectory(address _directory) internal {... */\n    tag_110:\n        /* \"hopium/common/interface/imDirectory.sol\":681:682  0 */\n      0x00\n        /* \"hopium/common/interface/imDirectory.sol\":659:683  _directory != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/common/interface/imDirectory.sol\":659:669  _directory */\n      dup2\n        /* \"hopium/common/interface/imDirectory.sol\":659:683  _directory != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"hopium/common/interface/imDirectory.sol\":651:720  require(_directory != address(0), \"Directory cannot be zero address\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"hopium/common/interface/imDirectory.sol\":763:764  0 */\n      0x00\n        /* \"hopium/common/interface/imDirectory.sol\":738:748  _directory */\n      dup2\n        /* \"hopium/common/interface/imDirectory.sol\":738:760  _directory.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"hopium/common/interface/imDirectory.sol\":738:764  _directory.code.length > 0 */\n      gt\n        /* \"hopium/common/interface/imDirectory.sol\":730:797  require(_directory.code.length > 0, \"Directory must be a contract\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"hopium/common/interface/imDirectory.sol\":861:871  _directory */\n      dup1\n        /* \"hopium/common/interface/imDirectory.sol\":850:878  IDirectory(_directory).owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"hopium/common/interface/imDirectory.sol\":850:880  IDirectory(_directory).owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_189\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_190\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_190:\n      0x01\n    tag_189:\n        /* \"hopium/common/interface/imDirectory.sol\":846:1044  try IDirectory(_directory).owner() returns (address) {... */\n      tag_191\n      jumpi\n        /* \"hopium/common/interface/imDirectory.sol\":979:1033  revert(\"Directory address does not implement owner()\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hopium/common/interface/imDirectory.sol\":846:1044  try IDirectory(_directory).owner() returns (address) {... */\n    tag_191:\n        /* \"hopium/common/interface/imDirectory.sol\":936:946  _directory */\n      dup2\n        /* \"hopium/common/interface/imDirectory.sol\":913:922  Directory */\n      0x00\n      0x00\n        /* \"hopium/common/interface/imDirectory.sol\":913:947  Directory = IDirectory(_directory) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"hopium/common/interface/imDirectory.sol\":881:958  returns (address) {... */\n      pop\n        /* \"hopium/common/interface/imDirectory.sol\":589:1050  function _setDirectory(address _directory) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2263:2410  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_199\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_200\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2403  __ERC20_init_unchained(name_, symbol_) */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2388:2393  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2395:2402  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2387  __ERC20_init_unchained */\n      tag_203\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2403  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2263:2410  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9905:10033  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_120:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9989:10026  _approve(owner, spender, value, true) */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9998:10003  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10005:10012  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10014:10019  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10021:10025  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9989:9997  _approve */\n      tag_207\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9989:10026  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9905:10033  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11649:12125  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_126:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11748:11772  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11775:11800  allowance(owner, spender) */\n      tag_209\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11785:11790  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11792:11799  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11775:11784  allowance */\n      tag_86\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11775:11800  allowance(owner, spender) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11748:11800  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11833:11850  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11814:11830  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11814:11850  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11810:12119  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11889:11894  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11870:11886  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11870:11894  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11866:11996  if (currentAllowance < value) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11948:11955  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11957:11973  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11975:11980  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11921:11981  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11866:11996  if (currentAllowance < value) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12037:12094  _approve(owner, spender, currentAllowance - value, false) */\n      tag_214\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12046:12051  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12053:12060  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12081:12086  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12062:12078  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12062:12086  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12088:12093  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12037:12045  _approve */\n      tag_207\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12037:12094  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11810:12119  if (currentAllowance < type(uint256).max) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11738:12125  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11649:12125  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6509:6809  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_128:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6608:6609  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6592:6610  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6592:6596  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6592:6610  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6588:6674  if (from == address(0)) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6660:6661  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6633:6663  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6588:6674  if (from == address(0)) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6701:6702  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6687:6703  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6687:6689  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6687:6703  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6683:6769  if (to == address(0)) {... */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6755:6756  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6726:6758  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6683:6769  if (to == address(0)) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6778:6802  _update(from, to, value) */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6786:6790  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6792:6794  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6796:6801  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6778:6785  _update */\n      tag_221\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6778:6802  _update(from, to, value) */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6509:6809  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8637:8845  function _mint(address account, uint256 value) internal {... */\n    tag_143:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8726:8727  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8707:8728  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8707:8714  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8707:8728  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8703:8794  if (account == address(0)) {... */\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8780:8781  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8751:8783  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8703:8794  if (account == address(0)) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8838  _update(address(0), account, value) */\n      tag_225\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8819:8820  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8823:8830  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8832:8837  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8810  _update */\n      tag_221\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8838  _update(address(0), account, value) */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8637:8845  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9163:9369  function _burn(address account, uint256 value) internal {... */\n    tag_163:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9252:9253  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9233:9254  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9233:9240  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9233:9254  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9229:9318  if (account == address(0)) {... */\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9304:9305  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9277:9307  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9229:9318  if (account == address(0)) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9327:9362  _update(account, address(0), value) */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9335:9342  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9352:9353  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9356:9361  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9327:9334  _update */\n      tag_221\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9327:9362  _update(account, address(0), value) */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9163:9369  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8887:8894  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8913:8934  INITIALIZABLE_STORAGE */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8906:8934  return INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n    tag_200:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      tag_232\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7164  _isInitializing */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7189:7206  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2416:2632  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_236\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_200\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2528:2550  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2553:2571  _getERC20Storage() */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2553:2569  _getERC20Storage */\n      tag_90\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2553:2571  _getERC20Storage() */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2528:2571  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2591:2596  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2582  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2588  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2596  $._name = name_ */\n      swap1\n      dup2\n      tag_239\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2618:2625  symbol_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2607  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2615  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2625  $._symbol = symbol_ */\n      swap1\n      dup2\n      tag_241\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_241:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2518:2632  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2416:2632  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10880:11367  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_207:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10988:11010  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11013:11031  _getERC20Storage() */\n      tag_243\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11013:11029  _getERC20Storage */\n      tag_90\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11013:11031  _getERC20Storage() */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10988:11031  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11062:11063  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11045:11064  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11045:11050  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11045:11064  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11041:11130  if (owner == address(0)) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11116:11117  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11087:11119  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11041:11130  if (owner == address(0)) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11162:11163  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11143:11164  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11143:11150  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11143:11164  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11139:11229  if (spender == address(0)) {... */\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11215:11216  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11187:11218  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11139:11229  if (spender == address(0)) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11270:11275  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11238:11239  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11238:11251  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11238:11258  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11252:11257  owner */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11238:11258  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11238:11267  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11259:11266  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11238:11267  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11238:11275  $._allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11289:11298  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11285:11361  if (emitEvent) {... */\n      iszero\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11335:11342  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11319:11350  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11328:11333  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11319:11350  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11344:11349  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11319:11350  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_249\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11285:11361  if (emitEvent) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10978:11367  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10880:11367  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"hopium/etf/main/etf-token.sol\":2003:2376  function _update(address from, address to, uint256 value) internal override {... */\n    tag_221:\n        /* \"hopium/etf/main/etf-token.sol\":2089:2119  super._update(from, to, value) */\n      tag_251\n        /* \"hopium/etf/main/etf-token.sol\":2103:2107  from */\n      dup4\n        /* \"hopium/etf/main/etf-token.sol\":2109:2111  to */\n      dup4\n        /* \"hopium/etf/main/etf-token.sol\":2113:2118  value */\n      dup4\n        /* \"hopium/etf/main/etf-token.sol\":2089:2102  super._update */\n      tag_252\n        /* \"hopium/etf/main/etf-token.sol\":2089:2119  super._update(from, to, value) */\n      jump\t// in\n    tag_251:\n        /* \"hopium/etf/main/etf-token.sol\":2165:2195  IEtfTokenEvents etfTokenEvents */\n      0x00\n        /* \"hopium/etf/main/etf-token.sol\":2198:2217  getEtfTokenEvents() */\n      tag_253\n        /* \"hopium/etf/main/etf-token.sol\":2198:2215  getEtfTokenEvents */\n      tag_254\n        /* \"hopium/etf/main/etf-token.sol\":2198:2217  getEtfTokenEvents() */\n      jump\t// in\n    tag_253:\n        /* \"hopium/etf/main/etf-token.sol\":2165:2217  IEtfTokenEvents etfTokenEvents = getEtfTokenEvents() */\n      swap1\n      pop\n        /* \"hopium/etf/main/etf-token.sol\":2270:2271  0 */\n      0x00\n        /* \"hopium/etf/main/etf-token.sol\":2235:2272  address(etfTokenEvents) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/etf/main/etf-token.sol\":2243:2257  etfTokenEvents */\n      dup2\n        /* \"hopium/etf/main/etf-token.sol\":2235:2272  address(etfTokenEvents) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"hopium/etf/main/etf-token.sol\":2227:2310  require(address(etfTokenEvents) != address(0), \"EtfToken: events contract not set\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap1\n      tag_257\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_255:\n        /* \"hopium/etf/main/etf-token.sol\":2320:2334  etfTokenEvents */\n      dup1\n        /* \"hopium/etf/main/etf-token.sol\":2320:2352  etfTokenEvents.emitTransferEvent */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa6d49dca\n        /* \"hopium/etf/main/etf-token.sol\":2353:2357  from */\n      dup6\n        /* \"hopium/etf/main/etf-token.sol\":2359:2361  to */\n      dup6\n        /* \"hopium/etf/main/etf-token.sol\":2363:2368  value */\n      dup6\n        /* \"hopium/etf/main/etf-token.sol\":2320:2369  etfTokenEvents.emitTransferEvent(from, to, value) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_260\n      jumpi\n      revert(0x00, 0x00)\n    tag_260:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_262\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_262:\n      pop\n      pop\n      pop\n      pop\n        /* \"hopium/etf/main/etf-token.sol\":2079:2376  {... */\n      pop\n        /* \"hopium/etf/main/etf-token.sol\":2003:2376  function _update(address from, address to, uint256 value) internal override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8535:8539  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8582  _getInitializableStorage */\n      tag_99\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8598  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8551:8598  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7124:8294  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_252:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7209:7231  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7234:7252  _getERC20Storage() */\n      tag_266\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7234:7250  _getERC20Storage */\n      tag_90\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7234:7252  _getERC20Storage() */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7209:7252  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7282:7283  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7266:7284  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7266:7270  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7266:7284  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7262:7808  if (from == address(0)) {... */\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7420:7425  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7402:7403  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7402:7416  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7402:7425  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_268\n      swap2\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7262:7808  if (from == address(0)) {... */\n      jump(tag_270)\n    tag_267:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7456:7475  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7478:7479  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7478:7489  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7478:7495  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7490:7494  from */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7478:7495  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7456:7495  uint256 fromBalance = $._balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7527:7532  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7513:7524  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7513:7532  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7509:7624  if (fromBalance < value) {... */\n      iszero\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7584:7588  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7590:7601  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7603:7608  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7559:7609  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7509:7624  if (fromBalance < value) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7778:7783  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7764:7775  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7764:7783  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7744:7745  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7744:7755  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7744:7761  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7756:7760  from */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7744:7761  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7744:7783  $._balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7442:7808  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7262:7808  if (from == address(0)) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7836:7837  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7822:7838  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7822:7824  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7822:7838  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7818:8247  if (to == address(0)) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8003:8008  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7985:7986  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7985:7999  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7985:8008  $._totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7818:8247  if (to == address(0)) {... */\n      jump(tag_274)\n    tag_273:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8217:8222  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8198:8199  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8198:8209  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8198:8213  $._balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8210:8212  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8198:8213  $._balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8198:8222  $._balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7818:8247  if (to == address(0)) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8277:8279  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8262:8287  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8271:8275  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8262:8287  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8281:8286  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8262:8287  Transfer(from, to, value) */\n      mload(0x40)\n      tag_275\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7199:8294  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7124:8294  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"hopium/etf/interface/imEtfTokenEvents.sol\":301:457  function getEtfTokenEvents() internal view virtual returns (IEtfTokenEvents) {... */\n    tag_254:\n        /* \"hopium/etf/interface/imEtfTokenEvents.sol\":361:376  IEtfTokenEvents */\n      0x00\n        /* \"hopium/etf/interface/imEtfTokenEvents.sol\":411:449  fetchFromDirectory(\"etf-token-events\") */\n      tag_277\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      0x6574662d746f6b656e2d6576656e747300000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"hopium/etf/interface/imEtfTokenEvents.sol\":411:429  fetchFromDirectory */\n      tag_48\n        /* \"hopium/etf/interface/imEtfTokenEvents.sol\":411:449  fetchFromDirectory(\"etf-token-events\") */\n      jump\t// in\n    tag_277:\n        /* \"hopium/etf/interface/imEtfTokenEvents.sol\":388:450  return IEtfTokenEvents(fetchFromDirectory(\"etf-token-events\")) */\n      swap1\n      pop\n        /* \"hopium/etf/interface/imEtfTokenEvents.sol\":301:457  function getEtfTokenEvents() internal view virtual returns (IEtfTokenEvents) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_278:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_279:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_280:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_281:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_282:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_354\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_278\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":711:782   */\n      tag_355\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_279\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_356\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_280\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":881:910   */\n      tag_357\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_281\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_25:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_359\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_282\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1317   */\n    tag_283:\n        /* \"#utility.yul\":1275:1281   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1302:1311   */\n      mload\n        /* \"#utility.yul\":1292:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1317   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_284:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_285:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1686   */\n    tag_286:\n        /* \"#utility.yul\":1678:1679   */\n      0x00\n        /* \"#utility.yul\":1675:1676   */\n      0x00\n        /* \"#utility.yul\":1668:1680   */\n      revert\n        /* \"#utility.yul\":1692:1809   */\n    tag_287:\n        /* \"#utility.yul\":1801:1802   */\n      0x00\n        /* \"#utility.yul\":1798:1799   */\n      0x00\n        /* \"#utility.yul\":1791:1803   */\n      revert\n        /* \"#utility.yul\":1815:1995   */\n    tag_288:\n        /* \"#utility.yul\":1863:1940   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1860:1861   */\n      0x00\n        /* \"#utility.yul\":1853:1941   */\n      mstore\n        /* \"#utility.yul\":1960:1964   */\n      0x41\n        /* \"#utility.yul\":1957:1958   */\n      0x04\n        /* \"#utility.yul\":1950:1965   */\n      mstore\n        /* \"#utility.yul\":1984:1988   */\n      0x24\n        /* \"#utility.yul\":1981:1982   */\n      0x00\n        /* \"#utility.yul\":1974:1989   */\n      revert\n        /* \"#utility.yul\":2001:2282   */\n    tag_289:\n        /* \"#utility.yul\":2084:2111   */\n      tag_367\n        /* \"#utility.yul\":2106:2110   */\n      dup3\n        /* \"#utility.yul\":2084:2111   */\n      tag_281\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":2076:2082   */\n      dup2\n        /* \"#utility.yul\":2072:2112   */\n      add\n        /* \"#utility.yul\":2214:2220   */\n      dup2\n        /* \"#utility.yul\":2202:2212   */\n      dup2\n        /* \"#utility.yul\":2199:2221   */\n      lt\n        /* \"#utility.yul\":2178:2196   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2166:2176   */\n      dup3\n        /* \"#utility.yul\":2163:2197   */\n      gt\n        /* \"#utility.yul\":2160:2222   */\n      or\n        /* \"#utility.yul\":2157:2245   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":2225:2243   */\n      tag_369\n      tag_288\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":2157:2245   */\n    tag_368:\n        /* \"#utility.yul\":2265:2275   */\n      dup1\n        /* \"#utility.yul\":2261:2263   */\n      0x40\n        /* \"#utility.yul\":2254:2276   */\n      mstore\n        /* \"#utility.yul\":2044:2282   */\n      pop\n        /* \"#utility.yul\":2001:2282   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2288:2417   */\n    tag_290:\n        /* \"#utility.yul\":2322:2328   */\n      0x00\n        /* \"#utility.yul\":2349:2369   */\n      tag_371\n      tag_283\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":2339:2369   */\n      swap1\n      pop\n        /* \"#utility.yul\":2378:2411   */\n      tag_372\n        /* \"#utility.yul\":2406:2410   */\n      dup3\n        /* \"#utility.yul\":2398:2404   */\n      dup3\n        /* \"#utility.yul\":2378:2411   */\n      tag_289\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":2288:2417   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2423:2731   */\n    tag_291:\n        /* \"#utility.yul\":2485:2489   */\n      0x00\n        /* \"#utility.yul\":2575:2593   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2567:2573   */\n      dup3\n        /* \"#utility.yul\":2564:2594   */\n      gt\n        /* \"#utility.yul\":2561:2617   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":2597:2615   */\n      tag_375\n      tag_288\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":2561:2617   */\n    tag_374:\n        /* \"#utility.yul\":2635:2664   */\n      tag_376\n        /* \"#utility.yul\":2657:2663   */\n      dup3\n        /* \"#utility.yul\":2635:2664   */\n      tag_281\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":2627:2664   */\n      swap1\n      pop\n        /* \"#utility.yul\":2719:2723   */\n      0x20\n        /* \"#utility.yul\":2713:2717   */\n      dup2\n        /* \"#utility.yul\":2709:2724   */\n      add\n        /* \"#utility.yul\":2701:2724   */\n      swap1\n      pop\n        /* \"#utility.yul\":2423:2731   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2737:2885   */\n    tag_292:\n        /* \"#utility.yul\":2835:2841   */\n      dup3\n        /* \"#utility.yul\":2830:2833   */\n      dup2\n        /* \"#utility.yul\":2825:2828   */\n      dup4\n        /* \"#utility.yul\":2812:2842   */\n      calldatacopy\n        /* \"#utility.yul\":2876:2877   */\n      0x00\n        /* \"#utility.yul\":2867:2873   */\n      dup4\n        /* \"#utility.yul\":2862:2865   */\n      dup4\n        /* \"#utility.yul\":2858:2874   */\n      add\n        /* \"#utility.yul\":2851:2878   */\n      mstore\n        /* \"#utility.yul\":2737:2885   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2891:3316   */\n    tag_293:\n        /* \"#utility.yul\":2969:2974   */\n      0x00\n        /* \"#utility.yul\":2994:3060   */\n      tag_379\n        /* \"#utility.yul\":3010:3059   */\n      tag_380\n        /* \"#utility.yul\":3052:3058   */\n      dup5\n        /* \"#utility.yul\":3010:3059   */\n      tag_291\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":2994:3060   */\n      tag_290\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":2985:3060   */\n      swap1\n      pop\n        /* \"#utility.yul\":3083:3089   */\n      dup3\n        /* \"#utility.yul\":3076:3081   */\n      dup2\n        /* \"#utility.yul\":3069:3090   */\n      mstore\n        /* \"#utility.yul\":3121:3125   */\n      0x20\n        /* \"#utility.yul\":3114:3119   */\n      dup2\n        /* \"#utility.yul\":3110:3126   */\n      add\n        /* \"#utility.yul\":3159:3162   */\n      dup5\n        /* \"#utility.yul\":3150:3156   */\n      dup5\n        /* \"#utility.yul\":3145:3148   */\n      dup5\n        /* \"#utility.yul\":3141:3157   */\n      add\n        /* \"#utility.yul\":3138:3163   */\n      gt\n        /* \"#utility.yul\":3135:3247   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":3166:3245   */\n      tag_382\n      tag_287\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":3135:3247   */\n    tag_381:\n        /* \"#utility.yul\":3256:3310   */\n      tag_383\n        /* \"#utility.yul\":3303:3309   */\n      dup5\n        /* \"#utility.yul\":3298:3301   */\n      dup3\n        /* \"#utility.yul\":3293:3296   */\n      dup6\n        /* \"#utility.yul\":3256:3310   */\n      tag_292\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":2975:3316   */\n      pop\n        /* \"#utility.yul\":2891:3316   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3336:3676   */\n    tag_294:\n        /* \"#utility.yul\":3392:3397   */\n      0x00\n        /* \"#utility.yul\":3441:3444   */\n      dup3\n        /* \"#utility.yul\":3434:3438   */\n      0x1f\n        /* \"#utility.yul\":3426:3432   */\n      dup4\n        /* \"#utility.yul\":3422:3439   */\n      add\n        /* \"#utility.yul\":3418:3445   */\n      slt\n        /* \"#utility.yul\":3408:3530   */\n      tag_385\n      jumpi\n        /* \"#utility.yul\":3449:3528   */\n      tag_386\n      tag_286\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":3408:3530   */\n    tag_385:\n        /* \"#utility.yul\":3566:3572   */\n      dup2\n        /* \"#utility.yul\":3553:3573   */\n      calldataload\n        /* \"#utility.yul\":3591:3670   */\n      tag_387\n        /* \"#utility.yul\":3666:3669   */\n      dup5\n        /* \"#utility.yul\":3658:3664   */\n      dup3\n        /* \"#utility.yul\":3651:3655   */\n      0x20\n        /* \"#utility.yul\":3643:3649   */\n      dup7\n        /* \"#utility.yul\":3639:3656   */\n      add\n        /* \"#utility.yul\":3591:3670   */\n      tag_293\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":3582:3670   */\n      swap2\n      pop\n        /* \"#utility.yul\":3398:3676   */\n      pop\n        /* \"#utility.yul\":3336:3676   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3682:3808   */\n    tag_295:\n        /* \"#utility.yul\":3719:3726   */\n      0x00\n        /* \"#utility.yul\":3759:3801   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3752:3757   */\n      dup3\n        /* \"#utility.yul\":3748:3802   */\n      and\n        /* \"#utility.yul\":3737:3802   */\n      swap1\n      pop\n        /* \"#utility.yul\":3682:3808   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3814:3910   */\n    tag_296:\n        /* \"#utility.yul\":3851:3858   */\n      0x00\n        /* \"#utility.yul\":3880:3904   */\n      tag_390\n        /* \"#utility.yul\":3898:3903   */\n      dup3\n        /* \"#utility.yul\":3880:3904   */\n      tag_295\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":3869:3904   */\n      swap1\n      pop\n        /* \"#utility.yul\":3814:3910   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3916:4038   */\n    tag_297:\n        /* \"#utility.yul\":3989:4013   */\n      tag_392\n        /* \"#utility.yul\":4007:4012   */\n      dup2\n        /* \"#utility.yul\":3989:4013   */\n      tag_296\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":3982:3987   */\n      dup2\n        /* \"#utility.yul\":3979:4014   */\n      eq\n        /* \"#utility.yul\":3969:4032   */\n      tag_393\n      jumpi\n        /* \"#utility.yul\":4028:4029   */\n      0x00\n        /* \"#utility.yul\":4025:4026   */\n      0x00\n        /* \"#utility.yul\":4018:4030   */\n      revert\n        /* \"#utility.yul\":3969:4032   */\n    tag_393:\n        /* \"#utility.yul\":3916:4038   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4044:4183   */\n    tag_298:\n        /* \"#utility.yul\":4090:4095   */\n      0x00\n        /* \"#utility.yul\":4128:4134   */\n      dup2\n        /* \"#utility.yul\":4115:4135   */\n      calldataload\n        /* \"#utility.yul\":4106:4135   */\n      swap1\n      pop\n        /* \"#utility.yul\":4144:4177   */\n      tag_395\n        /* \"#utility.yul\":4171:4176   */\n      dup2\n        /* \"#utility.yul\":4144:4177   */\n      tag_297\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":4044:4183   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4189:5168   */\n    tag_28:\n        /* \"#utility.yul\":4286:4292   */\n      0x00\n        /* \"#utility.yul\":4294:4300   */\n      0x00\n        /* \"#utility.yul\":4302:4308   */\n      0x00\n        /* \"#utility.yul\":4351:4353   */\n      0x60\n        /* \"#utility.yul\":4339:4348   */\n      dup5\n        /* \"#utility.yul\":4330:4337   */\n      dup7\n        /* \"#utility.yul\":4326:4349   */\n      sub\n        /* \"#utility.yul\":4322:4354   */\n      slt\n        /* \"#utility.yul\":4319:4438   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":4357:4436   */\n      tag_398\n      tag_284\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":4319:4438   */\n    tag_397:\n        /* \"#utility.yul\":4505:4506   */\n      0x00\n        /* \"#utility.yul\":4494:4503   */\n      dup5\n        /* \"#utility.yul\":4490:4507   */\n      add\n        /* \"#utility.yul\":4477:4508   */\n      calldataload\n        /* \"#utility.yul\":4535:4553   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4527:4533   */\n      dup2\n        /* \"#utility.yul\":4524:4554   */\n      gt\n        /* \"#utility.yul\":4521:4638   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":4557:4636   */\n      tag_400\n      tag_285\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":4521:4638   */\n    tag_399:\n        /* \"#utility.yul\":4662:4725   */\n      tag_401\n        /* \"#utility.yul\":4717:4724   */\n      dup7\n        /* \"#utility.yul\":4708:4714   */\n      dup3\n        /* \"#utility.yul\":4697:4706   */\n      dup8\n        /* \"#utility.yul\":4693:4715   */\n      add\n        /* \"#utility.yul\":4662:4725   */\n      tag_294\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":4652:4725   */\n      swap4\n      pop\n        /* \"#utility.yul\":4448:4735   */\n      pop\n        /* \"#utility.yul\":4802:4804   */\n      0x20\n        /* \"#utility.yul\":4791:4800   */\n      dup5\n        /* \"#utility.yul\":4787:4805   */\n      add\n        /* \"#utility.yul\":4774:4806   */\n      calldataload\n        /* \"#utility.yul\":4833:4851   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4825:4831   */\n      dup2\n        /* \"#utility.yul\":4822:4852   */\n      gt\n        /* \"#utility.yul\":4819:4936   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":4855:4934   */\n      tag_403\n      tag_285\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":4819:4936   */\n    tag_402:\n        /* \"#utility.yul\":4960:5023   */\n      tag_404\n        /* \"#utility.yul\":5015:5022   */\n      dup7\n        /* \"#utility.yul\":5006:5012   */\n      dup3\n        /* \"#utility.yul\":4995:5004   */\n      dup8\n        /* \"#utility.yul\":4991:5013   */\n      add\n        /* \"#utility.yul\":4960:5023   */\n      tag_294\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":4950:5023   */\n      swap3\n      pop\n        /* \"#utility.yul\":4745:5033   */\n      pop\n        /* \"#utility.yul\":5072:5074   */\n      0x40\n        /* \"#utility.yul\":5098:5151   */\n      tag_405\n        /* \"#utility.yul\":5143:5150   */\n      dup7\n        /* \"#utility.yul\":5134:5140   */\n      dup3\n        /* \"#utility.yul\":5123:5132   */\n      dup8\n        /* \"#utility.yul\":5119:5141   */\n      add\n        /* \"#utility.yul\":5098:5151   */\n      tag_298\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":5088:5151   */\n      swap2\n      pop\n        /* \"#utility.yul\":5043:5161   */\n      pop\n        /* \"#utility.yul\":4189:5168   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5174:5251   */\n    tag_299:\n        /* \"#utility.yul\":5211:5218   */\n      0x00\n        /* \"#utility.yul\":5240:5245   */\n      dup2\n        /* \"#utility.yul\":5229:5245   */\n      swap1\n      pop\n        /* \"#utility.yul\":5174:5251   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5257:5379   */\n    tag_300:\n        /* \"#utility.yul\":5330:5354   */\n      tag_408\n        /* \"#utility.yul\":5348:5353   */\n      dup2\n        /* \"#utility.yul\":5330:5354   */\n      tag_299\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":5323:5328   */\n      dup2\n        /* \"#utility.yul\":5320:5355   */\n      eq\n        /* \"#utility.yul\":5310:5373   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":5369:5370   */\n      0x00\n        /* \"#utility.yul\":5366:5367   */\n      0x00\n        /* \"#utility.yul\":5359:5371   */\n      revert\n        /* \"#utility.yul\":5310:5373   */\n    tag_409:\n        /* \"#utility.yul\":5257:5379   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5385:5524   */\n    tag_301:\n        /* \"#utility.yul\":5431:5436   */\n      0x00\n        /* \"#utility.yul\":5469:5475   */\n      dup2\n        /* \"#utility.yul\":5456:5476   */\n      calldataload\n        /* \"#utility.yul\":5447:5476   */\n      swap1\n      pop\n        /* \"#utility.yul\":5485:5518   */\n      tag_411\n        /* \"#utility.yul\":5512:5517   */\n      dup2\n        /* \"#utility.yul\":5485:5518   */\n      tag_300\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":5385:5524   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5530:6004   */\n    tag_32:\n        /* \"#utility.yul\":5598:5604   */\n      0x00\n        /* \"#utility.yul\":5606:5612   */\n      0x00\n        /* \"#utility.yul\":5655:5657   */\n      0x40\n        /* \"#utility.yul\":5643:5652   */\n      dup4\n        /* \"#utility.yul\":5634:5641   */\n      dup6\n        /* \"#utility.yul\":5630:5653   */\n      sub\n        /* \"#utility.yul\":5626:5658   */\n      slt\n        /* \"#utility.yul\":5623:5742   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":5661:5740   */\n      tag_414\n      tag_284\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":5623:5742   */\n    tag_413:\n        /* \"#utility.yul\":5781:5782   */\n      0x00\n        /* \"#utility.yul\":5806:5859   */\n      tag_415\n        /* \"#utility.yul\":5851:5858   */\n      dup6\n        /* \"#utility.yul\":5842:5848   */\n      dup3\n        /* \"#utility.yul\":5831:5840   */\n      dup7\n        /* \"#utility.yul\":5827:5849   */\n      add\n        /* \"#utility.yul\":5806:5859   */\n      tag_298\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":5796:5859   */\n      swap3\n      pop\n        /* \"#utility.yul\":5752:5869   */\n      pop\n        /* \"#utility.yul\":5908:5910   */\n      0x20\n        /* \"#utility.yul\":5934:5987   */\n      tag_416\n        /* \"#utility.yul\":5979:5986   */\n      dup6\n        /* \"#utility.yul\":5970:5976   */\n      dup3\n        /* \"#utility.yul\":5959:5968   */\n      dup7\n        /* \"#utility.yul\":5955:5977   */\n      add\n        /* \"#utility.yul\":5934:5987   */\n      tag_301\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":5924:5987   */\n      swap2\n      pop\n        /* \"#utility.yul\":5879:5997   */\n      pop\n        /* \"#utility.yul\":5530:6004   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6010:6100   */\n    tag_302:\n        /* \"#utility.yul\":6044:6051   */\n      0x00\n        /* \"#utility.yul\":6087:6092   */\n      dup2\n        /* \"#utility.yul\":6080:6093   */\n      iszero\n        /* \"#utility.yul\":6073:6094   */\n      iszero\n        /* \"#utility.yul\":6062:6094   */\n      swap1\n      pop\n        /* \"#utility.yul\":6010:6100   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6106:6215   */\n    tag_303:\n        /* \"#utility.yul\":6187:6208   */\n      tag_419\n        /* \"#utility.yul\":6202:6207   */\n      dup2\n        /* \"#utility.yul\":6187:6208   */\n      tag_302\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":6182:6185   */\n      dup3\n        /* \"#utility.yul\":6175:6209   */\n      mstore\n        /* \"#utility.yul\":6106:6215   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6221:6431   */\n    tag_35:\n        /* \"#utility.yul\":6308:6312   */\n      0x00\n        /* \"#utility.yul\":6346:6348   */\n      0x20\n        /* \"#utility.yul\":6335:6344   */\n      dup3\n        /* \"#utility.yul\":6331:6349   */\n      add\n        /* \"#utility.yul\":6323:6349   */\n      swap1\n      pop\n        /* \"#utility.yul\":6359:6424   */\n      tag_421\n        /* \"#utility.yul\":6421:6422   */\n      0x00\n        /* \"#utility.yul\":6410:6419   */\n      dup4\n        /* \"#utility.yul\":6406:6423   */\n      add\n        /* \"#utility.yul\":6397:6403   */\n      dup5\n        /* \"#utility.yul\":6359:6424   */\n      tag_303\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":6221:6431   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6437:6555   */\n    tag_304:\n        /* \"#utility.yul\":6524:6548   */\n      tag_423\n        /* \"#utility.yul\":6542:6547   */\n      dup2\n        /* \"#utility.yul\":6524:6548   */\n      tag_299\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":6519:6522   */\n      dup3\n        /* \"#utility.yul\":6512:6549   */\n      mstore\n        /* \"#utility.yul\":6437:6555   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6561:6783   */\n    tag_39:\n        /* \"#utility.yul\":6654:6658   */\n      0x00\n        /* \"#utility.yul\":6692:6694   */\n      0x20\n        /* \"#utility.yul\":6681:6690   */\n      dup3\n        /* \"#utility.yul\":6677:6695   */\n      add\n        /* \"#utility.yul\":6669:6695   */\n      swap1\n      pop\n        /* \"#utility.yul\":6705:6776   */\n      tag_425\n        /* \"#utility.yul\":6773:6774   */\n      0x00\n        /* \"#utility.yul\":6762:6771   */\n      dup4\n        /* \"#utility.yul\":6758:6775   */\n      add\n        /* \"#utility.yul\":6749:6755   */\n      dup5\n        /* \"#utility.yul\":6705:6776   */\n      tag_304\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":6561:6783   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6789:7408   */\n    tag_42:\n        /* \"#utility.yul\":6866:6872   */\n      0x00\n        /* \"#utility.yul\":6874:6880   */\n      0x00\n        /* \"#utility.yul\":6882:6888   */\n      0x00\n        /* \"#utility.yul\":6931:6933   */\n      0x60\n        /* \"#utility.yul\":6919:6928   */\n      dup5\n        /* \"#utility.yul\":6910:6917   */\n      dup7\n        /* \"#utility.yul\":6906:6929   */\n      sub\n        /* \"#utility.yul\":6902:6934   */\n      slt\n        /* \"#utility.yul\":6899:7018   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":6937:7016   */\n      tag_428\n      tag_284\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":6899:7018   */\n    tag_427:\n        /* \"#utility.yul\":7057:7058   */\n      0x00\n        /* \"#utility.yul\":7082:7135   */\n      tag_429\n        /* \"#utility.yul\":7127:7134   */\n      dup7\n        /* \"#utility.yul\":7118:7124   */\n      dup3\n        /* \"#utility.yul\":7107:7116   */\n      dup8\n        /* \"#utility.yul\":7103:7125   */\n      add\n        /* \"#utility.yul\":7082:7135   */\n      tag_298\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":7072:7135   */\n      swap4\n      pop\n        /* \"#utility.yul\":7028:7145   */\n      pop\n        /* \"#utility.yul\":7184:7186   */\n      0x20\n        /* \"#utility.yul\":7210:7263   */\n      tag_430\n        /* \"#utility.yul\":7255:7262   */\n      dup7\n        /* \"#utility.yul\":7246:7252   */\n      dup3\n        /* \"#utility.yul\":7235:7244   */\n      dup8\n        /* \"#utility.yul\":7231:7253   */\n      add\n        /* \"#utility.yul\":7210:7263   */\n      tag_298\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":7200:7263   */\n      swap3\n      pop\n        /* \"#utility.yul\":7155:7273   */\n      pop\n        /* \"#utility.yul\":7312:7314   */\n      0x40\n        /* \"#utility.yul\":7338:7391   */\n      tag_431\n        /* \"#utility.yul\":7383:7390   */\n      dup7\n        /* \"#utility.yul\":7374:7380   */\n      dup3\n        /* \"#utility.yul\":7363:7372   */\n      dup8\n        /* \"#utility.yul\":7359:7381   */\n      add\n        /* \"#utility.yul\":7338:7391   */\n      tag_301\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":7328:7391   */\n      swap2\n      pop\n        /* \"#utility.yul\":7283:7401   */\n      pop\n        /* \"#utility.yul\":6789:7408   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7414:7923   */\n    tag_47:\n        /* \"#utility.yul\":7483:7489   */\n      0x00\n        /* \"#utility.yul\":7532:7534   */\n      0x20\n        /* \"#utility.yul\":7520:7529   */\n      dup3\n        /* \"#utility.yul\":7511:7518   */\n      dup5\n        /* \"#utility.yul\":7507:7530   */\n      sub\n        /* \"#utility.yul\":7503:7535   */\n      slt\n        /* \"#utility.yul\":7500:7619   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":7538:7617   */\n      tag_434\n      tag_284\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":7500:7619   */\n    tag_433:\n        /* \"#utility.yul\":7686:7687   */\n      0x00\n        /* \"#utility.yul\":7675:7684   */\n      dup3\n        /* \"#utility.yul\":7671:7688   */\n      add\n        /* \"#utility.yul\":7658:7689   */\n      calldataload\n        /* \"#utility.yul\":7716:7734   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7708:7714   */\n      dup2\n        /* \"#utility.yul\":7705:7735   */\n      gt\n        /* \"#utility.yul\":7702:7819   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":7738:7817   */\n      tag_436\n      tag_285\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":7702:7819   */\n    tag_435:\n        /* \"#utility.yul\":7843:7906   */\n      tag_437\n        /* \"#utility.yul\":7898:7905   */\n      dup5\n        /* \"#utility.yul\":7889:7895   */\n      dup3\n        /* \"#utility.yul\":7878:7887   */\n      dup6\n        /* \"#utility.yul\":7874:7896   */\n      add\n        /* \"#utility.yul\":7843:7906   */\n      tag_294\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":7833:7906   */\n      swap2\n      pop\n        /* \"#utility.yul\":7629:7916   */\n      pop\n        /* \"#utility.yul\":7414:7923   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7929:8047   */\n    tag_305:\n        /* \"#utility.yul\":8016:8040   */\n      tag_439\n        /* \"#utility.yul\":8034:8039   */\n      dup2\n        /* \"#utility.yul\":8016:8040   */\n      tag_296\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":8011:8014   */\n      dup3\n        /* \"#utility.yul\":8004:8041   */\n      mstore\n        /* \"#utility.yul\":7929:8047   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8053:8275   */\n    tag_50:\n        /* \"#utility.yul\":8146:8150   */\n      0x00\n        /* \"#utility.yul\":8184:8186   */\n      0x20\n        /* \"#utility.yul\":8173:8182   */\n      dup3\n        /* \"#utility.yul\":8169:8187   */\n      add\n        /* \"#utility.yul\":8161:8187   */\n      swap1\n      pop\n        /* \"#utility.yul\":8197:8268   */\n      tag_441\n        /* \"#utility.yul\":8265:8266   */\n      0x00\n        /* \"#utility.yul\":8254:8263   */\n      dup4\n        /* \"#utility.yul\":8250:8267   */\n      add\n        /* \"#utility.yul\":8241:8247   */\n      dup5\n        /* \"#utility.yul\":8197:8268   */\n      tag_305\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":8053:8275   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8281:8367   */\n    tag_306:\n        /* \"#utility.yul\":8316:8323   */\n      0x00\n        /* \"#utility.yul\":8356:8360   */\n      0xff\n        /* \"#utility.yul\":8349:8354   */\n      dup3\n        /* \"#utility.yul\":8345:8361   */\n      and\n        /* \"#utility.yul\":8334:8361   */\n      swap1\n      pop\n        /* \"#utility.yul\":8281:8367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8373:8485   */\n    tag_307:\n        /* \"#utility.yul\":8456:8478   */\n      tag_444\n        /* \"#utility.yul\":8472:8477   */\n      dup2\n        /* \"#utility.yul\":8456:8478   */\n      tag_306\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":8451:8454   */\n      dup3\n        /* \"#utility.yul\":8444:8479   */\n      mstore\n        /* \"#utility.yul\":8373:8485   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8491:8705   */\n    tag_54:\n        /* \"#utility.yul\":8580:8584   */\n      0x00\n        /* \"#utility.yul\":8618:8620   */\n      0x20\n        /* \"#utility.yul\":8607:8616   */\n      dup3\n        /* \"#utility.yul\":8603:8621   */\n      add\n        /* \"#utility.yul\":8595:8621   */\n      swap1\n      pop\n        /* \"#utility.yul\":8631:8698   */\n      tag_446\n        /* \"#utility.yul\":8695:8696   */\n      0x00\n        /* \"#utility.yul\":8684:8693   */\n      dup4\n        /* \"#utility.yul\":8680:8697   */\n      add\n        /* \"#utility.yul\":8671:8677   */\n      dup5\n        /* \"#utility.yul\":8631:8698   */\n      tag_307\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":8491:8705   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8711:8771   */\n    tag_308:\n        /* \"#utility.yul\":8739:8742   */\n      0x00\n        /* \"#utility.yul\":8760:8765   */\n      dup2\n        /* \"#utility.yul\":8753:8765   */\n      swap1\n      pop\n        /* \"#utility.yul\":8711:8771   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8777:8919   */\n    tag_309:\n        /* \"#utility.yul\":8827:8836   */\n      0x00\n        /* \"#utility.yul\":8860:8913   */\n      tag_449\n        /* \"#utility.yul\":8878:8912   */\n      tag_450\n        /* \"#utility.yul\":8887:8911   */\n      tag_451\n        /* \"#utility.yul\":8905:8910   */\n      dup5\n        /* \"#utility.yul\":8887:8911   */\n      tag_295\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":8878:8912   */\n      tag_308\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":8860:8913   */\n      tag_295\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":8847:8913   */\n      swap1\n      pop\n        /* \"#utility.yul\":8777:8919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8925:9051   */\n    tag_310:\n        /* \"#utility.yul\":8975:8984   */\n      0x00\n        /* \"#utility.yul\":9008:9045   */\n      tag_453\n        /* \"#utility.yul\":9039:9044   */\n      dup3\n        /* \"#utility.yul\":9008:9045   */\n      tag_309\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":8995:9045   */\n      swap1\n      pop\n        /* \"#utility.yul\":8925:9051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9057:9202   */\n    tag_311:\n        /* \"#utility.yul\":9126:9135   */\n      0x00\n        /* \"#utility.yul\":9159:9196   */\n      tag_455\n        /* \"#utility.yul\":9190:9195   */\n      dup3\n        /* \"#utility.yul\":9159:9196   */\n      tag_310\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":9146:9196   */\n      swap1\n      pop\n        /* \"#utility.yul\":9057:9202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9208:9377   */\n    tag_312:\n        /* \"#utility.yul\":9314:9370   */\n      tag_457\n        /* \"#utility.yul\":9364:9369   */\n      dup2\n        /* \"#utility.yul\":9314:9370   */\n      tag_311\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":9309:9312   */\n      dup3\n        /* \"#utility.yul\":9302:9371   */\n      mstore\n        /* \"#utility.yul\":9208:9377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9383:9643   */\n    tag_61:\n        /* \"#utility.yul\":9495:9499   */\n      0x00\n        /* \"#utility.yul\":9533:9535   */\n      0x20\n        /* \"#utility.yul\":9522:9531   */\n      dup3\n        /* \"#utility.yul\":9518:9536   */\n      add\n        /* \"#utility.yul\":9510:9536   */\n      swap1\n      pop\n        /* \"#utility.yul\":9546:9636   */\n      tag_459\n        /* \"#utility.yul\":9633:9634   */\n      0x00\n        /* \"#utility.yul\":9622:9631   */\n      dup4\n        /* \"#utility.yul\":9618:9635   */\n      add\n        /* \"#utility.yul\":9609:9615   */\n      dup5\n        /* \"#utility.yul\":9546:9636   */\n      tag_312\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":9383:9643   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9649:9978   */\n    tag_64:\n        /* \"#utility.yul\":9708:9714   */\n      0x00\n        /* \"#utility.yul\":9757:9759   */\n      0x20\n        /* \"#utility.yul\":9745:9754   */\n      dup3\n        /* \"#utility.yul\":9736:9743   */\n      dup5\n        /* \"#utility.yul\":9732:9755   */\n      sub\n        /* \"#utility.yul\":9728:9760   */\n      slt\n        /* \"#utility.yul\":9725:9844   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":9763:9842   */\n      tag_462\n      tag_284\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":9725:9844   */\n    tag_461:\n        /* \"#utility.yul\":9883:9884   */\n      0x00\n        /* \"#utility.yul\":9908:9961   */\n      tag_463\n        /* \"#utility.yul\":9953:9960   */\n      dup5\n        /* \"#utility.yul\":9944:9950   */\n      dup3\n        /* \"#utility.yul\":9933:9942   */\n      dup6\n        /* \"#utility.yul\":9929:9951   */\n      add\n        /* \"#utility.yul\":9908:9961   */\n      tag_298\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":9898:9961   */\n      swap2\n      pop\n        /* \"#utility.yul\":9854:9971   */\n      pop\n        /* \"#utility.yul\":9649:9978   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9984:10458   */\n    tag_85:\n        /* \"#utility.yul\":10052:10058   */\n      0x00\n        /* \"#utility.yul\":10060:10066   */\n      0x00\n        /* \"#utility.yul\":10109:10111   */\n      0x40\n        /* \"#utility.yul\":10097:10106   */\n      dup4\n        /* \"#utility.yul\":10088:10095   */\n      dup6\n        /* \"#utility.yul\":10084:10107   */\n      sub\n        /* \"#utility.yul\":10080:10112   */\n      slt\n        /* \"#utility.yul\":10077:10196   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":10115:10194   */\n      tag_466\n      tag_284\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":10077:10196   */\n    tag_465:\n        /* \"#utility.yul\":10235:10236   */\n      0x00\n        /* \"#utility.yul\":10260:10313   */\n      tag_467\n        /* \"#utility.yul\":10305:10312   */\n      dup6\n        /* \"#utility.yul\":10296:10302   */\n      dup3\n        /* \"#utility.yul\":10285:10294   */\n      dup7\n        /* \"#utility.yul\":10281:10303   */\n      add\n        /* \"#utility.yul\":10260:10313   */\n      tag_298\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":10250:10313   */\n      swap3\n      pop\n        /* \"#utility.yul\":10206:10323   */\n      pop\n        /* \"#utility.yul\":10362:10364   */\n      0x20\n        /* \"#utility.yul\":10388:10441   */\n      tag_468\n        /* \"#utility.yul\":10433:10440   */\n      dup6\n        /* \"#utility.yul\":10424:10430   */\n      dup3\n        /* \"#utility.yul\":10413:10422   */\n      dup7\n        /* \"#utility.yul\":10409:10431   */\n      add\n        /* \"#utility.yul\":10388:10441   */\n      tag_298\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":10378:10441   */\n      swap2\n      pop\n        /* \"#utility.yul\":10333:10451   */\n      pop\n        /* \"#utility.yul\":9984:10458   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10464:10644   */\n    tag_313:\n        /* \"#utility.yul\":10512:10589   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10509:10510   */\n      0x00\n        /* \"#utility.yul\":10502:10590   */\n      mstore\n        /* \"#utility.yul\":10609:10613   */\n      0x22\n        /* \"#utility.yul\":10606:10607   */\n      0x04\n        /* \"#utility.yul\":10599:10614   */\n      mstore\n        /* \"#utility.yul\":10633:10637   */\n      0x24\n        /* \"#utility.yul\":10630:10631   */\n      0x00\n        /* \"#utility.yul\":10623:10638   */\n      revert\n        /* \"#utility.yul\":10650:10970   */\n    tag_92:\n        /* \"#utility.yul\":10694:10700   */\n      0x00\n        /* \"#utility.yul\":10731:10732   */\n      0x02\n        /* \"#utility.yul\":10725:10729   */\n      dup3\n        /* \"#utility.yul\":10721:10733   */\n      div\n        /* \"#utility.yul\":10711:10733   */\n      swap1\n      pop\n        /* \"#utility.yul\":10778:10779   */\n      0x01\n        /* \"#utility.yul\":10772:10776   */\n      dup3\n        /* \"#utility.yul\":10768:10780   */\n      and\n        /* \"#utility.yul\":10799:10817   */\n      dup1\n        /* \"#utility.yul\":10789:10870   */\n      tag_471\n      jumpi\n        /* \"#utility.yul\":10855:10859   */\n      0x7f\n        /* \"#utility.yul\":10847:10853   */\n      dup3\n        /* \"#utility.yul\":10843:10860   */\n      and\n        /* \"#utility.yul\":10833:10860   */\n      swap2\n      pop\n        /* \"#utility.yul\":10789:10870   */\n    tag_471:\n        /* \"#utility.yul\":10917:10919   */\n      0x20\n        /* \"#utility.yul\":10909:10915   */\n      dup3\n        /* \"#utility.yul\":10906:10920   */\n      lt\n        /* \"#utility.yul\":10886:10904   */\n      dup2\n        /* \"#utility.yul\":10883:10921   */\n      sub\n        /* \"#utility.yul\":10880:10964   */\n      tag_472\n      jumpi\n        /* \"#utility.yul\":10936:10954   */\n      tag_473\n      tag_313\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":10880:10964   */\n    tag_472:\n        /* \"#utility.yul\":10701:10970   */\n      pop\n        /* \"#utility.yul\":10650:10970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10976:11155   */\n    tag_314:\n        /* \"#utility.yul\":11116:11147   */\n      0x457466546f6b656e3a20616c726561647920696e697469616c697a6564000000\n        /* \"#utility.yul\":11112:11113   */\n      0x00\n        /* \"#utility.yul\":11104:11110   */\n      dup3\n        /* \"#utility.yul\":11100:11114   */\n      add\n        /* \"#utility.yul\":11093:11148   */\n      mstore\n        /* \"#utility.yul\":10976:11155   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11161:11527   */\n    tag_315:\n        /* \"#utility.yul\":11303:11306   */\n      0x00\n        /* \"#utility.yul\":11324:11391   */\n      tag_476\n        /* \"#utility.yul\":11388:11390   */\n      0x1d\n        /* \"#utility.yul\":11383:11386   */\n      dup4\n        /* \"#utility.yul\":11324:11391   */\n      tag_279\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":11317:11391   */\n      swap2\n      pop\n        /* \"#utility.yul\":11400:11493   */\n      tag_477\n        /* \"#utility.yul\":11489:11492   */\n      dup3\n        /* \"#utility.yul\":11400:11493   */\n      tag_314\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":11518:11520   */\n      0x20\n        /* \"#utility.yul\":11513:11516   */\n      dup3\n        /* \"#utility.yul\":11509:11521   */\n      add\n        /* \"#utility.yul\":11502:11521   */\n      swap1\n      pop\n        /* \"#utility.yul\":11161:11527   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11533:11952   */\n    tag_108:\n        /* \"#utility.yul\":11699:11703   */\n      0x00\n        /* \"#utility.yul\":11737:11739   */\n      0x20\n        /* \"#utility.yul\":11726:11735   */\n      dup3\n        /* \"#utility.yul\":11722:11740   */\n      add\n        /* \"#utility.yul\":11714:11740   */\n      swap1\n      pop\n        /* \"#utility.yul\":11786:11795   */\n      dup2\n        /* \"#utility.yul\":11780:11784   */\n      dup2\n        /* \"#utility.yul\":11776:11796   */\n      sub\n        /* \"#utility.yul\":11772:11773   */\n      0x00\n        /* \"#utility.yul\":11761:11770   */\n      dup4\n        /* \"#utility.yul\":11757:11774   */\n      add\n        /* \"#utility.yul\":11750:11797   */\n      mstore\n        /* \"#utility.yul\":11814:11945   */\n      tag_479\n        /* \"#utility.yul\":11940:11944   */\n      dup2\n        /* \"#utility.yul\":11814:11945   */\n      tag_315\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":11806:11945   */\n      swap1\n      pop\n        /* \"#utility.yul\":11533:11952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11958:12043   */\n    tag_316:\n        /* \"#utility.yul\":12003:12010   */\n      0x00\n        /* \"#utility.yul\":12032:12037   */\n      dup2\n        /* \"#utility.yul\":12021:12037   */\n      swap1\n      pop\n        /* \"#utility.yul\":11958:12043   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12049:12150   */\n    tag_317:\n        /* \"#utility.yul\":12085:12092   */\n      0x00\n        /* \"#utility.yul\":12125:12143   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12118:12123   */\n      dup3\n        /* \"#utility.yul\":12114:12144   */\n      and\n        /* \"#utility.yul\":12103:12144   */\n      swap1\n      pop\n        /* \"#utility.yul\":12049:12150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12156:12312   */\n    tag_318:\n        /* \"#utility.yul\":12213:12222   */\n      0x00\n        /* \"#utility.yul\":12246:12306   */\n      tag_483\n        /* \"#utility.yul\":12263:12305   */\n      tag_484\n        /* \"#utility.yul\":12272:12304   */\n      tag_485\n        /* \"#utility.yul\":12298:12303   */\n      dup5\n        /* \"#utility.yul\":12272:12304   */\n      tag_316\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":12263:12305   */\n      tag_308\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":12246:12306   */\n      tag_317\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":12233:12306   */\n      swap1\n      pop\n        /* \"#utility.yul\":12156:12312   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12318:12463   */\n    tag_319:\n        /* \"#utility.yul\":12412:12456   */\n      tag_487\n        /* \"#utility.yul\":12450:12455   */\n      dup2\n        /* \"#utility.yul\":12412:12456   */\n      tag_318\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":12407:12410   */\n      dup3\n        /* \"#utility.yul\":12400:12457   */\n      mstore\n        /* \"#utility.yul\":12318:12463   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12469:12705   */\n    tag_115:\n        /* \"#utility.yul\":12569:12573   */\n      0x00\n        /* \"#utility.yul\":12607:12609   */\n      0x20\n        /* \"#utility.yul\":12596:12605   */\n      dup3\n        /* \"#utility.yul\":12592:12610   */\n      add\n        /* \"#utility.yul\":12584:12610   */\n      swap1\n      pop\n        /* \"#utility.yul\":12620:12698   */\n      tag_489\n        /* \"#utility.yul\":12695:12696   */\n      0x00\n        /* \"#utility.yul\":12684:12693   */\n      dup4\n        /* \"#utility.yul\":12680:12697   */\n      add\n        /* \"#utility.yul\":12671:12677   */\n      dup5\n        /* \"#utility.yul\":12620:12698   */\n      tag_319\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":12469:12705   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12711:12854   */\n    tag_320:\n        /* \"#utility.yul\":12768:12773   */\n      0x00\n        /* \"#utility.yul\":12799:12805   */\n      dup2\n        /* \"#utility.yul\":12793:12806   */\n      mload\n        /* \"#utility.yul\":12784:12806   */\n      swap1\n      pop\n        /* \"#utility.yul\":12815:12848   */\n      tag_491\n        /* \"#utility.yul\":12842:12847   */\n      dup2\n        /* \"#utility.yul\":12815:12848   */\n      tag_297\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":12711:12854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12860:13211   */\n    tag_134:\n        /* \"#utility.yul\":12930:12936   */\n      0x00\n        /* \"#utility.yul\":12979:12981   */\n      0x20\n        /* \"#utility.yul\":12967:12976   */\n      dup3\n        /* \"#utility.yul\":12958:12965   */\n      dup5\n        /* \"#utility.yul\":12954:12977   */\n      sub\n        /* \"#utility.yul\":12950:12982   */\n      slt\n        /* \"#utility.yul\":12947:13066   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":12985:13064   */\n      tag_494\n      tag_284\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":12947:13066   */\n    tag_493:\n        /* \"#utility.yul\":13105:13106   */\n      0x00\n        /* \"#utility.yul\":13130:13194   */\n      tag_495\n        /* \"#utility.yul\":13186:13193   */\n      dup5\n        /* \"#utility.yul\":13177:13183   */\n      dup3\n        /* \"#utility.yul\":13166:13175   */\n      dup6\n        /* \"#utility.yul\":13162:13184   */\n      add\n        /* \"#utility.yul\":13130:13194   */\n      tag_320\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":13120:13194   */\n      swap2\n      pop\n        /* \"#utility.yul\":13076:13204   */\n      pop\n        /* \"#utility.yul\":12860:13211   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13217:13395   */\n    tag_321:\n        /* \"#utility.yul\":13357:13387   */\n      0x6d73672e73656e646572206973206e6f742065746620726f7574657200000000\n        /* \"#utility.yul\":13353:13354   */\n      0x00\n        /* \"#utility.yul\":13345:13351   */\n      dup3\n        /* \"#utility.yul\":13341:13355   */\n      add\n        /* \"#utility.yul\":13334:13388   */\n      mstore\n        /* \"#utility.yul\":13217:13395   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13401:13767   */\n    tag_322:\n        /* \"#utility.yul\":13543:13546   */\n      0x00\n        /* \"#utility.yul\":13564:13631   */\n      tag_498\n        /* \"#utility.yul\":13628:13630   */\n      0x1c\n        /* \"#utility.yul\":13623:13626   */\n      dup4\n        /* \"#utility.yul\":13564:13631   */\n      tag_279\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":13557:13631   */\n      swap2\n      pop\n        /* \"#utility.yul\":13640:13733   */\n      tag_499\n        /* \"#utility.yul\":13729:13732   */\n      dup3\n        /* \"#utility.yul\":13640:13733   */\n      tag_321\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":13758:13760   */\n      0x20\n        /* \"#utility.yul\":13753:13756   */\n      dup3\n        /* \"#utility.yul\":13749:13761   */\n      add\n        /* \"#utility.yul\":13742:13761   */\n      swap1\n      pop\n        /* \"#utility.yul\":13401:13767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13773:14192   */\n    tag_140:\n        /* \"#utility.yul\":13939:13943   */\n      0x00\n        /* \"#utility.yul\":13977:13979   */\n      0x20\n        /* \"#utility.yul\":13966:13975   */\n      dup3\n        /* \"#utility.yul\":13962:13980   */\n      add\n        /* \"#utility.yul\":13954:13980   */\n      swap1\n      pop\n        /* \"#utility.yul\":14026:14035   */\n      dup2\n        /* \"#utility.yul\":14020:14024   */\n      dup2\n        /* \"#utility.yul\":14016:14036   */\n      sub\n        /* \"#utility.yul\":14012:14013   */\n      0x00\n        /* \"#utility.yul\":14001:14010   */\n      dup4\n        /* \"#utility.yul\":13997:14014   */\n      add\n        /* \"#utility.yul\":13990:14037   */\n      mstore\n        /* \"#utility.yul\":14054:14185   */\n      tag_501\n        /* \"#utility.yul\":14180:14184   */\n      dup2\n        /* \"#utility.yul\":14054:14185   */\n      tag_322\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":14046:14185   */\n      swap1\n      pop\n        /* \"#utility.yul\":13773:14192   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14198:14371   */\n    tag_323:\n        /* \"#utility.yul\":14338:14363   */\n      0x43616c6c6572206973206e6f7420746865206f776e6572000000000000000000\n        /* \"#utility.yul\":14334:14335   */\n      0x00\n        /* \"#utility.yul\":14326:14332   */\n      dup3\n        /* \"#utility.yul\":14322:14336   */\n      add\n        /* \"#utility.yul\":14315:14364   */\n      mstore\n        /* \"#utility.yul\":14198:14371   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14377:14743   */\n    tag_324:\n        /* \"#utility.yul\":14519:14522   */\n      0x00\n        /* \"#utility.yul\":14540:14607   */\n      tag_504\n        /* \"#utility.yul\":14604:14606   */\n      0x17\n        /* \"#utility.yul\":14599:14602   */\n      dup4\n        /* \"#utility.yul\":14540:14607   */\n      tag_279\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":14533:14607   */\n      swap2\n      pop\n        /* \"#utility.yul\":14616:14709   */\n      tag_505\n        /* \"#utility.yul\":14705:14708   */\n      dup3\n        /* \"#utility.yul\":14616:14709   */\n      tag_323\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":14734:14736   */\n      0x20\n        /* \"#utility.yul\":14729:14732   */\n      dup3\n        /* \"#utility.yul\":14725:14737   */\n      add\n        /* \"#utility.yul\":14718:14737   */\n      swap1\n      pop\n        /* \"#utility.yul\":14377:14743   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14749:15168   */\n    tag_173:\n        /* \"#utility.yul\":14915:14919   */\n      0x00\n        /* \"#utility.yul\":14953:14955   */\n      0x20\n        /* \"#utility.yul\":14942:14951   */\n      dup3\n        /* \"#utility.yul\":14938:14956   */\n      add\n        /* \"#utility.yul\":14930:14956   */\n      swap1\n      pop\n        /* \"#utility.yul\":15002:15011   */\n      dup2\n        /* \"#utility.yul\":14996:15000   */\n      dup2\n        /* \"#utility.yul\":14992:15012   */\n      sub\n        /* \"#utility.yul\":14988:14989   */\n      0x00\n        /* \"#utility.yul\":14977:14986   */\n      dup4\n        /* \"#utility.yul\":14973:14990   */\n      add\n        /* \"#utility.yul\":14966:15013   */\n      mstore\n        /* \"#utility.yul\":15030:15161   */\n      tag_507\n        /* \"#utility.yul\":15156:15160   */\n      dup2\n        /* \"#utility.yul\":15030:15161   */\n      tag_324\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":15022:15161   */\n      swap1\n      pop\n        /* \"#utility.yul\":14749:15168   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15174:15356   */\n    tag_325:\n        /* \"#utility.yul\":15314:15348   */\n      0x4469726563746f72792063616e6e6f74206265207a65726f2061646472657373\n        /* \"#utility.yul\":15310:15311   */\n      0x00\n        /* \"#utility.yul\":15302:15308   */\n      dup3\n        /* \"#utility.yul\":15298:15312   */\n      add\n        /* \"#utility.yul\":15291:15349   */\n      mstore\n        /* \"#utility.yul\":15174:15356   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15362:15728   */\n    tag_326:\n        /* \"#utility.yul\":15504:15507   */\n      0x00\n        /* \"#utility.yul\":15525:15592   */\n      tag_510\n        /* \"#utility.yul\":15589:15591   */\n      0x20\n        /* \"#utility.yul\":15584:15587   */\n      dup4\n        /* \"#utility.yul\":15525:15592   */\n      tag_279\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":15518:15592   */\n      swap2\n      pop\n        /* \"#utility.yul\":15601:15694   */\n      tag_511\n        /* \"#utility.yul\":15690:15693   */\n      dup3\n        /* \"#utility.yul\":15601:15694   */\n      tag_325\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":15719:15721   */\n      0x20\n        /* \"#utility.yul\":15714:15717   */\n      dup3\n        /* \"#utility.yul\":15710:15722   */\n      add\n        /* \"#utility.yul\":15703:15722   */\n      swap1\n      pop\n        /* \"#utility.yul\":15362:15728   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15734:16153   */\n    tag_185:\n        /* \"#utility.yul\":15900:15904   */\n      0x00\n        /* \"#utility.yul\":15938:15940   */\n      0x20\n        /* \"#utility.yul\":15927:15936   */\n      dup3\n        /* \"#utility.yul\":15923:15941   */\n      add\n        /* \"#utility.yul\":15915:15941   */\n      swap1\n      pop\n        /* \"#utility.yul\":15987:15996   */\n      dup2\n        /* \"#utility.yul\":15981:15985   */\n      dup2\n        /* \"#utility.yul\":15977:15997   */\n      sub\n        /* \"#utility.yul\":15973:15974   */\n      0x00\n        /* \"#utility.yul\":15962:15971   */\n      dup4\n        /* \"#utility.yul\":15958:15975   */\n      add\n        /* \"#utility.yul\":15951:15998   */\n      mstore\n        /* \"#utility.yul\":16015:16146   */\n      tag_513\n        /* \"#utility.yul\":16141:16145   */\n      dup2\n        /* \"#utility.yul\":16015:16146   */\n      tag_326\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":16007:16146   */\n      swap1\n      pop\n        /* \"#utility.yul\":15734:16153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16159:16337   */\n    tag_327:\n        /* \"#utility.yul\":16299:16329   */\n      0x4469726563746f7279206d757374206265206120636f6e747261637400000000\n        /* \"#utility.yul\":16295:16296   */\n      0x00\n        /* \"#utility.yul\":16287:16293   */\n      dup3\n        /* \"#utility.yul\":16283:16297   */\n      add\n        /* \"#utility.yul\":16276:16330   */\n      mstore\n        /* \"#utility.yul\":16159:16337   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16343:16709   */\n    tag_328:\n        /* \"#utility.yul\":16485:16488   */\n      0x00\n        /* \"#utility.yul\":16506:16573   */\n      tag_516\n        /* \"#utility.yul\":16570:16572   */\n      0x1c\n        /* \"#utility.yul\":16565:16568   */\n      dup4\n        /* \"#utility.yul\":16506:16573   */\n      tag_279\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":16499:16573   */\n      swap2\n      pop\n        /* \"#utility.yul\":16582:16675   */\n      tag_517\n        /* \"#utility.yul\":16671:16674   */\n      dup3\n        /* \"#utility.yul\":16582:16675   */\n      tag_327\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":16700:16702   */\n      0x20\n        /* \"#utility.yul\":16695:16698   */\n      dup3\n        /* \"#utility.yul\":16691:16703   */\n      add\n        /* \"#utility.yul\":16684:16703   */\n      swap1\n      pop\n        /* \"#utility.yul\":16343:16709   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16715:17134   */\n    tag_188:\n        /* \"#utility.yul\":16881:16885   */\n      0x00\n        /* \"#utility.yul\":16919:16921   */\n      0x20\n        /* \"#utility.yul\":16908:16917   */\n      dup3\n        /* \"#utility.yul\":16904:16922   */\n      add\n        /* \"#utility.yul\":16896:16922   */\n      swap1\n      pop\n        /* \"#utility.yul\":16968:16977   */\n      dup2\n        /* \"#utility.yul\":16962:16966   */\n      dup2\n        /* \"#utility.yul\":16958:16978   */\n      sub\n        /* \"#utility.yul\":16954:16955   */\n      0x00\n        /* \"#utility.yul\":16943:16952   */\n      dup4\n        /* \"#utility.yul\":16939:16956   */\n      add\n        /* \"#utility.yul\":16932:16979   */\n      mstore\n        /* \"#utility.yul\":16996:17127   */\n      tag_519\n        /* \"#utility.yul\":17122:17126   */\n      dup2\n        /* \"#utility.yul\":16996:17127   */\n      tag_328\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":16988:17127   */\n      swap1\n      pop\n        /* \"#utility.yul\":16715:17134   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17140:17371   */\n    tag_329:\n        /* \"#utility.yul\":17280:17314   */\n      0x4469726563746f7279206164647265737320646f6573206e6f7420696d706c65\n        /* \"#utility.yul\":17276:17277   */\n      0x00\n        /* \"#utility.yul\":17268:17274   */\n      dup3\n        /* \"#utility.yul\":17264:17278   */\n      add\n        /* \"#utility.yul\":17257:17315   */\n      mstore\n        /* \"#utility.yul\":17349:17363   */\n      0x6d656e74206f776e657228290000000000000000000000000000000000000000\n        /* \"#utility.yul\":17344:17346   */\n      0x20\n        /* \"#utility.yul\":17336:17342   */\n      dup3\n        /* \"#utility.yul\":17332:17347   */\n      add\n        /* \"#utility.yul\":17325:17364   */\n      mstore\n        /* \"#utility.yul\":17140:17371   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17377:17743   */\n    tag_330:\n        /* \"#utility.yul\":17519:17522   */\n      0x00\n        /* \"#utility.yul\":17540:17607   */\n      tag_522\n        /* \"#utility.yul\":17604:17606   */\n      0x2c\n        /* \"#utility.yul\":17599:17602   */\n      dup4\n        /* \"#utility.yul\":17540:17607   */\n      tag_279\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":17533:17607   */\n      swap2\n      pop\n        /* \"#utility.yul\":17616:17709   */\n      tag_523\n        /* \"#utility.yul\":17705:17708   */\n      dup3\n        /* \"#utility.yul\":17616:17709   */\n      tag_329\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":17734:17736   */\n      0x40\n        /* \"#utility.yul\":17729:17732   */\n      dup3\n        /* \"#utility.yul\":17725:17737   */\n      add\n        /* \"#utility.yul\":17718:17737   */\n      swap1\n      pop\n        /* \"#utility.yul\":17377:17743   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17749:18168   */\n    tag_196:\n        /* \"#utility.yul\":17915:17919   */\n      0x00\n        /* \"#utility.yul\":17953:17955   */\n      0x20\n        /* \"#utility.yul\":17942:17951   */\n      dup3\n        /* \"#utility.yul\":17938:17956   */\n      add\n        /* \"#utility.yul\":17930:17956   */\n      swap1\n      pop\n        /* \"#utility.yul\":18002:18011   */\n      dup2\n        /* \"#utility.yul\":17996:18000   */\n      dup2\n        /* \"#utility.yul\":17992:18012   */\n      sub\n        /* \"#utility.yul\":17988:17989   */\n      0x00\n        /* \"#utility.yul\":17977:17986   */\n      dup4\n        /* \"#utility.yul\":17973:17990   */\n      add\n        /* \"#utility.yul\":17966:18013   */\n      mstore\n        /* \"#utility.yul\":18030:18161   */\n      tag_525\n        /* \"#utility.yul\":18156:18160   */\n      dup2\n        /* \"#utility.yul\":18030:18161   */\n      tag_330\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":18022:18161   */\n      swap1\n      pop\n        /* \"#utility.yul\":17749:18168   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18174:18616   */\n    tag_213:\n        /* \"#utility.yul\":18323:18327   */\n      0x00\n        /* \"#utility.yul\":18361:18363   */\n      0x60\n        /* \"#utility.yul\":18350:18359   */\n      dup3\n        /* \"#utility.yul\":18346:18364   */\n      add\n        /* \"#utility.yul\":18338:18364   */\n      swap1\n      pop\n        /* \"#utility.yul\":18374:18445   */\n      tag_527\n        /* \"#utility.yul\":18442:18443   */\n      0x00\n        /* \"#utility.yul\":18431:18440   */\n      dup4\n        /* \"#utility.yul\":18427:18444   */\n      add\n        /* \"#utility.yul\":18418:18424   */\n      dup7\n        /* \"#utility.yul\":18374:18445   */\n      tag_305\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":18455:18527   */\n      tag_528\n        /* \"#utility.yul\":18523:18525   */\n      0x20\n        /* \"#utility.yul\":18512:18521   */\n      dup4\n        /* \"#utility.yul\":18508:18526   */\n      add\n        /* \"#utility.yul\":18499:18505   */\n      dup6\n        /* \"#utility.yul\":18455:18527   */\n      tag_304\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":18537:18609   */\n      tag_529\n        /* \"#utility.yul\":18605:18607   */\n      0x40\n        /* \"#utility.yul\":18594:18603   */\n      dup4\n        /* \"#utility.yul\":18590:18608   */\n      add\n        /* \"#utility.yul\":18581:18587   */\n      dup5\n        /* \"#utility.yul\":18537:18609   */\n      tag_304\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":18174:18616   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18622:18763   */\n    tag_331:\n        /* \"#utility.yul\":18671:18675   */\n      0x00\n        /* \"#utility.yul\":18694:18697   */\n      dup2\n        /* \"#utility.yul\":18686:18697   */\n      swap1\n      pop\n        /* \"#utility.yul\":18717:18720   */\n      dup2\n        /* \"#utility.yul\":18714:18715   */\n      0x00\n        /* \"#utility.yul\":18707:18721   */\n      mstore\n        /* \"#utility.yul\":18751:18755   */\n      0x20\n        /* \"#utility.yul\":18748:18749   */\n      0x00\n        /* \"#utility.yul\":18738:18756   */\n      keccak256\n        /* \"#utility.yul\":18730:18756   */\n      swap1\n      pop\n        /* \"#utility.yul\":18622:18763   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18769:18862   */\n    tag_332:\n        /* \"#utility.yul\":18806:18812   */\n      0x00\n        /* \"#utility.yul\":18853:18855   */\n      0x20\n        /* \"#utility.yul\":18848:18850   */\n      0x1f\n        /* \"#utility.yul\":18841:18846   */\n      dup4\n        /* \"#utility.yul\":18837:18851   */\n      add\n        /* \"#utility.yul\":18833:18856   */\n      div\n        /* \"#utility.yul\":18823:18856   */\n      swap1\n      pop\n        /* \"#utility.yul\":18769:18862   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18868:18975   */\n    tag_333:\n        /* \"#utility.yul\":18912:18920   */\n      0x00\n        /* \"#utility.yul\":18962:18967   */\n      dup3\n        /* \"#utility.yul\":18956:18960   */\n      dup3\n        /* \"#utility.yul\":18952:18968   */\n      shl\n        /* \"#utility.yul\":18931:18968   */\n      swap1\n      pop\n        /* \"#utility.yul\":18868:18975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18981:19374   */\n    tag_334:\n        /* \"#utility.yul\":19050:19056   */\n      0x00\n        /* \"#utility.yul\":19100:19101   */\n      0x08\n        /* \"#utility.yul\":19088:19098   */\n      dup4\n        /* \"#utility.yul\":19084:19102   */\n      mul\n        /* \"#utility.yul\":19123:19220   */\n      tag_534\n        /* \"#utility.yul\":19153:19219   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19142:19151   */\n      dup3\n        /* \"#utility.yul\":19123:19220   */\n      tag_333\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":19241:19280   */\n      tag_535\n        /* \"#utility.yul\":19271:19279   */\n      dup7\n        /* \"#utility.yul\":19260:19269   */\n      dup4\n        /* \"#utility.yul\":19241:19280   */\n      tag_333\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":19229:19280   */\n      swap6\n      pop\n        /* \"#utility.yul\":19313:19317   */\n      dup1\n        /* \"#utility.yul\":19309:19318   */\n      not\n        /* \"#utility.yul\":19302:19307   */\n      dup5\n        /* \"#utility.yul\":19298:19319   */\n      and\n        /* \"#utility.yul\":19289:19319   */\n      swap4\n      pop\n        /* \"#utility.yul\":19362:19366   */\n      dup1\n        /* \"#utility.yul\":19352:19360   */\n      dup7\n        /* \"#utility.yul\":19348:19367   */\n      and\n        /* \"#utility.yul\":19341:19346   */\n      dup5\n        /* \"#utility.yul\":19338:19368   */\n      or\n        /* \"#utility.yul\":19328:19368   */\n      swap3\n      pop\n        /* \"#utility.yul\":19057:19374   */\n      pop\n      pop\n        /* \"#utility.yul\":18981:19374   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19380:19522   */\n    tag_335:\n        /* \"#utility.yul\":19430:19439   */\n      0x00\n        /* \"#utility.yul\":19463:19516   */\n      tag_537\n        /* \"#utility.yul\":19481:19515   */\n      tag_538\n        /* \"#utility.yul\":19490:19514   */\n      tag_539\n        /* \"#utility.yul\":19508:19513   */\n      dup5\n        /* \"#utility.yul\":19490:19514   */\n      tag_299\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":19481:19515   */\n      tag_308\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":19463:19516   */\n      tag_299\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":19450:19516   */\n      swap1\n      pop\n        /* \"#utility.yul\":19380:19522   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19528:19603   */\n    tag_336:\n        /* \"#utility.yul\":19571:19574   */\n      0x00\n        /* \"#utility.yul\":19592:19597   */\n      dup2\n        /* \"#utility.yul\":19585:19597   */\n      swap1\n      pop\n        /* \"#utility.yul\":19528:19603   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19609:19878   */\n    tag_337:\n        /* \"#utility.yul\":19719:19758   */\n      tag_542\n        /* \"#utility.yul\":19750:19757   */\n      dup4\n        /* \"#utility.yul\":19719:19758   */\n      tag_335\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":19780:19871   */\n      tag_543\n        /* \"#utility.yul\":19829:19870   */\n      tag_544\n        /* \"#utility.yul\":19853:19869   */\n      dup3\n        /* \"#utility.yul\":19829:19870   */\n      tag_336\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":19821:19827   */\n      dup5\n        /* \"#utility.yul\":19814:19818   */\n      dup5\n        /* \"#utility.yul\":19808:19819   */\n      sload\n        /* \"#utility.yul\":19780:19871   */\n      tag_334\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":19774:19778   */\n      dup3\n        /* \"#utility.yul\":19767:19872   */\n      sstore\n        /* \"#utility.yul\":19685:19878   */\n      pop\n        /* \"#utility.yul\":19609:19878   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19884:19957   */\n    tag_338:\n        /* \"#utility.yul\":19929:19932   */\n      0x00\n        /* \"#utility.yul\":19950:19951   */\n      0x00\n        /* \"#utility.yul\":19943:19951   */\n      swap1\n      pop\n        /* \"#utility.yul\":19884:19957   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19963:20152   */\n    tag_339:\n        /* \"#utility.yul\":20040:20072   */\n      tag_547\n      tag_338\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":20081:20146   */\n      tag_548\n        /* \"#utility.yul\":20139:20145   */\n      dup2\n        /* \"#utility.yul\":20131:20137   */\n      dup5\n        /* \"#utility.yul\":20125:20129   */\n      dup5\n        /* \"#utility.yul\":20081:20146   */\n      tag_337\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":20016:20152   */\n      pop\n        /* \"#utility.yul\":19963:20152   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20158:20344   */\n    tag_340:\n        /* \"#utility.yul\":20218:20338   */\n    tag_550:\n        /* \"#utility.yul\":20235:20238   */\n      dup2\n        /* \"#utility.yul\":20228:20233   */\n      dup2\n        /* \"#utility.yul\":20225:20239   */\n      lt\n        /* \"#utility.yul\":20218:20338   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":20289:20328   */\n      tag_553\n        /* \"#utility.yul\":20326:20327   */\n      0x00\n        /* \"#utility.yul\":20319:20324   */\n      dup3\n        /* \"#utility.yul\":20289:20328   */\n      tag_339\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":20262:20263   */\n      0x01\n        /* \"#utility.yul\":20255:20260   */\n      dup2\n        /* \"#utility.yul\":20251:20264   */\n      add\n        /* \"#utility.yul\":20242:20264   */\n      swap1\n      pop\n        /* \"#utility.yul\":20218:20338   */\n      jump(tag_550)\n    tag_552:\n        /* \"#utility.yul\":20158:20344   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20350:20893   */\n    tag_341:\n        /* \"#utility.yul\":20451:20453   */\n      0x1f\n        /* \"#utility.yul\":20446:20449   */\n      dup3\n        /* \"#utility.yul\":20443:20454   */\n      gt\n        /* \"#utility.yul\":20440:20886   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":20485:20523   */\n      tag_556\n        /* \"#utility.yul\":20517:20522   */\n      dup2\n        /* \"#utility.yul\":20485:20523   */\n      tag_331\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":20569:20598   */\n      tag_557\n        /* \"#utility.yul\":20587:20597   */\n      dup5\n        /* \"#utility.yul\":20569:20598   */\n      tag_332\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":20559:20567   */\n      dup2\n        /* \"#utility.yul\":20555:20599   */\n      add\n        /* \"#utility.yul\":20752:20754   */\n      0x20\n        /* \"#utility.yul\":20740:20750   */\n      dup6\n        /* \"#utility.yul\":20737:20755   */\n      lt\n        /* \"#utility.yul\":20734:20783   */\n      iszero\n      tag_558\n      jumpi\n        /* \"#utility.yul\":20773:20781   */\n      dup2\n        /* \"#utility.yul\":20758:20781   */\n      swap1\n      pop\n        /* \"#utility.yul\":20734:20783   */\n    tag_558:\n        /* \"#utility.yul\":20796:20876   */\n      tag_559\n        /* \"#utility.yul\":20852:20874   */\n      tag_560\n        /* \"#utility.yul\":20870:20873   */\n      dup6\n        /* \"#utility.yul\":20852:20874   */\n      tag_332\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":20842:20850   */\n      dup4\n        /* \"#utility.yul\":20838:20875   */\n      add\n        /* \"#utility.yul\":20825:20836   */\n      dup3\n        /* \"#utility.yul\":20796:20876   */\n      tag_340\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":20455:20886   */\n      pop\n      pop\n        /* \"#utility.yul\":20440:20886   */\n    tag_555:\n        /* \"#utility.yul\":20350:20893   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20899:21016   */\n    tag_342:\n        /* \"#utility.yul\":20953:20961   */\n      0x00\n        /* \"#utility.yul\":21003:21008   */\n      dup3\n        /* \"#utility.yul\":20997:21001   */\n      dup3\n        /* \"#utility.yul\":20993:21009   */\n      shr\n        /* \"#utility.yul\":20972:21009   */\n      swap1\n      pop\n        /* \"#utility.yul\":20899:21016   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21022:21191   */\n    tag_343:\n        /* \"#utility.yul\":21066:21072   */\n      0x00\n        /* \"#utility.yul\":21099:21150   */\n      tag_563\n        /* \"#utility.yul\":21147:21148   */\n      0x00\n        /* \"#utility.yul\":21143:21149   */\n      not\n        /* \"#utility.yul\":21135:21140   */\n      dup5\n        /* \"#utility.yul\":21132:21133   */\n      0x08\n        /* \"#utility.yul\":21128:21141   */\n      mul\n        /* \"#utility.yul\":21099:21150   */\n      tag_342\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":21095:21151   */\n      not\n        /* \"#utility.yul\":21180:21184   */\n      dup1\n        /* \"#utility.yul\":21174:21178   */\n      dup4\n        /* \"#utility.yul\":21170:21185   */\n      and\n        /* \"#utility.yul\":21160:21185   */\n      swap2\n      pop\n        /* \"#utility.yul\":21073:21191   */\n      pop\n        /* \"#utility.yul\":21022:21191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21196:21491   */\n    tag_344:\n        /* \"#utility.yul\":21272:21276   */\n      0x00\n        /* \"#utility.yul\":21418:21447   */\n      tag_565\n        /* \"#utility.yul\":21443:21446   */\n      dup4\n        /* \"#utility.yul\":21437:21441   */\n      dup4\n        /* \"#utility.yul\":21418:21447   */\n      tag_343\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":21410:21447   */\n      swap2\n      pop\n        /* \"#utility.yul\":21480:21483   */\n      dup3\n        /* \"#utility.yul\":21477:21478   */\n      0x02\n        /* \"#utility.yul\":21473:21484   */\n      mul\n        /* \"#utility.yul\":21467:21471   */\n      dup3\n        /* \"#utility.yul\":21464:21485   */\n      or\n        /* \"#utility.yul\":21456:21485   */\n      swap1\n      pop\n        /* \"#utility.yul\":21196:21491   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21496:22891   */\n    tag_240:\n        /* \"#utility.yul\":21613:21650   */\n      tag_567\n        /* \"#utility.yul\":21646:21649   */\n      dup3\n        /* \"#utility.yul\":21613:21650   */\n      tag_278\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":21715:21733   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":21707:21713   */\n      dup2\n        /* \"#utility.yul\":21704:21734   */\n      gt\n        /* \"#utility.yul\":21701:21757   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":21737:21755   */\n      tag_569\n      tag_288\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":21701:21757   */\n    tag_568:\n        /* \"#utility.yul\":21781:21819   */\n      tag_570\n        /* \"#utility.yul\":21813:21817   */\n      dup3\n        /* \"#utility.yul\":21807:21818   */\n      sload\n        /* \"#utility.yul\":21781:21819   */\n      tag_92\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":21866:21933   */\n      tag_571\n        /* \"#utility.yul\":21926:21932   */\n      dup3\n        /* \"#utility.yul\":21918:21924   */\n      dup3\n        /* \"#utility.yul\":21912:21916   */\n      dup6\n        /* \"#utility.yul\":21866:21933   */\n      tag_341\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":21960:21961   */\n      0x00\n        /* \"#utility.yul\":21984:21988   */\n      0x20\n        /* \"#utility.yul\":21971:21988   */\n      swap1\n      pop\n        /* \"#utility.yul\":22016:22018   */\n      0x1f\n        /* \"#utility.yul\":22008:22014   */\n      dup4\n        /* \"#utility.yul\":22005:22019   */\n      gt\n        /* \"#utility.yul\":22033:22034   */\n      0x01\n        /* \"#utility.yul\":22028:22646   */\n      dup2\n      eq\n      tag_573\n      jumpi\n        /* \"#utility.yul\":22690:22691   */\n      0x00\n        /* \"#utility.yul\":22707:22713   */\n      dup5\n        /* \"#utility.yul\":22704:22781   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":22756:22765   */\n      dup3\n        /* \"#utility.yul\":22751:22754   */\n      dup8\n        /* \"#utility.yul\":22747:22766   */\n      add\n        /* \"#utility.yul\":22741:22767   */\n      mload\n        /* \"#utility.yul\":22732:22767   */\n      swap1\n      pop\n        /* \"#utility.yul\":22704:22781   */\n    tag_574:\n        /* \"#utility.yul\":22807:22874   */\n      tag_575\n        /* \"#utility.yul\":22867:22873   */\n      dup6\n        /* \"#utility.yul\":22860:22865   */\n      dup3\n        /* \"#utility.yul\":22807:22874   */\n      tag_344\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":22801:22805   */\n      dup7\n        /* \"#utility.yul\":22794:22875   */\n      sstore\n        /* \"#utility.yul\":22663:22885   */\n      pop\n        /* \"#utility.yul\":21998:22885   */\n      jump(tag_572)\n        /* \"#utility.yul\":22028:22646   */\n    tag_573:\n        /* \"#utility.yul\":22080:22084   */\n      0x1f\n        /* \"#utility.yul\":22076:22085   */\n      not\n        /* \"#utility.yul\":22068:22074   */\n      dup5\n        /* \"#utility.yul\":22064:22086   */\n      and\n        /* \"#utility.yul\":22114:22151   */\n      tag_576\n        /* \"#utility.yul\":22146:22150   */\n      dup7\n        /* \"#utility.yul\":22114:22151   */\n      tag_331\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":22173:22174   */\n      0x00\n        /* \"#utility.yul\":22187:22395   */\n    tag_577:\n        /* \"#utility.yul\":22201:22208   */\n      dup3\n        /* \"#utility.yul\":22198:22199   */\n      dup2\n        /* \"#utility.yul\":22195:22209   */\n      lt\n        /* \"#utility.yul\":22187:22395   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":22280:22289   */\n      dup5\n        /* \"#utility.yul\":22275:22278   */\n      dup10\n        /* \"#utility.yul\":22271:22290   */\n      add\n        /* \"#utility.yul\":22265:22291   */\n      mload\n        /* \"#utility.yul\":22257:22263   */\n      dup3\n        /* \"#utility.yul\":22250:22292   */\n      sstore\n        /* \"#utility.yul\":22331:22332   */\n      0x01\n        /* \"#utility.yul\":22323:22329   */\n      dup3\n        /* \"#utility.yul\":22319:22333   */\n      add\n        /* \"#utility.yul\":22309:22333   */\n      swap2\n      pop\n        /* \"#utility.yul\":22378:22380   */\n      0x20\n        /* \"#utility.yul\":22367:22376   */\n      dup6\n        /* \"#utility.yul\":22363:22381   */\n      add\n        /* \"#utility.yul\":22350:22381   */\n      swap5\n      pop\n        /* \"#utility.yul\":22224:22228   */\n      0x20\n        /* \"#utility.yul\":22221:22222   */\n      dup2\n        /* \"#utility.yul\":22217:22229   */\n      add\n        /* \"#utility.yul\":22212:22229   */\n      swap1\n      pop\n        /* \"#utility.yul\":22187:22395   */\n      jump(tag_577)\n    tag_579:\n        /* \"#utility.yul\":22423:22429   */\n      dup7\n        /* \"#utility.yul\":22414:22421   */\n      dup4\n        /* \"#utility.yul\":22411:22430   */\n      lt\n        /* \"#utility.yul\":22408:22587   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":22481:22490   */\n      dup5\n        /* \"#utility.yul\":22476:22479   */\n      dup10\n        /* \"#utility.yul\":22472:22491   */\n      add\n        /* \"#utility.yul\":22466:22492   */\n      mload\n        /* \"#utility.yul\":22524:22572   */\n      tag_581\n        /* \"#utility.yul\":22566:22570   */\n      0x1f\n        /* \"#utility.yul\":22558:22564   */\n      dup10\n        /* \"#utility.yul\":22554:22571   */\n      and\n        /* \"#utility.yul\":22543:22552   */\n      dup3\n        /* \"#utility.yul\":22524:22572   */\n      tag_343\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":22516:22522   */\n      dup4\n        /* \"#utility.yul\":22509:22573   */\n      sstore\n        /* \"#utility.yul\":22431:22587   */\n      pop\n        /* \"#utility.yul\":22408:22587   */\n    tag_580:\n        /* \"#utility.yul\":22633:22634   */\n      0x01\n        /* \"#utility.yul\":22629:22630   */\n      0x02\n        /* \"#utility.yul\":22621:22627   */\n      dup9\n        /* \"#utility.yul\":22617:22631   */\n      mul\n        /* \"#utility.yul\":22613:22635   */\n      add\n        /* \"#utility.yul\":22607:22611   */\n      dup9\n        /* \"#utility.yul\":22600:22636   */\n      sstore\n        /* \"#utility.yul\":22035:22646   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":21998:22885   */\n    tag_572:\n      pop\n        /* \"#utility.yul\":21588:22891   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":21496:22891   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22897:23117   */\n    tag_345:\n        /* \"#utility.yul\":23037:23071   */\n      0x457466546f6b656e3a206576656e747320636f6e7472616374206e6f74207365\n        /* \"#utility.yul\":23033:23034   */\n      0x00\n        /* \"#utility.yul\":23025:23031   */\n      dup3\n        /* \"#utility.yul\":23021:23035   */\n      add\n        /* \"#utility.yul\":23014:23072   */\n      mstore\n        /* \"#utility.yul\":23106:23109   */\n      0x7400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23101:23103   */\n      0x20\n        /* \"#utility.yul\":23093:23099   */\n      dup3\n        /* \"#utility.yul\":23089:23104   */\n      add\n        /* \"#utility.yul\":23082:23110   */\n      mstore\n        /* \"#utility.yul\":22897:23117   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23123:23489   */\n    tag_346:\n        /* \"#utility.yul\":23265:23268   */\n      0x00\n        /* \"#utility.yul\":23286:23353   */\n      tag_584\n        /* \"#utility.yul\":23350:23352   */\n      0x21\n        /* \"#utility.yul\":23345:23348   */\n      dup4\n        /* \"#utility.yul\":23286:23353   */\n      tag_279\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":23279:23353   */\n      swap2\n      pop\n        /* \"#utility.yul\":23362:23455   */\n      tag_585\n        /* \"#utility.yul\":23451:23454   */\n      dup3\n        /* \"#utility.yul\":23362:23455   */\n      tag_345\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":23480:23482   */\n      0x40\n        /* \"#utility.yul\":23475:23478   */\n      dup3\n        /* \"#utility.yul\":23471:23483   */\n      add\n        /* \"#utility.yul\":23464:23483   */\n      swap1\n      pop\n        /* \"#utility.yul\":23123:23489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23495:23914   */\n    tag_257:\n        /* \"#utility.yul\":23661:23665   */\n      0x00\n        /* \"#utility.yul\":23699:23701   */\n      0x20\n        /* \"#utility.yul\":23688:23697   */\n      dup3\n        /* \"#utility.yul\":23684:23702   */\n      add\n        /* \"#utility.yul\":23676:23702   */\n      swap1\n      pop\n        /* \"#utility.yul\":23748:23757   */\n      dup2\n        /* \"#utility.yul\":23742:23746   */\n      dup2\n        /* \"#utility.yul\":23738:23758   */\n      sub\n        /* \"#utility.yul\":23734:23735   */\n      0x00\n        /* \"#utility.yul\":23723:23732   */\n      dup4\n        /* \"#utility.yul\":23719:23736   */\n      add\n        /* \"#utility.yul\":23712:23759   */\n      mstore\n        /* \"#utility.yul\":23776:23907   */\n      tag_587\n        /* \"#utility.yul\":23902:23906   */\n      dup2\n        /* \"#utility.yul\":23776:23907   */\n      tag_346\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":23768:23907   */\n      swap1\n      pop\n        /* \"#utility.yul\":23495:23914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23920:24362   */\n    tag_259:\n        /* \"#utility.yul\":24069:24073   */\n      0x00\n        /* \"#utility.yul\":24107:24109   */\n      0x60\n        /* \"#utility.yul\":24096:24105   */\n      dup3\n        /* \"#utility.yul\":24092:24110   */\n      add\n        /* \"#utility.yul\":24084:24110   */\n      swap1\n      pop\n        /* \"#utility.yul\":24120:24191   */\n      tag_589\n        /* \"#utility.yul\":24188:24189   */\n      0x00\n        /* \"#utility.yul\":24177:24186   */\n      dup4\n        /* \"#utility.yul\":24173:24190   */\n      add\n        /* \"#utility.yul\":24164:24170   */\n      dup7\n        /* \"#utility.yul\":24120:24191   */\n      tag_305\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":24201:24273   */\n      tag_590\n        /* \"#utility.yul\":24269:24271   */\n      0x20\n        /* \"#utility.yul\":24258:24267   */\n      dup4\n        /* \"#utility.yul\":24254:24272   */\n      add\n        /* \"#utility.yul\":24245:24251   */\n      dup6\n        /* \"#utility.yul\":24201:24273   */\n      tag_305\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":24283:24355   */\n      tag_591\n        /* \"#utility.yul\":24351:24353   */\n      0x40\n        /* \"#utility.yul\":24340:24349   */\n      dup4\n        /* \"#utility.yul\":24336:24354   */\n      add\n        /* \"#utility.yul\":24327:24333   */\n      dup5\n        /* \"#utility.yul\":24283:24355   */\n      tag_304\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":23920:24362   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24368:24548   */\n    tag_347:\n        /* \"#utility.yul\":24416:24493   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24413:24414   */\n      0x00\n        /* \"#utility.yul\":24406:24494   */\n      mstore\n        /* \"#utility.yul\":24513:24517   */\n      0x11\n        /* \"#utility.yul\":24510:24511   */\n      0x04\n        /* \"#utility.yul\":24503:24518   */\n      mstore\n        /* \"#utility.yul\":24537:24541   */\n      0x24\n        /* \"#utility.yul\":24534:24535   */\n      0x00\n        /* \"#utility.yul\":24527:24542   */\n      revert\n        /* \"#utility.yul\":24554:24745   */\n    tag_269:\n        /* \"#utility.yul\":24594:24597   */\n      0x00\n        /* \"#utility.yul\":24613:24633   */\n      tag_594\n        /* \"#utility.yul\":24631:24632   */\n      dup3\n        /* \"#utility.yul\":24613:24633   */\n      tag_299\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":24608:24633   */\n      swap2\n      pop\n        /* \"#utility.yul\":24647:24667   */\n      tag_595\n        /* \"#utility.yul\":24665:24666   */\n      dup4\n        /* \"#utility.yul\":24647:24667   */\n      tag_299\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":24642:24667   */\n      swap3\n      pop\n        /* \"#utility.yul\":24690:24691   */\n      dup3\n        /* \"#utility.yul\":24687:24688   */\n      dup3\n        /* \"#utility.yul\":24683:24692   */\n      add\n        /* \"#utility.yul\":24676:24692   */\n      swap1\n      pop\n        /* \"#utility.yul\":24711:24714   */\n      dup1\n        /* \"#utility.yul\":24708:24709   */\n      dup3\n        /* \"#utility.yul\":24705:24715   */\n      gt\n        /* \"#utility.yul\":24702:24738   */\n      iszero\n      tag_596\n      jumpi\n        /* \"#utility.yul\":24718:24736   */\n      tag_597\n      tag_347\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":24702:24738   */\n    tag_596:\n        /* \"#utility.yul\":24554:24745   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220696e2c55b17b340ef90c4b351328c7bdf32c6147dbe630745a456d067801f38d64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1200": {
									"entryPoint": null,
									"id": 1200,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_1391": {
									"entryPoint": null,
									"id": 1391,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setDirectory_1260": {
									"entryPoint": 72,
									"id": 1260,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af": {
									"entryPoint": 866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4374:10",
										"nodeType": "YulBlock",
										"src": "0:4374:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "759:80:10",
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nativeSrc": "769:22:10",
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nativeSrc": "778:13:10",
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nativeSrc": "800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nativeSrc": "800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:10",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:10",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nativeSrc": "922:274:10",
													"nodeType": "YulBlock",
													"src": "922:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:10",
																"nodeType": "YulBlock",
																"src": "968:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:10"
																			},
																			"nativeSrc": "970:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:10"
																		},
																		"nativeSrc": "970:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:10"
																		},
																		"nativeSrc": "939:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:10",
																		"nodeType": "YulLiteral",
																		"src": "964:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:10"
																},
																"nativeSrc": "935:32:10",
																"nodeType": "YulFunctionCall",
																"src": "935:32:10"
															},
															"nativeSrc": "932:119:10",
															"nodeType": "YulIf",
															"src": "932:119:10"
														},
														{
															"nativeSrc": "1061:128:10",
															"nodeType": "YulBlock",
															"src": "1061:128:10",
															"statements": [
																{
																	"nativeSrc": "1076:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:10"
																				},
																				"nativeSrc": "1147:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:10"
																		},
																		"nativeSrc": "1115:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:10",
														"nodeType": "YulTypedName",
														"src": "892:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:10",
														"nodeType": "YulTypedName",
														"src": "903:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:10",
														"nodeType": "YulTypedName",
														"src": "915:6:10",
														"type": ""
													}
												],
												"src": "845:351:10"
											},
											{
												"body": {
													"nativeSrc": "1298:73:10",
													"nodeType": "YulBlock",
													"src": "1298:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1315:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1315:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1320:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1320:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1308:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1308:6:10"
																},
																"nativeSrc": "1308:19:10",
																"nodeType": "YulFunctionCall",
																"src": "1308:19:10"
															},
															"nativeSrc": "1308:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "1308:19:10"
														},
														{
															"nativeSrc": "1336:29:10",
															"nodeType": "YulAssignment",
															"src": "1336:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1355:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1355:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1360:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1360:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1351:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1351:3:10"
																},
																"nativeSrc": "1351:14:10",
																"nodeType": "YulFunctionCall",
																"src": "1351:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1336:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "1336:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1202:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1270:3:10",
														"nodeType": "YulTypedName",
														"src": "1270:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1275:6:10",
														"nodeType": "YulTypedName",
														"src": "1275:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1286:11:10",
														"nodeType": "YulTypedName",
														"src": "1286:11:10",
														"type": ""
													}
												],
												"src": "1202:169:10"
											},
											{
												"body": {
													"nativeSrc": "1483:76:10",
													"nodeType": "YulBlock",
													"src": "1483:76:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1505:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1505:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1513:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1513:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1501:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1501:3:10"
																		},
																		"nativeSrc": "1501:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1501:14:10"
																	},
																	{
																		"hexValue": "4469726563746f72792063616e6e6f74206265207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "1517:34:10",
																		"nodeType": "YulLiteral",
																		"src": "1517:34:10",
																		"type": "",
																		"value": "Directory cannot be zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1494:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1494:6:10"
																},
																"nativeSrc": "1494:58:10",
																"nodeType": "YulFunctionCall",
																"src": "1494:58:10"
															},
															"nativeSrc": "1494:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "1494:58:10"
														}
													]
												},
												"name": "store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
												"nativeSrc": "1377:182:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1475:6:10",
														"nodeType": "YulTypedName",
														"src": "1475:6:10",
														"type": ""
													}
												],
												"src": "1377:182:10"
											},
											{
												"body": {
													"nativeSrc": "1711:220:10",
													"nodeType": "YulBlock",
													"src": "1711:220:10",
													"statements": [
														{
															"nativeSrc": "1721:74:10",
															"nodeType": "YulAssignment",
															"src": "1721:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1787:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1787:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1792:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1792:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1728:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "1728:58:10"
																},
																"nativeSrc": "1728:67:10",
																"nodeType": "YulFunctionCall",
																"src": "1728:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1721:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1721:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1893:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1893:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
																	"nativeSrc": "1804:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "1804:88:10"
																},
																"nativeSrc": "1804:93:10",
																"nodeType": "YulFunctionCall",
																"src": "1804:93:10"
															},
															"nativeSrc": "1804:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "1804:93:10"
														},
														{
															"nativeSrc": "1906:19:10",
															"nodeType": "YulAssignment",
															"src": "1906:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1917:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1917:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1922:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1922:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1913:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1913:3:10"
																},
																"nativeSrc": "1913:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1913:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1906:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1906:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1565:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1699:3:10",
														"nodeType": "YulTypedName",
														"src": "1699:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1707:3:10",
														"nodeType": "YulTypedName",
														"src": "1707:3:10",
														"type": ""
													}
												],
												"src": "1565:366:10"
											},
											{
												"body": {
													"nativeSrc": "2108:248:10",
													"nodeType": "YulBlock",
													"src": "2108:248:10",
													"statements": [
														{
															"nativeSrc": "2118:26:10",
															"nodeType": "YulAssignment",
															"src": "2118:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2130:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2130:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2141:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2141:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2126:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2126:3:10"
																},
																"nativeSrc": "2126:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2126:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2118:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2118:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2165:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2165:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2176:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2176:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2161:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2161:3:10"
																		},
																		"nativeSrc": "2161:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2161:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2184:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2184:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2190:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2190:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2180:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2180:3:10"
																		},
																		"nativeSrc": "2180:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2180:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2154:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2154:6:10"
																},
																"nativeSrc": "2154:47:10",
																"nodeType": "YulFunctionCall",
																"src": "2154:47:10"
															},
															"nativeSrc": "2154:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "2154:47:10"
														},
														{
															"nativeSrc": "2210:139:10",
															"nodeType": "YulAssignment",
															"src": "2210:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2344:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2344:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2218:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "2218:124:10"
																},
																"nativeSrc": "2218:131:10",
																"nodeType": "YulFunctionCall",
																"src": "2218:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2210:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2210:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1937:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2088:9:10",
														"nodeType": "YulTypedName",
														"src": "2088:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2103:4:10",
														"nodeType": "YulTypedName",
														"src": "2103:4:10",
														"type": ""
													}
												],
												"src": "1937:419:10"
											},
											{
												"body": {
													"nativeSrc": "2468:72:10",
													"nodeType": "YulBlock",
													"src": "2468:72:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2490:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2490:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2498:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2498:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2486:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2486:3:10"
																		},
																		"nativeSrc": "2486:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2486:14:10"
																	},
																	{
																		"hexValue": "4469726563746f7279206d757374206265206120636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "2502:30:10",
																		"nodeType": "YulLiteral",
																		"src": "2502:30:10",
																		"type": "",
																		"value": "Directory must be a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2479:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2479:6:10"
																},
																"nativeSrc": "2479:54:10",
																"nodeType": "YulFunctionCall",
																"src": "2479:54:10"
															},
															"nativeSrc": "2479:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "2479:54:10"
														}
													]
												},
												"name": "store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
												"nativeSrc": "2362:178:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2460:6:10",
														"nodeType": "YulTypedName",
														"src": "2460:6:10",
														"type": ""
													}
												],
												"src": "2362:178:10"
											},
											{
												"body": {
													"nativeSrc": "2692:220:10",
													"nodeType": "YulBlock",
													"src": "2692:220:10",
													"statements": [
														{
															"nativeSrc": "2702:74:10",
															"nodeType": "YulAssignment",
															"src": "2702:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2768:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2768:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2773:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2773:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2709:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "2709:58:10"
																},
																"nativeSrc": "2709:67:10",
																"nodeType": "YulFunctionCall",
																"src": "2709:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2702:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2702:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2874:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2874:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
																	"nativeSrc": "2785:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "2785:88:10"
																},
																"nativeSrc": "2785:93:10",
																"nodeType": "YulFunctionCall",
																"src": "2785:93:10"
															},
															"nativeSrc": "2785:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "2785:93:10"
														},
														{
															"nativeSrc": "2887:19:10",
															"nodeType": "YulAssignment",
															"src": "2887:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2898:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2898:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2903:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2903:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2894:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2894:3:10"
																},
																"nativeSrc": "2894:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2894:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2887:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2887:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2546:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2680:3:10",
														"nodeType": "YulTypedName",
														"src": "2680:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2688:3:10",
														"nodeType": "YulTypedName",
														"src": "2688:3:10",
														"type": ""
													}
												],
												"src": "2546:366:10"
											},
											{
												"body": {
													"nativeSrc": "3089:248:10",
													"nodeType": "YulBlock",
													"src": "3089:248:10",
													"statements": [
														{
															"nativeSrc": "3099:26:10",
															"nodeType": "YulAssignment",
															"src": "3099:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3111:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3122:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3107:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:10"
																},
																"nativeSrc": "3107:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3107:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3099:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3146:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3146:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3157:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3157:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3142:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3142:3:10"
																		},
																		"nativeSrc": "3142:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3142:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3165:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "3165:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3171:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3171:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3161:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3161:3:10"
																		},
																		"nativeSrc": "3161:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3161:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3135:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3135:6:10"
																},
																"nativeSrc": "3135:47:10",
																"nodeType": "YulFunctionCall",
																"src": "3135:47:10"
															},
															"nativeSrc": "3135:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "3135:47:10"
														},
														{
															"nativeSrc": "3191:139:10",
															"nodeType": "YulAssignment",
															"src": "3191:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3325:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3325:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3199:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "3199:124:10"
																},
																"nativeSrc": "3199:131:10",
																"nodeType": "YulFunctionCall",
																"src": "3199:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3191:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3191:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2918:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3069:9:10",
														"nodeType": "YulTypedName",
														"src": "3069:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3084:4:10",
														"nodeType": "YulTypedName",
														"src": "3084:4:10",
														"type": ""
													}
												],
												"src": "2918:419:10"
											},
											{
												"body": {
													"nativeSrc": "3449:125:10",
													"nodeType": "YulBlock",
													"src": "3449:125:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3471:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3471:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3479:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3479:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3467:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3467:3:10"
																		},
																		"nativeSrc": "3467:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3467:14:10"
																	},
																	{
																		"hexValue": "4469726563746f7279206164647265737320646f6573206e6f7420696d706c65",
																		"kind": "string",
																		"nativeSrc": "3483:34:10",
																		"nodeType": "YulLiteral",
																		"src": "3483:34:10",
																		"type": "",
																		"value": "Directory address does not imple"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3460:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3460:6:10"
																},
																"nativeSrc": "3460:58:10",
																"nodeType": "YulFunctionCall",
																"src": "3460:58:10"
															},
															"nativeSrc": "3460:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "3460:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3539:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3539:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3547:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3547:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3535:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3535:3:10"
																		},
																		"nativeSrc": "3535:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3535:15:10"
																	},
																	{
																		"hexValue": "6d656e74206f776e65722829",
																		"kind": "string",
																		"nativeSrc": "3552:14:10",
																		"nodeType": "YulLiteral",
																		"src": "3552:14:10",
																		"type": "",
																		"value": "ment owner()"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3528:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3528:6:10"
																},
																"nativeSrc": "3528:39:10",
																"nodeType": "YulFunctionCall",
																"src": "3528:39:10"
															},
															"nativeSrc": "3528:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "3528:39:10"
														}
													]
												},
												"name": "store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
												"nativeSrc": "3343:231:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3441:6:10",
														"nodeType": "YulTypedName",
														"src": "3441:6:10",
														"type": ""
													}
												],
												"src": "3343:231:10"
											},
											{
												"body": {
													"nativeSrc": "3726:220:10",
													"nodeType": "YulBlock",
													"src": "3726:220:10",
													"statements": [
														{
															"nativeSrc": "3736:74:10",
															"nodeType": "YulAssignment",
															"src": "3736:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3802:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3802:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3807:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3807:2:10",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3743:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "3743:58:10"
																},
																"nativeSrc": "3743:67:10",
																"nodeType": "YulFunctionCall",
																"src": "3743:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3736:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3736:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3908:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3908:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
																	"nativeSrc": "3819:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "3819:88:10"
																},
																"nativeSrc": "3819:93:10",
																"nodeType": "YulFunctionCall",
																"src": "3819:93:10"
															},
															"nativeSrc": "3819:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "3819:93:10"
														},
														{
															"nativeSrc": "3921:19:10",
															"nodeType": "YulAssignment",
															"src": "3921:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3932:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3932:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3937:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3937:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3928:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3928:3:10"
																},
																"nativeSrc": "3928:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3928:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3921:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3921:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3580:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3714:3:10",
														"nodeType": "YulTypedName",
														"src": "3714:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3722:3:10",
														"nodeType": "YulTypedName",
														"src": "3722:3:10",
														"type": ""
													}
												],
												"src": "3580:366:10"
											},
											{
												"body": {
													"nativeSrc": "4123:248:10",
													"nodeType": "YulBlock",
													"src": "4123:248:10",
													"statements": [
														{
															"nativeSrc": "4133:26:10",
															"nodeType": "YulAssignment",
															"src": "4133:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4145:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4145:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4156:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4156:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4141:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4141:3:10"
																},
																"nativeSrc": "4141:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4141:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4133:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4133:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4180:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4180:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4191:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4191:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4176:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4176:3:10"
																		},
																		"nativeSrc": "4176:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4176:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4199:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4199:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4205:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4205:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4195:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4195:3:10"
																		},
																		"nativeSrc": "4195:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4195:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4169:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4169:6:10"
																},
																"nativeSrc": "4169:47:10",
																"nodeType": "YulFunctionCall",
																"src": "4169:47:10"
															},
															"nativeSrc": "4169:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "4169:47:10"
														},
														{
															"nativeSrc": "4225:139:10",
															"nodeType": "YulAssignment",
															"src": "4225:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4359:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4359:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4233:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "4233:124:10"
																},
																"nativeSrc": "4233:131:10",
																"nodeType": "YulFunctionCall",
																"src": "4233:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4225:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4225:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3952:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4103:9:10",
														"nodeType": "YulTypedName",
														"src": "4103:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4118:4:10",
														"nodeType": "YulTypedName",
														"src": "4118:4:10",
														"type": ""
													}
												],
												"src": "3952:419:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory cannot be zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory must be a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory address does not imple\")\n\n        mstore(add(memPtr, 32), \"ment owner()\")\n\n    }\n\n    function abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060405161273038038061273083398181016040528101906100319190610257565b806100418161004860201b60201c565b50506103f0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ad906102dc565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff163b1161010f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010690610344565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561017757506040513d601f19601f820116820180604052508101906101749190610257565b60015b6101b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ad906103d2565b60405180910390fd5b815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610226826101fd565b9050919050565b6102368161021c565b8114610240575f5ffd5b50565b5f815190506102518161022d565b92915050565b5f6020828403121561026c5761026b6101f9565b5b5f61027984828501610243565b91505092915050565b5f82825260208201905092915050565b7f4469726563746f72792063616e6e6f74206265207a65726f20616464726573735f82015250565b5f6102c6602083610282565b91506102d182610292565b602082019050919050565b5f6020820190508181035f8301526102f3816102ba565b9050919050565b7f4469726563746f7279206d757374206265206120636f6e7472616374000000005f82015250565b5f61032e601c83610282565b9150610339826102fa565b602082019050919050565b5f6020820190508181035f83015261035b81610322565b9050919050565b7f4469726563746f7279206164647265737320646f6573206e6f7420696d706c655f8201527f6d656e74206f776e657228290000000000000000000000000000000000000000602082015250565b5f6103bc602c83610282565b91506103c782610362565b604082019050919050565b5f6020820190508181035f8301526103e9816103b0565b9050919050565b612333806103fd5f395ff3fe608060405234801561000f575f5ffd5b50600436106100fe575f3560e01c8063658a847a116100955780639dc29fac116100645780639dc29fac146102ae578063a9059cbb146102ca578063ba4c7be1146102fa578063dd62ed3e14610316576100fe565b8063658a847a1461022457806370a08231146102425780638da5cb5b1461027257806395d89b4114610290576100fe565b806323b872dd116100d157806323b872dd1461018a57806327262618146101ba578063313ce567146101ea57806340c10f1914610208576100fe565b806306fdde0314610102578063077f224a14610120578063095ea7b31461013c57806318160ddd1461016c575b5f5ffd5b61010a610346565b60405161011791906116cd565b60405180910390f35b61013a60048036038101906101359190611884565b6103e4565b005b6101566004803603810190610151919061193f565b6105da565b6040516101639190611997565b60405180910390f35b6101746105fc565b60405161018191906119bf565b60405180910390f35b6101a4600480360381019061019f91906119d8565b610613565b6040516101b19190611997565b60405180910390f35b6101d460048036038101906101cf9190611a28565b610641565b6040516101e19190611a7e565b60405180910390f35b6101f26106e1565b6040516101ff9190611ab2565b60405180910390f35b610222600480360381019061021d919061193f565b6106e9565b005b61022c6107a2565b6040516102399190611b26565b60405180910390f35b61025c60048036038101906102579190611b3f565b6107c6565b60405161026991906119bf565b60405180910390f35b61027a610819565b6040516102879190611a7e565b60405180910390f35b6102986108ac565b6040516102a591906116cd565b60405180910390f35b6102c860048036038101906102c3919061193f565b61094a565b005b6102e460048036038101906102df919061193f565b610a03565b6040516102f19190611997565b60405180910390f35b610314600480360381019061030f9190611b3f565b610a25565b005b610330600480360381019061032b9190611b6a565b610b2b565b60405161033d91906119bf565b60405180910390f35b60605f610351610bbb565b905080600301805461036290611bd5565b80601f016020809104026020016040519081016040528092919081815260200182805461038e90611bd5565b80156103d95780601f106103b0576101008083540402835291602001916103d9565b820191905f5260205f20905b8154815290600101906020018083116103bc57829003601f168201915b505050505091505090565b5f6103ed610be2565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff161480156104355750825b90505f60018367ffffffffffffffff1614801561046857505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610476575080155b156104ad576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156104fa576001855f0160086101000a81548160ff0219169083151502179055505b5f60149054906101000a900460ff1615610549576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054090611c4f565b60405180910390fd5b60015f60146101000a81548160ff02191690831515021790555061056c86610bf5565b6105768888610da6565b83156105d0575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516105c79190611cb9565b60405180910390a15b5050505050505050565b5f5f6105e4610dbc565b90506105f1818585610dc3565b600191505092915050565b5f5f610606610bbb565b9050806002015491505090565b5f5f61061d610dbc565b905061062a858285610dd5565b610635858585610e68565b60019150509392505050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327262618836040518263ffffffff1660e01b815260040161069b91906116cd565b602060405180830381865afa1580156106b6573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106da9190611ce6565b9050919050565b5f6012905090565b6107276040518060400160405280600a81526020017f6574662d726f7574657200000000000000000000000000000000000000000000815250610641565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610794576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078b90611d5b565b60405180910390fd5b61079e8282610f58565b5050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f6107d0610bbb565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610883573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108a79190611ce6565b905090565b60605f6108b7610bbb565b90508060040180546108c890611bd5565b80601f01602080910402602001604051908101604052809291908181526020018280546108f490611bd5565b801561093f5780601f106109165761010080835404028352916020019161093f565b820191905f5260205f20905b81548152906001019060200180831161092257829003601f168201915b505050505091505090565b6109886040518060400160405280600a81526020017f6574662d726f7574657200000000000000000000000000000000000000000000815250610641565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ec90611d5b565b60405180910390fd5b6109ff8282610fd7565b5050565b5f5f610a0d610dbc565b9050610a1a818585610e68565b600191505092915050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a8e573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ab29190611ce6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1690611dc3565b60405180910390fd5b610b2881610bf5565b50565b5f5f610b35610bbb565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f5f610bec611056565b90508091505090565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5a90611e2b565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff163b11610cbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb390611e93565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d2457506040513d601f19601f82011682018060405250810190610d219190611ce6565b60015b610d63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5a90611f21565b60405180910390fd5b815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b610dae61107f565b610db882826110bf565b5050565b5f33905090565b610dd083838360016110fb565b505050565b5f610de08484610b2b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610e625781811015610e53578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610e4a93929190611f3f565b60405180910390fd5b610e6184848484035f6110fb565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ed8575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ecf9190611a7e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f48575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f3f9190611a7e565b60405180910390fd5b610f538383836112d8565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fc8575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610fbf9190611a7e565b60405180910390fd5b610fd35f83836112d8565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611047575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161103e9190611a7e565b60405180910390fd5b611052825f836112d8565b5050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b6110876113cc565b6110bd576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6110c761107f565b5f6110d0610bbb565b9050828160030190816110e3919061210b565b50818160040190816110f5919061210b565b50505050565b5f611104610bbb565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611176575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161116d9190611a7e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036111e6575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016111dd9190611a7e565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555081156112d1578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516112c891906119bf565b60405180910390a35b5050505050565b6112e38383836113ea565b5f6112ec611619565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361135c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113539061224a565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a6d49dca8585856040518463ffffffff1660e01b815260040161139993929190612268565b5f604051808303815f87803b1580156113b0575f5ffd5b505af11580156113c2573d5f5f3e3d5ffd5b5050505050505050565b5f6113d5610be2565b5f0160089054906101000a900460ff16905090565b5f6113f3610bbb565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036114475781816002015f82825461143b91906122ca565b92505081905550611519565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050828110156114d2578481846040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016114c993929190611f3f565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115625781816002015f82825403925050819055506115ae565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161160b91906119bf565b60405180910390a350505050565b5f6116586040518060400160405280601081526020017f6574662d746f6b656e2d6576656e747300000000000000000000000000000000815250610641565b905090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61169f8261165d565b6116a98185611667565b93506116b9818560208601611677565b6116c281611685565b840191505092915050565b5f6020820190508181035f8301526116e58184611695565b905092915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61173c82611685565b810181811067ffffffffffffffff8211171561175b5761175a611706565b5b80604052505050565b5f61176d6116ed565b90506117798282611733565b919050565b5f67ffffffffffffffff82111561179857611797611706565b5b6117a182611685565b9050602081019050919050565b828183375f83830152505050565b5f6117ce6117c98461177e565b611764565b9050828152602081018484840111156117ea576117e9611702565b5b6117f58482856117ae565b509392505050565b5f82601f830112611811576118106116fe565b5b81356118218482602086016117bc565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6118538261182a565b9050919050565b61186381611849565b811461186d575f5ffd5b50565b5f8135905061187e8161185a565b92915050565b5f5f5f6060848603121561189b5761189a6116f6565b5b5f84013567ffffffffffffffff8111156118b8576118b76116fa565b5b6118c4868287016117fd565b935050602084013567ffffffffffffffff8111156118e5576118e46116fa565b5b6118f1868287016117fd565b925050604061190286828701611870565b9150509250925092565b5f819050919050565b61191e8161190c565b8114611928575f5ffd5b50565b5f8135905061193981611915565b92915050565b5f5f60408385031215611955576119546116f6565b5b5f61196285828601611870565b92505060206119738582860161192b565b9150509250929050565b5f8115159050919050565b6119918161197d565b82525050565b5f6020820190506119aa5f830184611988565b92915050565b6119b98161190c565b82525050565b5f6020820190506119d25f8301846119b0565b92915050565b5f5f5f606084860312156119ef576119ee6116f6565b5b5f6119fc86828701611870565b9350506020611a0d86828701611870565b9250506040611a1e8682870161192b565b9150509250925092565b5f60208284031215611a3d57611a3c6116f6565b5b5f82013567ffffffffffffffff811115611a5a57611a596116fa565b5b611a66848285016117fd565b91505092915050565b611a7881611849565b82525050565b5f602082019050611a915f830184611a6f565b92915050565b5f60ff82169050919050565b611aac81611a97565b82525050565b5f602082019050611ac55f830184611aa3565b92915050565b5f819050919050565b5f611aee611ae9611ae48461182a565b611acb565b61182a565b9050919050565b5f611aff82611ad4565b9050919050565b5f611b1082611af5565b9050919050565b611b2081611b06565b82525050565b5f602082019050611b395f830184611b17565b92915050565b5f60208284031215611b5457611b536116f6565b5b5f611b6184828501611870565b91505092915050565b5f5f60408385031215611b8057611b7f6116f6565b5b5f611b8d85828601611870565b9250506020611b9e85828601611870565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611bec57607f821691505b602082108103611bff57611bfe611ba8565b5b50919050565b7f457466546f6b656e3a20616c726561647920696e697469616c697a65640000005f82015250565b5f611c39601d83611667565b9150611c4482611c05565b602082019050919050565b5f6020820190508181035f830152611c6681611c2d565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f611ca3611c9e611c9984611c6d565b611acb565b611c76565b9050919050565b611cb381611c89565b82525050565b5f602082019050611ccc5f830184611caa565b92915050565b5f81519050611ce08161185a565b92915050565b5f60208284031215611cfb57611cfa6116f6565b5b5f611d0884828501611cd2565b91505092915050565b7f6d73672e73656e646572206973206e6f742065746620726f75746572000000005f82015250565b5f611d45601c83611667565b9150611d5082611d11565b602082019050919050565b5f6020820190508181035f830152611d7281611d39565b9050919050565b7f43616c6c6572206973206e6f7420746865206f776e65720000000000000000005f82015250565b5f611dad601783611667565b9150611db882611d79565b602082019050919050565b5f6020820190508181035f830152611dda81611da1565b9050919050565b7f4469726563746f72792063616e6e6f74206265207a65726f20616464726573735f82015250565b5f611e15602083611667565b9150611e2082611de1565b602082019050919050565b5f6020820190508181035f830152611e4281611e09565b9050919050565b7f4469726563746f7279206d757374206265206120636f6e7472616374000000005f82015250565b5f611e7d601c83611667565b9150611e8882611e49565b602082019050919050565b5f6020820190508181035f830152611eaa81611e71565b9050919050565b7f4469726563746f7279206164647265737320646f6573206e6f7420696d706c655f8201527f6d656e74206f776e657228290000000000000000000000000000000000000000602082015250565b5f611f0b602c83611667565b9150611f1682611eb1565b604082019050919050565b5f6020820190508181035f830152611f3881611eff565b9050919050565b5f606082019050611f525f830186611a6f565b611f5f60208301856119b0565b611f6c60408301846119b0565b949350505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611fd07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611f95565b611fda8683611f95565b95508019841693508086168417925050509392505050565b5f61200c6120076120028461190c565b611acb565b61190c565b9050919050565b5f819050919050565b61202583611ff2565b61203961203182612013565b848454611fa1565b825550505050565b5f5f905090565b612050612041565b61205b81848461201c565b505050565b5b8181101561207e576120735f82612048565b600181019050612061565b5050565b601f8211156120c35761209481611f74565b61209d84611f86565b810160208510156120ac578190505b6120c06120b885611f86565b830182612060565b50505b505050565b5f82821c905092915050565b5f6120e35f19846008026120c8565b1980831691505092915050565b5f6120fb83836120d4565b9150826002028217905092915050565b6121148261165d565b67ffffffffffffffff81111561212d5761212c611706565b5b6121378254611bd5565b612142828285612082565b5f60209050601f831160018114612173575f8415612161578287015190505b61216b85826120f0565b8655506121d2565b601f19841661218186611f74565b5f5b828110156121a857848901518255600182019150602085019450602081019050612183565b868310156121c557848901516121c1601f8916826120d4565b8355505b6001600288020188555050505b505050505050565b7f457466546f6b656e3a206576656e747320636f6e7472616374206e6f742073655f8201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b5f612234602183611667565b915061223f826121da565b604082019050919050565b5f6020820190508181035f83015261226181612228565b9050919050565b5f60608201905061227b5f830186611a6f565b6122886020830185611a6f565b61229560408301846119b0565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6122d48261190c565b91506122df8361190c565b92508282019050808211156122f7576122f661229d565b5b9291505056fea2646970667358221220696e2c55b17b340ef90c4b351328c7bdf32c6147dbe630745a456d067801f38d64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2730 CODESIZE SUB DUP1 PUSH2 0x2730 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x257 JUMP JUMPDEST DUP1 PUSH2 0x41 DUP2 PUSH2 0x48 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x3F0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD SWAP1 PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT PUSH2 0x10F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP1 PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x177 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x257 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD SWAP1 PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x226 DUP3 PUSH2 0x1FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x236 DUP2 PUSH2 0x21C JUMP JUMPDEST DUP2 EQ PUSH2 0x240 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x251 DUP2 PUSH2 0x22D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26C JUMPI PUSH2 0x26B PUSH2 0x1F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x279 DUP5 DUP3 DUP6 ADD PUSH2 0x243 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4469726563746F72792063616E6E6F74206265207A65726F2061646472657373 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C6 PUSH1 0x20 DUP4 PUSH2 0x282 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D1 DUP3 PUSH2 0x292 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F3 DUP2 PUSH2 0x2BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206D757374206265206120636F6E747261637400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x32E PUSH1 0x1C DUP4 PUSH2 0x282 JUMP JUMPDEST SWAP2 POP PUSH2 0x339 DUP3 PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x35B DUP2 PUSH2 0x322 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206164647265737320646F6573206E6F7420696D706C65 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D656E74206F776E657228290000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3BC PUSH1 0x2C DUP4 PUSH2 0x282 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C7 DUP3 PUSH2 0x362 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3E9 DUP2 PUSH2 0x3B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2333 DUP1 PUSH2 0x3FD PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x658A847A GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xBA4C7BE1 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x316 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x658A847A EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x290 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x27262618 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x208 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x77F224A EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x346 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x1884 JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x19D8 JUMP JUMPDEST PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH2 0x641 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F2 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1AB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22C PUSH2 0x7A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x1B3F JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x1B3F JUMP JUMPDEST PUSH2 0xA25 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x351 PUSH2 0xBBB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x362 SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38E SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3ED PUSH2 0xBE2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x435 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x468 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x476 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x4FA JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x549 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x540 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x56C DUP7 PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0x576 DUP9 DUP9 PUSH2 0xDA6 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x5D0 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x1CB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5E4 PUSH2 0xDBC JUMP JUMPDEST SWAP1 POP PUSH2 0x5F1 DUP2 DUP6 DUP6 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x606 PUSH2 0xBBB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x61D PUSH2 0xDBC JUMP JUMPDEST SWAP1 POP PUSH2 0x62A DUP6 DUP3 DUP6 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x635 DUP6 DUP6 DUP6 PUSH2 0xE68 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x27262618 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69B SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6DA SWAP2 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x727 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6574662D726F7574657200000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x641 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x794 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78B SWAP1 PUSH2 0x1D5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x79E DUP3 DUP3 PUSH2 0xF58 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7D0 PUSH2 0xBBB JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x883 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A7 SWAP2 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x8B7 PUSH2 0xBBB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x8C8 SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8F4 SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x93F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x916 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x93F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x922 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x988 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6574662D726F7574657200000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x641 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EC SWAP1 PUSH2 0x1D5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9FF DUP3 DUP3 PUSH2 0xFD7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xA0D PUSH2 0xDBC JUMP JUMPDEST SWAP1 POP PUSH2 0xA1A DUP2 DUP6 DUP6 PUSH2 0xE68 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA8E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAB2 SWAP2 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB16 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB28 DUP2 PUSH2 0xBF5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xB35 PUSH2 0xBBB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xBEC PUSH2 0x1056 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5A SWAP1 PUSH2 0x1E2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT PUSH2 0xCBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB3 SWAP1 PUSH2 0x1E93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD24 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD21 SWAP2 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5A SWAP1 PUSH2 0x1F21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xDAE PUSH2 0x107F JUMP JUMPDEST PUSH2 0xDB8 DUP3 DUP3 PUSH2 0x10BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDD0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x10FB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDE0 DUP5 DUP5 PUSH2 0xB2B JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xE62 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE53 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE61 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x10FB JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xED8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECF SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF48 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3F SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF53 DUP4 DUP4 DUP4 PUSH2 0x12D8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFC8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBF SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD3 PUSH0 DUP4 DUP4 PUSH2 0x12D8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1047 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103E SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1052 DUP3 PUSH0 DUP4 PUSH2 0x12D8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1087 PUSH2 0x13CC JUMP JUMPDEST PUSH2 0x10BD JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x10C7 PUSH2 0x107F JUMP JUMPDEST PUSH0 PUSH2 0x10D0 PUSH2 0xBBB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x10E3 SWAP2 SWAP1 PUSH2 0x210B JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x10F5 SWAP2 SWAP1 PUSH2 0x210B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1104 PUSH2 0xBBB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1176 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116D SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11E6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DD SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x12D1 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x12C8 SWAP2 SWAP1 PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x12E3 DUP4 DUP4 DUP4 PUSH2 0x13EA JUMP JUMPDEST PUSH0 PUSH2 0x12EC PUSH2 0x1619 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x135C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1353 SWAP1 PUSH2 0x224A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA6D49DCA DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1399 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2268 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13C2 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13D5 PUSH2 0xBE2 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x13F3 PUSH2 0xBBB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1447 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x143B SWAP2 SWAP1 PUSH2 0x22CA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1519 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x14D2 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1562 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x15AE JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x160B SWAP2 SWAP1 PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1658 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6574662D746F6B656E2D6576656E747300000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x641 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x169F DUP3 PUSH2 0x165D JUMP JUMPDEST PUSH2 0x16A9 DUP2 DUP6 PUSH2 0x1667 JUMP JUMPDEST SWAP4 POP PUSH2 0x16B9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x16C2 DUP2 PUSH2 0x1685 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16E5 DUP2 DUP5 PUSH2 0x1695 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x173C DUP3 PUSH2 0x1685 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x175B JUMPI PUSH2 0x175A PUSH2 0x1706 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x176D PUSH2 0x16ED JUMP JUMPDEST SWAP1 POP PUSH2 0x1779 DUP3 DUP3 PUSH2 0x1733 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1798 JUMPI PUSH2 0x1797 PUSH2 0x1706 JUMP JUMPDEST JUMPDEST PUSH2 0x17A1 DUP3 PUSH2 0x1685 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17CE PUSH2 0x17C9 DUP5 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x1764 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x17EA JUMPI PUSH2 0x17E9 PUSH2 0x1702 JUMP JUMPDEST JUMPDEST PUSH2 0x17F5 DUP5 DUP3 DUP6 PUSH2 0x17AE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1811 JUMPI PUSH2 0x1810 PUSH2 0x16FE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1821 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1853 DUP3 PUSH2 0x182A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1863 DUP2 PUSH2 0x1849 JUMP JUMPDEST DUP2 EQ PUSH2 0x186D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x187E DUP2 PUSH2 0x185A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x189B JUMPI PUSH2 0x189A PUSH2 0x16F6 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18B8 JUMPI PUSH2 0x18B7 PUSH2 0x16FA JUMP JUMPDEST JUMPDEST PUSH2 0x18C4 DUP7 DUP3 DUP8 ADD PUSH2 0x17FD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18E5 JUMPI PUSH2 0x18E4 PUSH2 0x16FA JUMP JUMPDEST JUMPDEST PUSH2 0x18F1 DUP7 DUP3 DUP8 ADD PUSH2 0x17FD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1902 DUP7 DUP3 DUP8 ADD PUSH2 0x1870 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x191E DUP2 PUSH2 0x190C JUMP JUMPDEST DUP2 EQ PUSH2 0x1928 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1939 DUP2 PUSH2 0x1915 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1955 JUMPI PUSH2 0x1954 PUSH2 0x16F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1962 DUP6 DUP3 DUP7 ADD PUSH2 0x1870 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1973 DUP6 DUP3 DUP7 ADD PUSH2 0x192B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1991 DUP2 PUSH2 0x197D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19AA PUSH0 DUP4 ADD DUP5 PUSH2 0x1988 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19B9 DUP2 PUSH2 0x190C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19D2 PUSH0 DUP4 ADD DUP5 PUSH2 0x19B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19EF JUMPI PUSH2 0x19EE PUSH2 0x16F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19FC DUP7 DUP3 DUP8 ADD PUSH2 0x1870 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A0D DUP7 DUP3 DUP8 ADD PUSH2 0x1870 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A1E DUP7 DUP3 DUP8 ADD PUSH2 0x192B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A3D JUMPI PUSH2 0x1A3C PUSH2 0x16F6 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A5A JUMPI PUSH2 0x1A59 PUSH2 0x16FA JUMP JUMPDEST JUMPDEST PUSH2 0x1A66 DUP5 DUP3 DUP6 ADD PUSH2 0x17FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A78 DUP2 PUSH2 0x1849 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A91 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AAC DUP2 PUSH2 0x1A97 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AC5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AEE PUSH2 0x1AE9 PUSH2 0x1AE4 DUP5 PUSH2 0x182A JUMP JUMPDEST PUSH2 0x1ACB JUMP JUMPDEST PUSH2 0x182A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AFF DUP3 PUSH2 0x1AD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B10 DUP3 PUSH2 0x1AF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B20 DUP2 PUSH2 0x1B06 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B39 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B54 JUMPI PUSH2 0x1B53 PUSH2 0x16F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B61 DUP5 DUP3 DUP6 ADD PUSH2 0x1870 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B80 JUMPI PUSH2 0x1B7F PUSH2 0x16F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B8D DUP6 DUP3 DUP7 ADD PUSH2 0x1870 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B9E DUP6 DUP3 DUP7 ADD PUSH2 0x1870 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1BEC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1BFF JUMPI PUSH2 0x1BFE PUSH2 0x1BA8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x457466546F6B656E3A20616C726561647920696E697469616C697A6564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C39 PUSH1 0x1D DUP4 PUSH2 0x1667 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C44 DUP3 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C66 DUP2 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CA3 PUSH2 0x1C9E PUSH2 0x1C99 DUP5 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0x1ACB JUMP JUMPDEST PUSH2 0x1C76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CB3 DUP2 PUSH2 0x1C89 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CCC PUSH0 DUP4 ADD DUP5 PUSH2 0x1CAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CE0 DUP2 PUSH2 0x185A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CFB JUMPI PUSH2 0x1CFA PUSH2 0x16F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D08 DUP5 DUP3 DUP6 ADD PUSH2 0x1CD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6D73672E73656E646572206973206E6F742065746620726F7574657200000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D45 PUSH1 0x1C DUP4 PUSH2 0x1667 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D50 DUP3 PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D72 DUP2 PUSH2 0x1D39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420746865206F776E6572000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DAD PUSH1 0x17 DUP4 PUSH2 0x1667 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DB8 DUP3 PUSH2 0x1D79 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DDA DUP2 PUSH2 0x1DA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F72792063616E6E6F74206265207A65726F2061646472657373 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E15 PUSH1 0x20 DUP4 PUSH2 0x1667 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E20 DUP3 PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E42 DUP2 PUSH2 0x1E09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206D757374206265206120636F6E747261637400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E7D PUSH1 0x1C DUP4 PUSH2 0x1667 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E88 DUP3 PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EAA DUP2 PUSH2 0x1E71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206164647265737320646F6573206E6F7420696D706C65 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D656E74206F776E657228290000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F0B PUSH1 0x2C DUP4 PUSH2 0x1667 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F16 DUP3 PUSH2 0x1EB1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F38 DUP2 PUSH2 0x1EFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F52 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x1F5F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19B0 JUMP JUMPDEST PUSH2 0x1F6C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19B0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1FD0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1F95 JUMP JUMPDEST PUSH2 0x1FDA DUP7 DUP4 PUSH2 0x1F95 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x200C PUSH2 0x2007 PUSH2 0x2002 DUP5 PUSH2 0x190C JUMP JUMPDEST PUSH2 0x1ACB JUMP JUMPDEST PUSH2 0x190C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2025 DUP4 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x2039 PUSH2 0x2031 DUP3 PUSH2 0x2013 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1FA1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2050 PUSH2 0x2041 JUMP JUMPDEST PUSH2 0x205B DUP2 DUP5 DUP5 PUSH2 0x201C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x207E JUMPI PUSH2 0x2073 PUSH0 DUP3 PUSH2 0x2048 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2061 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x20C3 JUMPI PUSH2 0x2094 DUP2 PUSH2 0x1F74 JUMP JUMPDEST PUSH2 0x209D DUP5 PUSH2 0x1F86 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x20AC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x20C0 PUSH2 0x20B8 DUP6 PUSH2 0x1F86 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2060 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20E3 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x20C8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20FB DUP4 DUP4 PUSH2 0x20D4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2114 DUP3 PUSH2 0x165D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x212D JUMPI PUSH2 0x212C PUSH2 0x1706 JUMP JUMPDEST JUMPDEST PUSH2 0x2137 DUP3 SLOAD PUSH2 0x1BD5 JUMP JUMPDEST PUSH2 0x2142 DUP3 DUP3 DUP6 PUSH2 0x2082 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2173 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2161 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x216B DUP6 DUP3 PUSH2 0x20F0 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x21D2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2181 DUP7 PUSH2 0x1F74 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x21A8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2183 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x21C5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x21C1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x20D4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x457466546F6B656E3A206576656E747320636F6E7472616374206E6F74207365 PUSH0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2234 PUSH1 0x21 DUP4 PUSH2 0x1667 JUMP JUMPDEST SWAP2 POP PUSH2 0x223F DUP3 PUSH2 0x21DA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2261 DUP2 PUSH2 0x2228 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x227B PUSH0 DUP4 ADD DUP7 PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x2288 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x2295 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19B0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x22D4 DUP3 PUSH2 0x190C JUMP JUMPDEST SWAP2 POP PUSH2 0x22DF DUP4 PUSH2 0x190C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22F7 JUMPI PUSH2 0x22F6 PUSH2 0x229D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x6E2C55B17B340EF90C4B CALLDATALOAD SGT 0x28 0xC7 0xBD RETURN 0x2C PUSH2 0x47DB DUPN 0x30 PUSH21 0x5A456D067801F38D64736F6C634300081E00330000 ",
							"sourceMap": "635:1743:9:-:0;;;913:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;957:10;412:25:6;426:10;412:13;;;:25;;:::i;:::-;370:94;913:215:9;635:1743;;589:461:6;681:1;659:24;;:10;:24;;;651:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;763:1;738:10;:22;;;:26;730:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;861:10;850:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;846:198;;979:54;;;;;;;;;;:::i;:::-;;;;;;;;846:198;936:10;913:9;;:34;;;;;;;;;;;;;;;;;;881:77;589:461;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:169::-;1286:11;1320:6;1315:3;1308:19;1360:4;1355:3;1351:14;1336:29;;1202:169;;;;:::o;1377:182::-;1517:34;1513:1;1505:6;1501:14;1494:58;1377:182;:::o;1565:366::-;1707:3;1728:67;1792:2;1787:3;1728:67;:::i;:::-;1721:74;;1804:93;1893:3;1804:93;:::i;:::-;1922:2;1917:3;1913:12;1906:19;;1565:366;;;:::o;1937:419::-;2103:4;2141:2;2130:9;2126:18;2118:26;;2190:9;2184:4;2180:20;2176:1;2165:9;2161:17;2154:47;2218:131;2344:4;2218:131;:::i;:::-;2210:139;;1937:419;;;:::o;2362:178::-;2502:30;2498:1;2490:6;2486:14;2479:54;2362:178;:::o;2546:366::-;2688:3;2709:67;2773:2;2768:3;2709:67;:::i;:::-;2702:74;;2785:93;2874:3;2785:93;:::i;:::-;2903:2;2898:3;2894:12;2887:19;;2546:366;;;:::o;2918:419::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3171:9;3165:4;3161:20;3157:1;3146:9;3142:17;3135:47;3199:131;3325:4;3199:131;:::i;:::-;3191:139;;2918:419;;;:::o;3343:231::-;3483:34;3479:1;3471:6;3467:14;3460:58;3552:14;3547:2;3539:6;3535:15;3528:39;3343:231;:::o;3580:366::-;3722:3;3743:67;3807:2;3802:3;3743:67;:::i;:::-;3736:74;;3819:93;3908:3;3819:93;:::i;:::-;3937:2;3932:3;3928:12;3921:19;;3580:366;;;:::o;3952:419::-;4118:4;4156:2;4145:9;4141:18;4133:26;;4205:9;4199:4;4195:20;4191:1;4180:9;4176:17;4169:47;4233:131;4359:4;4233:131;:::i;:::-;4225:139;;3952:419;;;:::o;635:1743:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Directory_1190": {
									"entryPoint": 1954,
									"id": 1190,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20_init_335": {
									"entryPoint": 3494,
									"id": 335,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_363": {
									"entryPoint": 4287,
									"id": 363,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_approve_767": {
									"entryPoint": 3523,
									"id": 767,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_835": {
									"entryPoint": 4347,
									"id": 835,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_749": {
									"entryPoint": 4055,
									"id": 749,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_175": {
									"entryPoint": 4223,
									"id": 175,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getERC20Storage_319": {
									"entryPoint": 3003,
									"id": 319,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_266": {
									"entryPoint": 3042,
									"id": 266,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_252": {
									"entryPoint": 4182,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_243": {
									"entryPoint": 5068,
									"id": 243,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_716": {
									"entryPoint": 3928,
									"id": 716,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_912": {
									"entryPoint": 3516,
									"id": 912,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setDirectory_1260": {
									"entryPoint": 3061,
									"id": 1260,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_883": {
									"entryPoint": 3541,
									"id": 883,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_591": {
									"entryPoint": 3688,
									"id": 591,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1502": {
									"entryPoint": 4824,
									"id": 1502,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_683": {
									"entryPoint": 5098,
									"id": 683,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_488": {
									"entryPoint": 2859,
									"id": 488,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_512": {
									"entryPoint": 1498,
									"id": 512,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_440": {
									"entryPoint": 1990,
									"id": 440,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1455": {
									"entryPoint": 2378,
									"id": 1455,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@changeDirectoryAddress_1212": {
									"entryPoint": 2597,
									"id": 1212,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_404": {
									"entryPoint": 1761,
									"id": 404,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@fetchFromDirectory_1297": {
									"entryPoint": 1601,
									"id": 1297,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getEtfTokenEvents_1360": {
									"entryPoint": 5657,
									"id": 1360,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_1423": {
									"entryPoint": 996,
									"id": 1423,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@mint_1439": {
									"entryPoint": 1769,
									"id": 1439,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_379": {
									"entryPoint": 838,
									"id": 379,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_1284": {
									"entryPoint": 2073,
									"id": 1284,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_395": {
									"entryPoint": 2220,
									"id": 395,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_420": {
									"entryPoint": 1532,
									"id": 420,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_544": {
									"entryPoint": 1555,
									"id": 544,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_464": {
									"entryPoint": 2563,
									"id": 464,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 6076,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 7378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 6141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 7398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 6696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address": {
									"entryPoint": 6276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IDirectory_$1187_to_t_address_fromStack": {
									"entryPoint": 6935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 7338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bff9b1557c542a233ca52157ba744ff1a697493bf85768f97d646bb53c3c3c45_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8808,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7999,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IDirectory_$1187__to_t_address__fromStack_reversed": {
									"entryPoint": 6950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 7353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bff9b1557c542a233ca52157ba744ff1a697493bf85768f97d646bb53c3c3c45__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5869,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 6014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 8052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 8322,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 6217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 7277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 7286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 8288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_IDirectory_$1187_to_t_address": {
									"entryPoint": 6918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 7305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 8459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6062,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5751,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 8432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 6859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 8404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8861,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7080,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5894,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5886,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5890,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5882,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5878,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 8392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33": {
									"entryPoint": 7545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679": {
									"entryPoint": 7753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758": {
									"entryPoint": 7649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af": {
									"entryPoint": 7857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9": {
									"entryPoint": 7441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bff9b1557c542a233ca52157ba744ff1a697493bf85768f97d646bb53c3c3c45": {
									"entryPoint": 7173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4": {
									"entryPoint": 8666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8097,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8220,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8257,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:24748:10",
										"nodeType": "YulBlock",
										"src": "0:24748:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:10",
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nativeSrc": "77:22:10",
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nativeSrc": "87:12:10",
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:10",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:10",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nativeSrc": "208:73:10",
													"nodeType": "YulBlock",
													"src": "208:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:10"
																},
																"nativeSrc": "218:19:10",
																"nodeType": "YulFunctionCall",
																"src": "218:19:10"
															},
															"nativeSrc": "218:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:10"
														},
														{
															"nativeSrc": "246:29:10",
															"nodeType": "YulAssignment",
															"src": "246:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:10",
																		"nodeType": "YulLiteral",
																		"src": "270:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:10"
																},
																"nativeSrc": "261:14:10",
																"nodeType": "YulFunctionCall",
																"src": "261:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:10",
														"nodeType": "YulTypedName",
														"src": "180:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:10",
														"nodeType": "YulTypedName",
														"src": "185:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:10",
														"nodeType": "YulTypedName",
														"src": "196:11:10",
														"type": ""
													}
												],
												"src": "112:169:10"
											},
											{
												"body": {
													"nativeSrc": "349:77:10",
													"nodeType": "YulBlock",
													"src": "349:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:10"
																},
																"nativeSrc": "360:23:10",
																"nodeType": "YulFunctionCall",
																"src": "360:23:10"
															},
															"nativeSrc": "360:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:10"
																		},
																		"nativeSrc": "399:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:10",
																		"nodeType": "YulLiteral",
																		"src": "417:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:10"
																},
																"nativeSrc": "392:27:10",
																"nodeType": "YulFunctionCall",
																"src": "392:27:10"
															},
															"nativeSrc": "392:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:10",
														"nodeType": "YulTypedName",
														"src": "331:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:10",
														"nodeType": "YulTypedName",
														"src": "336:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:10",
														"nodeType": "YulTypedName",
														"src": "341:6:10",
														"type": ""
													}
												],
												"src": "287:139:10"
											},
											{
												"body": {
													"nativeSrc": "480:54:10",
													"nodeType": "YulBlock",
													"src": "480:54:10",
													"statements": [
														{
															"nativeSrc": "490:38:10",
															"nodeType": "YulAssignment",
															"src": "490:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:10",
																				"nodeType": "YulLiteral",
																				"src": "515:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:10"
																		},
																		"nativeSrc": "504:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:10",
																				"nodeType": "YulLiteral",
																				"src": "524:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:10"
																		},
																		"nativeSrc": "520:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:10"
																},
																"nativeSrc": "500:28:10",
																"nodeType": "YulFunctionCall",
																"src": "500:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:10",
														"nodeType": "YulTypedName",
														"src": "463:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:10",
														"nodeType": "YulTypedName",
														"src": "473:6:10",
														"type": ""
													}
												],
												"src": "432:102:10"
											},
											{
												"body": {
													"nativeSrc": "632:285:10",
													"nodeType": "YulBlock",
													"src": "632:285:10",
													"statements": [
														{
															"nativeSrc": "642:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:10"
																},
																"nativeSrc": "656:39:10",
																"nodeType": "YulFunctionCall",
																"src": "656:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:10",
																	"nodeType": "YulTypedName",
																	"src": "646:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:10",
															"nodeType": "YulAssignment",
															"src": "704:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:10"
																},
																"nativeSrc": "711:71:10",
																"nodeType": "YulFunctionCall",
																"src": "711:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:10",
																				"nodeType": "YulLiteral",
																				"src": "837:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:10"
																		},
																		"nativeSrc": "826:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:10"
																},
																"nativeSrc": "791:65:10",
																"nodeType": "YulFunctionCall",
																"src": "791:65:10"
															},
															"nativeSrc": "791:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:10"
														},
														{
															"nativeSrc": "865:46:10",
															"nodeType": "YulAssignment",
															"src": "865:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:10"
																		},
																		"nativeSrc": "881:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:10"
																},
																"nativeSrc": "872:39:10",
																"nodeType": "YulFunctionCall",
																"src": "872:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:10",
														"nodeType": "YulTypedName",
														"src": "613:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:10",
														"nodeType": "YulTypedName",
														"src": "620:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:10",
														"nodeType": "YulTypedName",
														"src": "628:3:10",
														"type": ""
													}
												],
												"src": "540:377:10"
											},
											{
												"body": {
													"nativeSrc": "1041:195:10",
													"nodeType": "YulBlock",
													"src": "1041:195:10",
													"statements": [
														{
															"nativeSrc": "1051:26:10",
															"nodeType": "YulAssignment",
															"src": "1051:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:10"
																},
																"nativeSrc": "1059:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:10"
																		},
																		"nativeSrc": "1094:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:10"
																		},
																		"nativeSrc": "1113:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:10"
																},
																"nativeSrc": "1087:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:10"
															},
															"nativeSrc": "1087:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:10"
														},
														{
															"nativeSrc": "1143:86:10",
															"nodeType": "YulAssignment",
															"src": "1143:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:10"
																},
																"nativeSrc": "1151:78:10",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:10",
														"nodeType": "YulTypedName",
														"src": "1013:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:10",
														"nodeType": "YulTypedName",
														"src": "1025:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:10",
														"nodeType": "YulTypedName",
														"src": "1036:4:10",
														"type": ""
													}
												],
												"src": "923:313:10"
											},
											{
												"body": {
													"nativeSrc": "1282:35:10",
													"nodeType": "YulBlock",
													"src": "1282:35:10",
													"statements": [
														{
															"nativeSrc": "1292:19:10",
															"nodeType": "YulAssignment",
															"src": "1292:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:10"
																},
																"nativeSrc": "1302:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:10",
														"nodeType": "YulTypedName",
														"src": "1275:6:10",
														"type": ""
													}
												],
												"src": "1242:75:10"
											},
											{
												"body": {
													"nativeSrc": "1412:28:10",
													"nodeType": "YulBlock",
													"src": "1412:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:10"
																},
																"nativeSrc": "1422:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:10"
															},
															"nativeSrc": "1422:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:10"
											},
											{
												"body": {
													"nativeSrc": "1535:28:10",
													"nodeType": "YulBlock",
													"src": "1535:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:10"
																},
																"nativeSrc": "1545:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:10"
															},
															"nativeSrc": "1545:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:10"
											},
											{
												"body": {
													"nativeSrc": "1658:28:10",
													"nodeType": "YulBlock",
													"src": "1658:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1675:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1675:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1678:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1678:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1668:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:10"
																},
																"nativeSrc": "1668:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1668:12:10"
															},
															"nativeSrc": "1668:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1668:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1569:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1569:117:10"
											},
											{
												"body": {
													"nativeSrc": "1781:28:10",
													"nodeType": "YulBlock",
													"src": "1781:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1798:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1798:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1801:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1801:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1791:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1791:6:10"
																},
																"nativeSrc": "1791:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1791:12:10"
															},
															"nativeSrc": "1791:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1791:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "1692:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1692:117:10"
											},
											{
												"body": {
													"nativeSrc": "1843:152:10",
													"nodeType": "YulBlock",
													"src": "1843:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1860:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1860:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1863:77:10",
																		"nodeType": "YulLiteral",
																		"src": "1863:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:10"
																},
																"nativeSrc": "1853:88:10",
																"nodeType": "YulFunctionCall",
																"src": "1853:88:10"
															},
															"nativeSrc": "1853:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "1853:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1957:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1957:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1960:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1960:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1950:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1950:6:10"
																},
																"nativeSrc": "1950:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1950:15:10"
															},
															"nativeSrc": "1950:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1950:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1981:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1981:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1984:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1984:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1974:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1974:6:10"
																},
																"nativeSrc": "1974:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1974:15:10"
															},
															"nativeSrc": "1974:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1974:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1815:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1815:180:10"
											},
											{
												"body": {
													"nativeSrc": "2044:238:10",
													"nodeType": "YulBlock",
													"src": "2044:238:10",
													"statements": [
														{
															"nativeSrc": "2054:58:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2054:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2076:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2076:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "2106:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2106:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2084:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "2084:21:10"
																		},
																		"nativeSrc": "2084:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2084:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2072:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2072:3:10"
																},
																"nativeSrc": "2072:40:10",
																"nodeType": "YulFunctionCall",
																"src": "2072:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2058:10:10",
																	"nodeType": "YulTypedName",
																	"src": "2058:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2223:22:10",
																"nodeType": "YulBlock",
																"src": "2223:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2225:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "2225:16:10"
																			},
																			"nativeSrc": "2225:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2225:18:10"
																		},
																		"nativeSrc": "2225:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2225:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2166:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "2166:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2178:18:10",
																				"nodeType": "YulLiteral",
																				"src": "2178:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2163:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2163:2:10"
																		},
																		"nativeSrc": "2163:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2163:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2202:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "2202:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2214:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2214:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2199:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2199:2:10"
																		},
																		"nativeSrc": "2199:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2199:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2160:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2160:2:10"
																},
																"nativeSrc": "2160:62:10",
																"nodeType": "YulFunctionCall",
																"src": "2160:62:10"
															},
															"nativeSrc": "2157:88:10",
															"nodeType": "YulIf",
															"src": "2157:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2261:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2261:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2265:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "2265:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2254:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2254:6:10"
																},
																"nativeSrc": "2254:22:10",
																"nodeType": "YulFunctionCall",
																"src": "2254:22:10"
															},
															"nativeSrc": "2254:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "2254:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "2001:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2030:6:10",
														"nodeType": "YulTypedName",
														"src": "2030:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "2038:4:10",
														"nodeType": "YulTypedName",
														"src": "2038:4:10",
														"type": ""
													}
												],
												"src": "2001:281:10"
											},
											{
												"body": {
													"nativeSrc": "2329:88:10",
													"nodeType": "YulBlock",
													"src": "2329:88:10",
													"statements": [
														{
															"nativeSrc": "2339:30:10",
															"nodeType": "YulAssignment",
															"src": "2339:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "2349:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "2349:18:10"
																},
																"nativeSrc": "2349:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2349:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2339:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2339:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2398:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2398:6:10"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "2406:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2406:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "2378:19:10",
																	"nodeType": "YulIdentifier",
																	"src": "2378:19:10"
																},
																"nativeSrc": "2378:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2378:33:10"
															},
															"nativeSrc": "2378:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2378:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "2288:129:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "2313:4:10",
														"nodeType": "YulTypedName",
														"src": "2313:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2322:6:10",
														"nodeType": "YulTypedName",
														"src": "2322:6:10",
														"type": ""
													}
												],
												"src": "2288:129:10"
											},
											{
												"body": {
													"nativeSrc": "2490:241:10",
													"nodeType": "YulBlock",
													"src": "2490:241:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2595:22:10",
																"nodeType": "YulBlock",
																"src": "2595:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2597:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "2597:16:10"
																			},
																			"nativeSrc": "2597:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2597:18:10"
																		},
																		"nativeSrc": "2597:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2597:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2567:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2567:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2575:18:10",
																		"nodeType": "YulLiteral",
																		"src": "2575:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2564:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2564:2:10"
																},
																"nativeSrc": "2564:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2564:30:10"
															},
															"nativeSrc": "2561:56:10",
															"nodeType": "YulIf",
															"src": "2561:56:10"
														},
														{
															"nativeSrc": "2627:37:10",
															"nodeType": "YulAssignment",
															"src": "2627:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2657:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2657:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2635:21:10",
																	"nodeType": "YulIdentifier",
																	"src": "2635:21:10"
																},
																"nativeSrc": "2635:29:10",
																"nodeType": "YulFunctionCall",
																"src": "2635:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2627:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2627:4:10"
																}
															]
														},
														{
															"nativeSrc": "2701:23:10",
															"nodeType": "YulAssignment",
															"src": "2701:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2713:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2713:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2719:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2719:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2709:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2709:3:10"
																},
																"nativeSrc": "2709:15:10",
																"nodeType": "YulFunctionCall",
																"src": "2709:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2701:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2701:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "2423:308:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "2474:6:10",
														"nodeType": "YulTypedName",
														"src": "2474:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "2485:4:10",
														"nodeType": "YulTypedName",
														"src": "2485:4:10",
														"type": ""
													}
												],
												"src": "2423:308:10"
											},
											{
												"body": {
													"nativeSrc": "2801:84:10",
													"nodeType": "YulBlock",
													"src": "2801:84:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2825:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2825:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2830:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2830:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2835:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2835:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2812:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2812:12:10"
																},
																"nativeSrc": "2812:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2812:30:10"
															},
															"nativeSrc": "2812:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "2812:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2862:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2862:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2867:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2867:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2858:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2858:3:10"
																		},
																		"nativeSrc": "2858:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2858:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2876:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2876:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2851:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2851:6:10"
																},
																"nativeSrc": "2851:27:10",
																"nodeType": "YulFunctionCall",
																"src": "2851:27:10"
															},
															"nativeSrc": "2851:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "2851:27:10"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "2737:148:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2783:3:10",
														"nodeType": "YulTypedName",
														"src": "2783:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2788:3:10",
														"nodeType": "YulTypedName",
														"src": "2788:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2793:6:10",
														"nodeType": "YulTypedName",
														"src": "2793:6:10",
														"type": ""
													}
												],
												"src": "2737:148:10"
											},
											{
												"body": {
													"nativeSrc": "2975:341:10",
													"nodeType": "YulBlock",
													"src": "2975:341:10",
													"statements": [
														{
															"nativeSrc": "2985:75:10",
															"nodeType": "YulAssignment",
															"src": "2985:75:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3052:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3052:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "3010:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "3010:41:10"
																		},
																		"nativeSrc": "3010:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3010:49:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2994:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "2994:15:10"
																},
																"nativeSrc": "2994:66:10",
																"nodeType": "YulFunctionCall",
																"src": "2994:66:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2985:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2985:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3076:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3076:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3083:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3083:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3069:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:10"
																},
																"nativeSrc": "3069:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3069:21:10"
															},
															"nativeSrc": "3069:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "3069:21:10"
														},
														{
															"nativeSrc": "3099:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3099:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3114:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3114:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3121:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3121:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3110:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3110:3:10"
																},
																"nativeSrc": "3110:16:10",
																"nodeType": "YulFunctionCall",
																"src": "3110:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "3103:3:10",
																	"nodeType": "YulTypedName",
																	"src": "3103:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3164:83:10",
																"nodeType": "YulBlock",
																"src": "3164:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "3166:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3166:77:10"
																			},
																			"nativeSrc": "3166:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3166:79:10"
																		},
																		"nativeSrc": "3166:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3166:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "3145:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3145:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3150:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3150:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3141:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3141:3:10"
																		},
																		"nativeSrc": "3141:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3141:16:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3159:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3159:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3138:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3138:2:10"
																},
																"nativeSrc": "3138:25:10",
																"nodeType": "YulFunctionCall",
																"src": "3138:25:10"
															},
															"nativeSrc": "3135:112:10",
															"nodeType": "YulIf",
															"src": "3135:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3293:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3293:3:10"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "3298:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3298:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3303:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3303:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "3256:36:10",
																	"nodeType": "YulIdentifier",
																	"src": "3256:36:10"
																},
																"nativeSrc": "3256:54:10",
																"nodeType": "YulFunctionCall",
																"src": "3256:54:10"
															},
															"nativeSrc": "3256:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "3256:54:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "2891:425:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2948:3:10",
														"nodeType": "YulTypedName",
														"src": "2948:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2953:6:10",
														"nodeType": "YulTypedName",
														"src": "2953:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2961:3:10",
														"nodeType": "YulTypedName",
														"src": "2961:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2969:5:10",
														"nodeType": "YulTypedName",
														"src": "2969:5:10",
														"type": ""
													}
												],
												"src": "2891:425:10"
											},
											{
												"body": {
													"nativeSrc": "3398:278:10",
													"nodeType": "YulBlock",
													"src": "3398:278:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3447:83:10",
																"nodeType": "YulBlock",
																"src": "3447:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3449:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3449:77:10"
																			},
																			"nativeSrc": "3449:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3449:79:10"
																		},
																		"nativeSrc": "3449:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3449:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3426:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3426:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3434:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3434:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3422:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3422:3:10"
																				},
																				"nativeSrc": "3422:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3422:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3441:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3441:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3418:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3418:3:10"
																		},
																		"nativeSrc": "3418:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3418:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3411:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3411:6:10"
																},
																"nativeSrc": "3411:35:10",
																"nodeType": "YulFunctionCall",
																"src": "3411:35:10"
															},
															"nativeSrc": "3408:122:10",
															"nodeType": "YulIf",
															"src": "3408:122:10"
														},
														{
															"nativeSrc": "3539:34:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3539:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3566:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3566:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3553:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3553:12:10"
																},
																"nativeSrc": "3553:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3553:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3543:6:10",
																	"nodeType": "YulTypedName",
																	"src": "3543:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3582:88:10",
															"nodeType": "YulAssignment",
															"src": "3582:88:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3643:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3643:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3651:4:10",
																				"nodeType": "YulLiteral",
																				"src": "3651:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3639:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3639:3:10"
																		},
																		"nativeSrc": "3639:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3639:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3658:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3658:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3666:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3666:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "3591:47:10",
																	"nodeType": "YulIdentifier",
																	"src": "3591:47:10"
																},
																"nativeSrc": "3591:79:10",
																"nodeType": "YulFunctionCall",
																"src": "3591:79:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3582:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3582:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "3336:340:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3376:6:10",
														"nodeType": "YulTypedName",
														"src": "3376:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3384:3:10",
														"nodeType": "YulTypedName",
														"src": "3384:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3392:5:10",
														"nodeType": "YulTypedName",
														"src": "3392:5:10",
														"type": ""
													}
												],
												"src": "3336:340:10"
											},
											{
												"body": {
													"nativeSrc": "3727:81:10",
													"nodeType": "YulBlock",
													"src": "3727:81:10",
													"statements": [
														{
															"nativeSrc": "3737:65:10",
															"nodeType": "YulAssignment",
															"src": "3737:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3752:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3752:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3759:42:10",
																		"nodeType": "YulLiteral",
																		"src": "3759:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3748:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3748:3:10"
																},
																"nativeSrc": "3748:54:10",
																"nodeType": "YulFunctionCall",
																"src": "3748:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3737:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3737:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3682:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3709:5:10",
														"nodeType": "YulTypedName",
														"src": "3709:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3719:7:10",
														"nodeType": "YulTypedName",
														"src": "3719:7:10",
														"type": ""
													}
												],
												"src": "3682:126:10"
											},
											{
												"body": {
													"nativeSrc": "3859:51:10",
													"nodeType": "YulBlock",
													"src": "3859:51:10",
													"statements": [
														{
															"nativeSrc": "3869:35:10",
															"nodeType": "YulAssignment",
															"src": "3869:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3898:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3898:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3880:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "3880:17:10"
																},
																"nativeSrc": "3880:24:10",
																"nodeType": "YulFunctionCall",
																"src": "3880:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3869:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3869:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3814:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3841:5:10",
														"nodeType": "YulTypedName",
														"src": "3841:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3851:7:10",
														"nodeType": "YulTypedName",
														"src": "3851:7:10",
														"type": ""
													}
												],
												"src": "3814:96:10"
											},
											{
												"body": {
													"nativeSrc": "3959:79:10",
													"nodeType": "YulBlock",
													"src": "3959:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4016:16:10",
																"nodeType": "YulBlock",
																"src": "4016:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4025:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4025:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4028:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4028:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4018:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4018:6:10"
																			},
																			"nativeSrc": "4018:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4018:12:10"
																		},
																		"nativeSrc": "4018:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4018:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3982:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3982:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4007:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4007:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3989:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "3989:17:10"
																				},
																				"nativeSrc": "3989:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3989:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3979:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3979:2:10"
																		},
																		"nativeSrc": "3979:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3979:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3972:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3972:6:10"
																},
																"nativeSrc": "3972:43:10",
																"nodeType": "YulFunctionCall",
																"src": "3972:43:10"
															},
															"nativeSrc": "3969:63:10",
															"nodeType": "YulIf",
															"src": "3969:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3916:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3952:5:10",
														"nodeType": "YulTypedName",
														"src": "3952:5:10",
														"type": ""
													}
												],
												"src": "3916:122:10"
											},
											{
												"body": {
													"nativeSrc": "4096:87:10",
													"nodeType": "YulBlock",
													"src": "4096:87:10",
													"statements": [
														{
															"nativeSrc": "4106:29:10",
															"nodeType": "YulAssignment",
															"src": "4106:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4128:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4128:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4115:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4115:12:10"
																},
																"nativeSrc": "4115:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4115:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4106:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4106:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4171:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4171:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4144:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "4144:26:10"
																},
																"nativeSrc": "4144:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4144:33:10"
															},
															"nativeSrc": "4144:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "4144:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4044:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4074:6:10",
														"nodeType": "YulTypedName",
														"src": "4074:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4082:3:10",
														"nodeType": "YulTypedName",
														"src": "4082:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4090:5:10",
														"nodeType": "YulTypedName",
														"src": "4090:5:10",
														"type": ""
													}
												],
												"src": "4044:139:10"
											},
											{
												"body": {
													"nativeSrc": "4309:859:10",
													"nodeType": "YulBlock",
													"src": "4309:859:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4355:83:10",
																"nodeType": "YulBlock",
																"src": "4355:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4357:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4357:77:10"
																			},
																			"nativeSrc": "4357:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4357:79:10"
																		},
																		"nativeSrc": "4357:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4357:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4330:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4330:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4339:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4339:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4326:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4326:3:10"
																		},
																		"nativeSrc": "4326:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4326:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4351:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4322:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4322:3:10"
																},
																"nativeSrc": "4322:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4322:32:10"
															},
															"nativeSrc": "4319:119:10",
															"nodeType": "YulIf",
															"src": "4319:119:10"
														},
														{
															"nativeSrc": "4448:287:10",
															"nodeType": "YulBlock",
															"src": "4448:287:10",
															"statements": [
																{
																	"nativeSrc": "4463:45:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4463:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4494:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4494:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4505:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4505:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4490:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4490:3:10"
																				},
																				"nativeSrc": "4490:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4490:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4477:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "4477:12:10"
																		},
																		"nativeSrc": "4477:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4477:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4467:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4467:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4555:83:10",
																		"nodeType": "YulBlock",
																		"src": "4555:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4557:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "4557:77:10"
																					},
																					"nativeSrc": "4557:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4557:79:10"
																				},
																				"nativeSrc": "4557:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "4557:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4527:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4527:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4535:18:10",
																				"nodeType": "YulLiteral",
																				"src": "4535:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4524:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4524:2:10"
																		},
																		"nativeSrc": "4524:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4524:30:10"
																	},
																	"nativeSrc": "4521:117:10",
																	"nodeType": "YulIf",
																	"src": "4521:117:10"
																},
																{
																	"nativeSrc": "4652:73:10",
																	"nodeType": "YulAssignment",
																	"src": "4652:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4697:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4697:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4708:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4708:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4693:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4693:3:10"
																				},
																				"nativeSrc": "4693:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4693:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4717:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4717:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "4662:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "4662:30:10"
																		},
																		"nativeSrc": "4662:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4662:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4652:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4652:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4745:288:10",
															"nodeType": "YulBlock",
															"src": "4745:288:10",
															"statements": [
																{
																	"nativeSrc": "4760:46:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4760:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4791:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4791:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4802:2:10",
																						"nodeType": "YulLiteral",
																						"src": "4802:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4787:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4787:3:10"
																				},
																				"nativeSrc": "4787:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4787:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4774:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "4774:12:10"
																		},
																		"nativeSrc": "4774:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4774:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4764:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4764:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4853:83:10",
																		"nodeType": "YulBlock",
																		"src": "4853:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4855:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "4855:77:10"
																					},
																					"nativeSrc": "4855:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4855:79:10"
																				},
																				"nativeSrc": "4855:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "4855:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4825:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4825:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4833:18:10",
																				"nodeType": "YulLiteral",
																				"src": "4833:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4822:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4822:2:10"
																		},
																		"nativeSrc": "4822:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:30:10"
																	},
																	"nativeSrc": "4819:117:10",
																	"nodeType": "YulIf",
																	"src": "4819:117:10"
																},
																{
																	"nativeSrc": "4950:73:10",
																	"nodeType": "YulAssignment",
																	"src": "4950:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4995:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4995:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5006:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5006:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4991:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4991:3:10"
																				},
																				"nativeSrc": "4991:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4991:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5015:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5015:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "4960:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "4960:30:10"
																		},
																		"nativeSrc": "4960:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4960:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4950:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4950:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5043:118:10",
															"nodeType": "YulBlock",
															"src": "5043:118:10",
															"statements": [
																{
																	"nativeSrc": "5058:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5058:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5072:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5072:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5062:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5062:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5088:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5088:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5123:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5123:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5134:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5134:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5119:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5119:3:10"
																				},
																				"nativeSrc": "5119:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5119:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5143:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5143:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5098:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5098:20:10"
																		},
																		"nativeSrc": "5098:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5098:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5088:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5088:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address",
												"nativeSrc": "4189:979:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4263:9:10",
														"nodeType": "YulTypedName",
														"src": "4263:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4274:7:10",
														"nodeType": "YulTypedName",
														"src": "4274:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4286:6:10",
														"nodeType": "YulTypedName",
														"src": "4286:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4294:6:10",
														"nodeType": "YulTypedName",
														"src": "4294:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4302:6:10",
														"nodeType": "YulTypedName",
														"src": "4302:6:10",
														"type": ""
													}
												],
												"src": "4189:979:10"
											},
											{
												"body": {
													"nativeSrc": "5219:32:10",
													"nodeType": "YulBlock",
													"src": "5219:32:10",
													"statements": [
														{
															"nativeSrc": "5229:16:10",
															"nodeType": "YulAssignment",
															"src": "5229:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "5240:5:10",
																"nodeType": "YulIdentifier",
																"src": "5240:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5229:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5229:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5174:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5201:5:10",
														"nodeType": "YulTypedName",
														"src": "5201:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5211:7:10",
														"nodeType": "YulTypedName",
														"src": "5211:7:10",
														"type": ""
													}
												],
												"src": "5174:77:10"
											},
											{
												"body": {
													"nativeSrc": "5300:79:10",
													"nodeType": "YulBlock",
													"src": "5300:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5357:16:10",
																"nodeType": "YulBlock",
																"src": "5357:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5366:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5366:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5369:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5369:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5359:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5359:6:10"
																			},
																			"nativeSrc": "5359:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5359:12:10"
																		},
																		"nativeSrc": "5359:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5359:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5323:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5323:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5348:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5348:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5330:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "5330:17:10"
																				},
																				"nativeSrc": "5330:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5330:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5320:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5320:2:10"
																		},
																		"nativeSrc": "5320:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5320:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5313:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5313:6:10"
																},
																"nativeSrc": "5313:43:10",
																"nodeType": "YulFunctionCall",
																"src": "5313:43:10"
															},
															"nativeSrc": "5310:63:10",
															"nodeType": "YulIf",
															"src": "5310:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "5257:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5293:5:10",
														"nodeType": "YulTypedName",
														"src": "5293:5:10",
														"type": ""
													}
												],
												"src": "5257:122:10"
											},
											{
												"body": {
													"nativeSrc": "5437:87:10",
													"nodeType": "YulBlock",
													"src": "5437:87:10",
													"statements": [
														{
															"nativeSrc": "5447:29:10",
															"nodeType": "YulAssignment",
															"src": "5447:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5469:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5469:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5456:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "5456:12:10"
																},
																"nativeSrc": "5456:20:10",
																"nodeType": "YulFunctionCall",
																"src": "5456:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5447:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5447:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5512:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5512:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5485:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "5485:26:10"
																},
																"nativeSrc": "5485:33:10",
																"nodeType": "YulFunctionCall",
																"src": "5485:33:10"
															},
															"nativeSrc": "5485:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "5485:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "5385:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5415:6:10",
														"nodeType": "YulTypedName",
														"src": "5415:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5423:3:10",
														"nodeType": "YulTypedName",
														"src": "5423:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5431:5:10",
														"nodeType": "YulTypedName",
														"src": "5431:5:10",
														"type": ""
													}
												],
												"src": "5385:139:10"
											},
											{
												"body": {
													"nativeSrc": "5613:391:10",
													"nodeType": "YulBlock",
													"src": "5613:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5659:83:10",
																"nodeType": "YulBlock",
																"src": "5659:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5661:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5661:77:10"
																			},
																			"nativeSrc": "5661:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5661:79:10"
																		},
																		"nativeSrc": "5661:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5661:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5634:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5634:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5643:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5643:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5630:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5630:3:10"
																		},
																		"nativeSrc": "5630:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5630:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5655:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5655:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5626:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5626:3:10"
																},
																"nativeSrc": "5626:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5626:32:10"
															},
															"nativeSrc": "5623:119:10",
															"nodeType": "YulIf",
															"src": "5623:119:10"
														},
														{
															"nativeSrc": "5752:117:10",
															"nodeType": "YulBlock",
															"src": "5752:117:10",
															"statements": [
																{
																	"nativeSrc": "5767:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5767:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5781:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5781:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5771:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5771:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5796:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5796:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5831:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5831:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5842:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5842:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5827:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5827:3:10"
																				},
																				"nativeSrc": "5827:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5827:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5851:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5851:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5806:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5806:20:10"
																		},
																		"nativeSrc": "5806:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5806:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5796:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5796:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5879:118:10",
															"nodeType": "YulBlock",
															"src": "5879:118:10",
															"statements": [
																{
																	"nativeSrc": "5894:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5894:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5908:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5908:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5898:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5898:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5924:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5924:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5959:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5959:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5970:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5970:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5955:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5955:3:10"
																				},
																				"nativeSrc": "5955:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5955:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5979:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5979:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5934:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5934:20:10"
																		},
																		"nativeSrc": "5934:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5934:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5924:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5924:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "5530:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5575:9:10",
														"nodeType": "YulTypedName",
														"src": "5575:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5586:7:10",
														"nodeType": "YulTypedName",
														"src": "5586:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5598:6:10",
														"nodeType": "YulTypedName",
														"src": "5598:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5606:6:10",
														"nodeType": "YulTypedName",
														"src": "5606:6:10",
														"type": ""
													}
												],
												"src": "5530:474:10"
											},
											{
												"body": {
													"nativeSrc": "6052:48:10",
													"nodeType": "YulBlock",
													"src": "6052:48:10",
													"statements": [
														{
															"nativeSrc": "6062:32:10",
															"nodeType": "YulAssignment",
															"src": "6062:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6087:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6087:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6080:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6080:6:10"
																		},
																		"nativeSrc": "6080:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6080:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6073:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6073:6:10"
																},
																"nativeSrc": "6073:21:10",
																"nodeType": "YulFunctionCall",
																"src": "6073:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6062:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "6062:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "6010:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6034:5:10",
														"nodeType": "YulTypedName",
														"src": "6034:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6044:7:10",
														"nodeType": "YulTypedName",
														"src": "6044:7:10",
														"type": ""
													}
												],
												"src": "6010:90:10"
											},
											{
												"body": {
													"nativeSrc": "6165:50:10",
													"nodeType": "YulBlock",
													"src": "6165:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6182:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6182:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6202:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6202:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "6187:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "6187:14:10"
																		},
																		"nativeSrc": "6187:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6187:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6175:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6175:6:10"
																},
																"nativeSrc": "6175:34:10",
																"nodeType": "YulFunctionCall",
																"src": "6175:34:10"
															},
															"nativeSrc": "6175:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "6175:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "6106:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6153:5:10",
														"nodeType": "YulTypedName",
														"src": "6153:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6160:3:10",
														"nodeType": "YulTypedName",
														"src": "6160:3:10",
														"type": ""
													}
												],
												"src": "6106:109:10"
											},
											{
												"body": {
													"nativeSrc": "6313:118:10",
													"nodeType": "YulBlock",
													"src": "6313:118:10",
													"statements": [
														{
															"nativeSrc": "6323:26:10",
															"nodeType": "YulAssignment",
															"src": "6323:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6335:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6335:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6346:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6346:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6331:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6331:3:10"
																},
																"nativeSrc": "6331:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6331:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6323:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6323:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6397:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6397:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6410:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6410:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6421:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6421:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6406:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6406:3:10"
																		},
																		"nativeSrc": "6406:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6406:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "6359:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "6359:37:10"
																},
																"nativeSrc": "6359:65:10",
																"nodeType": "YulFunctionCall",
																"src": "6359:65:10"
															},
															"nativeSrc": "6359:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "6359:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "6221:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6285:9:10",
														"nodeType": "YulTypedName",
														"src": "6285:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6297:6:10",
														"nodeType": "YulTypedName",
														"src": "6297:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6308:4:10",
														"nodeType": "YulTypedName",
														"src": "6308:4:10",
														"type": ""
													}
												],
												"src": "6221:210:10"
											},
											{
												"body": {
													"nativeSrc": "6502:53:10",
													"nodeType": "YulBlock",
													"src": "6502:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6519:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6519:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6542:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6542:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6524:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "6524:17:10"
																		},
																		"nativeSrc": "6524:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6524:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6512:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6512:6:10"
																},
																"nativeSrc": "6512:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6512:37:10"
															},
															"nativeSrc": "6512:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "6512:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6437:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6490:5:10",
														"nodeType": "YulTypedName",
														"src": "6490:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6497:3:10",
														"nodeType": "YulTypedName",
														"src": "6497:3:10",
														"type": ""
													}
												],
												"src": "6437:118:10"
											},
											{
												"body": {
													"nativeSrc": "6659:124:10",
													"nodeType": "YulBlock",
													"src": "6659:124:10",
													"statements": [
														{
															"nativeSrc": "6669:26:10",
															"nodeType": "YulAssignment",
															"src": "6669:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6681:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6681:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6692:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6692:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6677:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6677:3:10"
																},
																"nativeSrc": "6677:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6677:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6669:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6669:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6749:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6749:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6762:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6762:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6773:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6773:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6758:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6758:3:10"
																		},
																		"nativeSrc": "6758:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6758:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6705:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6705:43:10"
																},
																"nativeSrc": "6705:71:10",
																"nodeType": "YulFunctionCall",
																"src": "6705:71:10"
															},
															"nativeSrc": "6705:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "6705:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6561:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6631:9:10",
														"nodeType": "YulTypedName",
														"src": "6631:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6643:6:10",
														"nodeType": "YulTypedName",
														"src": "6643:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6654:4:10",
														"nodeType": "YulTypedName",
														"src": "6654:4:10",
														"type": ""
													}
												],
												"src": "6561:222:10"
											},
											{
												"body": {
													"nativeSrc": "6889:519:10",
													"nodeType": "YulBlock",
													"src": "6889:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6935:83:10",
																"nodeType": "YulBlock",
																"src": "6935:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6937:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6937:77:10"
																			},
																			"nativeSrc": "6937:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6937:79:10"
																		},
																		"nativeSrc": "6937:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6937:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6910:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6910:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6919:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6919:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6906:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6906:3:10"
																		},
																		"nativeSrc": "6906:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6906:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6931:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6931:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6902:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6902:3:10"
																},
																"nativeSrc": "6902:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6902:32:10"
															},
															"nativeSrc": "6899:119:10",
															"nodeType": "YulIf",
															"src": "6899:119:10"
														},
														{
															"nativeSrc": "7028:117:10",
															"nodeType": "YulBlock",
															"src": "7028:117:10",
															"statements": [
																{
																	"nativeSrc": "7043:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7043:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7057:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7057:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7047:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7047:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7072:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7072:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7107:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7107:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7118:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7118:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7103:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7103:3:10"
																				},
																				"nativeSrc": "7103:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7103:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7127:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7127:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7082:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7082:20:10"
																		},
																		"nativeSrc": "7082:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7082:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7072:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7072:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7155:118:10",
															"nodeType": "YulBlock",
															"src": "7155:118:10",
															"statements": [
																{
																	"nativeSrc": "7170:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7170:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7184:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7184:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7174:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7174:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7200:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7200:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7235:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7235:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7246:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7246:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7231:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7231:3:10"
																				},
																				"nativeSrc": "7231:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7231:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7255:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7255:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7210:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7210:20:10"
																		},
																		"nativeSrc": "7210:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7210:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7200:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7200:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7283:118:10",
															"nodeType": "YulBlock",
															"src": "7283:118:10",
															"statements": [
																{
																	"nativeSrc": "7298:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7298:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7312:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7312:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7302:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7302:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7328:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7328:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7363:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7363:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7374:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7374:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7359:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7359:3:10"
																				},
																				"nativeSrc": "7359:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7359:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7383:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7383:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7338:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7338:20:10"
																		},
																		"nativeSrc": "7338:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7338:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7328:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7328:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "6789:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6843:9:10",
														"nodeType": "YulTypedName",
														"src": "6843:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6854:7:10",
														"nodeType": "YulTypedName",
														"src": "6854:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6866:6:10",
														"nodeType": "YulTypedName",
														"src": "6866:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6874:6:10",
														"nodeType": "YulTypedName",
														"src": "6874:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6882:6:10",
														"nodeType": "YulTypedName",
														"src": "6882:6:10",
														"type": ""
													}
												],
												"src": "6789:619:10"
											},
											{
												"body": {
													"nativeSrc": "7490:433:10",
													"nodeType": "YulBlock",
													"src": "7490:433:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7536:83:10",
																"nodeType": "YulBlock",
																"src": "7536:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7538:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7538:77:10"
																			},
																			"nativeSrc": "7538:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7538:79:10"
																		},
																		"nativeSrc": "7538:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7538:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7511:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7511:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7520:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7520:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7507:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7507:3:10"
																		},
																		"nativeSrc": "7507:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7507:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7532:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7532:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7503:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7503:3:10"
																},
																"nativeSrc": "7503:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7503:32:10"
															},
															"nativeSrc": "7500:119:10",
															"nodeType": "YulIf",
															"src": "7500:119:10"
														},
														{
															"nativeSrc": "7629:287:10",
															"nodeType": "YulBlock",
															"src": "7629:287:10",
															"statements": [
																{
																	"nativeSrc": "7644:45:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7644:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7675:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7675:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7686:1:10",
																						"nodeType": "YulLiteral",
																						"src": "7686:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7671:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7671:3:10"
																				},
																				"nativeSrc": "7671:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7671:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7658:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "7658:12:10"
																		},
																		"nativeSrc": "7658:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7658:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7648:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7648:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7736:83:10",
																		"nodeType": "YulBlock",
																		"src": "7736:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7738:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "7738:77:10"
																					},
																					"nativeSrc": "7738:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7738:79:10"
																				},
																				"nativeSrc": "7738:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "7738:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7708:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7708:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7716:18:10",
																				"nodeType": "YulLiteral",
																				"src": "7716:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7705:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "7705:2:10"
																		},
																		"nativeSrc": "7705:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7705:30:10"
																	},
																	"nativeSrc": "7702:117:10",
																	"nodeType": "YulIf",
																	"src": "7702:117:10"
																},
																{
																	"nativeSrc": "7833:73:10",
																	"nodeType": "YulAssignment",
																	"src": "7833:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7878:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7878:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7889:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7889:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7874:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7874:3:10"
																				},
																				"nativeSrc": "7874:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7874:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7898:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7898:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7843:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "7843:30:10"
																		},
																		"nativeSrc": "7843:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7843:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7833:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7833:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "7414:509:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7460:9:10",
														"nodeType": "YulTypedName",
														"src": "7460:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7471:7:10",
														"nodeType": "YulTypedName",
														"src": "7471:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7483:6:10",
														"nodeType": "YulTypedName",
														"src": "7483:6:10",
														"type": ""
													}
												],
												"src": "7414:509:10"
											},
											{
												"body": {
													"nativeSrc": "7994:53:10",
													"nodeType": "YulBlock",
													"src": "7994:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8011:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8011:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8034:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8034:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8016:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "8016:17:10"
																		},
																		"nativeSrc": "8016:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8016:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8004:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8004:6:10"
																},
																"nativeSrc": "8004:37:10",
																"nodeType": "YulFunctionCall",
																"src": "8004:37:10"
															},
															"nativeSrc": "8004:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "8004:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7929:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7982:5:10",
														"nodeType": "YulTypedName",
														"src": "7982:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7989:3:10",
														"nodeType": "YulTypedName",
														"src": "7989:3:10",
														"type": ""
													}
												],
												"src": "7929:118:10"
											},
											{
												"body": {
													"nativeSrc": "8151:124:10",
													"nodeType": "YulBlock",
													"src": "8151:124:10",
													"statements": [
														{
															"nativeSrc": "8161:26:10",
															"nodeType": "YulAssignment",
															"src": "8161:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8173:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8173:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8184:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8184:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8169:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8169:3:10"
																},
																"nativeSrc": "8169:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8169:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8161:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8161:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8241:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8241:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8254:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8254:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8265:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8265:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8250:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8250:3:10"
																		},
																		"nativeSrc": "8250:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8250:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8197:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8197:43:10"
																},
																"nativeSrc": "8197:71:10",
																"nodeType": "YulFunctionCall",
																"src": "8197:71:10"
															},
															"nativeSrc": "8197:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "8197:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8053:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8123:9:10",
														"nodeType": "YulTypedName",
														"src": "8123:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8135:6:10",
														"nodeType": "YulTypedName",
														"src": "8135:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8146:4:10",
														"nodeType": "YulTypedName",
														"src": "8146:4:10",
														"type": ""
													}
												],
												"src": "8053:222:10"
											},
											{
												"body": {
													"nativeSrc": "8324:43:10",
													"nodeType": "YulBlock",
													"src": "8324:43:10",
													"statements": [
														{
															"nativeSrc": "8334:27:10",
															"nodeType": "YulAssignment",
															"src": "8334:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8349:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8349:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8356:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8356:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8345:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8345:3:10"
																},
																"nativeSrc": "8345:16:10",
																"nodeType": "YulFunctionCall",
																"src": "8345:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8334:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "8334:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "8281:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8306:5:10",
														"nodeType": "YulTypedName",
														"src": "8306:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8316:7:10",
														"nodeType": "YulTypedName",
														"src": "8316:7:10",
														"type": ""
													}
												],
												"src": "8281:86:10"
											},
											{
												"body": {
													"nativeSrc": "8434:51:10",
													"nodeType": "YulBlock",
													"src": "8434:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8451:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8451:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8472:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8472:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "8456:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "8456:15:10"
																		},
																		"nativeSrc": "8456:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8456:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8444:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8444:6:10"
																},
																"nativeSrc": "8444:35:10",
																"nodeType": "YulFunctionCall",
																"src": "8444:35:10"
															},
															"nativeSrc": "8444:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "8444:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "8373:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8422:5:10",
														"nodeType": "YulTypedName",
														"src": "8422:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8429:3:10",
														"nodeType": "YulTypedName",
														"src": "8429:3:10",
														"type": ""
													}
												],
												"src": "8373:112:10"
											},
											{
												"body": {
													"nativeSrc": "8585:120:10",
													"nodeType": "YulBlock",
													"src": "8585:120:10",
													"statements": [
														{
															"nativeSrc": "8595:26:10",
															"nodeType": "YulAssignment",
															"src": "8595:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8607:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8607:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8618:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8618:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8603:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8603:3:10"
																},
																"nativeSrc": "8603:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8603:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8595:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8595:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8671:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8671:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8684:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8684:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8695:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8695:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8680:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8680:3:10"
																		},
																		"nativeSrc": "8680:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8680:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "8631:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "8631:39:10"
																},
																"nativeSrc": "8631:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8631:67:10"
															},
															"nativeSrc": "8631:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "8631:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "8491:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8557:9:10",
														"nodeType": "YulTypedName",
														"src": "8557:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8569:6:10",
														"nodeType": "YulTypedName",
														"src": "8569:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8580:4:10",
														"nodeType": "YulTypedName",
														"src": "8580:4:10",
														"type": ""
													}
												],
												"src": "8491:214:10"
											},
											{
												"body": {
													"nativeSrc": "8743:28:10",
													"nodeType": "YulBlock",
													"src": "8743:28:10",
													"statements": [
														{
															"nativeSrc": "8753:12:10",
															"nodeType": "YulAssignment",
															"src": "8753:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "8760:5:10",
																"nodeType": "YulIdentifier",
																"src": "8760:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "8753:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8753:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "8711:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8729:5:10",
														"nodeType": "YulTypedName",
														"src": "8729:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "8739:3:10",
														"nodeType": "YulTypedName",
														"src": "8739:3:10",
														"type": ""
													}
												],
												"src": "8711:60:10"
											},
											{
												"body": {
													"nativeSrc": "8837:82:10",
													"nodeType": "YulBlock",
													"src": "8837:82:10",
													"statements": [
														{
															"nativeSrc": "8847:66:10",
															"nodeType": "YulAssignment",
															"src": "8847:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8905:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "8905:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "8887:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "8887:17:10"
																				},
																				"nativeSrc": "8887:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8887:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "8878:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "8878:8:10"
																		},
																		"nativeSrc": "8878:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8878:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "8860:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8860:17:10"
																},
																"nativeSrc": "8860:53:10",
																"nodeType": "YulFunctionCall",
																"src": "8860:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8847:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "8847:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "8777:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8817:5:10",
														"nodeType": "YulTypedName",
														"src": "8817:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "8827:9:10",
														"nodeType": "YulTypedName",
														"src": "8827:9:10",
														"type": ""
													}
												],
												"src": "8777:142:10"
											},
											{
												"body": {
													"nativeSrc": "8985:66:10",
													"nodeType": "YulBlock",
													"src": "8985:66:10",
													"statements": [
														{
															"nativeSrc": "8995:50:10",
															"nodeType": "YulAssignment",
															"src": "8995:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9039:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9039:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "9008:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "9008:30:10"
																},
																"nativeSrc": "9008:37:10",
																"nodeType": "YulFunctionCall",
																"src": "9008:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8995:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "8995:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "8925:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8965:5:10",
														"nodeType": "YulTypedName",
														"src": "8965:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "8975:9:10",
														"nodeType": "YulTypedName",
														"src": "8975:9:10",
														"type": ""
													}
												],
												"src": "8925:126:10"
											},
											{
												"body": {
													"nativeSrc": "9136:66:10",
													"nodeType": "YulBlock",
													"src": "9136:66:10",
													"statements": [
														{
															"nativeSrc": "9146:50:10",
															"nodeType": "YulAssignment",
															"src": "9146:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9190:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9190:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "9159:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "9159:30:10"
																},
																"nativeSrc": "9159:37:10",
																"nodeType": "YulFunctionCall",
																"src": "9159:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9146:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "9146:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IDirectory_$1187_to_t_address",
												"nativeSrc": "9057:145:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9116:5:10",
														"nodeType": "YulTypedName",
														"src": "9116:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9126:9:10",
														"nodeType": "YulTypedName",
														"src": "9126:9:10",
														"type": ""
													}
												],
												"src": "9057:145:10"
											},
											{
												"body": {
													"nativeSrc": "9292:85:10",
													"nodeType": "YulBlock",
													"src": "9292:85:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9309:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9309:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9364:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9364:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IDirectory_$1187_to_t_address",
																			"nativeSrc": "9314:49:10",
																			"nodeType": "YulIdentifier",
																			"src": "9314:49:10"
																		},
																		"nativeSrc": "9314:56:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9314:56:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9302:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9302:6:10"
																},
																"nativeSrc": "9302:69:10",
																"nodeType": "YulFunctionCall",
																"src": "9302:69:10"
															},
															"nativeSrc": "9302:69:10",
															"nodeType": "YulExpressionStatement",
															"src": "9302:69:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IDirectory_$1187_to_t_address_fromStack",
												"nativeSrc": "9208:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9280:5:10",
														"nodeType": "YulTypedName",
														"src": "9280:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9287:3:10",
														"nodeType": "YulTypedName",
														"src": "9287:3:10",
														"type": ""
													}
												],
												"src": "9208:169:10"
											},
											{
												"body": {
													"nativeSrc": "9500:143:10",
													"nodeType": "YulBlock",
													"src": "9500:143:10",
													"statements": [
														{
															"nativeSrc": "9510:26:10",
															"nodeType": "YulAssignment",
															"src": "9510:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9522:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9522:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9533:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9533:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9518:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9518:3:10"
																},
																"nativeSrc": "9518:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9518:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9510:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9510:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9609:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9609:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9622:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9622:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9633:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9633:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9618:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9618:3:10"
																		},
																		"nativeSrc": "9618:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9618:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IDirectory_$1187_to_t_address_fromStack",
																	"nativeSrc": "9546:62:10",
																	"nodeType": "YulIdentifier",
																	"src": "9546:62:10"
																},
																"nativeSrc": "9546:90:10",
																"nodeType": "YulFunctionCall",
																"src": "9546:90:10"
															},
															"nativeSrc": "9546:90:10",
															"nodeType": "YulExpressionStatement",
															"src": "9546:90:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IDirectory_$1187__to_t_address__fromStack_reversed",
												"nativeSrc": "9383:260:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9472:9:10",
														"nodeType": "YulTypedName",
														"src": "9472:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9484:6:10",
														"nodeType": "YulTypedName",
														"src": "9484:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9495:4:10",
														"nodeType": "YulTypedName",
														"src": "9495:4:10",
														"type": ""
													}
												],
												"src": "9383:260:10"
											},
											{
												"body": {
													"nativeSrc": "9715:263:10",
													"nodeType": "YulBlock",
													"src": "9715:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9761:83:10",
																"nodeType": "YulBlock",
																"src": "9761:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9763:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "9763:77:10"
																			},
																			"nativeSrc": "9763:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9763:79:10"
																		},
																		"nativeSrc": "9763:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9763:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9736:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9736:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9745:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9745:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9732:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9732:3:10"
																		},
																		"nativeSrc": "9732:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9732:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9757:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9757:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9728:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9728:3:10"
																},
																"nativeSrc": "9728:32:10",
																"nodeType": "YulFunctionCall",
																"src": "9728:32:10"
															},
															"nativeSrc": "9725:119:10",
															"nodeType": "YulIf",
															"src": "9725:119:10"
														},
														{
															"nativeSrc": "9854:117:10",
															"nodeType": "YulBlock",
															"src": "9854:117:10",
															"statements": [
																{
																	"nativeSrc": "9869:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9869:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9883:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9883:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9873:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9873:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9898:63:10",
																	"nodeType": "YulAssignment",
																	"src": "9898:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9933:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9933:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9944:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9944:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9929:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9929:3:10"
																				},
																				"nativeSrc": "9929:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9929:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9953:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9953:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9908:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "9908:20:10"
																		},
																		"nativeSrc": "9908:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9908:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9898:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9898:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "9649:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9685:9:10",
														"nodeType": "YulTypedName",
														"src": "9685:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9696:7:10",
														"nodeType": "YulTypedName",
														"src": "9696:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9708:6:10",
														"nodeType": "YulTypedName",
														"src": "9708:6:10",
														"type": ""
													}
												],
												"src": "9649:329:10"
											},
											{
												"body": {
													"nativeSrc": "10067:391:10",
													"nodeType": "YulBlock",
													"src": "10067:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10113:83:10",
																"nodeType": "YulBlock",
																"src": "10113:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10115:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "10115:77:10"
																			},
																			"nativeSrc": "10115:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10115:79:10"
																		},
																		"nativeSrc": "10115:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10115:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10088:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10088:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10097:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10097:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10084:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10084:3:10"
																		},
																		"nativeSrc": "10084:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10084:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10109:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10109:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10080:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10080:3:10"
																},
																"nativeSrc": "10080:32:10",
																"nodeType": "YulFunctionCall",
																"src": "10080:32:10"
															},
															"nativeSrc": "10077:119:10",
															"nodeType": "YulIf",
															"src": "10077:119:10"
														},
														{
															"nativeSrc": "10206:117:10",
															"nodeType": "YulBlock",
															"src": "10206:117:10",
															"statements": [
																{
																	"nativeSrc": "10221:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10221:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10235:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10235:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10225:6:10",
																			"nodeType": "YulTypedName",
																			"src": "10225:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10250:63:10",
																	"nodeType": "YulAssignment",
																	"src": "10250:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10285:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10285:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10296:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10296:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10281:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10281:3:10"
																				},
																				"nativeSrc": "10281:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10281:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10305:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10305:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10260:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "10260:20:10"
																		},
																		"nativeSrc": "10260:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10260:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10250:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "10250:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10333:118:10",
															"nodeType": "YulBlock",
															"src": "10333:118:10",
															"statements": [
																{
																	"nativeSrc": "10348:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10348:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10362:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10362:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10352:6:10",
																			"nodeType": "YulTypedName",
																			"src": "10352:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10378:63:10",
																	"nodeType": "YulAssignment",
																	"src": "10378:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10413:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10413:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10424:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10424:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10409:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10409:3:10"
																				},
																				"nativeSrc": "10409:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10409:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10433:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10433:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10388:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "10388:20:10"
																		},
																		"nativeSrc": "10388:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10388:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10378:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "10378:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9984:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10029:9:10",
														"nodeType": "YulTypedName",
														"src": "10029:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10040:7:10",
														"nodeType": "YulTypedName",
														"src": "10040:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10052:6:10",
														"nodeType": "YulTypedName",
														"src": "10052:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10060:6:10",
														"nodeType": "YulTypedName",
														"src": "10060:6:10",
														"type": ""
													}
												],
												"src": "9984:474:10"
											},
											{
												"body": {
													"nativeSrc": "10492:152:10",
													"nodeType": "YulBlock",
													"src": "10492:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10509:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10509:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10512:77:10",
																		"nodeType": "YulLiteral",
																		"src": "10512:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10502:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10502:6:10"
																},
																"nativeSrc": "10502:88:10",
																"nodeType": "YulFunctionCall",
																"src": "10502:88:10"
															},
															"nativeSrc": "10502:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "10502:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10606:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10606:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10609:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10609:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10599:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10599:6:10"
																},
																"nativeSrc": "10599:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10599:15:10"
															},
															"nativeSrc": "10599:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10599:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10630:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10630:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10633:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10633:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10623:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10623:6:10"
																},
																"nativeSrc": "10623:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10623:15:10"
															},
															"nativeSrc": "10623:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10623:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10464:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "10464:180:10"
											},
											{
												"body": {
													"nativeSrc": "10701:269:10",
													"nodeType": "YulBlock",
													"src": "10701:269:10",
													"statements": [
														{
															"nativeSrc": "10711:22:10",
															"nodeType": "YulAssignment",
															"src": "10711:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10725:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10725:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10731:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10731:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10721:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10721:3:10"
																},
																"nativeSrc": "10721:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10721:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10711:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10711:6:10"
																}
															]
														},
														{
															"nativeSrc": "10742:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "10742:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10772:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10772:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10778:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10778:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10768:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10768:3:10"
																},
																"nativeSrc": "10768:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10768:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10746:18:10",
																	"nodeType": "YulTypedName",
																	"src": "10746:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10819:51:10",
																"nodeType": "YulBlock",
																"src": "10819:51:10",
																"statements": [
																	{
																		"nativeSrc": "10833:27:10",
																		"nodeType": "YulAssignment",
																		"src": "10833:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10847:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "10847:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10855:4:10",
																					"nodeType": "YulLiteral",
																					"src": "10855:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10843:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "10843:3:10"
																			},
																			"nativeSrc": "10843:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10843:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10833:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10833:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10799:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "10799:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10792:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10792:6:10"
																},
																"nativeSrc": "10792:26:10",
																"nodeType": "YulFunctionCall",
																"src": "10792:26:10"
															},
															"nativeSrc": "10789:81:10",
															"nodeType": "YulIf",
															"src": "10789:81:10"
														},
														{
															"body": {
																"nativeSrc": "10922:42:10",
																"nodeType": "YulBlock",
																"src": "10922:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10936:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "10936:16:10"
																			},
																			"nativeSrc": "10936:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10936:18:10"
																		},
																		"nativeSrc": "10936:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10936:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10886:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "10886:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10909:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10909:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10917:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10917:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10906:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "10906:2:10"
																		},
																		"nativeSrc": "10906:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10906:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10883:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "10883:2:10"
																},
																"nativeSrc": "10883:38:10",
																"nodeType": "YulFunctionCall",
																"src": "10883:38:10"
															},
															"nativeSrc": "10880:84:10",
															"nodeType": "YulIf",
															"src": "10880:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10650:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10685:4:10",
														"nodeType": "YulTypedName",
														"src": "10685:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10694:6:10",
														"nodeType": "YulTypedName",
														"src": "10694:6:10",
														"type": ""
													}
												],
												"src": "10650:320:10"
											},
											{
												"body": {
													"nativeSrc": "11082:73:10",
													"nodeType": "YulBlock",
													"src": "11082:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11104:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11104:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11112:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11112:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11100:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11100:3:10"
																		},
																		"nativeSrc": "11100:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11100:14:10"
																	},
																	{
																		"hexValue": "457466546f6b656e3a20616c726561647920696e697469616c697a6564",
																		"kind": "string",
																		"nativeSrc": "11116:31:10",
																		"nodeType": "YulLiteral",
																		"src": "11116:31:10",
																		"type": "",
																		"value": "EtfToken: already initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11093:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11093:6:10"
																},
																"nativeSrc": "11093:55:10",
																"nodeType": "YulFunctionCall",
																"src": "11093:55:10"
															},
															"nativeSrc": "11093:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "11093:55:10"
														}
													]
												},
												"name": "store_literal_in_memory_bff9b1557c542a233ca52157ba744ff1a697493bf85768f97d646bb53c3c3c45",
												"nativeSrc": "10976:179:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11074:6:10",
														"nodeType": "YulTypedName",
														"src": "11074:6:10",
														"type": ""
													}
												],
												"src": "10976:179:10"
											},
											{
												"body": {
													"nativeSrc": "11307:220:10",
													"nodeType": "YulBlock",
													"src": "11307:220:10",
													"statements": [
														{
															"nativeSrc": "11317:74:10",
															"nodeType": "YulAssignment",
															"src": "11317:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11383:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11383:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11388:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11388:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11324:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11324:58:10"
																},
																"nativeSrc": "11324:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11324:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11317:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11317:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11489:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11489:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bff9b1557c542a233ca52157ba744ff1a697493bf85768f97d646bb53c3c3c45",
																	"nativeSrc": "11400:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11400:88:10"
																},
																"nativeSrc": "11400:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11400:93:10"
															},
															"nativeSrc": "11400:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11400:93:10"
														},
														{
															"nativeSrc": "11502:19:10",
															"nodeType": "YulAssignment",
															"src": "11502:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11513:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11513:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11518:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11518:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11509:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11509:3:10"
																},
																"nativeSrc": "11509:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11509:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11502:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11502:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bff9b1557c542a233ca52157ba744ff1a697493bf85768f97d646bb53c3c3c45_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11161:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11295:3:10",
														"nodeType": "YulTypedName",
														"src": "11295:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11303:3:10",
														"nodeType": "YulTypedName",
														"src": "11303:3:10",
														"type": ""
													}
												],
												"src": "11161:366:10"
											},
											{
												"body": {
													"nativeSrc": "11704:248:10",
													"nodeType": "YulBlock",
													"src": "11704:248:10",
													"statements": [
														{
															"nativeSrc": "11714:26:10",
															"nodeType": "YulAssignment",
															"src": "11714:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11726:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11726:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11737:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11737:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11722:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11722:3:10"
																},
																"nativeSrc": "11722:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11722:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11714:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11714:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11761:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11761:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11772:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11772:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11757:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11757:3:10"
																		},
																		"nativeSrc": "11757:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11757:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11780:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11780:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11786:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11786:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11776:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11776:3:10"
																		},
																		"nativeSrc": "11776:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11776:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11750:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11750:6:10"
																},
																"nativeSrc": "11750:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11750:47:10"
															},
															"nativeSrc": "11750:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11750:47:10"
														},
														{
															"nativeSrc": "11806:139:10",
															"nodeType": "YulAssignment",
															"src": "11806:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11940:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11940:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bff9b1557c542a233ca52157ba744ff1a697493bf85768f97d646bb53c3c3c45_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11814:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11814:124:10"
																},
																"nativeSrc": "11814:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11814:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11806:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11806:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bff9b1557c542a233ca52157ba744ff1a697493bf85768f97d646bb53c3c3c45__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11533:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11684:9:10",
														"nodeType": "YulTypedName",
														"src": "11684:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11699:4:10",
														"nodeType": "YulTypedName",
														"src": "11699:4:10",
														"type": ""
													}
												],
												"src": "11533:419:10"
											},
											{
												"body": {
													"nativeSrc": "12011:32:10",
													"nodeType": "YulBlock",
													"src": "12011:32:10",
													"statements": [
														{
															"nativeSrc": "12021:16:10",
															"nodeType": "YulAssignment",
															"src": "12021:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "12032:5:10",
																"nodeType": "YulIdentifier",
																"src": "12032:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12021:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "12021:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "11958:85:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11993:5:10",
														"nodeType": "YulTypedName",
														"src": "11993:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12003:7:10",
														"nodeType": "YulTypedName",
														"src": "12003:7:10",
														"type": ""
													}
												],
												"src": "11958:85:10"
											},
											{
												"body": {
													"nativeSrc": "12093:57:10",
													"nodeType": "YulBlock",
													"src": "12093:57:10",
													"statements": [
														{
															"nativeSrc": "12103:41:10",
															"nodeType": "YulAssignment",
															"src": "12103:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12118:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "12118:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12125:18:10",
																		"nodeType": "YulLiteral",
																		"src": "12125:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12114:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12114:3:10"
																},
																"nativeSrc": "12114:30:10",
																"nodeType": "YulFunctionCall",
																"src": "12114:30:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12103:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "12103:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "12049:101:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12075:5:10",
														"nodeType": "YulTypedName",
														"src": "12075:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12085:7:10",
														"nodeType": "YulTypedName",
														"src": "12085:7:10",
														"type": ""
													}
												],
												"src": "12049:101:10"
											},
											{
												"body": {
													"nativeSrc": "12223:89:10",
													"nodeType": "YulBlock",
													"src": "12223:89:10",
													"statements": [
														{
															"nativeSrc": "12233:73:10",
															"nodeType": "YulAssignment",
															"src": "12233:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12298:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "12298:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "12272:25:10",
																					"nodeType": "YulIdentifier",
																					"src": "12272:25:10"
																				},
																				"nativeSrc": "12272:32:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12272:32:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "12263:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "12263:8:10"
																		},
																		"nativeSrc": "12263:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12263:42:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "12246:16:10",
																	"nodeType": "YulIdentifier",
																	"src": "12246:16:10"
																},
																"nativeSrc": "12246:60:10",
																"nodeType": "YulFunctionCall",
																"src": "12246:60:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "12233:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "12233:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "12156:156:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12203:5:10",
														"nodeType": "YulTypedName",
														"src": "12203:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "12213:9:10",
														"nodeType": "YulTypedName",
														"src": "12213:9:10",
														"type": ""
													}
												],
												"src": "12156:156:10"
											},
											{
												"body": {
													"nativeSrc": "12390:73:10",
													"nodeType": "YulBlock",
													"src": "12390:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12407:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12407:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12450:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "12450:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "12412:37:10",
																			"nodeType": "YulIdentifier",
																			"src": "12412:37:10"
																		},
																		"nativeSrc": "12412:44:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12412:44:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12400:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12400:6:10"
																},
																"nativeSrc": "12400:57:10",
																"nodeType": "YulFunctionCall",
																"src": "12400:57:10"
															},
															"nativeSrc": "12400:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "12400:57:10"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "12318:145:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12378:5:10",
														"nodeType": "YulTypedName",
														"src": "12378:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12385:3:10",
														"nodeType": "YulTypedName",
														"src": "12385:3:10",
														"type": ""
													}
												],
												"src": "12318:145:10"
											},
											{
												"body": {
													"nativeSrc": "12574:131:10",
													"nodeType": "YulBlock",
													"src": "12574:131:10",
													"statements": [
														{
															"nativeSrc": "12584:26:10",
															"nodeType": "YulAssignment",
															"src": "12584:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12596:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12596:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12607:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12607:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12592:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12592:3:10"
																},
																"nativeSrc": "12592:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12592:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12584:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12584:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12671:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12671:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12684:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12684:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12695:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12695:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12680:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12680:3:10"
																		},
																		"nativeSrc": "12680:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12680:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "12620:50:10",
																	"nodeType": "YulIdentifier",
																	"src": "12620:50:10"
																},
																"nativeSrc": "12620:78:10",
																"nodeType": "YulFunctionCall",
																"src": "12620:78:10"
															},
															"nativeSrc": "12620:78:10",
															"nodeType": "YulExpressionStatement",
															"src": "12620:78:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "12469:236:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12546:9:10",
														"nodeType": "YulTypedName",
														"src": "12546:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12558:6:10",
														"nodeType": "YulTypedName",
														"src": "12558:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12569:4:10",
														"nodeType": "YulTypedName",
														"src": "12569:4:10",
														"type": ""
													}
												],
												"src": "12469:236:10"
											},
											{
												"body": {
													"nativeSrc": "12774:80:10",
													"nodeType": "YulBlock",
													"src": "12774:80:10",
													"statements": [
														{
															"nativeSrc": "12784:22:10",
															"nodeType": "YulAssignment",
															"src": "12784:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12799:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12799:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12793:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "12793:5:10"
																},
																"nativeSrc": "12793:13:10",
																"nodeType": "YulFunctionCall",
																"src": "12793:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12784:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "12784:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12842:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "12842:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "12815:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "12815:26:10"
																},
																"nativeSrc": "12815:33:10",
																"nodeType": "YulFunctionCall",
																"src": "12815:33:10"
															},
															"nativeSrc": "12815:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "12815:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "12711:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12752:6:10",
														"nodeType": "YulTypedName",
														"src": "12752:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12760:3:10",
														"nodeType": "YulTypedName",
														"src": "12760:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12768:5:10",
														"nodeType": "YulTypedName",
														"src": "12768:5:10",
														"type": ""
													}
												],
												"src": "12711:143:10"
											},
											{
												"body": {
													"nativeSrc": "12937:274:10",
													"nodeType": "YulBlock",
													"src": "12937:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "12983:83:10",
																"nodeType": "YulBlock",
																"src": "12983:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12985:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "12985:77:10"
																			},
																			"nativeSrc": "12985:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12985:79:10"
																		},
																		"nativeSrc": "12985:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12985:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12958:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "12958:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12967:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12967:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12954:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12954:3:10"
																		},
																		"nativeSrc": "12954:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12954:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12979:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12979:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12950:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12950:3:10"
																},
																"nativeSrc": "12950:32:10",
																"nodeType": "YulFunctionCall",
																"src": "12950:32:10"
															},
															"nativeSrc": "12947:119:10",
															"nodeType": "YulIf",
															"src": "12947:119:10"
														},
														{
															"nativeSrc": "13076:128:10",
															"nodeType": "YulBlock",
															"src": "13076:128:10",
															"statements": [
																{
																	"nativeSrc": "13091:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13091:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13105:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13105:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13095:6:10",
																			"nodeType": "YulTypedName",
																			"src": "13095:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13120:74:10",
																	"nodeType": "YulAssignment",
																	"src": "13120:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13166:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "13166:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13177:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "13177:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13162:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13162:3:10"
																				},
																				"nativeSrc": "13162:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13162:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13186:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "13186:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "13130:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "13130:31:10"
																		},
																		"nativeSrc": "13130:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13130:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13120:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "13120:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "12860:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12907:9:10",
														"nodeType": "YulTypedName",
														"src": "12907:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12918:7:10",
														"nodeType": "YulTypedName",
														"src": "12918:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12930:6:10",
														"nodeType": "YulTypedName",
														"src": "12930:6:10",
														"type": ""
													}
												],
												"src": "12860:351:10"
											},
											{
												"body": {
													"nativeSrc": "13323:72:10",
													"nodeType": "YulBlock",
													"src": "13323:72:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13345:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13345:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13353:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13353:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13341:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13341:3:10"
																		},
																		"nativeSrc": "13341:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13341:14:10"
																	},
																	{
																		"hexValue": "6d73672e73656e646572206973206e6f742065746620726f75746572",
																		"kind": "string",
																		"nativeSrc": "13357:30:10",
																		"nodeType": "YulLiteral",
																		"src": "13357:30:10",
																		"type": "",
																		"value": "msg.sender is not etf router"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13334:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13334:6:10"
																},
																"nativeSrc": "13334:54:10",
																"nodeType": "YulFunctionCall",
																"src": "13334:54:10"
															},
															"nativeSrc": "13334:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "13334:54:10"
														}
													]
												},
												"name": "store_literal_in_memory_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9",
												"nativeSrc": "13217:178:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13315:6:10",
														"nodeType": "YulTypedName",
														"src": "13315:6:10",
														"type": ""
													}
												],
												"src": "13217:178:10"
											},
											{
												"body": {
													"nativeSrc": "13547:220:10",
													"nodeType": "YulBlock",
													"src": "13547:220:10",
													"statements": [
														{
															"nativeSrc": "13557:74:10",
															"nodeType": "YulAssignment",
															"src": "13557:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13623:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13623:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13628:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13628:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13564:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13564:58:10"
																},
																"nativeSrc": "13564:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13564:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13557:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13557:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13729:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13729:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9",
																	"nativeSrc": "13640:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13640:88:10"
																},
																"nativeSrc": "13640:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13640:93:10"
															},
															"nativeSrc": "13640:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13640:93:10"
														},
														{
															"nativeSrc": "13742:19:10",
															"nodeType": "YulAssignment",
															"src": "13742:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13753:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13753:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13758:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13758:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13749:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13749:3:10"
																},
																"nativeSrc": "13749:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13749:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13742:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13742:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13401:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13535:3:10",
														"nodeType": "YulTypedName",
														"src": "13535:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13543:3:10",
														"nodeType": "YulTypedName",
														"src": "13543:3:10",
														"type": ""
													}
												],
												"src": "13401:366:10"
											},
											{
												"body": {
													"nativeSrc": "13944:248:10",
													"nodeType": "YulBlock",
													"src": "13944:248:10",
													"statements": [
														{
															"nativeSrc": "13954:26:10",
															"nodeType": "YulAssignment",
															"src": "13954:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13966:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13966:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13977:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13977:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13962:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13962:3:10"
																},
																"nativeSrc": "13962:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13962:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13954:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13954:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14001:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14001:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14012:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14012:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13997:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13997:3:10"
																		},
																		"nativeSrc": "13997:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13997:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14020:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14020:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14026:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14026:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14016:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14016:3:10"
																		},
																		"nativeSrc": "14016:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14016:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13990:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13990:6:10"
																},
																"nativeSrc": "13990:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13990:47:10"
															},
															"nativeSrc": "13990:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13990:47:10"
														},
														{
															"nativeSrc": "14046:139:10",
															"nodeType": "YulAssignment",
															"src": "14046:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14180:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14180:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14054:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "14054:124:10"
																},
																"nativeSrc": "14054:131:10",
																"nodeType": "YulFunctionCall",
																"src": "14054:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14046:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14046:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13773:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13924:9:10",
														"nodeType": "YulTypedName",
														"src": "13924:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13939:4:10",
														"nodeType": "YulTypedName",
														"src": "13939:4:10",
														"type": ""
													}
												],
												"src": "13773:419:10"
											},
											{
												"body": {
													"nativeSrc": "14304:67:10",
													"nodeType": "YulBlock",
													"src": "14304:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14326:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14326:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14334:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14334:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14322:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14322:3:10"
																		},
																		"nativeSrc": "14322:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14322:14:10"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "14338:25:10",
																		"nodeType": "YulLiteral",
																		"src": "14338:25:10",
																		"type": "",
																		"value": "Caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14315:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14315:6:10"
																},
																"nativeSrc": "14315:49:10",
																"nodeType": "YulFunctionCall",
																"src": "14315:49:10"
															},
															"nativeSrc": "14315:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "14315:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
												"nativeSrc": "14198:173:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14296:6:10",
														"nodeType": "YulTypedName",
														"src": "14296:6:10",
														"type": ""
													}
												],
												"src": "14198:173:10"
											},
											{
												"body": {
													"nativeSrc": "14523:220:10",
													"nodeType": "YulBlock",
													"src": "14523:220:10",
													"statements": [
														{
															"nativeSrc": "14533:74:10",
															"nodeType": "YulAssignment",
															"src": "14533:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14599:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14599:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14604:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14604:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14540:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14540:58:10"
																},
																"nativeSrc": "14540:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14540:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14533:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14533:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14705:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14705:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
																	"nativeSrc": "14616:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "14616:88:10"
																},
																"nativeSrc": "14616:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14616:93:10"
															},
															"nativeSrc": "14616:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "14616:93:10"
														},
														{
															"nativeSrc": "14718:19:10",
															"nodeType": "YulAssignment",
															"src": "14718:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14729:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14729:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14734:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14734:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14725:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14725:3:10"
																},
																"nativeSrc": "14725:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14725:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14718:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14718:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14377:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14511:3:10",
														"nodeType": "YulTypedName",
														"src": "14511:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14519:3:10",
														"nodeType": "YulTypedName",
														"src": "14519:3:10",
														"type": ""
													}
												],
												"src": "14377:366:10"
											},
											{
												"body": {
													"nativeSrc": "14920:248:10",
													"nodeType": "YulBlock",
													"src": "14920:248:10",
													"statements": [
														{
															"nativeSrc": "14930:26:10",
															"nodeType": "YulAssignment",
															"src": "14930:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14942:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14942:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14953:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14953:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14938:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14938:3:10"
																},
																"nativeSrc": "14938:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14938:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14930:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14930:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14977:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14977:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14988:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14988:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14973:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14973:3:10"
																		},
																		"nativeSrc": "14973:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14973:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14996:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14996:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15002:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15002:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14992:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14992:3:10"
																		},
																		"nativeSrc": "14992:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14992:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14966:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14966:6:10"
																},
																"nativeSrc": "14966:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14966:47:10"
															},
															"nativeSrc": "14966:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14966:47:10"
														},
														{
															"nativeSrc": "15022:139:10",
															"nodeType": "YulAssignment",
															"src": "15022:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15156:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15156:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15030:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15030:124:10"
																},
																"nativeSrc": "15030:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15030:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15022:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15022:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14749:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14900:9:10",
														"nodeType": "YulTypedName",
														"src": "14900:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14915:4:10",
														"nodeType": "YulTypedName",
														"src": "14915:4:10",
														"type": ""
													}
												],
												"src": "14749:419:10"
											},
											{
												"body": {
													"nativeSrc": "15280:76:10",
													"nodeType": "YulBlock",
													"src": "15280:76:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15302:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15302:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15310:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15310:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15298:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15298:3:10"
																		},
																		"nativeSrc": "15298:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15298:14:10"
																	},
																	{
																		"hexValue": "4469726563746f72792063616e6e6f74206265207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "15314:34:10",
																		"nodeType": "YulLiteral",
																		"src": "15314:34:10",
																		"type": "",
																		"value": "Directory cannot be zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15291:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15291:6:10"
																},
																"nativeSrc": "15291:58:10",
																"nodeType": "YulFunctionCall",
																"src": "15291:58:10"
															},
															"nativeSrc": "15291:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "15291:58:10"
														}
													]
												},
												"name": "store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
												"nativeSrc": "15174:182:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15272:6:10",
														"nodeType": "YulTypedName",
														"src": "15272:6:10",
														"type": ""
													}
												],
												"src": "15174:182:10"
											},
											{
												"body": {
													"nativeSrc": "15508:220:10",
													"nodeType": "YulBlock",
													"src": "15508:220:10",
													"statements": [
														{
															"nativeSrc": "15518:74:10",
															"nodeType": "YulAssignment",
															"src": "15518:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15584:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15584:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15589:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15589:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15525:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "15525:58:10"
																},
																"nativeSrc": "15525:67:10",
																"nodeType": "YulFunctionCall",
																"src": "15525:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15518:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15518:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15690:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15690:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
																	"nativeSrc": "15601:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "15601:88:10"
																},
																"nativeSrc": "15601:93:10",
																"nodeType": "YulFunctionCall",
																"src": "15601:93:10"
															},
															"nativeSrc": "15601:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "15601:93:10"
														},
														{
															"nativeSrc": "15703:19:10",
															"nodeType": "YulAssignment",
															"src": "15703:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15714:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15714:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15719:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15719:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15710:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15710:3:10"
																},
																"nativeSrc": "15710:12:10",
																"nodeType": "YulFunctionCall",
																"src": "15710:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15703:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15703:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15362:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15496:3:10",
														"nodeType": "YulTypedName",
														"src": "15496:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15504:3:10",
														"nodeType": "YulTypedName",
														"src": "15504:3:10",
														"type": ""
													}
												],
												"src": "15362:366:10"
											},
											{
												"body": {
													"nativeSrc": "15905:248:10",
													"nodeType": "YulBlock",
													"src": "15905:248:10",
													"statements": [
														{
															"nativeSrc": "15915:26:10",
															"nodeType": "YulAssignment",
															"src": "15915:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15927:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15927:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15938:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15938:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15923:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15923:3:10"
																},
																"nativeSrc": "15923:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15923:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15915:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15915:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15962:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15962:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15973:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15973:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15958:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15958:3:10"
																		},
																		"nativeSrc": "15958:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15958:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15981:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15981:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15987:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15987:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15977:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15977:3:10"
																		},
																		"nativeSrc": "15977:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15977:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15951:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15951:6:10"
																},
																"nativeSrc": "15951:47:10",
																"nodeType": "YulFunctionCall",
																"src": "15951:47:10"
															},
															"nativeSrc": "15951:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "15951:47:10"
														},
														{
															"nativeSrc": "16007:139:10",
															"nodeType": "YulAssignment",
															"src": "16007:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16141:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16141:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16015:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "16015:124:10"
																},
																"nativeSrc": "16015:131:10",
																"nodeType": "YulFunctionCall",
																"src": "16015:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16007:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16007:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15734:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15885:9:10",
														"nodeType": "YulTypedName",
														"src": "15885:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15900:4:10",
														"nodeType": "YulTypedName",
														"src": "15900:4:10",
														"type": ""
													}
												],
												"src": "15734:419:10"
											},
											{
												"body": {
													"nativeSrc": "16265:72:10",
													"nodeType": "YulBlock",
													"src": "16265:72:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16287:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16287:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16295:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16295:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16283:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16283:3:10"
																		},
																		"nativeSrc": "16283:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16283:14:10"
																	},
																	{
																		"hexValue": "4469726563746f7279206d757374206265206120636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "16299:30:10",
																		"nodeType": "YulLiteral",
																		"src": "16299:30:10",
																		"type": "",
																		"value": "Directory must be a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16276:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16276:6:10"
																},
																"nativeSrc": "16276:54:10",
																"nodeType": "YulFunctionCall",
																"src": "16276:54:10"
															},
															"nativeSrc": "16276:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "16276:54:10"
														}
													]
												},
												"name": "store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
												"nativeSrc": "16159:178:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16257:6:10",
														"nodeType": "YulTypedName",
														"src": "16257:6:10",
														"type": ""
													}
												],
												"src": "16159:178:10"
											},
											{
												"body": {
													"nativeSrc": "16489:220:10",
													"nodeType": "YulBlock",
													"src": "16489:220:10",
													"statements": [
														{
															"nativeSrc": "16499:74:10",
															"nodeType": "YulAssignment",
															"src": "16499:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16565:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16565:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16570:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16570:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16506:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "16506:58:10"
																},
																"nativeSrc": "16506:67:10",
																"nodeType": "YulFunctionCall",
																"src": "16506:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16499:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16499:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16671:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16671:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
																	"nativeSrc": "16582:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "16582:88:10"
																},
																"nativeSrc": "16582:93:10",
																"nodeType": "YulFunctionCall",
																"src": "16582:93:10"
															},
															"nativeSrc": "16582:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "16582:93:10"
														},
														{
															"nativeSrc": "16684:19:10",
															"nodeType": "YulAssignment",
															"src": "16684:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16695:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16695:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16700:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16700:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16691:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16691:3:10"
																},
																"nativeSrc": "16691:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16691:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16684:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16684:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16343:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16477:3:10",
														"nodeType": "YulTypedName",
														"src": "16477:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16485:3:10",
														"nodeType": "YulTypedName",
														"src": "16485:3:10",
														"type": ""
													}
												],
												"src": "16343:366:10"
											},
											{
												"body": {
													"nativeSrc": "16886:248:10",
													"nodeType": "YulBlock",
													"src": "16886:248:10",
													"statements": [
														{
															"nativeSrc": "16896:26:10",
															"nodeType": "YulAssignment",
															"src": "16896:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16908:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16908:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16919:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16919:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16904:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16904:3:10"
																},
																"nativeSrc": "16904:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16904:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16896:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16896:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16943:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16943:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16954:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16954:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16939:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16939:3:10"
																		},
																		"nativeSrc": "16939:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16939:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16962:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "16962:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16968:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16968:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16958:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16958:3:10"
																		},
																		"nativeSrc": "16958:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16958:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16932:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16932:6:10"
																},
																"nativeSrc": "16932:47:10",
																"nodeType": "YulFunctionCall",
																"src": "16932:47:10"
															},
															"nativeSrc": "16932:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "16932:47:10"
														},
														{
															"nativeSrc": "16988:139:10",
															"nodeType": "YulAssignment",
															"src": "16988:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17122:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17122:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16996:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "16996:124:10"
																},
																"nativeSrc": "16996:131:10",
																"nodeType": "YulFunctionCall",
																"src": "16996:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16988:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16988:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16715:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16866:9:10",
														"nodeType": "YulTypedName",
														"src": "16866:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16881:4:10",
														"nodeType": "YulTypedName",
														"src": "16881:4:10",
														"type": ""
													}
												],
												"src": "16715:419:10"
											},
											{
												"body": {
													"nativeSrc": "17246:125:10",
													"nodeType": "YulBlock",
													"src": "17246:125:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17268:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17268:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17276:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17276:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17264:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17264:3:10"
																		},
																		"nativeSrc": "17264:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17264:14:10"
																	},
																	{
																		"hexValue": "4469726563746f7279206164647265737320646f6573206e6f7420696d706c65",
																		"kind": "string",
																		"nativeSrc": "17280:34:10",
																		"nodeType": "YulLiteral",
																		"src": "17280:34:10",
																		"type": "",
																		"value": "Directory address does not imple"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17257:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17257:6:10"
																},
																"nativeSrc": "17257:58:10",
																"nodeType": "YulFunctionCall",
																"src": "17257:58:10"
															},
															"nativeSrc": "17257:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "17257:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17336:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17336:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17344:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17344:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17332:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17332:3:10"
																		},
																		"nativeSrc": "17332:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17332:15:10"
																	},
																	{
																		"hexValue": "6d656e74206f776e65722829",
																		"kind": "string",
																		"nativeSrc": "17349:14:10",
																		"nodeType": "YulLiteral",
																		"src": "17349:14:10",
																		"type": "",
																		"value": "ment owner()"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17325:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17325:6:10"
																},
																"nativeSrc": "17325:39:10",
																"nodeType": "YulFunctionCall",
																"src": "17325:39:10"
															},
															"nativeSrc": "17325:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "17325:39:10"
														}
													]
												},
												"name": "store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
												"nativeSrc": "17140:231:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17238:6:10",
														"nodeType": "YulTypedName",
														"src": "17238:6:10",
														"type": ""
													}
												],
												"src": "17140:231:10"
											},
											{
												"body": {
													"nativeSrc": "17523:220:10",
													"nodeType": "YulBlock",
													"src": "17523:220:10",
													"statements": [
														{
															"nativeSrc": "17533:74:10",
															"nodeType": "YulAssignment",
															"src": "17533:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17599:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17599:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17604:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17604:2:10",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17540:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "17540:58:10"
																},
																"nativeSrc": "17540:67:10",
																"nodeType": "YulFunctionCall",
																"src": "17540:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17533:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17533:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17705:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17705:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
																	"nativeSrc": "17616:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "17616:88:10"
																},
																"nativeSrc": "17616:93:10",
																"nodeType": "YulFunctionCall",
																"src": "17616:93:10"
															},
															"nativeSrc": "17616:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "17616:93:10"
														},
														{
															"nativeSrc": "17718:19:10",
															"nodeType": "YulAssignment",
															"src": "17718:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17729:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17729:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17734:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17734:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17725:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17725:3:10"
																},
																"nativeSrc": "17725:12:10",
																"nodeType": "YulFunctionCall",
																"src": "17725:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17718:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17718:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17377:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17511:3:10",
														"nodeType": "YulTypedName",
														"src": "17511:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17519:3:10",
														"nodeType": "YulTypedName",
														"src": "17519:3:10",
														"type": ""
													}
												],
												"src": "17377:366:10"
											},
											{
												"body": {
													"nativeSrc": "17920:248:10",
													"nodeType": "YulBlock",
													"src": "17920:248:10",
													"statements": [
														{
															"nativeSrc": "17930:26:10",
															"nodeType": "YulAssignment",
															"src": "17930:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17942:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17942:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17953:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17953:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17938:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17938:3:10"
																},
																"nativeSrc": "17938:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17938:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17930:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17930:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17977:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17977:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17988:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17988:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17973:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17973:3:10"
																		},
																		"nativeSrc": "17973:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17973:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17996:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "17996:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18002:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18002:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17992:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17992:3:10"
																		},
																		"nativeSrc": "17992:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17992:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17966:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17966:6:10"
																},
																"nativeSrc": "17966:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17966:47:10"
															},
															"nativeSrc": "17966:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17966:47:10"
														},
														{
															"nativeSrc": "18022:139:10",
															"nodeType": "YulAssignment",
															"src": "18022:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18156:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18156:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18030:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "18030:124:10"
																},
																"nativeSrc": "18030:131:10",
																"nodeType": "YulFunctionCall",
																"src": "18030:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18022:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18022:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17749:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17900:9:10",
														"nodeType": "YulTypedName",
														"src": "17900:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17915:4:10",
														"nodeType": "YulTypedName",
														"src": "17915:4:10",
														"type": ""
													}
												],
												"src": "17749:419:10"
											},
											{
												"body": {
													"nativeSrc": "18328:288:10",
													"nodeType": "YulBlock",
													"src": "18328:288:10",
													"statements": [
														{
															"nativeSrc": "18338:26:10",
															"nodeType": "YulAssignment",
															"src": "18338:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18350:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18350:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18361:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18361:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18346:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18346:3:10"
																},
																"nativeSrc": "18346:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18346:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18338:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18338:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18418:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18418:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18431:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18431:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18442:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18442:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18427:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18427:3:10"
																		},
																		"nativeSrc": "18427:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18427:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18374:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "18374:43:10"
																},
																"nativeSrc": "18374:71:10",
																"nodeType": "YulFunctionCall",
																"src": "18374:71:10"
															},
															"nativeSrc": "18374:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "18374:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18499:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18499:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18512:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18512:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18523:2:10",
																				"nodeType": "YulLiteral",
																				"src": "18523:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18508:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18508:3:10"
																		},
																		"nativeSrc": "18508:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18508:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18455:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "18455:43:10"
																},
																"nativeSrc": "18455:72:10",
																"nodeType": "YulFunctionCall",
																"src": "18455:72:10"
															},
															"nativeSrc": "18455:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "18455:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18581:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18581:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18594:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18594:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18605:2:10",
																				"nodeType": "YulLiteral",
																				"src": "18605:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18590:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18590:3:10"
																		},
																		"nativeSrc": "18590:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18590:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18537:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "18537:43:10"
																},
																"nativeSrc": "18537:72:10",
																"nodeType": "YulFunctionCall",
																"src": "18537:72:10"
															},
															"nativeSrc": "18537:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "18537:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "18174:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18284:9:10",
														"nodeType": "YulTypedName",
														"src": "18284:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18296:6:10",
														"nodeType": "YulTypedName",
														"src": "18296:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18304:6:10",
														"nodeType": "YulTypedName",
														"src": "18304:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18312:6:10",
														"nodeType": "YulTypedName",
														"src": "18312:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18323:4:10",
														"nodeType": "YulTypedName",
														"src": "18323:4:10",
														"type": ""
													}
												],
												"src": "18174:442:10"
											},
											{
												"body": {
													"nativeSrc": "18676:87:10",
													"nodeType": "YulBlock",
													"src": "18676:87:10",
													"statements": [
														{
															"nativeSrc": "18686:11:10",
															"nodeType": "YulAssignment",
															"src": "18686:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "18694:3:10",
																"nodeType": "YulIdentifier",
																"src": "18694:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "18686:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18686:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18714:1:10",
																		"nodeType": "YulLiteral",
																		"src": "18714:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "18717:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18717:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18707:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18707:6:10"
																},
																"nativeSrc": "18707:14:10",
																"nodeType": "YulFunctionCall",
																"src": "18707:14:10"
															},
															"nativeSrc": "18707:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "18707:14:10"
														},
														{
															"nativeSrc": "18730:26:10",
															"nodeType": "YulAssignment",
															"src": "18730:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18748:1:10",
																		"nodeType": "YulLiteral",
																		"src": "18748:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18751:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18751:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "18738:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "18738:9:10"
																},
																"nativeSrc": "18738:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18738:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "18730:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18730:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "18622:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "18663:3:10",
														"nodeType": "YulTypedName",
														"src": "18663:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "18671:4:10",
														"nodeType": "YulTypedName",
														"src": "18671:4:10",
														"type": ""
													}
												],
												"src": "18622:141:10"
											},
											{
												"body": {
													"nativeSrc": "18813:49:10",
													"nodeType": "YulBlock",
													"src": "18813:49:10",
													"statements": [
														{
															"nativeSrc": "18823:33:10",
															"nodeType": "YulAssignment",
															"src": "18823:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18841:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "18841:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18848:2:10",
																				"nodeType": "YulLiteral",
																				"src": "18848:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18837:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18837:3:10"
																		},
																		"nativeSrc": "18837:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18837:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18853:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18853:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "18833:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18833:3:10"
																},
																"nativeSrc": "18833:23:10",
																"nodeType": "YulFunctionCall",
																"src": "18833:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18823:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18823:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "18769:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18796:5:10",
														"nodeType": "YulTypedName",
														"src": "18796:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "18806:6:10",
														"nodeType": "YulTypedName",
														"src": "18806:6:10",
														"type": ""
													}
												],
												"src": "18769:93:10"
											},
											{
												"body": {
													"nativeSrc": "18921:54:10",
													"nodeType": "YulBlock",
													"src": "18921:54:10",
													"statements": [
														{
															"nativeSrc": "18931:37:10",
															"nodeType": "YulAssignment",
															"src": "18931:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "18956:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18956:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "18962:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "18962:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "18952:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18952:3:10"
																},
																"nativeSrc": "18952:16:10",
																"nodeType": "YulFunctionCall",
																"src": "18952:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "18931:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "18931:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "18868:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "18896:4:10",
														"nodeType": "YulTypedName",
														"src": "18896:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "18902:5:10",
														"nodeType": "YulTypedName",
														"src": "18902:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "18912:8:10",
														"nodeType": "YulTypedName",
														"src": "18912:8:10",
														"type": ""
													}
												],
												"src": "18868:107:10"
											},
											{
												"body": {
													"nativeSrc": "19057:317:10",
													"nodeType": "YulBlock",
													"src": "19057:317:10",
													"statements": [
														{
															"nativeSrc": "19067:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "19067:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "19088:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "19088:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19100:1:10",
																		"nodeType": "YulLiteral",
																		"src": "19100:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "19084:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19084:3:10"
																},
																"nativeSrc": "19084:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19084:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "19071:9:10",
																	"nodeType": "YulTypedName",
																	"src": "19071:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19111:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "19111:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "19142:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19142:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19153:66:10",
																		"nodeType": "YulLiteral",
																		"src": "19153:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "19123:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "19123:18:10"
																},
																"nativeSrc": "19123:97:10",
																"nodeType": "YulFunctionCall",
																"src": "19123:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "19115:4:10",
																	"nodeType": "YulTypedName",
																	"src": "19115:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19229:51:10",
															"nodeType": "YulAssignment",
															"src": "19229:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "19260:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19260:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "19271:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "19271:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "19241:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "19241:18:10"
																},
																"nativeSrc": "19241:39:10",
																"nodeType": "YulFunctionCall",
																"src": "19241:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "19229:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "19229:8:10"
																}
															]
														},
														{
															"nativeSrc": "19289:30:10",
															"nodeType": "YulAssignment",
															"src": "19289:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19302:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "19302:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "19313:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "19313:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "19309:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19309:3:10"
																		},
																		"nativeSrc": "19309:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19309:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "19298:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19298:3:10"
																},
																"nativeSrc": "19298:21:10",
																"nodeType": "YulFunctionCall",
																"src": "19298:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19289:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "19289:5:10"
																}
															]
														},
														{
															"nativeSrc": "19328:40:10",
															"nodeType": "YulAssignment",
															"src": "19328:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19341:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "19341:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "19352:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "19352:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "19362:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "19362:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "19348:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19348:3:10"
																		},
																		"nativeSrc": "19348:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19348:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "19338:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "19338:2:10"
																},
																"nativeSrc": "19338:30:10",
																"nodeType": "YulFunctionCall",
																"src": "19338:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "19328:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19328:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "18981:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19018:5:10",
														"nodeType": "YulTypedName",
														"src": "19018:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "19025:10:10",
														"nodeType": "YulTypedName",
														"src": "19025:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "19037:8:10",
														"nodeType": "YulTypedName",
														"src": "19037:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "19050:6:10",
														"nodeType": "YulTypedName",
														"src": "19050:6:10",
														"type": ""
													}
												],
												"src": "18981:393:10"
											},
											{
												"body": {
													"nativeSrc": "19440:82:10",
													"nodeType": "YulBlock",
													"src": "19440:82:10",
													"statements": [
														{
															"nativeSrc": "19450:66:10",
															"nodeType": "YulAssignment",
															"src": "19450:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "19508:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "19508:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "19490:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "19490:17:10"
																				},
																				"nativeSrc": "19490:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "19490:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "19481:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "19481:8:10"
																		},
																		"nativeSrc": "19481:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19481:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19463:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "19463:17:10"
																},
																"nativeSrc": "19463:53:10",
																"nodeType": "YulFunctionCall",
																"src": "19463:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "19450:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "19450:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "19380:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19420:5:10",
														"nodeType": "YulTypedName",
														"src": "19420:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "19430:9:10",
														"nodeType": "YulTypedName",
														"src": "19430:9:10",
														"type": ""
													}
												],
												"src": "19380:142:10"
											},
											{
												"body": {
													"nativeSrc": "19575:28:10",
													"nodeType": "YulBlock",
													"src": "19575:28:10",
													"statements": [
														{
															"nativeSrc": "19585:12:10",
															"nodeType": "YulAssignment",
															"src": "19585:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "19592:5:10",
																"nodeType": "YulIdentifier",
																"src": "19592:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "19585:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19585:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "19528:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19561:5:10",
														"nodeType": "YulTypedName",
														"src": "19561:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "19571:3:10",
														"nodeType": "YulTypedName",
														"src": "19571:3:10",
														"type": ""
													}
												],
												"src": "19528:75:10"
											},
											{
												"body": {
													"nativeSrc": "19685:193:10",
													"nodeType": "YulBlock",
													"src": "19685:193:10",
													"statements": [
														{
															"nativeSrc": "19695:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "19695:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "19750:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "19750:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "19719:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "19719:30:10"
																},
																"nativeSrc": "19719:39:10",
																"nodeType": "YulFunctionCall",
																"src": "19719:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "19699:16:10",
																	"nodeType": "YulTypedName",
																	"src": "19699:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "19774:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19774:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "19814:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "19814:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "19808:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "19808:5:10"
																				},
																				"nativeSrc": "19808:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "19808:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "19821:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19821:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "19853:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "19853:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "19829:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "19829:23:10"
																				},
																				"nativeSrc": "19829:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "19829:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "19780:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "19780:27:10"
																		},
																		"nativeSrc": "19780:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19780:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "19767:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19767:6:10"
																},
																"nativeSrc": "19767:105:10",
																"nodeType": "YulFunctionCall",
																"src": "19767:105:10"
															},
															"nativeSrc": "19767:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "19767:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "19609:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "19662:4:10",
														"nodeType": "YulTypedName",
														"src": "19662:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "19668:6:10",
														"nodeType": "YulTypedName",
														"src": "19668:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "19676:7:10",
														"nodeType": "YulTypedName",
														"src": "19676:7:10",
														"type": ""
													}
												],
												"src": "19609:269:10"
											},
											{
												"body": {
													"nativeSrc": "19933:24:10",
													"nodeType": "YulBlock",
													"src": "19933:24:10",
													"statements": [
														{
															"nativeSrc": "19943:8:10",
															"nodeType": "YulAssignment",
															"src": "19943:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "19950:1:10",
																"nodeType": "YulLiteral",
																"src": "19950:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "19943:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19943:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "19884:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "19929:3:10",
														"nodeType": "YulTypedName",
														"src": "19929:3:10",
														"type": ""
													}
												],
												"src": "19884:73:10"
											},
											{
												"body": {
													"nativeSrc": "20016:136:10",
													"nodeType": "YulBlock",
													"src": "20016:136:10",
													"statements": [
														{
															"nativeSrc": "20026:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "20026:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "20040:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "20040:30:10"
																},
																"nativeSrc": "20040:32:10",
																"nodeType": "YulFunctionCall",
																"src": "20040:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "20030:6:10",
																	"nodeType": "YulTypedName",
																	"src": "20030:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "20125:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "20125:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "20131:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20131:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "20139:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20139:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "20081:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20081:43:10"
																},
																"nativeSrc": "20081:65:10",
																"nodeType": "YulFunctionCall",
																"src": "20081:65:10"
															},
															"nativeSrc": "20081:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "20081:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "19963:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "20002:4:10",
														"nodeType": "YulTypedName",
														"src": "20002:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "20008:6:10",
														"nodeType": "YulTypedName",
														"src": "20008:6:10",
														"type": ""
													}
												],
												"src": "19963:189:10"
											},
											{
												"body": {
													"nativeSrc": "20208:136:10",
													"nodeType": "YulBlock",
													"src": "20208:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "20275:63:10",
																"nodeType": "YulBlock",
																"src": "20275:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "20319:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "20319:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20326:1:10",
																					"nodeType": "YulLiteral",
																					"src": "20326:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "20289:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "20289:29:10"
																			},
																			"nativeSrc": "20289:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "20289:39:10"
																		},
																		"nativeSrc": "20289:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "20289:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "20228:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "20228:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "20235:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20235:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "20225:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "20225:2:10"
																},
																"nativeSrc": "20225:14:10",
																"nodeType": "YulFunctionCall",
																"src": "20225:14:10"
															},
															"nativeSrc": "20218:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "20240:26:10",
																"nodeType": "YulBlock",
																"src": "20240:26:10",
																"statements": [
																	{
																		"nativeSrc": "20242:22:10",
																		"nodeType": "YulAssignment",
																		"src": "20242:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "20255:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "20255:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20262:1:10",
																					"nodeType": "YulLiteral",
																					"src": "20262:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "20251:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "20251:3:10"
																			},
																			"nativeSrc": "20251:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "20251:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "20242:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "20242:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "20222:2:10",
																"nodeType": "YulBlock",
																"src": "20222:2:10",
																"statements": []
															},
															"src": "20218:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "20158:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "20196:5:10",
														"nodeType": "YulTypedName",
														"src": "20196:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20203:3:10",
														"nodeType": "YulTypedName",
														"src": "20203:3:10",
														"type": ""
													}
												],
												"src": "20158:186:10"
											},
											{
												"body": {
													"nativeSrc": "20429:464:10",
													"nodeType": "YulBlock",
													"src": "20429:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "20455:431:10",
																"nodeType": "YulBlock",
																"src": "20455:431:10",
																"statements": [
																	{
																		"nativeSrc": "20469:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "20469:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "20517:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "20517:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "20485:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "20485:31:10"
																			},
																			"nativeSrc": "20485:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "20485:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "20473:8:10",
																				"nodeType": "YulTypedName",
																				"src": "20473:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "20536:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "20536:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "20559:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "20559:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "20587:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "20587:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "20569:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "20569:17:10"
																					},
																					"nativeSrc": "20569:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "20569:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "20555:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "20555:3:10"
																			},
																			"nativeSrc": "20555:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "20555:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "20540:11:10",
																				"nodeType": "YulTypedName",
																				"src": "20540:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "20756:27:10",
																			"nodeType": "YulBlock",
																			"src": "20756:27:10",
																			"statements": [
																				{
																					"nativeSrc": "20758:23:10",
																					"nodeType": "YulAssignment",
																					"src": "20758:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "20773:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "20773:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "20758:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "20758:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "20740:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "20740:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20752:2:10",
																					"nodeType": "YulLiteral",
																					"src": "20752:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "20737:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "20737:2:10"
																			},
																			"nativeSrc": "20737:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "20737:18:10"
																		},
																		"nativeSrc": "20734:49:10",
																		"nodeType": "YulIf",
																		"src": "20734:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "20825:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "20825:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "20842:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "20842:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "20870:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "20870:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "20852:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "20852:17:10"
																							},
																							"nativeSrc": "20852:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "20852:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "20838:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "20838:3:10"
																					},
																					"nativeSrc": "20838:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "20838:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "20796:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "20796:28:10"
																			},
																			"nativeSrc": "20796:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "20796:80:10"
																		},
																		"nativeSrc": "20796:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "20796:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "20446:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20446:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20451:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20451:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20443:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "20443:2:10"
																},
																"nativeSrc": "20443:11:10",
																"nodeType": "YulFunctionCall",
																"src": "20443:11:10"
															},
															"nativeSrc": "20440:446:10",
															"nodeType": "YulIf",
															"src": "20440:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "20350:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "20405:5:10",
														"nodeType": "YulTypedName",
														"src": "20405:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "20412:3:10",
														"nodeType": "YulTypedName",
														"src": "20412:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "20417:10:10",
														"nodeType": "YulTypedName",
														"src": "20417:10:10",
														"type": ""
													}
												],
												"src": "20350:543:10"
											},
											{
												"body": {
													"nativeSrc": "20962:54:10",
													"nodeType": "YulBlock",
													"src": "20962:54:10",
													"statements": [
														{
															"nativeSrc": "20972:37:10",
															"nodeType": "YulAssignment",
															"src": "20972:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "20997:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "20997:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "21003:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "21003:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "20993:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20993:3:10"
																},
																"nativeSrc": "20993:16:10",
																"nodeType": "YulFunctionCall",
																"src": "20993:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "20972:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "20972:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "20899:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "20937:4:10",
														"nodeType": "YulTypedName",
														"src": "20937:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "20943:5:10",
														"nodeType": "YulTypedName",
														"src": "20943:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "20953:8:10",
														"nodeType": "YulTypedName",
														"src": "20953:8:10",
														"type": ""
													}
												],
												"src": "20899:117:10"
											},
											{
												"body": {
													"nativeSrc": "21073:118:10",
													"nodeType": "YulBlock",
													"src": "21073:118:10",
													"statements": [
														{
															"nativeSrc": "21083:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "21083:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "21132:1:10",
																						"nodeType": "YulLiteral",
																						"src": "21132:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "21135:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "21135:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "21128:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "21128:3:10"
																				},
																				"nativeSrc": "21128:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "21128:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "21147:1:10",
																						"nodeType": "YulLiteral",
																						"src": "21147:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "21143:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "21143:3:10"
																				},
																				"nativeSrc": "21143:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "21143:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "21099:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "21099:28:10"
																		},
																		"nativeSrc": "21099:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21099:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "21095:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21095:3:10"
																},
																"nativeSrc": "21095:56:10",
																"nodeType": "YulFunctionCall",
																"src": "21095:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "21087:4:10",
																	"nodeType": "YulTypedName",
																	"src": "21087:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21160:25:10",
															"nodeType": "YulAssignment",
															"src": "21160:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21174:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "21174:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "21180:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "21180:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21170:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21170:3:10"
																},
																"nativeSrc": "21170:15:10",
																"nodeType": "YulFunctionCall",
																"src": "21170:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "21160:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21160:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "21022:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "21050:4:10",
														"nodeType": "YulTypedName",
														"src": "21050:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "21056:5:10",
														"nodeType": "YulTypedName",
														"src": "21056:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "21066:6:10",
														"nodeType": "YulTypedName",
														"src": "21066:6:10",
														"type": ""
													}
												],
												"src": "21022:169:10"
											},
											{
												"body": {
													"nativeSrc": "21277:214:10",
													"nodeType": "YulBlock",
													"src": "21277:214:10",
													"statements": [
														{
															"nativeSrc": "21410:37:10",
															"nodeType": "YulAssignment",
															"src": "21410:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21437:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "21437:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "21443:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21443:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "21418:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "21418:18:10"
																},
																"nativeSrc": "21418:29:10",
																"nodeType": "YulFunctionCall",
																"src": "21418:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "21410:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21410:4:10"
																}
															]
														},
														{
															"nativeSrc": "21456:29:10",
															"nodeType": "YulAssignment",
															"src": "21456:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21467:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "21467:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "21477:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21477:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "21480:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "21480:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "21473:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21473:3:10"
																		},
																		"nativeSrc": "21473:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21473:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "21464:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "21464:2:10"
																},
																"nativeSrc": "21464:21:10",
																"nodeType": "YulFunctionCall",
																"src": "21464:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "21456:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21456:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "21196:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "21258:4:10",
														"nodeType": "YulTypedName",
														"src": "21258:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "21264:3:10",
														"nodeType": "YulTypedName",
														"src": "21264:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "21272:4:10",
														"nodeType": "YulTypedName",
														"src": "21272:4:10",
														"type": ""
													}
												],
												"src": "21196:295:10"
											},
											{
												"body": {
													"nativeSrc": "21588:1303:10",
													"nodeType": "YulBlock",
													"src": "21588:1303:10",
													"statements": [
														{
															"nativeSrc": "21599:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "21599:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "21646:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21646:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "21613:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "21613:32:10"
																},
																"nativeSrc": "21613:37:10",
																"nodeType": "YulFunctionCall",
																"src": "21613:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "21603:6:10",
																	"nodeType": "YulTypedName",
																	"src": "21603:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21735:22:10",
																"nodeType": "YulBlock",
																"src": "21735:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "21737:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "21737:16:10"
																			},
																			"nativeSrc": "21737:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "21737:18:10"
																		},
																		"nativeSrc": "21737:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "21737:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "21707:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21707:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21715:18:10",
																		"nodeType": "YulLiteral",
																		"src": "21715:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21704:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "21704:2:10"
																},
																"nativeSrc": "21704:30:10",
																"nodeType": "YulFunctionCall",
																"src": "21704:30:10"
															},
															"nativeSrc": "21701:56:10",
															"nodeType": "YulIf",
															"src": "21701:56:10"
														},
														{
															"nativeSrc": "21767:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "21767:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "21813:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "21813:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "21807:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "21807:5:10"
																		},
																		"nativeSrc": "21807:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21807:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "21781:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "21781:25:10"
																},
																"nativeSrc": "21781:38:10",
																"nodeType": "YulFunctionCall",
																"src": "21781:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "21771:6:10",
																	"nodeType": "YulTypedName",
																	"src": "21771:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "21912:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "21912:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "21918:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21918:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "21926:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21926:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "21866:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "21866:45:10"
																},
																"nativeSrc": "21866:67:10",
																"nodeType": "YulFunctionCall",
																"src": "21866:67:10"
															},
															"nativeSrc": "21866:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "21866:67:10"
														},
														{
															"nativeSrc": "21943:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "21943:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "21960:1:10",
																"nodeType": "YulLiteral",
																"src": "21960:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "21947:9:10",
																	"nodeType": "YulTypedName",
																	"src": "21947:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21971:17:10",
															"nodeType": "YulAssignment",
															"src": "21971:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "21984:4:10",
																"nodeType": "YulLiteral",
																"src": "21984:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "21971:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "21971:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "22035:611:10",
																		"nodeType": "YulBlock",
																		"src": "22035:611:10",
																		"statements": [
																			{
																				"nativeSrc": "22049:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22049:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "22068:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "22068:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "22080:4:10",
																									"nodeType": "YulLiteral",
																									"src": "22080:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "22076:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "22076:3:10"
																							},
																							"nativeSrc": "22076:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "22076:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "22064:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "22064:3:10"
																					},
																					"nativeSrc": "22064:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "22064:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "22053:7:10",
																						"nodeType": "YulTypedName",
																						"src": "22053:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "22100:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22100:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "22146:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "22146:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "22114:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "22114:31:10"
																					},
																					"nativeSrc": "22114:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "22114:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "22104:6:10",
																						"nodeType": "YulTypedName",
																						"src": "22104:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "22164:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22164:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "22173:1:10",
																					"nodeType": "YulLiteral",
																					"src": "22173:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "22168:1:10",
																						"nodeType": "YulTypedName",
																						"src": "22168:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "22232:163:10",
																					"nodeType": "YulBlock",
																					"src": "22232:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "22257:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "22257:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "22275:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "22275:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "22280:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "22280:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "22271:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "22271:3:10"
																												},
																												"nativeSrc": "22271:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "22271:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "22265:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "22265:5:10"
																										},
																										"nativeSrc": "22265:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "22265:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "22250:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "22250:6:10"
																								},
																								"nativeSrc": "22250:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "22250:42:10"
																							},
																							"nativeSrc": "22250:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "22250:42:10"
																						},
																						{
																							"nativeSrc": "22309:24:10",
																							"nodeType": "YulAssignment",
																							"src": "22309:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "22323:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "22323:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "22331:1:10",
																										"nodeType": "YulLiteral",
																										"src": "22331:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "22319:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "22319:3:10"
																								},
																								"nativeSrc": "22319:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "22319:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "22309:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "22309:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "22350:31:10",
																							"nodeType": "YulAssignment",
																							"src": "22350:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "22367:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "22367:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "22378:2:10",
																										"nodeType": "YulLiteral",
																										"src": "22378:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "22363:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "22363:3:10"
																								},
																								"nativeSrc": "22363:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "22363:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "22350:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "22350:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "22198:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "22198:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "22201:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "22201:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "22195:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "22195:2:10"
																					},
																					"nativeSrc": "22195:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "22195:14:10"
																				},
																				"nativeSrc": "22187:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "22210:21:10",
																					"nodeType": "YulBlock",
																					"src": "22210:21:10",
																					"statements": [
																						{
																							"nativeSrc": "22212:17:10",
																							"nodeType": "YulAssignment",
																							"src": "22212:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "22221:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "22221:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "22224:4:10",
																										"nodeType": "YulLiteral",
																										"src": "22224:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "22217:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "22217:3:10"
																								},
																								"nativeSrc": "22217:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "22217:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "22212:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "22212:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "22191:3:10",
																					"nodeType": "YulBlock",
																					"src": "22191:3:10",
																					"statements": []
																				},
																				"src": "22187:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "22431:156:10",
																					"nodeType": "YulBlock",
																					"src": "22431:156:10",
																					"statements": [
																						{
																							"nativeSrc": "22449:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "22449:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "22476:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "22476:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "22481:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "22481:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "22472:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "22472:3:10"
																										},
																										"nativeSrc": "22472:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "22472:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "22466:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "22466:5:10"
																								},
																								"nativeSrc": "22466:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "22466:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "22453:9:10",
																									"nodeType": "YulTypedName",
																									"src": "22453:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "22516:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "22516:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "22543:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "22543:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "22558:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "22558:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "22566:4:10",
																														"nodeType": "YulLiteral",
																														"src": "22566:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "22554:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "22554:3:10"
																												},
																												"nativeSrc": "22554:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "22554:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "22524:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "22524:18:10"
																										},
																										"nativeSrc": "22524:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "22524:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "22509:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "22509:6:10"
																								},
																								"nativeSrc": "22509:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "22509:64:10"
																							},
																							"nativeSrc": "22509:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "22509:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "22414:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "22414:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "22423:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "22423:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "22411:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "22411:2:10"
																					},
																					"nativeSrc": "22411:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "22411:19:10"
																				},
																				"nativeSrc": "22408:179:10",
																				"nodeType": "YulIf",
																				"src": "22408:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "22607:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "22607:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "22621:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "22621:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "22629:1:10",
																											"nodeType": "YulLiteral",
																											"src": "22629:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "22617:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "22617:3:10"
																									},
																									"nativeSrc": "22617:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "22617:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "22633:1:10",
																									"nodeType": "YulLiteral",
																									"src": "22633:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "22613:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "22613:3:10"
																							},
																							"nativeSrc": "22613:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "22613:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "22600:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "22600:6:10"
																					},
																					"nativeSrc": "22600:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "22600:36:10"
																				},
																				"nativeSrc": "22600:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "22600:36:10"
																			}
																		]
																	},
																	"nativeSrc": "22028:618:10",
																	"nodeType": "YulCase",
																	"src": "22028:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22033:1:10",
																		"nodeType": "YulLiteral",
																		"src": "22033:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "22663:222:10",
																		"nodeType": "YulBlock",
																		"src": "22663:222:10",
																		"statements": [
																			{
																				"nativeSrc": "22677:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22677:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "22690:1:10",
																					"nodeType": "YulLiteral",
																					"src": "22690:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "22681:5:10",
																						"nodeType": "YulTypedName",
																						"src": "22681:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "22714:67:10",
																					"nodeType": "YulBlock",
																					"src": "22714:67:10",
																					"statements": [
																						{
																							"nativeSrc": "22732:35:10",
																							"nodeType": "YulAssignment",
																							"src": "22732:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "22751:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "22751:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "22756:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "22756:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "22747:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "22747:3:10"
																										},
																										"nativeSrc": "22747:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "22747:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "22741:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "22741:5:10"
																								},
																								"nativeSrc": "22741:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "22741:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "22732:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "22732:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "22707:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "22707:6:10"
																				},
																				"nativeSrc": "22704:77:10",
																				"nodeType": "YulIf",
																				"src": "22704:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "22801:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "22801:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "22860:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "22860:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "22867:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "22867:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "22807:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "22807:52:10"
																							},
																							"nativeSrc": "22807:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "22807:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "22794:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "22794:6:10"
																					},
																					"nativeSrc": "22794:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "22794:81:10"
																				},
																				"nativeSrc": "22794:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "22794:81:10"
																			}
																		]
																	},
																	"nativeSrc": "22655:230:10",
																	"nodeType": "YulCase",
																	"src": "22655:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "22008:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22008:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22016:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22016:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22005:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "22005:2:10"
																},
																"nativeSrc": "22005:14:10",
																"nodeType": "YulFunctionCall",
																"src": "22005:14:10"
															},
															"nativeSrc": "21998:887:10",
															"nodeType": "YulSwitch",
															"src": "21998:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "21496:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "21577:4:10",
														"nodeType": "YulTypedName",
														"src": "21577:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "21583:3:10",
														"nodeType": "YulTypedName",
														"src": "21583:3:10",
														"type": ""
													}
												],
												"src": "21496:1395:10"
											},
											{
												"body": {
													"nativeSrc": "23003:114:10",
													"nodeType": "YulBlock",
													"src": "23003:114:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23025:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "23025:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23033:1:10",
																				"nodeType": "YulLiteral",
																				"src": "23033:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23021:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23021:3:10"
																		},
																		"nativeSrc": "23021:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23021:14:10"
																	},
																	{
																		"hexValue": "457466546f6b656e3a206576656e747320636f6e7472616374206e6f74207365",
																		"kind": "string",
																		"nativeSrc": "23037:34:10",
																		"nodeType": "YulLiteral",
																		"src": "23037:34:10",
																		"type": "",
																		"value": "EtfToken: events contract not se"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23014:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23014:6:10"
																},
																"nativeSrc": "23014:58:10",
																"nodeType": "YulFunctionCall",
																"src": "23014:58:10"
															},
															"nativeSrc": "23014:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "23014:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23093:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "23093:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23101:2:10",
																				"nodeType": "YulLiteral",
																				"src": "23101:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23089:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23089:3:10"
																		},
																		"nativeSrc": "23089:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23089:15:10"
																	},
																	{
																		"hexValue": "74",
																		"kind": "string",
																		"nativeSrc": "23106:3:10",
																		"nodeType": "YulLiteral",
																		"src": "23106:3:10",
																		"type": "",
																		"value": "t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23082:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23082:6:10"
																},
																"nativeSrc": "23082:28:10",
																"nodeType": "YulFunctionCall",
																"src": "23082:28:10"
															},
															"nativeSrc": "23082:28:10",
															"nodeType": "YulExpressionStatement",
															"src": "23082:28:10"
														}
													]
												},
												"name": "store_literal_in_memory_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4",
												"nativeSrc": "22897:220:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22995:6:10",
														"nodeType": "YulTypedName",
														"src": "22995:6:10",
														"type": ""
													}
												],
												"src": "22897:220:10"
											},
											{
												"body": {
													"nativeSrc": "23269:220:10",
													"nodeType": "YulBlock",
													"src": "23269:220:10",
													"statements": [
														{
															"nativeSrc": "23279:74:10",
															"nodeType": "YulAssignment",
															"src": "23279:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23345:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23345:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23350:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23350:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23286:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "23286:58:10"
																},
																"nativeSrc": "23286:67:10",
																"nodeType": "YulFunctionCall",
																"src": "23286:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23279:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23279:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23451:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23451:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4",
																	"nativeSrc": "23362:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "23362:88:10"
																},
																"nativeSrc": "23362:93:10",
																"nodeType": "YulFunctionCall",
																"src": "23362:93:10"
															},
															"nativeSrc": "23362:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "23362:93:10"
														},
														{
															"nativeSrc": "23464:19:10",
															"nodeType": "YulAssignment",
															"src": "23464:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23475:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23475:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23480:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23480:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23471:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23471:3:10"
																},
																"nativeSrc": "23471:12:10",
																"nodeType": "YulFunctionCall",
																"src": "23471:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23464:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23464:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23123:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23257:3:10",
														"nodeType": "YulTypedName",
														"src": "23257:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23265:3:10",
														"nodeType": "YulTypedName",
														"src": "23265:3:10",
														"type": ""
													}
												],
												"src": "23123:366:10"
											},
											{
												"body": {
													"nativeSrc": "23666:248:10",
													"nodeType": "YulBlock",
													"src": "23666:248:10",
													"statements": [
														{
															"nativeSrc": "23676:26:10",
															"nodeType": "YulAssignment",
															"src": "23676:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23688:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "23688:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23699:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23699:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23684:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23684:3:10"
																},
																"nativeSrc": "23684:18:10",
																"nodeType": "YulFunctionCall",
																"src": "23684:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23676:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23676:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23723:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23723:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23734:1:10",
																				"nodeType": "YulLiteral",
																				"src": "23734:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23719:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23719:3:10"
																		},
																		"nativeSrc": "23719:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23719:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23742:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "23742:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23748:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23748:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23738:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23738:3:10"
																		},
																		"nativeSrc": "23738:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23738:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23712:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23712:6:10"
																},
																"nativeSrc": "23712:47:10",
																"nodeType": "YulFunctionCall",
																"src": "23712:47:10"
															},
															"nativeSrc": "23712:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "23712:47:10"
														},
														{
															"nativeSrc": "23768:139:10",
															"nodeType": "YulAssignment",
															"src": "23768:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23902:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "23902:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23776:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "23776:124:10"
																},
																"nativeSrc": "23776:131:10",
																"nodeType": "YulFunctionCall",
																"src": "23776:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23768:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23768:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23495:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23646:9:10",
														"nodeType": "YulTypedName",
														"src": "23646:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23661:4:10",
														"nodeType": "YulTypedName",
														"src": "23661:4:10",
														"type": ""
													}
												],
												"src": "23495:419:10"
											},
											{
												"body": {
													"nativeSrc": "24074:288:10",
													"nodeType": "YulBlock",
													"src": "24074:288:10",
													"statements": [
														{
															"nativeSrc": "24084:26:10",
															"nodeType": "YulAssignment",
															"src": "24084:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24096:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "24096:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24107:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24107:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24092:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24092:3:10"
																},
																"nativeSrc": "24092:18:10",
																"nodeType": "YulFunctionCall",
																"src": "24092:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24084:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "24084:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24164:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "24164:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24177:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24177:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24188:1:10",
																				"nodeType": "YulLiteral",
																				"src": "24188:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24173:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24173:3:10"
																		},
																		"nativeSrc": "24173:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24173:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24120:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "24120:43:10"
																},
																"nativeSrc": "24120:71:10",
																"nodeType": "YulFunctionCall",
																"src": "24120:71:10"
															},
															"nativeSrc": "24120:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "24120:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24245:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "24245:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24258:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24258:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24269:2:10",
																				"nodeType": "YulLiteral",
																				"src": "24269:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24254:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24254:3:10"
																		},
																		"nativeSrc": "24254:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24254:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24201:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "24201:43:10"
																},
																"nativeSrc": "24201:72:10",
																"nodeType": "YulFunctionCall",
																"src": "24201:72:10"
															},
															"nativeSrc": "24201:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "24201:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "24327:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "24327:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24340:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24340:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24351:2:10",
																				"nodeType": "YulLiteral",
																				"src": "24351:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24336:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24336:3:10"
																		},
																		"nativeSrc": "24336:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24336:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24283:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "24283:43:10"
																},
																"nativeSrc": "24283:72:10",
																"nodeType": "YulFunctionCall",
																"src": "24283:72:10"
															},
															"nativeSrc": "24283:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "24283:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "23920:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24030:9:10",
														"nodeType": "YulTypedName",
														"src": "24030:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "24042:6:10",
														"nodeType": "YulTypedName",
														"src": "24042:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24050:6:10",
														"nodeType": "YulTypedName",
														"src": "24050:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24058:6:10",
														"nodeType": "YulTypedName",
														"src": "24058:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24069:4:10",
														"nodeType": "YulTypedName",
														"src": "24069:4:10",
														"type": ""
													}
												],
												"src": "23920:442:10"
											},
											{
												"body": {
													"nativeSrc": "24396:152:10",
													"nodeType": "YulBlock",
													"src": "24396:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24413:1:10",
																		"nodeType": "YulLiteral",
																		"src": "24413:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24416:77:10",
																		"nodeType": "YulLiteral",
																		"src": "24416:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24406:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "24406:6:10"
																},
																"nativeSrc": "24406:88:10",
																"nodeType": "YulFunctionCall",
																"src": "24406:88:10"
															},
															"nativeSrc": "24406:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "24406:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24510:1:10",
																		"nodeType": "YulLiteral",
																		"src": "24510:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24513:4:10",
																		"nodeType": "YulLiteral",
																		"src": "24513:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24503:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "24503:6:10"
																},
																"nativeSrc": "24503:15:10",
																"nodeType": "YulFunctionCall",
																"src": "24503:15:10"
															},
															"nativeSrc": "24503:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "24503:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24534:1:10",
																		"nodeType": "YulLiteral",
																		"src": "24534:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24537:4:10",
																		"nodeType": "YulLiteral",
																		"src": "24537:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "24527:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "24527:6:10"
																},
																"nativeSrc": "24527:15:10",
																"nodeType": "YulFunctionCall",
																"src": "24527:15:10"
															},
															"nativeSrc": "24527:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "24527:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "24368:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "24368:180:10"
											},
											{
												"body": {
													"nativeSrc": "24598:147:10",
													"nodeType": "YulBlock",
													"src": "24598:147:10",
													"statements": [
														{
															"nativeSrc": "24608:25:10",
															"nodeType": "YulAssignment",
															"src": "24608:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "24631:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "24631:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "24613:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "24613:17:10"
																},
																"nativeSrc": "24613:20:10",
																"nodeType": "YulFunctionCall",
																"src": "24613:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "24608:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "24608:1:10"
																}
															]
														},
														{
															"nativeSrc": "24642:25:10",
															"nodeType": "YulAssignment",
															"src": "24642:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "24665:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "24665:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "24647:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "24647:17:10"
																},
																"nativeSrc": "24647:20:10",
																"nodeType": "YulFunctionCall",
																"src": "24647:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "24642:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "24642:1:10"
																}
															]
														},
														{
															"nativeSrc": "24676:16:10",
															"nodeType": "YulAssignment",
															"src": "24676:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "24687:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "24687:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "24690:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "24690:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24683:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24683:3:10"
																},
																"nativeSrc": "24683:9:10",
																"nodeType": "YulFunctionCall",
																"src": "24683:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "24676:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24676:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "24716:22:10",
																"nodeType": "YulBlock",
																"src": "24716:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "24718:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "24718:16:10"
																			},
																			"nativeSrc": "24718:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "24718:18:10"
																		},
																		"nativeSrc": "24718:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "24718:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "24708:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "24708:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "24711:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24711:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24705:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "24705:2:10"
																},
																"nativeSrc": "24705:10:10",
																"nodeType": "YulFunctionCall",
																"src": "24705:10:10"
															},
															"nativeSrc": "24702:36:10",
															"nodeType": "YulIf",
															"src": "24702:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "24554:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "24585:1:10",
														"nodeType": "YulTypedName",
														"src": "24585:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "24588:1:10",
														"nodeType": "YulTypedName",
														"src": "24588:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "24594:3:10",
														"nodeType": "YulTypedName",
														"src": "24594:3:10",
														"type": ""
													}
												],
												"src": "24554:191:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IDirectory_$1187_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IDirectory_$1187_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IDirectory_$1187_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IDirectory_$1187__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IDirectory_$1187_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_bff9b1557c542a233ca52157ba744ff1a697493bf85768f97d646bb53c3c3c45(memPtr) {\n\n        mstore(add(memPtr, 0), \"EtfToken: already initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_bff9b1557c542a233ca52157ba744ff1a697493bf85768f97d646bb53c3c3c45_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_bff9b1557c542a233ca52157ba744ff1a697493bf85768f97d646bb53c3c3c45(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bff9b1557c542a233ca52157ba744ff1a697493bf85768f97d646bb53c3c3c45__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bff9b1557c542a233ca52157ba744ff1a697493bf85768f97d646bb53c3c3c45_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9(memPtr) {\n\n        mstore(add(memPtr, 0), \"msg.sender is not etf router\")\n\n    }\n\n    function abi_encode_t_stringliteral_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory cannot be zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory must be a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory address does not imple\")\n\n        mstore(add(memPtr, 32), \"ment owner()\")\n\n    }\n\n    function abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4(memPtr) {\n\n        mstore(add(memPtr, 0), \"EtfToken: events contract not se\")\n\n        mstore(add(memPtr, 32), \"t\")\n\n    }\n\n    function abi_encode_t_stringliteral_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x658A847A GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xBA4C7BE1 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x316 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x658A847A EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x290 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x27262618 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x208 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x77F224A EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x346 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x1884 JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x19D8 JUMP JUMPDEST PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH2 0x641 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F2 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1AB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22C PUSH2 0x7A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x1B3F JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x1B3F JUMP JUMPDEST PUSH2 0xA25 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x351 PUSH2 0xBBB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x362 SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38E SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3ED PUSH2 0xBE2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x435 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x468 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x476 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x4FA JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x549 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x540 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x56C DUP7 PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0x576 DUP9 DUP9 PUSH2 0xDA6 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x5D0 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x1CB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5E4 PUSH2 0xDBC JUMP JUMPDEST SWAP1 POP PUSH2 0x5F1 DUP2 DUP6 DUP6 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x606 PUSH2 0xBBB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x61D PUSH2 0xDBC JUMP JUMPDEST SWAP1 POP PUSH2 0x62A DUP6 DUP3 DUP6 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x635 DUP6 DUP6 DUP6 PUSH2 0xE68 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x27262618 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69B SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6DA SWAP2 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x727 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6574662D726F7574657200000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x641 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x794 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78B SWAP1 PUSH2 0x1D5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x79E DUP3 DUP3 PUSH2 0xF58 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7D0 PUSH2 0xBBB JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x883 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A7 SWAP2 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x8B7 PUSH2 0xBBB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x8C8 SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8F4 SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x93F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x916 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x93F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x922 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x988 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6574662D726F7574657200000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x641 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EC SWAP1 PUSH2 0x1D5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9FF DUP3 DUP3 PUSH2 0xFD7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xA0D PUSH2 0xDBC JUMP JUMPDEST SWAP1 POP PUSH2 0xA1A DUP2 DUP6 DUP6 PUSH2 0xE68 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA8E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAB2 SWAP2 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB16 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB28 DUP2 PUSH2 0xBF5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xB35 PUSH2 0xBBB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xBEC PUSH2 0x1056 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5A SWAP1 PUSH2 0x1E2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT PUSH2 0xCBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB3 SWAP1 PUSH2 0x1E93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD24 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD21 SWAP2 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5A SWAP1 PUSH2 0x1F21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xDAE PUSH2 0x107F JUMP JUMPDEST PUSH2 0xDB8 DUP3 DUP3 PUSH2 0x10BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDD0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x10FB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDE0 DUP5 DUP5 PUSH2 0xB2B JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xE62 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE53 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE61 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x10FB JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xED8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECF SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF48 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3F SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF53 DUP4 DUP4 DUP4 PUSH2 0x12D8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFC8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBF SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD3 PUSH0 DUP4 DUP4 PUSH2 0x12D8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1047 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103E SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1052 DUP3 PUSH0 DUP4 PUSH2 0x12D8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1087 PUSH2 0x13CC JUMP JUMPDEST PUSH2 0x10BD JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x10C7 PUSH2 0x107F JUMP JUMPDEST PUSH0 PUSH2 0x10D0 PUSH2 0xBBB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x10E3 SWAP2 SWAP1 PUSH2 0x210B JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x10F5 SWAP2 SWAP1 PUSH2 0x210B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1104 PUSH2 0xBBB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1176 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116D SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11E6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DD SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x12D1 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x12C8 SWAP2 SWAP1 PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x12E3 DUP4 DUP4 DUP4 PUSH2 0x13EA JUMP JUMPDEST PUSH0 PUSH2 0x12EC PUSH2 0x1619 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x135C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1353 SWAP1 PUSH2 0x224A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA6D49DCA DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1399 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2268 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13C2 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13D5 PUSH2 0xBE2 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x13F3 PUSH2 0xBBB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1447 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x143B SWAP2 SWAP1 PUSH2 0x22CA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1519 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x14D2 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1562 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x15AE JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x160B SWAP2 SWAP1 PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1658 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6574662D746F6B656E2D6576656E747300000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x641 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x169F DUP3 PUSH2 0x165D JUMP JUMPDEST PUSH2 0x16A9 DUP2 DUP6 PUSH2 0x1667 JUMP JUMPDEST SWAP4 POP PUSH2 0x16B9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x16C2 DUP2 PUSH2 0x1685 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16E5 DUP2 DUP5 PUSH2 0x1695 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x173C DUP3 PUSH2 0x1685 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x175B JUMPI PUSH2 0x175A PUSH2 0x1706 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x176D PUSH2 0x16ED JUMP JUMPDEST SWAP1 POP PUSH2 0x1779 DUP3 DUP3 PUSH2 0x1733 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1798 JUMPI PUSH2 0x1797 PUSH2 0x1706 JUMP JUMPDEST JUMPDEST PUSH2 0x17A1 DUP3 PUSH2 0x1685 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17CE PUSH2 0x17C9 DUP5 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x1764 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x17EA JUMPI PUSH2 0x17E9 PUSH2 0x1702 JUMP JUMPDEST JUMPDEST PUSH2 0x17F5 DUP5 DUP3 DUP6 PUSH2 0x17AE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1811 JUMPI PUSH2 0x1810 PUSH2 0x16FE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1821 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1853 DUP3 PUSH2 0x182A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1863 DUP2 PUSH2 0x1849 JUMP JUMPDEST DUP2 EQ PUSH2 0x186D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x187E DUP2 PUSH2 0x185A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x189B JUMPI PUSH2 0x189A PUSH2 0x16F6 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18B8 JUMPI PUSH2 0x18B7 PUSH2 0x16FA JUMP JUMPDEST JUMPDEST PUSH2 0x18C4 DUP7 DUP3 DUP8 ADD PUSH2 0x17FD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18E5 JUMPI PUSH2 0x18E4 PUSH2 0x16FA JUMP JUMPDEST JUMPDEST PUSH2 0x18F1 DUP7 DUP3 DUP8 ADD PUSH2 0x17FD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1902 DUP7 DUP3 DUP8 ADD PUSH2 0x1870 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x191E DUP2 PUSH2 0x190C JUMP JUMPDEST DUP2 EQ PUSH2 0x1928 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1939 DUP2 PUSH2 0x1915 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1955 JUMPI PUSH2 0x1954 PUSH2 0x16F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1962 DUP6 DUP3 DUP7 ADD PUSH2 0x1870 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1973 DUP6 DUP3 DUP7 ADD PUSH2 0x192B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1991 DUP2 PUSH2 0x197D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19AA PUSH0 DUP4 ADD DUP5 PUSH2 0x1988 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19B9 DUP2 PUSH2 0x190C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19D2 PUSH0 DUP4 ADD DUP5 PUSH2 0x19B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19EF JUMPI PUSH2 0x19EE PUSH2 0x16F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19FC DUP7 DUP3 DUP8 ADD PUSH2 0x1870 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A0D DUP7 DUP3 DUP8 ADD PUSH2 0x1870 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A1E DUP7 DUP3 DUP8 ADD PUSH2 0x192B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A3D JUMPI PUSH2 0x1A3C PUSH2 0x16F6 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A5A JUMPI PUSH2 0x1A59 PUSH2 0x16FA JUMP JUMPDEST JUMPDEST PUSH2 0x1A66 DUP5 DUP3 DUP6 ADD PUSH2 0x17FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A78 DUP2 PUSH2 0x1849 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A91 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AAC DUP2 PUSH2 0x1A97 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AC5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AEE PUSH2 0x1AE9 PUSH2 0x1AE4 DUP5 PUSH2 0x182A JUMP JUMPDEST PUSH2 0x1ACB JUMP JUMPDEST PUSH2 0x182A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AFF DUP3 PUSH2 0x1AD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B10 DUP3 PUSH2 0x1AF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B20 DUP2 PUSH2 0x1B06 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B39 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B54 JUMPI PUSH2 0x1B53 PUSH2 0x16F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B61 DUP5 DUP3 DUP6 ADD PUSH2 0x1870 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B80 JUMPI PUSH2 0x1B7F PUSH2 0x16F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B8D DUP6 DUP3 DUP7 ADD PUSH2 0x1870 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B9E DUP6 DUP3 DUP7 ADD PUSH2 0x1870 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1BEC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1BFF JUMPI PUSH2 0x1BFE PUSH2 0x1BA8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x457466546F6B656E3A20616C726561647920696E697469616C697A6564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C39 PUSH1 0x1D DUP4 PUSH2 0x1667 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C44 DUP3 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C66 DUP2 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CA3 PUSH2 0x1C9E PUSH2 0x1C99 DUP5 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0x1ACB JUMP JUMPDEST PUSH2 0x1C76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CB3 DUP2 PUSH2 0x1C89 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CCC PUSH0 DUP4 ADD DUP5 PUSH2 0x1CAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CE0 DUP2 PUSH2 0x185A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CFB JUMPI PUSH2 0x1CFA PUSH2 0x16F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D08 DUP5 DUP3 DUP6 ADD PUSH2 0x1CD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6D73672E73656E646572206973206E6F742065746620726F7574657200000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D45 PUSH1 0x1C DUP4 PUSH2 0x1667 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D50 DUP3 PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D72 DUP2 PUSH2 0x1D39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420746865206F776E6572000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DAD PUSH1 0x17 DUP4 PUSH2 0x1667 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DB8 DUP3 PUSH2 0x1D79 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DDA DUP2 PUSH2 0x1DA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F72792063616E6E6F74206265207A65726F2061646472657373 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E15 PUSH1 0x20 DUP4 PUSH2 0x1667 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E20 DUP3 PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E42 DUP2 PUSH2 0x1E09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206D757374206265206120636F6E747261637400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E7D PUSH1 0x1C DUP4 PUSH2 0x1667 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E88 DUP3 PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EAA DUP2 PUSH2 0x1E71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206164647265737320646F6573206E6F7420696D706C65 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D656E74206F776E657228290000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F0B PUSH1 0x2C DUP4 PUSH2 0x1667 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F16 DUP3 PUSH2 0x1EB1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F38 DUP2 PUSH2 0x1EFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F52 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x1F5F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19B0 JUMP JUMPDEST PUSH2 0x1F6C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19B0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1FD0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1F95 JUMP JUMPDEST PUSH2 0x1FDA DUP7 DUP4 PUSH2 0x1F95 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x200C PUSH2 0x2007 PUSH2 0x2002 DUP5 PUSH2 0x190C JUMP JUMPDEST PUSH2 0x1ACB JUMP JUMPDEST PUSH2 0x190C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2025 DUP4 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x2039 PUSH2 0x2031 DUP3 PUSH2 0x2013 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1FA1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2050 PUSH2 0x2041 JUMP JUMPDEST PUSH2 0x205B DUP2 DUP5 DUP5 PUSH2 0x201C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x207E JUMPI PUSH2 0x2073 PUSH0 DUP3 PUSH2 0x2048 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2061 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x20C3 JUMPI PUSH2 0x2094 DUP2 PUSH2 0x1F74 JUMP JUMPDEST PUSH2 0x209D DUP5 PUSH2 0x1F86 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x20AC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x20C0 PUSH2 0x20B8 DUP6 PUSH2 0x1F86 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2060 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20E3 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x20C8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20FB DUP4 DUP4 PUSH2 0x20D4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2114 DUP3 PUSH2 0x165D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x212D JUMPI PUSH2 0x212C PUSH2 0x1706 JUMP JUMPDEST JUMPDEST PUSH2 0x2137 DUP3 SLOAD PUSH2 0x1BD5 JUMP JUMPDEST PUSH2 0x2142 DUP3 DUP3 DUP6 PUSH2 0x2082 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2173 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2161 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x216B DUP6 DUP3 PUSH2 0x20F0 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x21D2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2181 DUP7 PUSH2 0x1F74 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x21A8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2183 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x21C5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x21C1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x20D4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x457466546F6B656E3A206576656E747320636F6E7472616374206E6F74207365 PUSH0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2234 PUSH1 0x21 DUP4 PUSH2 0x1667 JUMP JUMPDEST SWAP2 POP PUSH2 0x223F DUP3 PUSH2 0x21DA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2261 DUP2 PUSH2 0x2228 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x227B PUSH0 DUP4 ADD DUP7 PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x2288 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x2295 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19B0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x22D4 DUP3 PUSH2 0x190C JUMP JUMPDEST SWAP2 POP PUSH2 0x22DF DUP4 PUSH2 0x190C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22F7 JUMPI PUSH2 0x22F6 PUSH2 0x229D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x6E2C55B17B340EF90C4B CALLDATALOAD SGT 0x28 0xC7 0xBD RETURN 0x2C PUSH2 0x47DB DUPN 0x30 PUSH21 0x5A456D067801F38D64736F6C634300081E00330000 ",
							"sourceMap": "635:1743:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:144:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1219:398:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5114:186:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3850:152;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5892:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1272:136:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3735:82:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1662:99:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;336:27:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4035:171:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1178:88:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2954:148:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1806:103:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4401:178:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;470:113:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:195:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2697:144;2742:13;2767:22;2792:18;:16;:18::i;:::-;2767:43;;2827:1;:7;;2820:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:144;:::o;1219:398:9:-;4158:30:0;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;1343:12:9::1;;;;;;;;;;;1342:13;1334:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1414:4;1399:12;;:19;;;;;;;;;;;;;;;;;;1496:25;1510:10;1496:13;:25::i;:::-;1582:28;1595:5;1602:7;1582:12;:28::i;:::-;5068:14:0::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;1219:398:9;;;:::o;5114:186:1:-;5187:4;5203:13;5219:12;:10;:12::i;:::-;5203:28;;5241:31;5250:5;5257:7;5266:5;5241:8;:31::i;:::-;5289:4;5282:11;;;5114:186;;;;:::o;3850:152::-;3902:7;3921:22;3946:18;:16;:18::i;:::-;3921:43;;3981:1;:14;;;3974:21;;;3850:152;:::o;5892:244::-;5979:4;5995:15;6013:12;:10;:12::i;:::-;5995:30;;6035:37;6051:4;6057:7;6066:5;6035:15;:37::i;:::-;6082:26;6092:4;6098:2;6102:5;6082:9;:26::i;:::-;6125:4;6118:11;;;5892:244;;;;;:::o;1272:136:6:-;1341:7;1367:9;;;;;;;;;;;:28;;;1396:4;1367:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1360:41;;1272:136;;;:::o;3735:82:1:-;3784:5;3808:2;3801:9;;3735:82;:::o;1662:99:9:-;389:32:7;;;;;;;;;;;;;;;;;;:18;:32::i;:::-;375:46;;:10;:46;;;367:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1737:17:9::1;1743:2;1747:6;1737:5;:17::i;:::-;1662:99:::0;;:::o;336:27:6:-;;;;;;;;;;;;;:::o;4035:171:1:-;4100:7;4119:22;4144:18;:16;:18::i;:::-;4119:43;;4179:1;:11;;:20;4191:7;4179:20;;;;;;;;;;;;;;;;4172:27;;;4035:171;;;:::o;1178:88:6:-;1216:7;1242:9;;;;;;;;;;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1235:24;;1178:88;:::o;2954:148:1:-;3001:13;3026:22;3051:18;:16;:18::i;:::-;3026:43;;3086:1;:9;;3079:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2954:148;:::o;1806:103:9:-;389:32:7;;;;;;;;;;;;;;;;;;:18;:32::i;:::-;375:46;;:10;:46;;;367:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1883:19:9::1;1889:4;1895:6;1883:5;:19::i;:::-;1806:103:::0;;:::o;4401:178:1:-;4470:4;4486:13;4502:12;:10;:12::i;:::-;4486:28;;4524:27;4534:5;4541:2;4545:5;4524:9;:27::i;:::-;4568:4;4561:11;;;4401:178;;;;:::o;470:113:6:-;1109:9;;;;;;;;;;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1095:31;;:10;:31;;;1087:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;551:25:::1;565:10;551:13;:25::i;:::-;470:113:::0;:::o;4612:195:1:-;4692:7;4711:22;4736:18;:16;:18::i;:::-;4711:43;;4771:1;:13;;:20;4785:5;4771:20;;;;;;;;;;;;;;;:29;4792:7;4771:29;;;;;;;;;;;;;;;;4764:36;;;4612:195;;;;:::o;1947:153::-;1997:22;2064:20;2054:30;;1947:153;:::o;9071:205:0:-;9129:30;9171:12;9186:27;:25;:27::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;589:461:6:-;681:1;659:24;;:10;:24;;;651:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;763:1;738:10;:22;;;:26;730:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;861:10;850:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;846:198;;979:54;;;;;;;;;;:::i;:::-;;;;;;;;846:198;936:10;913:9;;:34;;;;;;;;;;;;;;;;;;881:77;589:461;:::o;2263:147:1:-;6929:20:0;:18;:20::i;:::-;2365:38:1::1;2388:5;2395:7;2365:22;:38::i;:::-;2263:147:::0;;:::o;887:96:2:-;940:7;966:10;959:17;;887:96;:::o;9905:128:1:-;9989:37;9998:5;10005:7;10014:5;10021:4;9989:8;:37::i;:::-;9905:128;;;:::o;11649:476::-;11748:24;11775:25;11785:5;11792:7;11775:9;:25::i;:::-;11748:52;;11833:17;11814:16;:36;11810:309;;;11889:5;11870:16;:24;11866:130;;;11948:7;11957:16;11975:5;11921:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;11866:130;12037:57;12046:5;12053:7;12081:5;12062:16;:24;12088:5;12037:8;:57::i;:::-;11810:309;11738:387;11649:476;;;:::o;6509:300::-;6608:1;6592:18;;:4;:18;;;6588:86;;6660:1;6633:30;;;;;;;;;;;:::i;:::-;;;;;;;;6588:86;6701:1;6687:16;;:2;:16;;;6683:86;;6755:1;6726:32;;;;;;;;;;;:::i;:::-;;;;;;;;6683:86;6778:24;6786:4;6792:2;6796:5;6778:7;:24::i;:::-;6509:300;;;:::o;8637:208::-;8726:1;8707:21;;:7;:21;;;8703:91;;8780:1;8751:32;;;;;;;;;;;:::i;:::-;;;;;;;;8703:91;8803:35;8819:1;8823:7;8832:5;8803:7;:35::i;:::-;8637:208;;:::o;9163:206::-;9252:1;9233:21;;:7;:21;;;9229:89;;9304:1;9277:30;;;;;;;;;;;:::i;:::-;;;;;;;;9229:89;9327:35;9335:7;9352:1;9356:5;9327:7;:35::i;:::-;9163:206;;:::o;8819:122:0:-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7082:141::-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;;;;;;;;;;;;;7144:73;7082:141::o;2416:216:1:-;6929:20:0;:18;:20::i;:::-;2528:22:1::1;2553:18;:16;:18::i;:::-;2528:43;;2591:5;2581:1;:7;;:15;;;;;;:::i;:::-;;2618:7;2606:1;:9;;:19;;;;;;:::i;:::-;;2518:114;2416:216:::0;;:::o;10880:487::-;10988:22;11013:18;:16;:18::i;:::-;10988:43;;11062:1;11045:19;;:5;:19;;;11041:89;;11116:1;11087:32;;;;;;;;;;;:::i;:::-;;;;;;;;11041:89;11162:1;11143:21;;:7;:21;;;11139:90;;11215:1;11187:31;;;;;;;;;;;:::i;:::-;;;;;;;;11139:90;11270:5;11238:1;:13;;:20;11252:5;11238:20;;;;;;;;;;;;;;;:29;11259:7;11238:29;;;;;;;;;;;;;;;:37;;;;11289:9;11285:76;;;11335:7;11319:31;;11328:5;11319:31;;;11344:5;11319:31;;;;;;:::i;:::-;;;;;;;;11285:76;10978:389;10880:487;;;;:::o;2003:373:9:-;2089:30;2103:4;2109:2;2113:5;2089:13;:30::i;:::-;2165;2198:19;:17;:19::i;:::-;2165:52;;2270:1;2235:37;;2243:14;2235:37;;;2227:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;2320:14;:32;;;2353:4;2359:2;2363:5;2320:49;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2079:297;2003:373;;;:::o;8485:120:0:-;8535:4;8558:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8551:47;;8485:120;:::o;7124:1170:1:-;7209:22;7234:18;:16;:18::i;:::-;7209:43;;7282:1;7266:18;;:4;:18;;;7262:546;;7420:5;7402:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7262:546;;;7456:19;7478:1;:11;;:17;7490:4;7478:17;;;;;;;;;;;;;;;;7456:39;;7527:5;7513:11;:19;7509:115;;;7584:4;7590:11;7603:5;7559:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7509:115;7778:5;7764:11;:19;7744:1;:11;;:17;7756:4;7744:17;;;;;;;;;;;;;;;:39;;;;7442:366;7262:546;7836:1;7822:16;;:2;:16;;;7818:429;;8003:5;7985:1;:14;;;:23;;;;;;;;;;;7818:429;;;8217:5;8198:1;:11;;:15;8210:2;8198:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;7818:429;8277:2;8262:25;;8271:4;8262:25;;;8281:5;8262:25;;;;;;:::i;:::-;;;;;;;;7199:1095;7124:1170;;;:::o;301:156:8:-;361:15;411:38;;;;;;;;;;;;;;;;;;:18;:38::i;:::-;388:62;;301:156;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:75::-;1275:6;1308:2;1302:9;1292:19;;1242:75;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:117;1678:1;1675;1668:12;1692:117;1801:1;1798;1791:12;1815:180;1863:77;1860:1;1853:88;1960:4;1957:1;1950:15;1984:4;1981:1;1974:15;2001:281;2084:27;2106:4;2084:27;:::i;:::-;2076:6;2072:40;2214:6;2202:10;2199:22;2178:18;2166:10;2163:34;2160:62;2157:88;;;2225:18;;:::i;:::-;2157:88;2265:10;2261:2;2254:22;2044:238;2001:281;;:::o;2288:129::-;2322:6;2349:20;;:::i;:::-;2339:30;;2378:33;2406:4;2398:6;2378:33;:::i;:::-;2288:129;;;:::o;2423:308::-;2485:4;2575:18;2567:6;2564:30;2561:56;;;2597:18;;:::i;:::-;2561:56;2635:29;2657:6;2635:29;:::i;:::-;2627:37;;2719:4;2713;2709:15;2701:23;;2423:308;;;:::o;2737:148::-;2835:6;2830:3;2825;2812:30;2876:1;2867:6;2862:3;2858:16;2851:27;2737:148;;;:::o;2891:425::-;2969:5;2994:66;3010:49;3052:6;3010:49;:::i;:::-;2994:66;:::i;:::-;2985:75;;3083:6;3076:5;3069:21;3121:4;3114:5;3110:16;3159:3;3150:6;3145:3;3141:16;3138:25;3135:112;;;3166:79;;:::i;:::-;3135:112;3256:54;3303:6;3298:3;3293;3256:54;:::i;:::-;2975:341;2891:425;;;;;:::o;3336:340::-;3392:5;3441:3;3434:4;3426:6;3422:17;3418:27;3408:122;;3449:79;;:::i;:::-;3408:122;3566:6;3553:20;3591:79;3666:3;3658:6;3651:4;3643:6;3639:17;3591:79;:::i;:::-;3582:88;;3398:278;3336:340;;;;:::o;3682:126::-;3719:7;3759:42;3752:5;3748:54;3737:65;;3682:126;;;:::o;3814:96::-;3851:7;3880:24;3898:5;3880:24;:::i;:::-;3869:35;;3814:96;;;:::o;3916:122::-;3989:24;4007:5;3989:24;:::i;:::-;3982:5;3979:35;3969:63;;4028:1;4025;4018:12;3969:63;3916:122;:::o;4044:139::-;4090:5;4128:6;4115:20;4106:29;;4144:33;4171:5;4144:33;:::i;:::-;4044:139;;;;:::o;4189:979::-;4286:6;4294;4302;4351:2;4339:9;4330:7;4326:23;4322:32;4319:119;;;4357:79;;:::i;:::-;4319:119;4505:1;4494:9;4490:17;4477:31;4535:18;4527:6;4524:30;4521:117;;;4557:79;;:::i;:::-;4521:117;4662:63;4717:7;4708:6;4697:9;4693:22;4662:63;:::i;:::-;4652:73;;4448:287;4802:2;4791:9;4787:18;4774:32;4833:18;4825:6;4822:30;4819:117;;;4855:79;;:::i;:::-;4819:117;4960:63;5015:7;5006:6;4995:9;4991:22;4960:63;:::i;:::-;4950:73;;4745:288;5072:2;5098:53;5143:7;5134:6;5123:9;5119:22;5098:53;:::i;:::-;5088:63;;5043:118;4189:979;;;;;:::o;5174:77::-;5211:7;5240:5;5229:16;;5174:77;;;:::o;5257:122::-;5330:24;5348:5;5330:24;:::i;:::-;5323:5;5320:35;5310:63;;5369:1;5366;5359:12;5310:63;5257:122;:::o;5385:139::-;5431:5;5469:6;5456:20;5447:29;;5485:33;5512:5;5485:33;:::i;:::-;5385:139;;;;:::o;5530:474::-;5598:6;5606;5655:2;5643:9;5634:7;5630:23;5626:32;5623:119;;;5661:79;;:::i;:::-;5623:119;5781:1;5806:53;5851:7;5842:6;5831:9;5827:22;5806:53;:::i;:::-;5796:63;;5752:117;5908:2;5934:53;5979:7;5970:6;5959:9;5955:22;5934:53;:::i;:::-;5924:63;;5879:118;5530:474;;;;;:::o;6010:90::-;6044:7;6087:5;6080:13;6073:21;6062:32;;6010:90;;;:::o;6106:109::-;6187:21;6202:5;6187:21;:::i;:::-;6182:3;6175:34;6106:109;;:::o;6221:210::-;6308:4;6346:2;6335:9;6331:18;6323:26;;6359:65;6421:1;6410:9;6406:17;6397:6;6359:65;:::i;:::-;6221:210;;;;:::o;6437:118::-;6524:24;6542:5;6524:24;:::i;:::-;6519:3;6512:37;6437:118;;:::o;6561:222::-;6654:4;6692:2;6681:9;6677:18;6669:26;;6705:71;6773:1;6762:9;6758:17;6749:6;6705:71;:::i;:::-;6561:222;;;;:::o;6789:619::-;6866:6;6874;6882;6931:2;6919:9;6910:7;6906:23;6902:32;6899:119;;;6937:79;;:::i;:::-;6899:119;7057:1;7082:53;7127:7;7118:6;7107:9;7103:22;7082:53;:::i;:::-;7072:63;;7028:117;7184:2;7210:53;7255:7;7246:6;7235:9;7231:22;7210:53;:::i;:::-;7200:63;;7155:118;7312:2;7338:53;7383:7;7374:6;7363:9;7359:22;7338:53;:::i;:::-;7328:63;;7283:118;6789:619;;;;;:::o;7414:509::-;7483:6;7532:2;7520:9;7511:7;7507:23;7503:32;7500:119;;;7538:79;;:::i;:::-;7500:119;7686:1;7675:9;7671:17;7658:31;7716:18;7708:6;7705:30;7702:117;;;7738:79;;:::i;:::-;7702:117;7843:63;7898:7;7889:6;7878:9;7874:22;7843:63;:::i;:::-;7833:73;;7629:287;7414:509;;;;:::o;7929:118::-;8016:24;8034:5;8016:24;:::i;:::-;8011:3;8004:37;7929:118;;:::o;8053:222::-;8146:4;8184:2;8173:9;8169:18;8161:26;;8197:71;8265:1;8254:9;8250:17;8241:6;8197:71;:::i;:::-;8053:222;;;;:::o;8281:86::-;8316:7;8356:4;8349:5;8345:16;8334:27;;8281:86;;;:::o;8373:112::-;8456:22;8472:5;8456:22;:::i;:::-;8451:3;8444:35;8373:112;;:::o;8491:214::-;8580:4;8618:2;8607:9;8603:18;8595:26;;8631:67;8695:1;8684:9;8680:17;8671:6;8631:67;:::i;:::-;8491:214;;;;:::o;8711:60::-;8739:3;8760:5;8753:12;;8711:60;;;:::o;8777:142::-;8827:9;8860:53;8878:34;8887:24;8905:5;8887:24;:::i;:::-;8878:34;:::i;:::-;8860:53;:::i;:::-;8847:66;;8777:142;;;:::o;8925:126::-;8975:9;9008:37;9039:5;9008:37;:::i;:::-;8995:50;;8925:126;;;:::o;9057:145::-;9126:9;9159:37;9190:5;9159:37;:::i;:::-;9146:50;;9057:145;;;:::o;9208:169::-;9314:56;9364:5;9314:56;:::i;:::-;9309:3;9302:69;9208:169;;:::o;9383:260::-;9495:4;9533:2;9522:9;9518:18;9510:26;;9546:90;9633:1;9622:9;9618:17;9609:6;9546:90;:::i;:::-;9383:260;;;;:::o;9649:329::-;9708:6;9757:2;9745:9;9736:7;9732:23;9728:32;9725:119;;;9763:79;;:::i;:::-;9725:119;9883:1;9908:53;9953:7;9944:6;9933:9;9929:22;9908:53;:::i;:::-;9898:63;;9854:117;9649:329;;;;:::o;9984:474::-;10052:6;10060;10109:2;10097:9;10088:7;10084:23;10080:32;10077:119;;;10115:79;;:::i;:::-;10077:119;10235:1;10260:53;10305:7;10296:6;10285:9;10281:22;10260:53;:::i;:::-;10250:63;;10206:117;10362:2;10388:53;10433:7;10424:6;10413:9;10409:22;10388:53;:::i;:::-;10378:63;;10333:118;9984:474;;;;;:::o;10464:180::-;10512:77;10509:1;10502:88;10609:4;10606:1;10599:15;10633:4;10630:1;10623:15;10650:320;10694:6;10731:1;10725:4;10721:12;10711:22;;10778:1;10772:4;10768:12;10799:18;10789:81;;10855:4;10847:6;10843:17;10833:27;;10789:81;10917:2;10909:6;10906:14;10886:18;10883:38;10880:84;;10936:18;;:::i;:::-;10880:84;10701:269;10650:320;;;:::o;10976:179::-;11116:31;11112:1;11104:6;11100:14;11093:55;10976:179;:::o;11161:366::-;11303:3;11324:67;11388:2;11383:3;11324:67;:::i;:::-;11317:74;;11400:93;11489:3;11400:93;:::i;:::-;11518:2;11513:3;11509:12;11502:19;;11161:366;;;:::o;11533:419::-;11699:4;11737:2;11726:9;11722:18;11714:26;;11786:9;11780:4;11776:20;11772:1;11761:9;11757:17;11750:47;11814:131;11940:4;11814:131;:::i;:::-;11806:139;;11533:419;;;:::o;11958:85::-;12003:7;12032:5;12021:16;;11958:85;;;:::o;12049:101::-;12085:7;12125:18;12118:5;12114:30;12103:41;;12049:101;;;:::o;12156:156::-;12213:9;12246:60;12263:42;12272:32;12298:5;12272:32;:::i;:::-;12263:42;:::i;:::-;12246:60;:::i;:::-;12233:73;;12156:156;;;:::o;12318:145::-;12412:44;12450:5;12412:44;:::i;:::-;12407:3;12400:57;12318:145;;:::o;12469:236::-;12569:4;12607:2;12596:9;12592:18;12584:26;;12620:78;12695:1;12684:9;12680:17;12671:6;12620:78;:::i;:::-;12469:236;;;;:::o;12711:143::-;12768:5;12799:6;12793:13;12784:22;;12815:33;12842:5;12815:33;:::i;:::-;12711:143;;;;:::o;12860:351::-;12930:6;12979:2;12967:9;12958:7;12954:23;12950:32;12947:119;;;12985:79;;:::i;:::-;12947:119;13105:1;13130:64;13186:7;13177:6;13166:9;13162:22;13130:64;:::i;:::-;13120:74;;13076:128;12860:351;;;;:::o;13217:178::-;13357:30;13353:1;13345:6;13341:14;13334:54;13217:178;:::o;13401:366::-;13543:3;13564:67;13628:2;13623:3;13564:67;:::i;:::-;13557:74;;13640:93;13729:3;13640:93;:::i;:::-;13758:2;13753:3;13749:12;13742:19;;13401:366;;;:::o;13773:419::-;13939:4;13977:2;13966:9;13962:18;13954:26;;14026:9;14020:4;14016:20;14012:1;14001:9;13997:17;13990:47;14054:131;14180:4;14054:131;:::i;:::-;14046:139;;13773:419;;;:::o;14198:173::-;14338:25;14334:1;14326:6;14322:14;14315:49;14198:173;:::o;14377:366::-;14519:3;14540:67;14604:2;14599:3;14540:67;:::i;:::-;14533:74;;14616:93;14705:3;14616:93;:::i;:::-;14734:2;14729:3;14725:12;14718:19;;14377:366;;;:::o;14749:419::-;14915:4;14953:2;14942:9;14938:18;14930:26;;15002:9;14996:4;14992:20;14988:1;14977:9;14973:17;14966:47;15030:131;15156:4;15030:131;:::i;:::-;15022:139;;14749:419;;;:::o;15174:182::-;15314:34;15310:1;15302:6;15298:14;15291:58;15174:182;:::o;15362:366::-;15504:3;15525:67;15589:2;15584:3;15525:67;:::i;:::-;15518:74;;15601:93;15690:3;15601:93;:::i;:::-;15719:2;15714:3;15710:12;15703:19;;15362:366;;;:::o;15734:419::-;15900:4;15938:2;15927:9;15923:18;15915:26;;15987:9;15981:4;15977:20;15973:1;15962:9;15958:17;15951:47;16015:131;16141:4;16015:131;:::i;:::-;16007:139;;15734:419;;;:::o;16159:178::-;16299:30;16295:1;16287:6;16283:14;16276:54;16159:178;:::o;16343:366::-;16485:3;16506:67;16570:2;16565:3;16506:67;:::i;:::-;16499:74;;16582:93;16671:3;16582:93;:::i;:::-;16700:2;16695:3;16691:12;16684:19;;16343:366;;;:::o;16715:419::-;16881:4;16919:2;16908:9;16904:18;16896:26;;16968:9;16962:4;16958:20;16954:1;16943:9;16939:17;16932:47;16996:131;17122:4;16996:131;:::i;:::-;16988:139;;16715:419;;;:::o;17140:231::-;17280:34;17276:1;17268:6;17264:14;17257:58;17349:14;17344:2;17336:6;17332:15;17325:39;17140:231;:::o;17377:366::-;17519:3;17540:67;17604:2;17599:3;17540:67;:::i;:::-;17533:74;;17616:93;17705:3;17616:93;:::i;:::-;17734:2;17729:3;17725:12;17718:19;;17377:366;;;:::o;17749:419::-;17915:4;17953:2;17942:9;17938:18;17930:26;;18002:9;17996:4;17992:20;17988:1;17977:9;17973:17;17966:47;18030:131;18156:4;18030:131;:::i;:::-;18022:139;;17749:419;;;:::o;18174:442::-;18323:4;18361:2;18350:9;18346:18;18338:26;;18374:71;18442:1;18431:9;18427:17;18418:6;18374:71;:::i;:::-;18455:72;18523:2;18512:9;18508:18;18499:6;18455:72;:::i;:::-;18537;18605:2;18594:9;18590:18;18581:6;18537:72;:::i;:::-;18174:442;;;;;;:::o;18622:141::-;18671:4;18694:3;18686:11;;18717:3;18714:1;18707:14;18751:4;18748:1;18738:18;18730:26;;18622:141;;;:::o;18769:93::-;18806:6;18853:2;18848;18841:5;18837:14;18833:23;18823:33;;18769:93;;;:::o;18868:107::-;18912:8;18962:5;18956:4;18952:16;18931:37;;18868:107;;;;:::o;18981:393::-;19050:6;19100:1;19088:10;19084:18;19123:97;19153:66;19142:9;19123:97;:::i;:::-;19241:39;19271:8;19260:9;19241:39;:::i;:::-;19229:51;;19313:4;19309:9;19302:5;19298:21;19289:30;;19362:4;19352:8;19348:19;19341:5;19338:30;19328:40;;19057:317;;18981:393;;;;;:::o;19380:142::-;19430:9;19463:53;19481:34;19490:24;19508:5;19490:24;:::i;:::-;19481:34;:::i;:::-;19463:53;:::i;:::-;19450:66;;19380:142;;;:::o;19528:75::-;19571:3;19592:5;19585:12;;19528:75;;;:::o;19609:269::-;19719:39;19750:7;19719:39;:::i;:::-;19780:91;19829:41;19853:16;19829:41;:::i;:::-;19821:6;19814:4;19808:11;19780:91;:::i;:::-;19774:4;19767:105;19685:193;19609:269;;;:::o;19884:73::-;19929:3;19950:1;19943:8;;19884:73;:::o;19963:189::-;20040:32;;:::i;:::-;20081:65;20139:6;20131;20125:4;20081:65;:::i;:::-;20016:136;19963:189;;:::o;20158:186::-;20218:120;20235:3;20228:5;20225:14;20218:120;;;20289:39;20326:1;20319:5;20289:39;:::i;:::-;20262:1;20255:5;20251:13;20242:22;;20218:120;;;20158:186;;:::o;20350:543::-;20451:2;20446:3;20443:11;20440:446;;;20485:38;20517:5;20485:38;:::i;:::-;20569:29;20587:10;20569:29;:::i;:::-;20559:8;20555:44;20752:2;20740:10;20737:18;20734:49;;;20773:8;20758:23;;20734:49;20796:80;20852:22;20870:3;20852:22;:::i;:::-;20842:8;20838:37;20825:11;20796:80;:::i;:::-;20455:431;;20440:446;20350:543;;;:::o;20899:117::-;20953:8;21003:5;20997:4;20993:16;20972:37;;20899:117;;;;:::o;21022:169::-;21066:6;21099:51;21147:1;21143:6;21135:5;21132:1;21128:13;21099:51;:::i;:::-;21095:56;21180:4;21174;21170:15;21160:25;;21073:118;21022:169;;;;:::o;21196:295::-;21272:4;21418:29;21443:3;21437:4;21418:29;:::i;:::-;21410:37;;21480:3;21477:1;21473:11;21467:4;21464:21;21456:29;;21196:295;;;;:::o;21496:1395::-;21613:37;21646:3;21613:37;:::i;:::-;21715:18;21707:6;21704:30;21701:56;;;21737:18;;:::i;:::-;21701:56;21781:38;21813:4;21807:11;21781:38;:::i;:::-;21866:67;21926:6;21918;21912:4;21866:67;:::i;:::-;21960:1;21984:4;21971:17;;22016:2;22008:6;22005:14;22033:1;22028:618;;;;22690:1;22707:6;22704:77;;;22756:9;22751:3;22747:19;22741:26;22732:35;;22704:77;22807:67;22867:6;22860:5;22807:67;:::i;:::-;22801:4;22794:81;22663:222;21998:887;;22028:618;22080:4;22076:9;22068:6;22064:22;22114:37;22146:4;22114:37;:::i;:::-;22173:1;22187:208;22201:7;22198:1;22195:14;22187:208;;;22280:9;22275:3;22271:19;22265:26;22257:6;22250:42;22331:1;22323:6;22319:14;22309:24;;22378:2;22367:9;22363:18;22350:31;;22224:4;22221:1;22217:12;22212:17;;22187:208;;;22423:6;22414:7;22411:19;22408:179;;;22481:9;22476:3;22472:19;22466:26;22524:48;22566:4;22558:6;22554:17;22543:9;22524:48;:::i;:::-;22516:6;22509:64;22431:156;22408:179;22633:1;22629;22621:6;22617:14;22613:22;22607:4;22600:36;22035:611;;;21998:887;;21588:1303;;;21496:1395;;:::o;22897:220::-;23037:34;23033:1;23025:6;23021:14;23014:58;23106:3;23101:2;23093:6;23089:15;23082:28;22897:220;:::o;23123:366::-;23265:3;23286:67;23350:2;23345:3;23286:67;:::i;:::-;23279:74;;23362:93;23451:3;23362:93;:::i;:::-;23480:2;23475:3;23471:12;23464:19;;23123:366;;;:::o;23495:419::-;23661:4;23699:2;23688:9;23684:18;23676:26;;23748:9;23742:4;23738:20;23734:1;23723:9;23719:17;23712:47;23776:131;23902:4;23776:131;:::i;:::-;23768:139;;23495:419;;;:::o;23920:442::-;24069:4;24107:2;24096:9;24092:18;24084:26;;24120:71;24188:1;24177:9;24173:17;24164:6;24120:71;:::i;:::-;24201:72;24269:2;24258:9;24254:18;24245:6;24201:72;:::i;:::-;24283;24351:2;24340:9;24336:18;24327:6;24283:72;:::i;:::-;23920:442;;;;;;:::o;24368:180::-;24416:77;24413:1;24406:88;24513:4;24510:1;24503:15;24537:4;24534:1;24527:15;24554:191;24594:3;24613:20;24631:1;24613:20;:::i;:::-;24608:25;;24647:20;24665:1;24647:20;:::i;:::-;24642:25;;24690:1;24687;24683:9;24676:16;;24711:3;24708:1;24705:10;24702:36;;;24718:18;;:::i;:::-;24702:36;24554:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1802200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Directory()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2925",
								"burn(address,uint256)": "infinite",
								"changeDirectoryAddress(address)": "infinite",
								"decimals()": "405",
								"fetchFromDirectory(string)": "infinite",
								"initialize(string,string,address)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2574",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 635,
									"end": 2378,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 635,
									"end": 2378,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 635,
									"end": 2378,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 913,
									"end": 1128,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 957,
									"end": 967,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 412,
									"end": 437,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 426,
									"end": 436,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 412,
									"end": 425,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 412,
									"end": 425,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 412,
									"end": 425,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 412,
									"end": 437,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 412,
									"end": 437,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 412,
									"end": 437,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 412,
									"end": 437,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 412,
									"end": 437,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 370,
									"end": 464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 913,
									"end": 1128,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 635,
									"end": 2378,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 635,
									"end": 2378,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 589,
									"end": 1050,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 589,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 681,
									"end": 682,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 659,
									"end": 683,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 659,
									"end": 683,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 659,
									"end": 669,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 659,
									"end": 683,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 659,
									"end": 683,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 659,
									"end": 683,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 651,
									"end": 720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 763,
									"end": 764,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 738,
									"end": 748,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 738,
									"end": 760,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 738,
									"end": 760,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 738,
									"end": 760,
									"name": "EXTCODESIZE",
									"source": 6
								},
								{
									"begin": 738,
									"end": 764,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 730,
									"end": 797,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 861,
									"end": 871,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 850,
									"end": 878,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 850,
									"end": 878,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 850,
									"end": 878,
									"name": "PUSH",
									"source": 6,
									"value": "8DA5CB5B"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFF"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "STATICCALL",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 850,
									"end": 880,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 846,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 846,
									"end": 1044,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 979,
									"end": 1033,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 846,
									"end": 1044,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 846,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 936,
									"end": 946,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 913,
									"end": 922,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 913,
									"end": 922,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 913,
									"end": 947,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 913,
									"end": 947,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 913,
									"end": 947,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 913,
									"end": 947,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 881,
									"end": 958,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 589,
									"end": 1050,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 589,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1286,
									"end": 1297,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1320,
									"end": 1326,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1315,
									"end": 1318,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1308,
									"end": 1327,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1360,
									"end": 1364,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1355,
									"end": 1358,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1351,
									"end": 1365,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1336,
									"end": 1365,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1336,
									"end": 1365,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1377,
									"end": 1559,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1377,
									"end": 1559,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1517,
									"end": 1551,
									"name": "PUSH",
									"source": 10,
									"value": "4469726563746F72792063616E6E6F74206265207A65726F2061646472657373"
								},
								{
									"begin": 1513,
									"end": 1514,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 1511,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1501,
									"end": 1515,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1494,
									"end": 1552,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1377,
									"end": 1559,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1377,
									"end": 1559,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1565,
									"end": 1931,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1565,
									"end": 1931,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1707,
									"end": 1710,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1728,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1792,
									"end": 1794,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1787,
									"end": 1790,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1728,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1728,
									"end": 1795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1728,
									"end": 1795,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1728,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1721,
									"end": 1795,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1721,
									"end": 1795,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1804,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 1893,
									"end": 1896,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1804,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1804,
									"end": 1897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1804,
									"end": 1897,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 1804,
									"end": 1897,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1922,
									"end": 1924,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1917,
									"end": 1920,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1913,
									"end": 1925,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 1925,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 1925,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1565,
									"end": 1931,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1565,
									"end": 1931,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1565,
									"end": 1931,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1565,
									"end": 1931,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1937,
									"end": 2356,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 1937,
									"end": 2356,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2141,
									"end": 2143,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2130,
									"end": 2139,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2126,
									"end": 2144,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2118,
									"end": 2144,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2118,
									"end": 2144,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2190,
									"end": 2199,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2184,
									"end": 2188,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2180,
									"end": 2200,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2176,
									"end": 2177,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2165,
									"end": 2174,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2178,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2154,
									"end": 2201,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2218,
									"end": 2349,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2344,
									"end": 2348,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2218,
									"end": 2349,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 2218,
									"end": 2349,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2218,
									"end": 2349,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2218,
									"end": 2349,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2210,
									"end": 2349,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2210,
									"end": 2349,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1937,
									"end": 2356,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1937,
									"end": 2356,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1937,
									"end": 2356,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1937,
									"end": 2356,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2362,
									"end": 2540,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 2362,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2502,
									"end": 2532,
									"name": "PUSH",
									"source": 10,
									"value": "4469726563746F7279206D757374206265206120636F6E747261637400000000"
								},
								{
									"begin": 2498,
									"end": 2499,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2490,
									"end": 2496,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2486,
									"end": 2500,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2479,
									"end": 2533,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2362,
									"end": 2540,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2362,
									"end": 2540,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2546,
									"end": 2912,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 2546,
									"end": 2912,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2688,
									"end": 2691,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2709,
									"end": 2776,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 2773,
									"end": 2775,
									"name": "PUSH",
									"source": 10,
									"value": "1C"
								},
								{
									"begin": 2768,
									"end": 2771,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2709,
									"end": 2776,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 2709,
									"end": 2776,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2709,
									"end": 2776,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 2709,
									"end": 2776,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2702,
									"end": 2776,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2702,
									"end": 2776,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2785,
									"end": 2878,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2785,
									"end": 2878,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 2785,
									"end": 2878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2785,
									"end": 2878,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 2785,
									"end": 2878,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2903,
									"end": 2905,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2898,
									"end": 2901,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2894,
									"end": 2906,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2887,
									"end": 2906,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2887,
									"end": 2906,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2546,
									"end": 2912,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2546,
									"end": 2912,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2546,
									"end": 2912,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2546,
									"end": 2912,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2918,
									"end": 3337,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 2918,
									"end": 3337,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3084,
									"end": 3088,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3122,
									"end": 3124,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3111,
									"end": 3120,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3107,
									"end": 3125,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3099,
									"end": 3125,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3099,
									"end": 3125,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3171,
									"end": 3180,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3165,
									"end": 3169,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3161,
									"end": 3181,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3157,
									"end": 3158,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3146,
									"end": 3155,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3142,
									"end": 3159,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3182,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3199,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 3325,
									"end": 3329,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3199,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 3199,
									"end": 3330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3199,
									"end": 3330,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 3199,
									"end": 3330,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3191,
									"end": 3330,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3191,
									"end": 3330,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2918,
									"end": 3337,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2918,
									"end": 3337,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2918,
									"end": 3337,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2918,
									"end": 3337,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3343,
									"end": 3574,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 3343,
									"end": 3574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3483,
									"end": 3517,
									"name": "PUSH",
									"source": 10,
									"value": "4469726563746F7279206164647265737320646F6573206E6F7420696D706C65"
								},
								{
									"begin": 3479,
									"end": 3480,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3471,
									"end": 3477,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3467,
									"end": 3481,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3460,
									"end": 3518,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3552,
									"end": 3566,
									"name": "PUSH",
									"source": 10,
									"value": "6D656E74206F776E657228290000000000000000000000000000000000000000"
								},
								{
									"begin": 3547,
									"end": 3549,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3539,
									"end": 3545,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3535,
									"end": 3550,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3528,
									"end": 3567,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3343,
									"end": 3574,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3343,
									"end": 3574,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3580,
									"end": 3946,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3580,
									"end": 3946,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3722,
									"end": 3725,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3743,
									"end": 3810,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 3807,
									"end": 3809,
									"name": "PUSH",
									"source": 10,
									"value": "2C"
								},
								{
									"begin": 3802,
									"end": 3805,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3743,
									"end": 3810,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 3743,
									"end": 3810,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3743,
									"end": 3810,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 3743,
									"end": 3810,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3736,
									"end": 3810,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3736,
									"end": 3810,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3819,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 3908,
									"end": 3911,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3819,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 3819,
									"end": 3912,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3819,
									"end": 3912,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 3819,
									"end": 3912,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3937,
									"end": 3939,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3932,
									"end": 3935,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3928,
									"end": 3940,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3921,
									"end": 3940,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3921,
									"end": 3940,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3580,
									"end": 3946,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3580,
									"end": 3946,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3580,
									"end": 3946,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3580,
									"end": 3946,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3952,
									"end": 4371,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 3952,
									"end": 4371,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4122,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4156,
									"end": 4158,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4145,
									"end": 4154,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4141,
									"end": 4159,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4133,
									"end": 4159,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4133,
									"end": 4159,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4205,
									"end": 4214,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4199,
									"end": 4203,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4195,
									"end": 4215,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4191,
									"end": 4192,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4180,
									"end": 4189,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4176,
									"end": 4193,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4169,
									"end": 4216,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4233,
									"end": 4364,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 4359,
									"end": 4363,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4233,
									"end": 4364,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4233,
									"end": 4364,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4233,
									"end": 4364,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 4233,
									"end": 4364,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4225,
									"end": 4364,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4225,
									"end": 4364,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3952,
									"end": 4371,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3952,
									"end": 4371,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3952,
									"end": 4371,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3952,
									"end": 4371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 635,
									"end": 2378,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 635,
									"end": 2378,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 635,
									"end": 2378,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 635,
									"end": 2378,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 635,
									"end": 2378,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 635,
									"end": 2378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 635,
									"end": 2378,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 635,
									"end": 2378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 635,
									"end": 2378,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220696e2c55b17b340ef90c4b351328c7bdf32c6147dbe630745a456d067801f38d64736f6c634300081e0033",
									".code": [
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "658A847A"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "9DC29FAC"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "9DC29FAC"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "BA4C7BE1"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "658A847A"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "27262618"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "77F224A"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 2378,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1219,
											"end": 1617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1219,
											"end": 1617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5114,
											"end": 5300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5114,
											"end": 5300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 5114,
											"end": 5300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3850,
											"end": 4002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3850,
											"end": 4002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5892,
											"end": 6136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5892,
											"end": 6136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 5892,
											"end": 6136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1272,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1272,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1272,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3735,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3735,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1662,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1662,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 336,
											"end": 363,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 336,
											"end": 363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 336,
											"end": 363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4035,
											"end": 4206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4035,
											"end": 4206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4035,
											"end": 4206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1178,
											"end": 1266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1178,
											"end": 1266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2954,
											"end": 3102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2954,
											"end": 3102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1806,
											"end": 1909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1806,
											"end": 1909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4401,
											"end": 4579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4401,
											"end": 4579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4401,
											"end": 4579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 470,
											"end": 583,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 470,
											"end": 583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 470,
											"end": 583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4612,
											"end": 4807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4612,
											"end": 4807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4612,
											"end": 4807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2755,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2792,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2792,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2828,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2827,
											"end": 2834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2820,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2820,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4758,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4808,
											"end": 4838,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 4883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 0,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4981,
											"end": 4995,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5033,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1343,
											"end": 1355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 1355,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 1355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 1355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1343,
											"end": 1355,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 1355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 1355,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 1355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1343,
											"end": 1355,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1355,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1334,
											"end": 1389,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1334,
											"end": 1389,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1414,
											"end": 1418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1399,
											"end": 1411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1399,
											"end": 1418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1399,
											"end": 1418,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1418,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1418,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1418,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1399,
											"end": 1418,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1418,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1418,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1418,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1418,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1418,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1418,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1418,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1418,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1418,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1418,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1418,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1496,
											"end": 1521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1510,
											"end": 1520,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1496,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1496,
											"end": 1521,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1496,
											"end": 1521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1496,
											"end": 1521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1582,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1595,
											"end": 1600,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1602,
											"end": 1609,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1582,
											"end": 1594,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1582,
											"end": 1610,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1582,
											"end": 1610,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1582,
											"end": 1610,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5068,
											"end": 5082,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5116,
											"end": 5121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5099,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5140,
											"end": 5154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1617,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5191,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5203,
											"end": 5216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5219,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5219,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5219,
											"end": 5231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5231,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5219,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5241,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5250,
											"end": 5255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5257,
											"end": 5264,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5266,
											"end": 5271,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5241,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5241,
											"end": 5272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5241,
											"end": 5272,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5241,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5289,
											"end": 5293,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 3909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3921,
											"end": 3943,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3946,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3946,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3946,
											"end": 3964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 3964,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3946,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3981,
											"end": 3982,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3981,
											"end": 3995,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3981,
											"end": 3995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3981,
											"end": 3995,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 3995,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 3995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 3995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5979,
											"end": 5983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5995,
											"end": 6010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6013,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 6013,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6013,
											"end": 6025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6013,
											"end": 6025,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 6013,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6035,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 6051,
											"end": 6055,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6057,
											"end": 6064,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6066,
											"end": 6071,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6035,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6035,
											"end": 6072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6035,
											"end": 6072,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 6035,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6092,
											"end": 6096,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6098,
											"end": 6100,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6102,
											"end": 6107,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6082,
											"end": 6108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6129,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6118,
											"end": 6129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1348,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1367,
											"end": 1395,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "27262618"
										},
										{
											"begin": 1396,
											"end": 1400,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1367,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1367,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1360,
											"end": 1401,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1360,
											"end": 1401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3801,
											"end": 3810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "6574662D726F7574657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 389,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 389,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 375,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 375,
											"end": 385,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 375,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 375,
											"end": 421,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 367,
											"end": 454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1754,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1743,
											"end": 1745,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1747,
											"end": 1753,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 1742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 1737,
											"end": 1754,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 1754,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1737,
											"end": 1754,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 336,
											"end": 363,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4100,
											"end": 4107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4141,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4144,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 4144,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4144,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4144,
											"end": 4162,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 4144,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4190,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4198,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4172,
											"end": 4199,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4172,
											"end": 4199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4172,
											"end": 4199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1223,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1257,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1257,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1257,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1242,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3001,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3026,
											"end": 3048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3051,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3051,
											"end": 3069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3086,
											"end": 3095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3079,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3079,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "6574662D726F7574657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 389,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 389,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 375,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 375,
											"end": 385,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 375,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 375,
											"end": 421,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 367,
											"end": 454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1883,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1889,
											"end": 1893,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1901,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1883,
											"end": 1888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1883,
											"end": 1902,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1883,
											"end": 1902,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1883,
											"end": 1902,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1806,
											"end": 1909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1806,
											"end": 1909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4470,
											"end": 4474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4502,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 4502,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4502,
											"end": 4514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4514,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 4502,
											"end": 4514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 4534,
											"end": 4539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4543,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4545,
											"end": 4550,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4524,
											"end": 4551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 4572,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4561,
											"end": 4572,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 470,
											"end": 583,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1109,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1095,
											"end": 1105,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 1087,
											"end": 1154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 551,
											"end": 576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 565,
											"end": 575,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 551,
											"end": 564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 551,
											"end": 576,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 551,
											"end": 576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 551,
											"end": 576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4699,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4711,
											"end": 4733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 4736,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4736,
											"end": 4754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4784,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4771,
											"end": 4784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4785,
											"end": 4790,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4792,
											"end": 4799,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4764,
											"end": 4800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4764,
											"end": 4800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4764,
											"end": 4800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "PUSH",
											"source": 1,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00"
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 2100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9171,
											"end": 9183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 9186,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 9186,
											"end": 9213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9256,
											"end": 9260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9232,
											"end": 9270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9071,
											"end": 9276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1050,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 589,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 681,
											"end": 682,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 683,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 659,
											"end": 683,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 659,
											"end": 669,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 659,
											"end": 683,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 659,
											"end": 683,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 659,
											"end": 683,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 651,
											"end": 720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 763,
											"end": 764,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 748,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 738,
											"end": 760,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 738,
											"end": 760,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 738,
											"end": 764,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 730,
											"end": 797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 861,
											"end": 871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 878,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 850,
											"end": 878,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 850,
											"end": 878,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 850,
											"end": 880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 846,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 846,
											"end": 1044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 979,
											"end": 1033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 846,
											"end": 1044,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 846,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 936,
											"end": 946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 913,
											"end": 922,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 922,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 947,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 913,
											"end": 947,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 913,
											"end": 947,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 913,
											"end": 947,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 881,
											"end": 958,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 589,
											"end": 1050,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 589,
											"end": 1050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2388,
											"end": 2393,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2402,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2365,
											"end": 2403,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2365,
											"end": 2403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9905,
											"end": 10033,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 9905,
											"end": 10033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10021,
											"end": 10025,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9989,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 9989,
											"end": 10026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10026,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 9989,
											"end": 10026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 10033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 10033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 10033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 10033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11649,
											"end": 12125,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 11649,
											"end": 12125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11748,
											"end": 11772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11775,
											"end": 11800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 11785,
											"end": 11790,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 11799,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11775,
											"end": 11784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 11775,
											"end": 11800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11775,
											"end": 11800,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 11775,
											"end": 11800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11748,
											"end": 11800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11748,
											"end": 11800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11833,
											"end": 11850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11814,
											"end": 11830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11814,
											"end": 11850,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11810,
											"end": 12119,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11810,
											"end": 12119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 11810,
											"end": 12119,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11889,
											"end": 11894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11870,
											"end": 11886,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11870,
											"end": 11894,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11866,
											"end": 11996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11866,
											"end": 11996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 11866,
											"end": 11996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11948,
											"end": 11955,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11957,
											"end": 11973,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11975,
											"end": 11980,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 11921,
											"end": 11981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11866,
											"end": 11996,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 11866,
											"end": 11996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12037,
											"end": 12094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 12046,
											"end": 12051,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12053,
											"end": 12060,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12081,
											"end": 12086,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12062,
											"end": 12078,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12062,
											"end": 12086,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12088,
											"end": 12093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12037,
											"end": 12045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 12037,
											"end": 12094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12037,
											"end": 12094,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 12037,
											"end": 12094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11810,
											"end": 12119,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 11810,
											"end": 12119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11738,
											"end": 12125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11649,
											"end": 12125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11649,
											"end": 12125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11649,
											"end": 12125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11649,
											"end": 12125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6509,
											"end": 6809,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6509,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 6596,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 6588,
											"end": 6674,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6633,
											"end": 6663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6674,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 6588,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6702,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6703,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6687,
											"end": 6703,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6703,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6687,
											"end": 6703,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6703,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6683,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 6683,
											"end": 6769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6755,
											"end": 6756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6726,
											"end": 6758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6683,
											"end": 6769,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 6683,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6778,
											"end": 6802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6794,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6796,
											"end": 6801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6778,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 6778,
											"end": 6802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6778,
											"end": 6802,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 6778,
											"end": 6802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6509,
											"end": 6809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6509,
											"end": 6809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6509,
											"end": 6809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6509,
											"end": 6809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8637,
											"end": 8845,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 8637,
											"end": 8845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8707,
											"end": 8728,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8707,
											"end": 8728,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8714,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8728,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8707,
											"end": 8728,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8728,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8703,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 8703,
											"end": 8794,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8780,
											"end": 8781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 8751,
											"end": 8783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8703,
											"end": 8794,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 8703,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8803,
											"end": 8838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 8819,
											"end": 8820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8823,
											"end": 8830,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8832,
											"end": 8837,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8803,
											"end": 8810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 8803,
											"end": 8838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8803,
											"end": 8838,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 8803,
											"end": 8838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8637,
											"end": 8845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8637,
											"end": 8845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8637,
											"end": 8845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9163,
											"end": 9369,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 9163,
											"end": 9369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9252,
											"end": 9253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9233,
											"end": 9254,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9233,
											"end": 9254,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9233,
											"end": 9240,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9233,
											"end": 9254,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9233,
											"end": 9254,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9233,
											"end": 9254,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9229,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 9229,
											"end": 9318,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9304,
											"end": 9305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 9277,
											"end": 9307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9229,
											"end": 9318,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 9229,
											"end": 9318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9327,
											"end": 9362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 9335,
											"end": 9342,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9356,
											"end": 9361,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9327,
											"end": 9334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 9327,
											"end": 9362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9327,
											"end": 9362,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 9327,
											"end": 9362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9163,
											"end": 9369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9163,
											"end": 9369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9163,
											"end": 9369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 0,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8819,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 7149,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 7149,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 0,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 2553,
											"end": 2569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2553,
											"end": 2571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 2553,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2571,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2596,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2581,
											"end": 2588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 2581,
											"end": 2596,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 2606,
											"end": 2625,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2632,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 11367,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 10880,
											"end": 11367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10988,
											"end": 11010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11013,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 11013,
											"end": 11029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 11013,
											"end": 11031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11013,
											"end": 11031,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 11013,
											"end": 11031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10988,
											"end": 11031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10988,
											"end": 11031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11062,
											"end": 11063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11045,
											"end": 11064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11045,
											"end": 11064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11050,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11045,
											"end": 11064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11064,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11041,
											"end": 11130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 11041,
											"end": 11130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 11087,
											"end": 11119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11041,
											"end": 11130,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 11041,
											"end": 11130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11162,
											"end": 11163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11143,
											"end": 11164,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11143,
											"end": 11164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11143,
											"end": 11150,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11143,
											"end": 11164,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11143,
											"end": 11164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11143,
											"end": 11164,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11139,
											"end": 11229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 11139,
											"end": 11229,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 11187,
											"end": 11218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11139,
											"end": 11229,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 11139,
											"end": 11229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11270,
											"end": 11275,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11251,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11238,
											"end": 11251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11252,
											"end": 11257,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11259,
											"end": 11266,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11275,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11289,
											"end": 11298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11285,
											"end": 11361,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11285,
											"end": 11361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 11285,
											"end": 11361,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11335,
											"end": 11342,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11328,
											"end": 11333,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11344,
											"end": 11349,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 11319,
											"end": 11350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 11285,
											"end": 11361,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 11285,
											"end": 11361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10978,
											"end": 11367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 11367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 11367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 11367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 11367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 11367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2376,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 2003,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 2103,
											"end": 2107,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2109,
											"end": 2111,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2118,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 2089,
											"end": 2119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2119,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 2089,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2195,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 2198,
											"end": 2217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2198,
											"end": 2217,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 2198,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2270,
											"end": 2271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2272,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2272,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2257,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2272,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2272,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2272,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 2227,
											"end": 2310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 2227,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2334,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2352,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2320,
											"end": 2352,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2352,
											"name": "PUSH",
											"source": 9,
											"value": "A6D49DCA"
										},
										{
											"begin": 2353,
											"end": 2357,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2359,
											"end": 2361,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2363,
											"end": 2368,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 2320,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2079,
											"end": 2376,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2376,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2376,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2376,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8535,
											"end": 8539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 8558,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 8558,
											"end": 8584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8485,
											"end": 8605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7124,
											"end": 8294,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 7124,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7234,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 7234,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 7234,
											"end": 7252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7234,
											"end": 7252,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 7234,
											"end": 7252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7266,
											"end": 7284,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7266,
											"end": 7284,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7270,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7284,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7266,
											"end": 7284,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7284,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7403,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7416,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7402,
											"end": 7416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7416,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 7402,
											"end": 7425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 7475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7478,
											"end": 7479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7478,
											"end": 7489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7490,
											"end": 7494,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 7495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 7495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7527,
											"end": 7532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7513,
											"end": 7524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7513,
											"end": 7532,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7624,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 7509,
											"end": 7624,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7584,
											"end": 7588,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7590,
											"end": 7601,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7603,
											"end": 7608,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 7559,
											"end": 7609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7624,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 7509,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7778,
											"end": 7783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7764,
											"end": 7775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7764,
											"end": 7783,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7744,
											"end": 7755,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7756,
											"end": 7760,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7783,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7442,
											"end": 7808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7836,
											"end": 7837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7822,
											"end": 7838,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7822,
											"end": 7838,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7822,
											"end": 7824,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7822,
											"end": 7838,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7822,
											"end": 7838,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7822,
											"end": 7838,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8003,
											"end": 8008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 7986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 7999,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7985,
											"end": 7999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 7999,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8217,
											"end": 8222,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8198,
											"end": 8209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8210,
											"end": 8212,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8271,
											"end": 8275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8281,
											"end": 8286,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 8262,
											"end": 8287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7199,
											"end": 8294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 8294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 8294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 8294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 8294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 301,
											"end": 457,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 301,
											"end": 457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 361,
											"end": 376,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 411,
											"end": 449,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 449,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 411,
											"end": 449,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 411,
											"end": 449,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 449,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 411,
											"end": 449,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 449,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 411,
											"end": 449,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 411,
											"end": 449,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 411,
											"end": 449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 411,
											"end": 449,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 411,
											"end": 449,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 449,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 411,
											"end": 449,
											"name": "PUSH",
											"source": 8,
											"value": "6574662D746F6B656E2D6576656E747300000000000000000000000000000000"
										},
										{
											"begin": 411,
											"end": 449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 411,
											"end": 449,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 411,
											"end": 449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 411,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 411,
											"end": 449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 411,
											"end": 449,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 411,
											"end": 449,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 388,
											"end": 450,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 388,
											"end": 450,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 301,
											"end": 457,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 301,
											"end": 457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1686,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 1569,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1678,
											"end": 1679,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1675,
											"end": 1676,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1680,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1692,
											"end": 1809,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 1692,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1802,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1799,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1803,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1995,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 1815,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1940,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1860,
											"end": 1861,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1853,
											"end": 1941,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1964,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1957,
											"end": 1958,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1950,
											"end": 1965,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1984,
											"end": 1988,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1981,
											"end": 1982,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2282,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 2001,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 2106,
											"end": 2110,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 2084,
											"end": 2111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2111,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 2084,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2082,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2072,
											"end": 2112,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2214,
											"end": 2220,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2202,
											"end": 2212,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2221,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2178,
											"end": 2196,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2166,
											"end": 2176,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2197,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2222,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2157,
											"end": 2245,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2157,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 2157,
											"end": 2245,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 2225,
											"end": 2243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2157,
											"end": 2245,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 2157,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2265,
											"end": 2275,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2263,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2254,
											"end": 2276,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2044,
											"end": 2282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2288,
											"end": 2417,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 2288,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 2349,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2369,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 2406,
											"end": 2410,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2404,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 2378,
											"end": 2411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2411,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 2378,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2288,
											"end": 2417,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2288,
											"end": 2417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2288,
											"end": 2417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2288,
											"end": 2417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2731,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 2423,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2485,
											"end": 2489,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2564,
											"end": 2594,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2561,
											"end": 2617,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2561,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 2561,
											"end": 2617,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2597,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 2597,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 2597,
											"end": 2615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2597,
											"end": 2615,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 2597,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2561,
											"end": 2617,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 2561,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 2657,
											"end": 2663,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 2635,
											"end": 2664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2664,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 2635,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2627,
											"end": 2664,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2627,
											"end": 2664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2719,
											"end": 2723,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 2717,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2724,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2701,
											"end": 2724,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2701,
											"end": 2724,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2731,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2731,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2731,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2885,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 2737,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2833,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2825,
											"end": 2828,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 2877,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2873,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2862,
											"end": 2865,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2874,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2878,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2885,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2885,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2885,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2891,
											"end": 3316,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 2891,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2994,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 3010,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 3052,
											"end": 3058,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 3010,
											"end": 3059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3059,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 3010,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2994,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 2994,
											"end": 3060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2994,
											"end": 3060,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 2994,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3060,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3060,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3083,
											"end": 3089,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3076,
											"end": 3081,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3069,
											"end": 3090,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3121,
											"end": 3125,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3114,
											"end": 3119,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3110,
											"end": 3126,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3159,
											"end": 3162,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3156,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3148,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3141,
											"end": 3157,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 3163,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3247,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 3135,
											"end": 3247,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3166,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 3166,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 3166,
											"end": 3245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3166,
											"end": 3245,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 3166,
											"end": 3245,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3247,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 3135,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 3303,
											"end": 3309,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3298,
											"end": 3301,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3296,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 3256,
											"end": 3310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3310,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 3256,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2975,
											"end": 3316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2891,
											"end": 3316,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2891,
											"end": 3316,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2891,
											"end": 3316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2891,
											"end": 3316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2891,
											"end": 3316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2891,
											"end": 3316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3336,
											"end": 3676,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3336,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3392,
											"end": 3397,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3444,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 3438,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3426,
											"end": 3432,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3418,
											"end": 3445,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3408,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 3408,
											"end": 3530,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3449,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 3449,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 3449,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3449,
											"end": 3528,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 3449,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3408,
											"end": 3530,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 3408,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3572,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3573,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3591,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 3666,
											"end": 3669,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3658,
											"end": 3664,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3651,
											"end": 3655,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3643,
											"end": 3649,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3591,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 3591,
											"end": 3670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3591,
											"end": 3670,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 3591,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3582,
											"end": 3670,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3582,
											"end": 3670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3398,
											"end": 3676,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3336,
											"end": 3676,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3336,
											"end": 3676,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3336,
											"end": 3676,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3336,
											"end": 3676,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3336,
											"end": 3676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3682,
											"end": 3808,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 3682,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3719,
											"end": 3726,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3759,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3752,
											"end": 3757,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3748,
											"end": 3802,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3737,
											"end": 3802,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3737,
											"end": 3802,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3682,
											"end": 3808,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3682,
											"end": 3808,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3682,
											"end": 3808,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3682,
											"end": 3808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3910,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 3814,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 3898,
											"end": 3903,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 3880,
											"end": 3904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3904,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 3880,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3869,
											"end": 3904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3869,
											"end": 3904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3910,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3910,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3910,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3916,
											"end": 4038,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 3916,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3989,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 4007,
											"end": 4012,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3989,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 3989,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3989,
											"end": 4013,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 3989,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3982,
											"end": 3987,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4014,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 3969,
											"end": 4032,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4028,
											"end": 4029,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4025,
											"end": 4026,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4030,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4032,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 3969,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3916,
											"end": 4038,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3916,
											"end": 4038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4044,
											"end": 4183,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 4044,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4090,
											"end": 4095,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4134,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4115,
											"end": 4135,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4135,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 4171,
											"end": 4176,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 4144,
											"end": 4177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4177,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 4144,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4044,
											"end": 4183,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4044,
											"end": 4183,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4044,
											"end": 4183,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4044,
											"end": 4183,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4044,
											"end": 4183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4189,
											"end": 5168,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 4189,
											"end": 5168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4286,
											"end": 4292,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4308,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4339,
											"end": 4348,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4330,
											"end": 4337,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4326,
											"end": 4349,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4322,
											"end": 4354,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4438,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 4319,
											"end": 4438,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4357,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 4357,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 4357,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4357,
											"end": 4436,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 4357,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4438,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 4319,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4505,
											"end": 4506,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4494,
											"end": 4503,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4490,
											"end": 4507,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4508,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4535,
											"end": 4553,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4527,
											"end": 4533,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4554,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4557,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 4557,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 4557,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4557,
											"end": 4636,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 4557,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 4717,
											"end": 4724,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4708,
											"end": 4714,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4697,
											"end": 4706,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4693,
											"end": 4715,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 4662,
											"end": 4725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4725,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4448,
											"end": 4735,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4802,
											"end": 4804,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4791,
											"end": 4800,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4805,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4774,
											"end": 4806,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4825,
											"end": 4831,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4852,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4819,
											"end": 4936,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4819,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 4819,
											"end": 4936,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 4855,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 4855,
											"end": 4934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4934,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 4855,
											"end": 4934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4819,
											"end": 4936,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 4819,
											"end": 4936,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4960,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 5015,
											"end": 5022,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4995,
											"end": 5004,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4991,
											"end": 5013,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4960,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 4960,
											"end": 5023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4960,
											"end": 5023,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 4960,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5023,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4745,
											"end": 5033,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5072,
											"end": 5074,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 5143,
											"end": 5150,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5134,
											"end": 5140,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5123,
											"end": 5132,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5119,
											"end": 5141,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5098,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 5098,
											"end": 5151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5098,
											"end": 5151,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 5098,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5088,
											"end": 5151,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5088,
											"end": 5151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5043,
											"end": 5161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4189,
											"end": 5168,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4189,
											"end": 5168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4189,
											"end": 5168,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4189,
											"end": 5168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4189,
											"end": 5168,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4189,
											"end": 5168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5174,
											"end": 5251,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 5174,
											"end": 5251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5211,
											"end": 5218,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5240,
											"end": 5245,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5229,
											"end": 5245,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5229,
											"end": 5245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5174,
											"end": 5251,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5174,
											"end": 5251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5174,
											"end": 5251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5174,
											"end": 5251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5257,
											"end": 5379,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 5257,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 5348,
											"end": 5353,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 5330,
											"end": 5354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5354,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 5330,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5323,
											"end": 5328,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5320,
											"end": 5355,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5310,
											"end": 5373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 5310,
											"end": 5373,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5369,
											"end": 5370,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5367,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5359,
											"end": 5371,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5310,
											"end": 5373,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 5310,
											"end": 5373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5257,
											"end": 5379,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5257,
											"end": 5379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5385,
											"end": 5524,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 5385,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5431,
											"end": 5436,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5469,
											"end": 5475,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5456,
											"end": 5476,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5476,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5485,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 5512,
											"end": 5517,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5485,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 5485,
											"end": 5518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5485,
											"end": 5518,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 5485,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5385,
											"end": 5524,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5385,
											"end": 5524,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5385,
											"end": 5524,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5385,
											"end": 5524,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5385,
											"end": 5524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5530,
											"end": 6004,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 5530,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5598,
											"end": 5604,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5606,
											"end": 5612,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5657,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5643,
											"end": 5652,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5634,
											"end": 5641,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5653,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5658,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5623,
											"end": 5742,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5623,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 5623,
											"end": 5742,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5661,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 5661,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 5661,
											"end": 5740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5661,
											"end": 5740,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 5661,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5623,
											"end": 5742,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 5623,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5781,
											"end": 5782,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5806,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 5851,
											"end": 5858,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5842,
											"end": 5848,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5840,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5827,
											"end": 5849,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5806,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 5806,
											"end": 5859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5806,
											"end": 5859,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 5806,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5859,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5859,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5752,
											"end": 5869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5908,
											"end": 5910,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5934,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 5979,
											"end": 5986,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5970,
											"end": 5976,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5959,
											"end": 5968,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5955,
											"end": 5977,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5934,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 5934,
											"end": 5987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5934,
											"end": 5987,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 5934,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5924,
											"end": 5987,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5924,
											"end": 5987,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5879,
											"end": 5997,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5530,
											"end": 6004,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5530,
											"end": 6004,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5530,
											"end": 6004,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5530,
											"end": 6004,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5530,
											"end": 6004,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5530,
											"end": 6004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6010,
											"end": 6100,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 6010,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6044,
											"end": 6051,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6087,
											"end": 6092,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6080,
											"end": 6093,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6073,
											"end": 6094,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6010,
											"end": 6100,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6010,
											"end": 6100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6010,
											"end": 6100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6010,
											"end": 6100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6106,
											"end": 6215,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 6106,
											"end": 6215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6187,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 6202,
											"end": 6207,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6187,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 6187,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6187,
											"end": 6208,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 6187,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6185,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6209,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6106,
											"end": 6215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6106,
											"end": 6215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6106,
											"end": 6215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6221,
											"end": 6431,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 6221,
											"end": 6431,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6308,
											"end": 6312,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6346,
											"end": 6348,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6335,
											"end": 6344,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6331,
											"end": 6349,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6323,
											"end": 6349,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6323,
											"end": 6349,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6359,
											"end": 6424,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 6421,
											"end": 6422,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6410,
											"end": 6419,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6423,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6403,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6359,
											"end": 6424,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 6359,
											"end": 6424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6359,
											"end": 6424,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 6359,
											"end": 6424,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6221,
											"end": 6431,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6221,
											"end": 6431,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6221,
											"end": 6431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6221,
											"end": 6431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6221,
											"end": 6431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6437,
											"end": 6555,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 6437,
											"end": 6555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6524,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 6542,
											"end": 6547,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6524,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 6524,
											"end": 6548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6524,
											"end": 6548,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 6524,
											"end": 6548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6519,
											"end": 6522,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6512,
											"end": 6549,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6437,
											"end": 6555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6437,
											"end": 6555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6437,
											"end": 6555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6783,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 6561,
											"end": 6783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6654,
											"end": 6658,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6692,
											"end": 6694,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6681,
											"end": 6690,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6669,
											"end": 6695,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6669,
											"end": 6695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 6776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 6773,
											"end": 6774,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6762,
											"end": 6771,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6758,
											"end": 6775,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6749,
											"end": 6755,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 6776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 6705,
											"end": 6776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 6776,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 6705,
											"end": 6776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6783,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6783,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6789,
											"end": 7408,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 6789,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6874,
											"end": 6880,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6882,
											"end": 6888,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6931,
											"end": 6933,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6919,
											"end": 6928,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6910,
											"end": 6917,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6906,
											"end": 6929,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6902,
											"end": 6934,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6899,
											"end": 7018,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6899,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 6899,
											"end": 7018,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6937,
											"end": 7016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 6937,
											"end": 7016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 6937,
											"end": 7016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6937,
											"end": 7016,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 6937,
											"end": 7016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6899,
											"end": 7018,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 6899,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7057,
											"end": 7058,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7082,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 7127,
											"end": 7134,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7118,
											"end": 7124,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7107,
											"end": 7116,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7103,
											"end": 7125,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7082,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 7082,
											"end": 7135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7082,
											"end": 7135,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 7082,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7072,
											"end": 7135,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7072,
											"end": 7135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7028,
											"end": 7145,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7184,
											"end": 7186,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7210,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 7255,
											"end": 7262,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7246,
											"end": 7252,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7235,
											"end": 7244,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7231,
											"end": 7253,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7210,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 7210,
											"end": 7263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7210,
											"end": 7263,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 7210,
											"end": 7263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7200,
											"end": 7263,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7200,
											"end": 7263,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7155,
											"end": 7273,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7312,
											"end": 7314,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7338,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7374,
											"end": 7380,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7363,
											"end": 7372,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7381,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7338,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 7338,
											"end": 7391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7338,
											"end": 7391,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 7338,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7328,
											"end": 7391,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7328,
											"end": 7391,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7283,
											"end": 7401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6789,
											"end": 7408,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6789,
											"end": 7408,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6789,
											"end": 7408,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6789,
											"end": 7408,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6789,
											"end": 7408,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6789,
											"end": 7408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7414,
											"end": 7923,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 7414,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7489,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7532,
											"end": 7534,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7520,
											"end": 7529,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7511,
											"end": 7518,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7507,
											"end": 7530,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7503,
											"end": 7535,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7500,
											"end": 7619,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7500,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 7500,
											"end": 7619,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7538,
											"end": 7617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 7538,
											"end": 7617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 7538,
											"end": 7617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7538,
											"end": 7617,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 7538,
											"end": 7617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7500,
											"end": 7619,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 7500,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7686,
											"end": 7687,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7675,
											"end": 7684,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7671,
											"end": 7688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7658,
											"end": 7689,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7708,
											"end": 7714,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7705,
											"end": 7735,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7702,
											"end": 7819,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7702,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 7702,
											"end": 7819,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7738,
											"end": 7817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 7738,
											"end": 7817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 7738,
											"end": 7817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7738,
											"end": 7817,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 7738,
											"end": 7817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7702,
											"end": 7819,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 7702,
											"end": 7819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7843,
											"end": 7906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 7898,
											"end": 7905,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7889,
											"end": 7895,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7878,
											"end": 7887,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7874,
											"end": 7896,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7843,
											"end": 7906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 7843,
											"end": 7906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7843,
											"end": 7906,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 7843,
											"end": 7906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7833,
											"end": 7906,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7833,
											"end": 7906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7629,
											"end": 7916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7414,
											"end": 7923,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7414,
											"end": 7923,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7414,
											"end": 7923,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7414,
											"end": 7923,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7414,
											"end": 7923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7929,
											"end": 8047,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 7929,
											"end": 8047,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8016,
											"end": 8040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 8034,
											"end": 8039,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8016,
											"end": 8040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 8016,
											"end": 8040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8016,
											"end": 8040,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 8016,
											"end": 8040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8011,
											"end": 8014,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8004,
											"end": 8041,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7929,
											"end": 8047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7929,
											"end": 8047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7929,
											"end": 8047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8053,
											"end": 8275,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 8053,
											"end": 8275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8146,
											"end": 8150,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8184,
											"end": 8186,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8173,
											"end": 8182,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8169,
											"end": 8187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8161,
											"end": 8187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8161,
											"end": 8187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8197,
											"end": 8268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 8265,
											"end": 8266,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8254,
											"end": 8263,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8250,
											"end": 8267,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8247,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8197,
											"end": 8268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 8197,
											"end": 8268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8197,
											"end": 8268,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 8197,
											"end": 8268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8053,
											"end": 8275,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8053,
											"end": 8275,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8053,
											"end": 8275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8053,
											"end": 8275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8053,
											"end": 8275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8281,
											"end": 8367,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 8281,
											"end": 8367,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8323,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8356,
											"end": 8360,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 8349,
											"end": 8354,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8345,
											"end": 8361,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8334,
											"end": 8361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8334,
											"end": 8361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8281,
											"end": 8367,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8281,
											"end": 8367,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8281,
											"end": 8367,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8281,
											"end": 8367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8485,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 8373,
											"end": 8485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8456,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 8472,
											"end": 8477,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8456,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 8456,
											"end": 8478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8456,
											"end": 8478,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 8456,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8451,
											"end": 8454,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8444,
											"end": 8479,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8705,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 8491,
											"end": 8705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8580,
											"end": 8584,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8618,
											"end": 8620,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8607,
											"end": 8616,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8603,
											"end": 8621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8595,
											"end": 8621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8595,
											"end": 8621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8631,
											"end": 8698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 8695,
											"end": 8696,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8684,
											"end": 8693,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8680,
											"end": 8697,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8671,
											"end": 8677,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8631,
											"end": 8698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 8631,
											"end": 8698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8631,
											"end": 8698,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 8631,
											"end": 8698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8705,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8705,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8711,
											"end": 8771,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 8711,
											"end": 8771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8739,
											"end": 8742,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8760,
											"end": 8765,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8753,
											"end": 8765,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8753,
											"end": 8765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8711,
											"end": 8771,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8711,
											"end": 8771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8711,
											"end": 8771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8711,
											"end": 8771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8777,
											"end": 8919,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 8777,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8827,
											"end": 8836,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8860,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 8878,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 8887,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 8905,
											"end": 8910,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8887,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 8887,
											"end": 8911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8887,
											"end": 8911,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 8887,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8878,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 8878,
											"end": 8912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8878,
											"end": 8912,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 8878,
											"end": 8912,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8860,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 8860,
											"end": 8913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8860,
											"end": 8913,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 8860,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8847,
											"end": 8913,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8847,
											"end": 8913,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8777,
											"end": 8919,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8777,
											"end": 8919,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8777,
											"end": 8919,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8777,
											"end": 8919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8925,
											"end": 9051,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 8925,
											"end": 9051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8975,
											"end": 8984,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9008,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 9039,
											"end": 9044,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9008,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 9008,
											"end": 9045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9008,
											"end": 9045,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 9008,
											"end": 9045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8995,
											"end": 9045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8995,
											"end": 9045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8925,
											"end": 9051,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8925,
											"end": 9051,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8925,
											"end": 9051,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8925,
											"end": 9051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9057,
											"end": 9202,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 9057,
											"end": 9202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9126,
											"end": 9135,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9159,
											"end": 9196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 9190,
											"end": 9195,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 9159,
											"end": 9196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9196,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 9159,
											"end": 9196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9196,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9057,
											"end": 9202,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9057,
											"end": 9202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9057,
											"end": 9202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9057,
											"end": 9202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9208,
											"end": 9377,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 9208,
											"end": 9377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9314,
											"end": 9370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 9364,
											"end": 9369,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9314,
											"end": 9370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 9314,
											"end": 9370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9314,
											"end": 9370,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 9314,
											"end": 9370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9309,
											"end": 9312,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9302,
											"end": 9371,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9208,
											"end": 9377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9208,
											"end": 9377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9208,
											"end": 9377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9383,
											"end": 9643,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 9383,
											"end": 9643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9495,
											"end": 9499,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9533,
											"end": 9535,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9522,
											"end": 9531,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9518,
											"end": 9536,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9510,
											"end": 9536,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9510,
											"end": 9536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9546,
											"end": 9636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 9633,
											"end": 9634,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9622,
											"end": 9631,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9618,
											"end": 9635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9609,
											"end": 9615,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9546,
											"end": 9636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 9546,
											"end": 9636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9546,
											"end": 9636,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 9546,
											"end": 9636,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9383,
											"end": 9643,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9383,
											"end": 9643,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9383,
											"end": 9643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9383,
											"end": 9643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9383,
											"end": 9643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9649,
											"end": 9978,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9649,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9708,
											"end": 9714,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9757,
											"end": 9759,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9745,
											"end": 9754,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9736,
											"end": 9743,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9732,
											"end": 9755,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9728,
											"end": 9760,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9725,
											"end": 9844,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9725,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 9725,
											"end": 9844,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9763,
											"end": 9842,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 9763,
											"end": 9842,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 9763,
											"end": 9842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9763,
											"end": 9842,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 9763,
											"end": 9842,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9725,
											"end": 9844,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 9725,
											"end": 9844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9883,
											"end": 9884,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9908,
											"end": 9961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 9953,
											"end": 9960,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9944,
											"end": 9950,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9933,
											"end": 9942,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9929,
											"end": 9951,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9908,
											"end": 9961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 9908,
											"end": 9961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9908,
											"end": 9961,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 9908,
											"end": 9961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9898,
											"end": 9961,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9898,
											"end": 9961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 9971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9649,
											"end": 9978,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9649,
											"end": 9978,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9649,
											"end": 9978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9649,
											"end": 9978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9649,
											"end": 9978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9984,
											"end": 10458,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 9984,
											"end": 10458,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10052,
											"end": 10058,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10060,
											"end": 10066,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10109,
											"end": 10111,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10097,
											"end": 10106,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10088,
											"end": 10095,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10084,
											"end": 10107,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10080,
											"end": 10112,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10077,
											"end": 10196,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10077,
											"end": 10196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 10077,
											"end": 10196,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10115,
											"end": 10194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 10115,
											"end": 10194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 10115,
											"end": 10194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10115,
											"end": 10194,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 10115,
											"end": 10194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10077,
											"end": 10196,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 10077,
											"end": 10196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10235,
											"end": 10236,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10260,
											"end": 10313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 10305,
											"end": 10312,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10296,
											"end": 10302,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10285,
											"end": 10294,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10281,
											"end": 10303,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10260,
											"end": 10313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 10260,
											"end": 10313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10260,
											"end": 10313,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 10260,
											"end": 10313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10250,
											"end": 10313,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10250,
											"end": 10313,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10323,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10364,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10388,
											"end": 10441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 10433,
											"end": 10440,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10424,
											"end": 10430,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10413,
											"end": 10422,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10409,
											"end": 10431,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10388,
											"end": 10441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 10388,
											"end": 10441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10388,
											"end": 10441,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 10388,
											"end": 10441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10378,
											"end": 10441,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10378,
											"end": 10441,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10333,
											"end": 10451,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9984,
											"end": 10458,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9984,
											"end": 10458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9984,
											"end": 10458,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9984,
											"end": 10458,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9984,
											"end": 10458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9984,
											"end": 10458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10464,
											"end": 10644,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 10464,
											"end": 10644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10512,
											"end": 10589,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10509,
											"end": 10510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10502,
											"end": 10590,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10609,
											"end": 10613,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 10606,
											"end": 10607,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10599,
											"end": 10614,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10633,
											"end": 10637,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10630,
											"end": 10631,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10623,
											"end": 10638,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10650,
											"end": 10970,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 10650,
											"end": 10970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10694,
											"end": 10700,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10731,
											"end": 10732,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10725,
											"end": 10729,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10721,
											"end": 10733,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10711,
											"end": 10733,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10711,
											"end": 10733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10778,
											"end": 10779,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10772,
											"end": 10776,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10768,
											"end": 10780,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10799,
											"end": 10817,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10789,
											"end": 10870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 10789,
											"end": 10870,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10855,
											"end": 10859,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 10847,
											"end": 10853,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10843,
											"end": 10860,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10833,
											"end": 10860,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10833,
											"end": 10860,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10789,
											"end": 10870,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 10789,
											"end": 10870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10917,
											"end": 10919,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10909,
											"end": 10915,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10906,
											"end": 10920,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10886,
											"end": 10904,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10883,
											"end": 10921,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10880,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 10880,
											"end": 10964,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10936,
											"end": 10954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 10936,
											"end": 10954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 10936,
											"end": 10954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10936,
											"end": 10954,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 10936,
											"end": 10954,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10880,
											"end": 10964,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 10880,
											"end": 10964,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10701,
											"end": 10970,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10650,
											"end": 10970,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10650,
											"end": 10970,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10650,
											"end": 10970,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10650,
											"end": 10970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11155,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 10976,
											"end": 11155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11116,
											"end": 11147,
											"name": "PUSH",
											"source": 10,
											"value": "457466546F6B656E3A20616C726561647920696E697469616C697A6564000000"
										},
										{
											"begin": 11112,
											"end": 11113,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11104,
											"end": 11110,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11100,
											"end": 11114,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11093,
											"end": 11148,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11161,
											"end": 11527,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 11161,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11303,
											"end": 11306,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11324,
											"end": 11391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 11388,
											"end": 11390,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 11383,
											"end": 11386,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11324,
											"end": 11391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 11324,
											"end": 11391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11324,
											"end": 11391,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 11324,
											"end": 11391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11317,
											"end": 11391,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11317,
											"end": 11391,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11400,
											"end": 11493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 11489,
											"end": 11492,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11400,
											"end": 11493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 11400,
											"end": 11493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11400,
											"end": 11493,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 11400,
											"end": 11493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11518,
											"end": 11520,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11513,
											"end": 11516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11509,
											"end": 11521,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11502,
											"end": 11521,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11502,
											"end": 11521,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11161,
											"end": 11527,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11161,
											"end": 11527,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11161,
											"end": 11527,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11161,
											"end": 11527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11533,
											"end": 11952,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 11533,
											"end": 11952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11699,
											"end": 11703,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11737,
											"end": 11739,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11726,
											"end": 11735,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11722,
											"end": 11740,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11714,
											"end": 11740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11714,
											"end": 11740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11786,
											"end": 11795,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11780,
											"end": 11784,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11776,
											"end": 11796,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11772,
											"end": 11773,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11761,
											"end": 11770,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11757,
											"end": 11774,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11750,
											"end": 11797,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11814,
											"end": 11945,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 11940,
											"end": 11944,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11814,
											"end": 11945,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 11814,
											"end": 11945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11814,
											"end": 11945,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 11814,
											"end": 11945,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11806,
											"end": 11945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11806,
											"end": 11945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11533,
											"end": 11952,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11533,
											"end": 11952,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11533,
											"end": 11952,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11533,
											"end": 11952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11958,
											"end": 12043,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 11958,
											"end": 12043,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12003,
											"end": 12010,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12032,
											"end": 12037,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12021,
											"end": 12037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12021,
											"end": 12037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11958,
											"end": 12043,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11958,
											"end": 12043,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11958,
											"end": 12043,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11958,
											"end": 12043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12049,
											"end": 12150,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 12049,
											"end": 12150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12085,
											"end": 12092,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12125,
											"end": 12143,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12118,
											"end": 12123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12114,
											"end": 12144,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12103,
											"end": 12144,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12103,
											"end": 12144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12049,
											"end": 12150,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12049,
											"end": 12150,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12049,
											"end": 12150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12049,
											"end": 12150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12156,
											"end": 12312,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 12156,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12213,
											"end": 12222,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12246,
											"end": 12306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 12263,
											"end": 12305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 12298,
											"end": 12303,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 12272,
											"end": 12304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12263,
											"end": 12305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 12263,
											"end": 12305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12263,
											"end": 12305,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 12263,
											"end": 12305,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12246,
											"end": 12306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 12246,
											"end": 12306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12246,
											"end": 12306,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 12246,
											"end": 12306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12233,
											"end": 12306,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12233,
											"end": 12306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12156,
											"end": 12312,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12156,
											"end": 12312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12156,
											"end": 12312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12156,
											"end": 12312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12318,
											"end": 12463,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 12318,
											"end": 12463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12412,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 12450,
											"end": 12455,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12412,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 12412,
											"end": 12456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12412,
											"end": 12456,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 12412,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12407,
											"end": 12410,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12400,
											"end": 12457,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12318,
											"end": 12463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12318,
											"end": 12463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12318,
											"end": 12463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12469,
											"end": 12705,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 12469,
											"end": 12705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12569,
											"end": 12573,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12607,
											"end": 12609,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12596,
											"end": 12605,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12592,
											"end": 12610,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12584,
											"end": 12610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12584,
											"end": 12610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12620,
											"end": 12698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 12695,
											"end": 12696,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12684,
											"end": 12693,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12680,
											"end": 12697,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12671,
											"end": 12677,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12620,
											"end": 12698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 12620,
											"end": 12698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12620,
											"end": 12698,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 12620,
											"end": 12698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12469,
											"end": 12705,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12469,
											"end": 12705,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12469,
											"end": 12705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12469,
											"end": 12705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12469,
											"end": 12705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12711,
											"end": 12854,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 12711,
											"end": 12854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12768,
											"end": 12773,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12799,
											"end": 12805,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12793,
											"end": 12806,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12784,
											"end": 12806,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12784,
											"end": 12806,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12815,
											"end": 12848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 12842,
											"end": 12847,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12815,
											"end": 12848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 12815,
											"end": 12848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12815,
											"end": 12848,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 12815,
											"end": 12848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12711,
											"end": 12854,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12711,
											"end": 12854,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12711,
											"end": 12854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12711,
											"end": 12854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12711,
											"end": 12854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12860,
											"end": 13211,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 12860,
											"end": 13211,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12930,
											"end": 12936,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12979,
											"end": 12981,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12967,
											"end": 12976,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 12965,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12954,
											"end": 12977,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12950,
											"end": 12982,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 12947,
											"end": 13066,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12947,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 12947,
											"end": 13066,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12985,
											"end": 13064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 12985,
											"end": 13064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 12985,
											"end": 13064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12985,
											"end": 13064,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 12985,
											"end": 13064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12947,
											"end": 13066,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 12947,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13105,
											"end": 13106,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13130,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 13186,
											"end": 13193,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13177,
											"end": 13183,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13166,
											"end": 13175,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13162,
											"end": 13184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13130,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 13130,
											"end": 13194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13130,
											"end": 13194,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 13130,
											"end": 13194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13120,
											"end": 13194,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13120,
											"end": 13194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13076,
											"end": 13204,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12860,
											"end": 13211,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12860,
											"end": 13211,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12860,
											"end": 13211,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12860,
											"end": 13211,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12860,
											"end": 13211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13217,
											"end": 13395,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 13217,
											"end": 13395,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13387,
											"name": "PUSH",
											"source": 10,
											"value": "6D73672E73656E646572206973206E6F742065746620726F7574657200000000"
										},
										{
											"begin": 13353,
											"end": 13354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13345,
											"end": 13351,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13341,
											"end": 13355,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13334,
											"end": 13388,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13217,
											"end": 13395,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13217,
											"end": 13395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13401,
											"end": 13767,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 13401,
											"end": 13767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13543,
											"end": 13546,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13564,
											"end": 13631,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 13628,
											"end": 13630,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 13623,
											"end": 13626,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13564,
											"end": 13631,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 13564,
											"end": 13631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13564,
											"end": 13631,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 13564,
											"end": 13631,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13557,
											"end": 13631,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13557,
											"end": 13631,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13640,
											"end": 13733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 13729,
											"end": 13732,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13640,
											"end": 13733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 13640,
											"end": 13733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13640,
											"end": 13733,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 13640,
											"end": 13733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13758,
											"end": 13760,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13753,
											"end": 13756,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13749,
											"end": 13761,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13742,
											"end": 13761,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13742,
											"end": 13761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13401,
											"end": 13767,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13401,
											"end": 13767,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13401,
											"end": 13767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13401,
											"end": 13767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 14192,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 13773,
											"end": 14192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13939,
											"end": 13943,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13977,
											"end": 13979,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13966,
											"end": 13975,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13962,
											"end": 13980,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13954,
											"end": 13980,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13954,
											"end": 13980,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14026,
											"end": 14035,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14020,
											"end": 14024,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14016,
											"end": 14036,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14012,
											"end": 14013,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14010,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13997,
											"end": 14014,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13990,
											"end": 14037,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14054,
											"end": 14185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 14180,
											"end": 14184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14054,
											"end": 14185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 14054,
											"end": 14185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14054,
											"end": 14185,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 14054,
											"end": 14185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14046,
											"end": 14185,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14046,
											"end": 14185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 14192,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 14192,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 14192,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 14192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14198,
											"end": 14371,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 14198,
											"end": 14371,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14338,
											"end": 14363,
											"name": "PUSH",
											"source": 10,
											"value": "43616C6C6572206973206E6F7420746865206F776E6572000000000000000000"
										},
										{
											"begin": 14334,
											"end": 14335,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14326,
											"end": 14332,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14322,
											"end": 14336,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14315,
											"end": 14364,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14198,
											"end": 14371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14198,
											"end": 14371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14377,
											"end": 14743,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 14377,
											"end": 14743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14519,
											"end": 14522,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14540,
											"end": 14607,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 14604,
											"end": 14606,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 14599,
											"end": 14602,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14540,
											"end": 14607,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 14540,
											"end": 14607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14540,
											"end": 14607,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 14540,
											"end": 14607,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14533,
											"end": 14607,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14533,
											"end": 14607,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14616,
											"end": 14709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 14705,
											"end": 14708,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14616,
											"end": 14709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 14616,
											"end": 14709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14616,
											"end": 14709,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 14616,
											"end": 14709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14734,
											"end": 14736,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14729,
											"end": 14732,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14725,
											"end": 14737,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14718,
											"end": 14737,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14718,
											"end": 14737,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14377,
											"end": 14743,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14377,
											"end": 14743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14377,
											"end": 14743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14377,
											"end": 14743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14749,
											"end": 15168,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 14749,
											"end": 15168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14915,
											"end": 14919,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14953,
											"end": 14955,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14942,
											"end": 14951,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14938,
											"end": 14956,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14930,
											"end": 14956,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14930,
											"end": 14956,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15002,
											"end": 15011,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14996,
											"end": 15000,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14992,
											"end": 15012,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14988,
											"end": 14989,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14977,
											"end": 14986,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14973,
											"end": 14990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14966,
											"end": 15013,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15030,
											"end": 15161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 15156,
											"end": 15160,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15030,
											"end": 15161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 15030,
											"end": 15161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15030,
											"end": 15161,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 15030,
											"end": 15161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15022,
											"end": 15161,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15022,
											"end": 15161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14749,
											"end": 15168,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14749,
											"end": 15168,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14749,
											"end": 15168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14749,
											"end": 15168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15174,
											"end": 15356,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 15174,
											"end": 15356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15314,
											"end": 15348,
											"name": "PUSH",
											"source": 10,
											"value": "4469726563746F72792063616E6E6F74206265207A65726F2061646472657373"
										},
										{
											"begin": 15310,
											"end": 15311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15302,
											"end": 15308,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15298,
											"end": 15312,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15291,
											"end": 15349,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15174,
											"end": 15356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15174,
											"end": 15356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15362,
											"end": 15728,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 15362,
											"end": 15728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15504,
											"end": 15507,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15525,
											"end": 15592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 15589,
											"end": 15591,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15584,
											"end": 15587,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15525,
											"end": 15592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 15525,
											"end": 15592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15525,
											"end": 15592,
											"name": "tag",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 15525,
											"end": 15592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15518,
											"end": 15592,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15518,
											"end": 15592,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15601,
											"end": 15694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 15690,
											"end": 15693,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15601,
											"end": 15694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 15601,
											"end": 15694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15601,
											"end": 15694,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 15601,
											"end": 15694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15719,
											"end": 15721,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15714,
											"end": 15717,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15710,
											"end": 15722,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15703,
											"end": 15722,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15703,
											"end": 15722,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15362,
											"end": 15728,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15362,
											"end": 15728,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15362,
											"end": 15728,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15362,
											"end": 15728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15734,
											"end": 16153,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 15734,
											"end": 16153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15900,
											"end": 15904,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15938,
											"end": 15940,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15927,
											"end": 15936,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15923,
											"end": 15941,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15915,
											"end": 15941,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15915,
											"end": 15941,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15987,
											"end": 15996,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15981,
											"end": 15985,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15977,
											"end": 15997,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15973,
											"end": 15974,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15962,
											"end": 15971,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15958,
											"end": 15975,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15951,
											"end": 15998,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16015,
											"end": 16146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 16141,
											"end": 16145,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16015,
											"end": 16146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 16015,
											"end": 16146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16015,
											"end": 16146,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 16015,
											"end": 16146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16007,
											"end": 16146,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16007,
											"end": 16146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15734,
											"end": 16153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15734,
											"end": 16153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15734,
											"end": 16153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15734,
											"end": 16153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16159,
											"end": 16337,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 16159,
											"end": 16337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16299,
											"end": 16329,
											"name": "PUSH",
											"source": 10,
											"value": "4469726563746F7279206D757374206265206120636F6E747261637400000000"
										},
										{
											"begin": 16295,
											"end": 16296,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16287,
											"end": 16293,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16283,
											"end": 16297,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16276,
											"end": 16330,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16159,
											"end": 16337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16159,
											"end": 16337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16343,
											"end": 16709,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 16343,
											"end": 16709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16485,
											"end": 16488,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16506,
											"end": 16573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 16570,
											"end": 16572,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 16565,
											"end": 16568,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16506,
											"end": 16573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 16506,
											"end": 16573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16506,
											"end": 16573,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 16506,
											"end": 16573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16499,
											"end": 16573,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16499,
											"end": 16573,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16582,
											"end": 16675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 16671,
											"end": 16674,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16582,
											"end": 16675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 16582,
											"end": 16675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16582,
											"end": 16675,
											"name": "tag",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 16582,
											"end": 16675,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16700,
											"end": 16702,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16695,
											"end": 16698,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16691,
											"end": 16703,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16684,
											"end": 16703,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16684,
											"end": 16703,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16343,
											"end": 16709,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16343,
											"end": 16709,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16343,
											"end": 16709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16343,
											"end": 16709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16715,
											"end": 17134,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 16715,
											"end": 17134,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16881,
											"end": 16885,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16919,
											"end": 16921,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16908,
											"end": 16917,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16904,
											"end": 16922,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16896,
											"end": 16922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16896,
											"end": 16922,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16968,
											"end": 16977,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16962,
											"end": 16966,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16958,
											"end": 16978,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16954,
											"end": 16955,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16943,
											"end": 16952,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16939,
											"end": 16956,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16932,
											"end": 16979,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16996,
											"end": 17127,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 17122,
											"end": 17126,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16996,
											"end": 17127,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 16996,
											"end": 17127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16996,
											"end": 17127,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 16996,
											"end": 17127,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16988,
											"end": 17127,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16988,
											"end": 17127,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16715,
											"end": 17134,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16715,
											"end": 17134,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16715,
											"end": 17134,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16715,
											"end": 17134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17140,
											"end": 17371,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 17140,
											"end": 17371,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17280,
											"end": 17314,
											"name": "PUSH",
											"source": 10,
											"value": "4469726563746F7279206164647265737320646F6573206E6F7420696D706C65"
										},
										{
											"begin": 17276,
											"end": 17277,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17268,
											"end": 17274,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17264,
											"end": 17278,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17257,
											"end": 17315,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17349,
											"end": 17363,
											"name": "PUSH",
											"source": 10,
											"value": "6D656E74206F776E657228290000000000000000000000000000000000000000"
										},
										{
											"begin": 17344,
											"end": 17346,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17336,
											"end": 17342,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17332,
											"end": 17347,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17325,
											"end": 17364,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17140,
											"end": 17371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17140,
											"end": 17371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17377,
											"end": 17743,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 17377,
											"end": 17743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17519,
											"end": 17522,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17540,
											"end": 17607,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 17604,
											"end": 17606,
											"name": "PUSH",
											"source": 10,
											"value": "2C"
										},
										{
											"begin": 17599,
											"end": 17602,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17540,
											"end": 17607,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 17540,
											"end": 17607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17540,
											"end": 17607,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 17540,
											"end": 17607,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17533,
											"end": 17607,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17533,
											"end": 17607,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17616,
											"end": 17709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 17705,
											"end": 17708,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17616,
											"end": 17709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 17616,
											"end": 17709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17616,
											"end": 17709,
											"name": "tag",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 17616,
											"end": 17709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17734,
											"end": 17736,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17729,
											"end": 17732,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17725,
											"end": 17737,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17718,
											"end": 17737,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17718,
											"end": 17737,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17377,
											"end": 17743,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17377,
											"end": 17743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17377,
											"end": 17743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17377,
											"end": 17743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17749,
											"end": 18168,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 17749,
											"end": 18168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17915,
											"end": 17919,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17953,
											"end": 17955,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17942,
											"end": 17951,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17938,
											"end": 17956,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17930,
											"end": 17956,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17930,
											"end": 17956,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18002,
											"end": 18011,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17996,
											"end": 18000,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17992,
											"end": 18012,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17988,
											"end": 17989,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17977,
											"end": 17986,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17973,
											"end": 17990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17966,
											"end": 18013,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18030,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 18156,
											"end": 18160,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18030,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 18030,
											"end": 18161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18030,
											"end": 18161,
											"name": "tag",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 18030,
											"end": 18161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18022,
											"end": 18161,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18022,
											"end": 18161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17749,
											"end": 18168,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17749,
											"end": 18168,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17749,
											"end": 18168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17749,
											"end": 18168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18174,
											"end": 18616,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 18174,
											"end": 18616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18323,
											"end": 18327,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18361,
											"end": 18363,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 18350,
											"end": 18359,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18346,
											"end": 18364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18338,
											"end": 18364,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18338,
											"end": 18364,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18374,
											"end": 18445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 18442,
											"end": 18443,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18431,
											"end": 18440,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18427,
											"end": 18444,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18418,
											"end": 18424,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 18374,
											"end": 18445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 18374,
											"end": 18445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18374,
											"end": 18445,
											"name": "tag",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 18374,
											"end": 18445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18455,
											"end": 18527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 18523,
											"end": 18525,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18512,
											"end": 18521,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18508,
											"end": 18526,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18499,
											"end": 18505,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 18455,
											"end": 18527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 18455,
											"end": 18527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18455,
											"end": 18527,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 18455,
											"end": 18527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18537,
											"end": 18609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 18605,
											"end": 18607,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18594,
											"end": 18603,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18590,
											"end": 18608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18581,
											"end": 18587,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18537,
											"end": 18609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 18537,
											"end": 18609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18537,
											"end": 18609,
											"name": "tag",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 18537,
											"end": 18609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18174,
											"end": 18616,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 18174,
											"end": 18616,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 18174,
											"end": 18616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18174,
											"end": 18616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18174,
											"end": 18616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18174,
											"end": 18616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18174,
											"end": 18616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18622,
											"end": 18763,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 18622,
											"end": 18763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18671,
											"end": 18675,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18694,
											"end": 18697,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18686,
											"end": 18697,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18686,
											"end": 18697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18717,
											"end": 18720,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18714,
											"end": 18715,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18707,
											"end": 18721,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18751,
											"end": 18755,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18748,
											"end": 18749,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18738,
											"end": 18756,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 18730,
											"end": 18756,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18730,
											"end": 18756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18622,
											"end": 18763,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18622,
											"end": 18763,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18622,
											"end": 18763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18622,
											"end": 18763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18769,
											"end": 18862,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 18769,
											"end": 18862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18806,
											"end": 18812,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18853,
											"end": 18855,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18848,
											"end": 18850,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 18841,
											"end": 18846,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18837,
											"end": 18851,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18833,
											"end": 18856,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 18823,
											"end": 18856,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18823,
											"end": 18856,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18769,
											"end": 18862,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18769,
											"end": 18862,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18769,
											"end": 18862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18769,
											"end": 18862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18868,
											"end": 18975,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 18868,
											"end": 18975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18912,
											"end": 18920,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18962,
											"end": 18967,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18956,
											"end": 18960,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18952,
											"end": 18968,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 18931,
											"end": 18968,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18931,
											"end": 18968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18868,
											"end": 18975,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18868,
											"end": 18975,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18868,
											"end": 18975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18868,
											"end": 18975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18868,
											"end": 18975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18981,
											"end": 19374,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 18981,
											"end": 19374,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19050,
											"end": 19056,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19100,
											"end": 19101,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 19088,
											"end": 19098,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19084,
											"end": 19102,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 19123,
											"end": 19220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 19153,
											"end": 19219,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19142,
											"end": 19151,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19123,
											"end": 19220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 19123,
											"end": 19220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19123,
											"end": 19220,
											"name": "tag",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 19123,
											"end": 19220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19241,
											"end": 19280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 19271,
											"end": 19279,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 19260,
											"end": 19269,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19241,
											"end": 19280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 19241,
											"end": 19280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19241,
											"end": 19280,
											"name": "tag",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 19241,
											"end": 19280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19229,
											"end": 19280,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 19229,
											"end": 19280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19313,
											"end": 19317,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19309,
											"end": 19318,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 19302,
											"end": 19307,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19298,
											"end": 19319,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19289,
											"end": 19319,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 19289,
											"end": 19319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19362,
											"end": 19366,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19352,
											"end": 19360,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 19348,
											"end": 19367,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19341,
											"end": 19346,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19338,
											"end": 19368,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 19328,
											"end": 19368,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19328,
											"end": 19368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19057,
											"end": 19374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19057,
											"end": 19374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18981,
											"end": 19374,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 18981,
											"end": 19374,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18981,
											"end": 19374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18981,
											"end": 19374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18981,
											"end": 19374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18981,
											"end": 19374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19380,
											"end": 19522,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 19380,
											"end": 19522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19430,
											"end": 19439,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19463,
											"end": 19516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 19481,
											"end": 19515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 19490,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 19508,
											"end": 19513,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19490,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 19490,
											"end": 19514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19490,
											"end": 19514,
											"name": "tag",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 19490,
											"end": 19514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19481,
											"end": 19515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 19481,
											"end": 19515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19481,
											"end": 19515,
											"name": "tag",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 19481,
											"end": 19515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19463,
											"end": 19516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 19463,
											"end": 19516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19463,
											"end": 19516,
											"name": "tag",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 19463,
											"end": 19516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19450,
											"end": 19516,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19450,
											"end": 19516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19380,
											"end": 19522,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19380,
											"end": 19522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19380,
											"end": 19522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19380,
											"end": 19522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19528,
											"end": 19603,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 19528,
											"end": 19603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19571,
											"end": 19574,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19592,
											"end": 19597,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19585,
											"end": 19597,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19585,
											"end": 19597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19528,
											"end": 19603,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19528,
											"end": 19603,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19528,
											"end": 19603,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19528,
											"end": 19603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19609,
											"end": 19878,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 19609,
											"end": 19878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19719,
											"end": 19758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 19750,
											"end": 19757,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19719,
											"end": 19758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 19719,
											"end": 19758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19719,
											"end": 19758,
											"name": "tag",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 19719,
											"end": 19758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19780,
											"end": 19871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 19829,
											"end": 19870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 19853,
											"end": 19869,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19829,
											"end": 19870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 19829,
											"end": 19870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19829,
											"end": 19870,
											"name": "tag",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 19829,
											"end": 19870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19821,
											"end": 19827,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19814,
											"end": 19818,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19808,
											"end": 19819,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 19780,
											"end": 19871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 19780,
											"end": 19871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19780,
											"end": 19871,
											"name": "tag",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 19780,
											"end": 19871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19774,
											"end": 19778,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19767,
											"end": 19872,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 19685,
											"end": 19878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19609,
											"end": 19878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19609,
											"end": 19878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19609,
											"end": 19878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19609,
											"end": 19878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19884,
											"end": 19957,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 19884,
											"end": 19957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19929,
											"end": 19932,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19950,
											"end": 19951,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19943,
											"end": 19951,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19943,
											"end": 19951,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19884,
											"end": 19957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19884,
											"end": 19957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19963,
											"end": 20152,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 19963,
											"end": 20152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20040,
											"end": 20072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 20040,
											"end": 20072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 20040,
											"end": 20072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20040,
											"end": 20072,
											"name": "tag",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 20040,
											"end": 20072,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20081,
											"end": 20146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 20139,
											"end": 20145,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20131,
											"end": 20137,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20125,
											"end": 20129,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20081,
											"end": 20146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 20081,
											"end": 20146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20081,
											"end": 20146,
											"name": "tag",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 20081,
											"end": 20146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20016,
											"end": 20152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19963,
											"end": 20152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19963,
											"end": 20152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19963,
											"end": 20152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20158,
											"end": 20344,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 20158,
											"end": 20344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20218,
											"end": 20338,
											"name": "tag",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 20218,
											"end": 20338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20235,
											"end": 20238,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20228,
											"end": 20233,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20225,
											"end": 20239,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 20218,
											"end": 20338,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20218,
											"end": 20338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 20218,
											"end": 20338,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20289,
											"end": 20328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 20326,
											"end": 20327,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20319,
											"end": 20324,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20289,
											"end": 20328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 20289,
											"end": 20328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20289,
											"end": 20328,
											"name": "tag",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 20289,
											"end": 20328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20262,
											"end": 20263,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 20255,
											"end": 20260,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20251,
											"end": 20264,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20242,
											"end": 20264,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20242,
											"end": 20264,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20218,
											"end": 20338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 20218,
											"end": 20338,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20218,
											"end": 20338,
											"name": "tag",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 20218,
											"end": 20338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20158,
											"end": 20344,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20158,
											"end": 20344,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20158,
											"end": 20344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20350,
											"end": 20893,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 20350,
											"end": 20893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20451,
											"end": 20453,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 20446,
											"end": 20449,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20443,
											"end": 20454,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 20440,
											"end": 20886,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20440,
											"end": 20886,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 20440,
											"end": 20886,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20485,
											"end": 20523,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 20517,
											"end": 20522,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20485,
											"end": 20523,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 20485,
											"end": 20523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20485,
											"end": 20523,
											"name": "tag",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 20485,
											"end": 20523,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20569,
											"end": 20598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 20587,
											"end": 20597,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20569,
											"end": 20598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 20569,
											"end": 20598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20569,
											"end": 20598,
											"name": "tag",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 20569,
											"end": 20598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20559,
											"end": 20567,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20555,
											"end": 20599,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20752,
											"end": 20754,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20740,
											"end": 20750,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20737,
											"end": 20755,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 20734,
											"end": 20783,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20734,
											"end": 20783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 20734,
											"end": 20783,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20773,
											"end": 20781,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20758,
											"end": 20781,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20758,
											"end": 20781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20734,
											"end": 20783,
											"name": "tag",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 20734,
											"end": 20783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20796,
											"end": 20876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 20852,
											"end": 20874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 20870,
											"end": 20873,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20852,
											"end": 20874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 20852,
											"end": 20874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20852,
											"end": 20874,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 20852,
											"end": 20874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20842,
											"end": 20850,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20838,
											"end": 20875,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20825,
											"end": 20836,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20796,
											"end": 20876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 20796,
											"end": 20876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20796,
											"end": 20876,
											"name": "tag",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 20796,
											"end": 20876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20455,
											"end": 20886,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20455,
											"end": 20886,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20440,
											"end": 20886,
											"name": "tag",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 20440,
											"end": 20886,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20350,
											"end": 20893,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20350,
											"end": 20893,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20350,
											"end": 20893,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20350,
											"end": 20893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20899,
											"end": 21016,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 20899,
											"end": 21016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20953,
											"end": 20961,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21003,
											"end": 21008,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20997,
											"end": 21001,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20993,
											"end": 21009,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 20972,
											"end": 21009,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20972,
											"end": 21009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20899,
											"end": 21016,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20899,
											"end": 21016,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20899,
											"end": 21016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20899,
											"end": 21016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20899,
											"end": 21016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21022,
											"end": 21191,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 21022,
											"end": 21191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21066,
											"end": 21072,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21099,
											"end": 21150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 21147,
											"end": 21148,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21143,
											"end": 21149,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 21135,
											"end": 21140,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21132,
											"end": 21133,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 21128,
											"end": 21141,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 21099,
											"end": 21150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 21099,
											"end": 21150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21099,
											"end": 21150,
											"name": "tag",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 21099,
											"end": 21150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21095,
											"end": 21151,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 21180,
											"end": 21184,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 21174,
											"end": 21178,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21170,
											"end": 21185,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 21160,
											"end": 21185,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21160,
											"end": 21185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21073,
											"end": 21191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21022,
											"end": 21191,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21022,
											"end": 21191,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21022,
											"end": 21191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21022,
											"end": 21191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21022,
											"end": 21191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21196,
											"end": 21491,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 21196,
											"end": 21491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21272,
											"end": 21276,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21418,
											"end": 21447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 21443,
											"end": 21446,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21437,
											"end": 21441,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21418,
											"end": 21447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 21418,
											"end": 21447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21418,
											"end": 21447,
											"name": "tag",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 21418,
											"end": 21447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21410,
											"end": 21447,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21410,
											"end": 21447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21480,
											"end": 21483,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21477,
											"end": 21478,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 21473,
											"end": 21484,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 21467,
											"end": 21471,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21464,
											"end": 21485,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 21456,
											"end": 21485,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21456,
											"end": 21485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21196,
											"end": 21491,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21196,
											"end": 21491,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21196,
											"end": 21491,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21196,
											"end": 21491,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21196,
											"end": 21491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21496,
											"end": 22891,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 21496,
											"end": 22891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21613,
											"end": 21650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 21646,
											"end": 21649,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21613,
											"end": 21650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 21613,
											"end": 21650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21613,
											"end": 21650,
											"name": "tag",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 21613,
											"end": 21650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21715,
											"end": 21733,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21707,
											"end": 21713,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21704,
											"end": 21734,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 21701,
											"end": 21757,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 21701,
											"end": 21757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 21701,
											"end": 21757,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21737,
											"end": 21755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 21737,
											"end": 21755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 21737,
											"end": 21755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21737,
											"end": 21755,
											"name": "tag",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 21737,
											"end": 21755,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21701,
											"end": 21757,
											"name": "tag",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 21701,
											"end": 21757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21781,
											"end": 21819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 21813,
											"end": 21817,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21807,
											"end": 21818,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 21781,
											"end": 21819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 21781,
											"end": 21819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21781,
											"end": 21819,
											"name": "tag",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 21781,
											"end": 21819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21866,
											"end": 21933,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 21926,
											"end": 21932,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21918,
											"end": 21924,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21912,
											"end": 21916,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21866,
											"end": 21933,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 21866,
											"end": 21933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21866,
											"end": 21933,
											"name": "tag",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 21866,
											"end": 21933,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21960,
											"end": 21961,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21984,
											"end": 21988,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21971,
											"end": 21988,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21971,
											"end": 21988,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22016,
											"end": 22018,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 22008,
											"end": 22014,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22005,
											"end": 22019,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 22033,
											"end": 22034,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 22028,
											"end": 22646,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22028,
											"end": 22646,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 22028,
											"end": 22646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 22028,
											"end": 22646,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22690,
											"end": 22691,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22707,
											"end": 22713,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22704,
											"end": 22781,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 22704,
											"end": 22781,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 22704,
											"end": 22781,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22756,
											"end": 22765,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22751,
											"end": 22754,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 22747,
											"end": 22766,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22741,
											"end": 22767,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 22732,
											"end": 22767,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22732,
											"end": 22767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22704,
											"end": 22781,
											"name": "tag",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 22704,
											"end": 22781,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22807,
											"end": 22874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 22867,
											"end": 22873,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 22860,
											"end": 22865,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22807,
											"end": 22874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 22807,
											"end": 22874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22807,
											"end": 22874,
											"name": "tag",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 22807,
											"end": 22874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22801,
											"end": 22805,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 22794,
											"end": 22875,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 22663,
											"end": 22885,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21998,
											"end": 22885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 21998,
											"end": 22885,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22028,
											"end": 22646,
											"name": "tag",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 22028,
											"end": 22646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22080,
											"end": 22084,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 22076,
											"end": 22085,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 22068,
											"end": 22074,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22064,
											"end": 22086,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 22114,
											"end": 22151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 22146,
											"end": 22150,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 22114,
											"end": 22151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 22114,
											"end": 22151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22114,
											"end": 22151,
											"name": "tag",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 22114,
											"end": 22151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22173,
											"end": 22174,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22187,
											"end": 22395,
											"name": "tag",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 22187,
											"end": 22395,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22201,
											"end": 22208,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22198,
											"end": 22199,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22195,
											"end": 22209,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22395,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22395,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 22187,
											"end": 22395,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22280,
											"end": 22289,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22275,
											"end": 22278,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 22271,
											"end": 22290,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22265,
											"end": 22291,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 22257,
											"end": 22263,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22250,
											"end": 22292,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 22331,
											"end": 22332,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 22323,
											"end": 22329,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22319,
											"end": 22333,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22309,
											"end": 22333,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22309,
											"end": 22333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22378,
											"end": 22380,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22367,
											"end": 22376,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 22363,
											"end": 22381,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22350,
											"end": 22381,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 22350,
											"end": 22381,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22224,
											"end": 22228,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22221,
											"end": 22222,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22217,
											"end": 22229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22212,
											"end": 22229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22212,
											"end": 22229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22395,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 22187,
											"end": 22395,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22395,
											"name": "tag",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 22187,
											"end": 22395,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22423,
											"end": 22429,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 22414,
											"end": 22421,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22411,
											"end": 22430,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 22408,
											"end": 22587,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 22408,
											"end": 22587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 22408,
											"end": 22587,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22481,
											"end": 22490,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22476,
											"end": 22479,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 22472,
											"end": 22491,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22466,
											"end": 22492,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 22524,
											"end": 22572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 22566,
											"end": 22570,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 22558,
											"end": 22564,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 22554,
											"end": 22571,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 22543,
											"end": 22552,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22524,
											"end": 22572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 22524,
											"end": 22572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22524,
											"end": 22572,
											"name": "tag",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 22524,
											"end": 22572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22516,
											"end": 22522,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22509,
											"end": 22573,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 22431,
											"end": 22587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22408,
											"end": 22587,
											"name": "tag",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 22408,
											"end": 22587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22633,
											"end": 22634,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 22629,
											"end": 22630,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 22621,
											"end": 22627,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 22617,
											"end": 22631,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 22613,
											"end": 22635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22607,
											"end": 22611,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 22600,
											"end": 22636,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 22035,
											"end": 22646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22035,
											"end": 22646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22035,
											"end": 22646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21998,
											"end": 22885,
											"name": "tag",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 21998,
											"end": 22885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21998,
											"end": 22885,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21588,
											"end": 22891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21588,
											"end": 22891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21588,
											"end": 22891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21496,
											"end": 22891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21496,
											"end": 22891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21496,
											"end": 22891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22897,
											"end": 23117,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 22897,
											"end": 23117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23037,
											"end": 23071,
											"name": "PUSH",
											"source": 10,
											"value": "457466546F6B656E3A206576656E747320636F6E7472616374206E6F74207365"
										},
										{
											"begin": 23033,
											"end": 23034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23025,
											"end": 23031,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23021,
											"end": 23035,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23014,
											"end": 23072,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23106,
											"end": 23109,
											"name": "PUSH",
											"source": 10,
											"value": "7400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23101,
											"end": 23103,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23093,
											"end": 23099,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23089,
											"end": 23104,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23082,
											"end": 23110,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22897,
											"end": 23117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22897,
											"end": 23117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23123,
											"end": 23489,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 23123,
											"end": 23489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23265,
											"end": 23268,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23286,
											"end": 23353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 23350,
											"end": 23352,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 23345,
											"end": 23348,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23286,
											"end": 23353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 23286,
											"end": 23353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23286,
											"end": 23353,
											"name": "tag",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 23286,
											"end": 23353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23279,
											"end": 23353,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23279,
											"end": 23353,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23362,
											"end": 23455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 23451,
											"end": 23454,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23362,
											"end": 23455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 23362,
											"end": 23455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23362,
											"end": 23455,
											"name": "tag",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 23362,
											"end": 23455,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23480,
											"end": 23482,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 23475,
											"end": 23478,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23471,
											"end": 23483,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23464,
											"end": 23483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23464,
											"end": 23483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23123,
											"end": 23489,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23123,
											"end": 23489,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23123,
											"end": 23489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23123,
											"end": 23489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23495,
											"end": 23914,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 23495,
											"end": 23914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23661,
											"end": 23665,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23699,
											"end": 23701,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23688,
											"end": 23697,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23684,
											"end": 23702,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23676,
											"end": 23702,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23676,
											"end": 23702,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23748,
											"end": 23757,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23742,
											"end": 23746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23738,
											"end": 23758,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 23734,
											"end": 23735,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23723,
											"end": 23732,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23719,
											"end": 23736,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23712,
											"end": 23759,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23776,
											"end": 23907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 23902,
											"end": 23906,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23776,
											"end": 23907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 23776,
											"end": 23907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23776,
											"end": 23907,
											"name": "tag",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 23776,
											"end": 23907,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23768,
											"end": 23907,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23768,
											"end": 23907,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23495,
											"end": 23914,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23495,
											"end": 23914,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23495,
											"end": 23914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23495,
											"end": 23914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23920,
											"end": 24362,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 23920,
											"end": 24362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24069,
											"end": 24073,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24107,
											"end": 24109,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 24096,
											"end": 24105,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24092,
											"end": 24110,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24084,
											"end": 24110,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24084,
											"end": 24110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24120,
											"end": 24191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 24188,
											"end": 24189,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24177,
											"end": 24186,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24173,
											"end": 24190,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24164,
											"end": 24170,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 24120,
											"end": 24191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 24120,
											"end": 24191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24120,
											"end": 24191,
											"name": "tag",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 24120,
											"end": 24191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24201,
											"end": 24273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 24269,
											"end": 24271,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24258,
											"end": 24267,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24254,
											"end": 24272,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24245,
											"end": 24251,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 24201,
											"end": 24273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 24201,
											"end": 24273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24201,
											"end": 24273,
											"name": "tag",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 24201,
											"end": 24273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24283,
											"end": 24355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 24351,
											"end": 24353,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 24340,
											"end": 24349,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24336,
											"end": 24354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24327,
											"end": 24333,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 24283,
											"end": 24355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 24283,
											"end": 24355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24283,
											"end": 24355,
											"name": "tag",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 24283,
											"end": 24355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23920,
											"end": 24362,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 23920,
											"end": 24362,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 23920,
											"end": 24362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23920,
											"end": 24362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23920,
											"end": 24362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23920,
											"end": 24362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23920,
											"end": 24362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24368,
											"end": 24548,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 24368,
											"end": 24548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24416,
											"end": 24493,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24413,
											"end": 24414,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24406,
											"end": 24494,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24513,
											"end": 24517,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 24510,
											"end": 24511,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 24503,
											"end": 24518,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24537,
											"end": 24541,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 24534,
											"end": 24535,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24527,
											"end": 24542,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 24554,
											"end": 24745,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 24554,
											"end": 24745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24594,
											"end": 24597,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24613,
											"end": 24633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 24631,
											"end": 24632,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24613,
											"end": 24633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 24613,
											"end": 24633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24613,
											"end": 24633,
											"name": "tag",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 24613,
											"end": 24633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24608,
											"end": 24633,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24608,
											"end": 24633,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24647,
											"end": 24667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 24665,
											"end": 24666,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24647,
											"end": 24667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 24647,
											"end": 24667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24647,
											"end": 24667,
											"name": "tag",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 24647,
											"end": 24667,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24642,
											"end": 24667,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 24642,
											"end": 24667,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24690,
											"end": 24691,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24687,
											"end": 24688,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24683,
											"end": 24692,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24676,
											"end": 24692,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24676,
											"end": 24692,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24711,
											"end": 24714,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 24708,
											"end": 24709,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24705,
											"end": 24715,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 24702,
											"end": 24738,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 24702,
											"end": 24738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 24702,
											"end": 24738,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 24718,
											"end": 24736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 24718,
											"end": 24736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 24718,
											"end": 24736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24718,
											"end": 24736,
											"name": "tag",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 24718,
											"end": 24736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24702,
											"end": 24738,
											"name": "tag",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 24702,
											"end": 24738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24554,
											"end": 24745,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 24554,
											"end": 24745,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24554,
											"end": 24745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24554,
											"end": 24745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24554,
											"end": 24745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"hopium/common/interface/imDirectory.sol",
								"hopium/etf/interface/imEtfRouter.sol",
								"hopium/etf/interface/imEtfTokenEvents.sol",
								"hopium/etf/main/etf-token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Directory()": "658a847a",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"changeDirectoryAddress(address)": "ba4c7be1",
							"decimals()": "313ce567",
							"fetchFromDirectory(string)": "27262618",
							"initialize(string,string,address)": "077f224a",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_directory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Directory\",\"outputs\":[{\"internalType\":\"contract IDirectory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_directory\",\"type\":\"address\"}],\"name\":\"changeDirectoryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"fetchFromDirectory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"directory_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Uses OZ *Upgradeable* ERC20 so name/symbol can be set at runtime.      Access control (onlyEtfRouter/onlyOwner) resolves via ImDirectory.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"The logic/implementation constructor runs once when you deploy the master.      Clones DO NOT run constructors, they use initialize().\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address,uint256)\":{\"notice\":\"Router-controlled burn\"},\"initialize(string,string,address)\":{\"notice\":\"One-time initializer for clones (constructors don't run for proxies)\"},\"mint(address,uint256)\":{\"notice\":\"Router-controlled mint\"}},\"notice\":\"Cloneable ETF ERC20 with per-clone name/symbol via initialize()\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/etf/main/etf-token.sol\":\"EtfToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xfcd09c2aa8cc3f93e12545454359f901965db312bc03833daf84de0c03e05022\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07701188648d2ab83dab1037808298585264559bddf243bd8929037adcb984b0\",\"dweb:/ipfs/QmavmG5REdHCAWsZ8Cag26BCxAq27DRKGxr3uBg5ZYxQ51\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]},\"hopium/etf/interface/imEtfRouter.sol\":{\"keccak256\":\"0x9ef2dafe8d3bf78ea2372470cd04070489e0d2324d91a8fbc7c3867a8eabc9f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a558b98b69ec2677eb516606b18553fb1ea77376d5db15cef8ef4283c7b7ad95\",\"dweb:/ipfs/Qmdey7B1K99bf8XbQ3NAS1RMntRkziFFitrBQQpzM2hqiz\"]},\"hopium/etf/interface/imEtfTokenEvents.sol\":{\"keccak256\":\"0x8c8d2994faa15185ec07293b444929d13c29333095497cb115fc85c74281b6ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae3ff09139579ca9d5bc67db27812228e0dcff828da15bb1f8d6b31955733e59\",\"dweb:/ipfs/QmVuuXMiHzfY9cbDpL5RApszivFUQF1MjELYvZH1A5wTUT\"]},\"hopium/etf/main/etf-token.sol\":{\"keccak256\":\"0x9fcbdcced01c1841516962cc15739aa5d5adbcd42bdc7ee3e10257f2d07bd400\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://598a6ad91509d743f9bf24e573105e15557b1f15f9b2af01997c0ab23c3f6b9a\",\"dweb:/ipfs/QmfLJBPqLCBFVkSVJW2oeW9bdJesLYtwUnjw9jKo1Juauq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1190,
								"contract": "hopium/etf/main/etf-token.sol:EtfToken",
								"label": "Directory",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDirectory)1187"
							},
							{
								"astId": 1381,
								"contract": "hopium/etf/main/etf-token.sol:EtfToken",
								"label": "_initialized",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IDirectory)1187": {
								"encoding": "inplace",
								"label": "contract IDirectory",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(address,uint256)": {
								"notice": "Router-controlled burn"
							},
							"initialize(string,string,address)": {
								"notice": "One-time initializer for clones (constructors don't run for proxies)"
							},
							"mint(address,uint256)": {
								"notice": "Router-controlled mint"
							}
						},
						"notice": "Cloneable ETF ERC20 with per-clone name/symbol via initialize()",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							267
						]
					},
					"id": 268,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 267,
							"linearizedBaseContracts": [
								267
							],
							"name": "Initializable",
							"nameLocation": "2367:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:0",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2813:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 5,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2950:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 8,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:0",
									"nodeType": "StructDefinition",
									"scope": 267,
									"src": "2685:290:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 13,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 267,
									"src": "3098:115:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 11,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:0",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 16,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:0"
									},
									"src": "3285:30:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:0",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 19,
									"name": "NotInitializing",
									"nameLocation": "3389:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:0"
									},
									"src": "3383:24:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 24,
									"name": "Initialized",
									"nameLocation": "3514:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "3526:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 21,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:0"
									},
									"src": "3508:34:0"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4092:1079:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4158:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 28,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 27,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "4158:20:0"
															},
															"referencedDeclaration": 10,
															"src": "4158:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 32,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 30,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "4191:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:0"
											},
											{
												"assignments": [
													34
												],
												"declarations": [
													{
														"constant": false,
														"id": 34,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4279:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 33,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 38,
												"initialValue": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:0",
													"subExpression": {
														"expression": {
															"id": 35,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4302:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "4302:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:0"
											},
											{
												"assignments": [
													40
												],
												"declarations": [
													{
														"constant": false,
														"id": 40,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4327:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 39,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": {
													"expression": {
														"id": 41,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "4348:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "4348:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:0"
											},
											{
												"assignments": [
													45
												],
												"declarations": [
													{
														"constant": false,
														"id": 45,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4709:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4704:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 44,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4704:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 51,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 46,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4724:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4724:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 49,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "4744:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4724:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4704:54:0"
											},
											{
												"assignments": [
													53
												],
												"declarations": [
													{
														"constant": false,
														"id": 53,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4773:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4768:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 52,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4768:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 66,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 54,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4788:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4803:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4788:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 59,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4816:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$267",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$267",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4808:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 57,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4808:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4808:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4822:4:0",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4808:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4808:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4808:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4788:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4768:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4853:13:0",
														"subExpression": {
															"id": 67,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4854:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4870:13:0",
														"subExpression": {
															"id": 69,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "4871:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4853:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "IfStatement",
												"src": "4849:91:0",
												"trueBody": {
													"id": 75,
													"nodeType": "Block",
													"src": "4885:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 72,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "4906:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4906:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 74,
															"nodeType": "RevertStatement",
															"src": "4899:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 77,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4949:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4951:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "4949:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4949:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "4949:18:0"
											},
											{
												"condition": {
													"id": 83,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "4981:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 91,
												"nodeType": "IfStatement",
												"src": "4977:67:0",
												"trueBody": {
													"id": 90,
													"nodeType": "Block",
													"src": "4997:47:0",
													"statements": [
														{
															"expression": {
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 84,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5011:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 86,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5013:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5011:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5029:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5011:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 89,
															"nodeType": "ExpressionStatement",
															"src": "5011:22:0"
														}
													]
												}
											},
											{
												"id": 92,
												"nodeType": "PlaceholderStatement",
												"src": "5053:1:0"
											},
											{
												"condition": {
													"id": 93,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "5068:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 105,
												"nodeType": "IfStatement",
												"src": "5064:101:0",
												"trueBody": {
													"id": 104,
													"nodeType": "Block",
													"src": "5084:81:0",
													"statements": [
														{
															"expression": {
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 94,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5098:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 96,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5100:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5098:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5116:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5098:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 99,
															"nodeType": "ExpressionStatement",
															"src": "5098:23:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 100,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "5140:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5140:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 103,
															"nodeType": "EmitStatement",
															"src": "5135:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 107,
									"name": "initializer",
									"nameLocation": "4078:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:0"
									},
									"src": "4069:1102:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "6289:392:0",
										"statements": [
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6384:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "6355:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 113,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 112,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6355:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "6355:20:0"
															},
															"referencedDeclaration": 10,
															"src": "6355:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 117,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "6388:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 118,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6429:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6431:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6429:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 120,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "6448:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:12:0",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 6,
															"src": "6448:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 122,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6466:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6448:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6429:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "6425:105:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "6475:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 125,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "6496:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "6489:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 130,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6539:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6541:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "6539:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 133,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "6556:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6539:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "6539:24:0"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 136,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6573:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6575:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6573:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6591:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6573:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "6573:22:0"
											},
											{
												"id": 142,
												"nodeType": "PlaceholderStatement",
												"src": "6605:1:0"
											},
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 143,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6616:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6618:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6616:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6634:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6616:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "6616:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 150,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6666:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 149,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "6654:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "EmitStatement",
												"src": "6649:25:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "5177:1068:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 154,
									"name": "reinitializer",
									"nameLocation": "6259:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6280:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "6273:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 109,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:16:0"
									},
									"src": "6250:431:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "6919:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 157,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "6929:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6929:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "6929:20:0"
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "6959:1:0"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "6687:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 162,
									"name": "onlyInitializing",
									"nameLocation": "6900:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:2:0"
									},
									"src": "6891:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "7134:89:0",
										"statements": [
											{
												"condition": {
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7148:18:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 166,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "7149:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 173,
												"nodeType": "IfStatement",
												"src": "7144:73:0",
												"trueBody": {
													"id": 172,
													"nodeType": "Block",
													"src": "7168:49:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "7189:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7189:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 171,
															"nodeType": "RevertStatement",
															"src": "7182:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "6973:104:0",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7091:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7109:2:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:0"
									},
									"scope": 267,
									"src": "7082:141:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "7758:373:0",
										"statements": [
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7853:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "7824:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 180,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 179,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7824:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "7824:20:0"
															},
															"referencedDeclaration": 10,
															"src": "7824:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 182,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "7857:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7857:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7824:59:0"
											},
											{
												"condition": {
													"expression": {
														"id": 185,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "7898:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7900:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "7898:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "IfStatement",
												"src": "7894:76:0",
												"trueBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "7915:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 187,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "7936:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7936:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 189,
															"nodeType": "RevertStatement",
															"src": "7929:30:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 192,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "7983:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7985:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "7983:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8006:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 195,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8006:6:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 194,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8001:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8001:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8014:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8001:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7983:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 219,
												"nodeType": "IfStatement",
												"src": "7979:146:0",
												"trueBody": {
													"id": 218,
													"nodeType": "Block",
													"src": "8019:106:0",
													"statements": [
														{
															"expression": {
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 200,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "8033:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8035:12:0",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6,
																	"src": "8033:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8055:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 204,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8055:6:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 203,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8050:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8050:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8063:3:0",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8050:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8033:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 209,
															"nodeType": "ExpressionStatement",
															"src": "8033:33:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 213,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8102:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 212,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8102:6:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 211,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8097:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8097:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8110:3:0",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8097:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 210,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "8085:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8085:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 217,
															"nodeType": "EmitStatement",
															"src": "8080:34:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "7229:475:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7718:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7758:0:0"
									},
									"scope": 267,
									"src": "7709:422:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "8306:63:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 227,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "8323:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8323:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8350:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "8323:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 226,
												"id": 230,
												"nodeType": "Return",
												"src": "8316:46:0"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "8137:99:0",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8250:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8272:2:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "8298:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 224,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8298:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:8:0"
									},
									"scope": 267,
									"src": "8241:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "8541:64:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 238,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "8558:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8558:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8585:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "8558:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 237,
												"id": 241,
												"nodeType": "Return",
												"src": "8551:47:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "8375:105:0",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8494:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8509:2:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "8535:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8535:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:6:0"
									},
									"scope": 267,
									"src": "8485:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "8896:45:0",
										"statements": [
											{
												"expression": {
													"id": 249,
													"name": "INITIALIZABLE_STORAGE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 13,
													"src": "8913:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 248,
												"id": 250,
												"nodeType": "Return",
												"src": "8906:28:0"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "8611:203:0",
										"text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializableStorageSlot",
									"nameLocation": "8828:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8853:2:0"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "8887:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 246,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8886:9:0"
									},
									"scope": 267,
									"src": "8819:122:0",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "9161:115:0",
										"statements": [
											{
												"assignments": [
													260
												],
												"declarations": [
													{
														"constant": false,
														"id": 260,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "9179:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 265,
														"src": "9171:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 259,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9171:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 263,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 261,
														"name": "_initializableStorageSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "9186:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:42:0"
											},
											{
												"AST": {
													"nativeSrc": "9232:38:0",
													"nodeType": "YulBlock",
													"src": "9232:38:0",
													"statements": [
														{
															"nativeSrc": "9246:14:0",
															"nodeType": "YulAssignment",
															"src": "9246:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "9256:4:0",
																"nodeType": "YulIdentifier",
																"src": "9256:4:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "9246:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "9246:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 257,
														"isOffset": false,
														"isSlot": true,
														"src": "9246:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 260,
														"isOffset": false,
														"isSlot": false,
														"src": "9256:4:0",
														"valueSize": 1
													}
												],
												"id": 264,
												"nodeType": "InlineAssembly",
												"src": "9223:47:0"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "8947:67:0",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "9080:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9104:2:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "9158:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "9129:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 256,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 255,
														"name": "InitializableStorage",
														"nameLocations": [
															"9129:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "9129:20:0"
													},
													"referencedDeclaration": 10,
													"src": "9129:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9128:32:0"
									},
									"scope": 267,
									"src": "9071:205:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 268,
							"src": "2349:6929:0",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "113:9166:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							930
						],
						"ERC20Upgradeable": [
							884
						],
						"IERC20": [
							1145
						],
						"IERC20Errors": [
							972
						],
						"IERC20Metadata": [
							1171
						],
						"Initializable": [
							267
						]
					},
					"id": 885,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 269,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 271,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 885,
							"sourceUnit": 1146,
							"src": "131:70:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 270,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1145,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 273,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 885,
							"sourceUnit": 1172,
							"src": "202:97:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 272,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1171,
										"src": "210:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 275,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 885,
							"sourceUnit": 931,
							"src": "300:70:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 274,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 930,
										"src": "308:18:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 277,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 885,
							"sourceUnit": 1068,
							"src": "371:83:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 276,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 972,
										"src": "379:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 279,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 885,
							"sourceUnit": 268,
							"src": "455:66:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 278,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 267,
										"src": "463:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 281,
										"name": "Initializable",
										"nameLocations": [
											"1319:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 267,
										"src": "1319:13:1"
									},
									"id": 282,
									"nodeType": "InheritanceSpecifier",
									"src": "1319:13:1"
								},
								{
									"baseName": {
										"id": 283,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1334:18:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 930,
										"src": "1334:18:1"
									},
									"id": 284,
									"nodeType": "InheritanceSpecifier",
									"src": "1334:18:1"
								},
								{
									"baseName": {
										"id": 285,
										"name": "IERC20",
										"nameLocations": [
											"1354:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1145,
										"src": "1354:6:1"
									},
									"id": 286,
									"nodeType": "InheritanceSpecifier",
									"src": "1354:6:1"
								},
								{
									"baseName": {
										"id": 287,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1362:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1171,
										"src": "1362:14:1"
									},
									"id": 288,
									"nodeType": "InheritanceSpecifier",
									"src": "1362:14:1"
								},
								{
									"baseName": {
										"id": 289,
										"name": "IERC20Errors",
										"nameLocations": [
											"1378:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 972,
										"src": "1378:12:1"
									},
									"id": 290,
									"nodeType": "InheritanceSpecifier",
									"src": "1378:12:1"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 280,
								"nodeType": "StructuredDocumentation",
								"src": "523:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 884,
							"linearizedBaseContracts": [
								884,
								972,
								1171,
								1145,
								930,
								267
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1299:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "1397:63:1",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 308,
									"members": [
										{
											"constant": false,
											"id": 295,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1531:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 308,
											"src": "1495:45:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 294,
												"keyName": "account",
												"keyNameLocation": "1511:7:1",
												"keyType": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1495:35:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 301,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "1615:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 308,
											"src": "1551:75:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 300,
												"keyName": "account",
												"keyNameLocation": "1567:7:1",
												"keyType": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1551:63:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 299,
													"keyName": "spender",
													"keyNameLocation": "1594:7:1",
													"keyType": {
														"id": 297,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1586:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1578:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 298,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1605:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 303,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "1645:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 308,
											"src": "1637:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 302,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 305,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1675:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 308,
											"src": "1668:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 304,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1668:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 307,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1697:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 308,
											"src": "1690:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 306,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1690:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "1472:12:1",
									"nodeType": "StructDefinition",
									"scope": 884,
									"src": "1465:246:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 311,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "1851:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 884,
									"src": "1826:114:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 309,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1826:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 310,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1874:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "2021:79:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2040:54:1",
													"nodeType": "YulBlock",
													"src": "2040:54:1",
													"statements": [
														{
															"nativeSrc": "2054:30:1",
															"nodeType": "YulAssignment",
															"src": "2054:30:1",
															"value": {
																"name": "ERC20StorageLocation",
																"nativeSrc": "2064:20:1",
																"nodeType": "YulIdentifier",
																"src": "2064:20:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2054:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 315,
														"isOffset": false,
														"isSlot": true,
														"src": "2054:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 311,
														"isOffset": false,
														"isSlot": false,
														"src": "2064:20:1",
														"valueSize": 1
													}
												],
												"id": 317,
												"nodeType": "InlineAssembly",
												"src": "2031:63:1"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "1956:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1972:2:1"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2018:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1997:22:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "ERC20Storage",
														"nameLocations": [
															"1997:12:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 308,
														"src": "1997:12:1"
													},
													"referencedDeclaration": 308,
													"src": "1997:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:24:1"
									},
									"scope": 884,
									"src": "1947:153:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "2355:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "2388:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 331,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "2395:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 329,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "2365:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2365:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "2365:38:1"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "2106:152:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 327,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 326,
												"name": "onlyInitializing",
												"nameLocations": [
													"2338:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "2338:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2338:16:1"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2272:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2299:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "2285:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2285:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2320:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "2306:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2306:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:44:1"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:0:1"
									},
									"scope": 884,
									"src": "2263:147:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2518:114:1",
										"statements": [
											{
												"assignments": [
													346
												],
												"declarations": [
													{
														"constant": false,
														"id": 346,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2549:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 362,
														"src": "2528:22:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 345,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 344,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2528:12:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 308,
																"src": "2528:12:1"
															},
															"referencedDeclaration": 308,
															"src": "2528:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 349,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 347,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "2553:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$308_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2553:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2528:43:1"
											},
											{
												"expression": {
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 350,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "2581:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2583:5:1",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 305,
														"src": "2581:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 353,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2591:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2581:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "2581:15:1"
											},
											{
												"expression": {
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 356,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "2606:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 358,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2608:7:1",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 307,
														"src": "2606:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 359,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "2618:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2606:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "2606:19:1"
											}
										]
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 342,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 341,
												"name": "onlyInitializing",
												"nameLocations": [
													"2501:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "2501:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2501:16:1"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2425:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2462:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2448:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2448:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2483:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2469:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 338,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2469:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:44:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2518:0:1"
									},
									"scope": 884,
									"src": "2416:216:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1158
									],
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "2757:84:1",
										"statements": [
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2788:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 378,
														"src": "2767:22:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 370,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 369,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2767:12:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 308,
																"src": "2767:12:1"
															},
															"referencedDeclaration": 308,
															"src": "2767:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 374,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 372,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "2792:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$308_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2792:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:43:1"
											},
											{
												"expression": {
													"expression": {
														"id": 375,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "2827:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2829:5:1",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 305,
													"src": "2827:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 368,
												"id": 377,
												"nodeType": "Return",
												"src": "2820:14:1"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2638:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2706:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2710:2:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2742:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 366,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2742:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2741:15:1"
									},
									"scope": 884,
									"src": "2697:144:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1164
									],
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "3016:86:1",
										"statements": [
											{
												"assignments": [
													387
												],
												"declarations": [
													{
														"constant": false,
														"id": 387,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3047:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "3026:22:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 386,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 385,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3026:12:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 308,
																"src": "3026:12:1"
															},
															"referencedDeclaration": 308,
															"src": "3026:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 390,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 388,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "3051:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$308_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3051:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3026:43:1"
											},
											{
												"expression": {
													"expression": {
														"id": 391,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "3086:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3088:7:1",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 307,
													"src": "3086:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 384,
												"id": 393,
												"nodeType": "Return",
												"src": "3079:16:1"
											}
										]
									},
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "2847:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2963:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2969:2:1"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "3001:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 382,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3001:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3000:15:1"
									},
									"scope": 884,
									"src": "2954:148:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1170
									],
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "3791:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3808:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 400,
												"id": 402,
												"nodeType": "Return",
												"src": "3801:9:1"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "3108:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3744:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3752:2:1"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "3784:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 398,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3784:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3783:7:1"
									},
									"scope": 884,
									"src": "3735:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1094
									],
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "3911:91:1",
										"statements": [
											{
												"assignments": [
													412
												],
												"declarations": [
													{
														"constant": false,
														"id": 412,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3942:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 419,
														"src": "3921:22:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 411,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 410,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3921:12:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 308,
																"src": "3921:12:1"
															},
															"referencedDeclaration": 308,
															"src": "3921:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 415,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 413,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "3946:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$308_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3946:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3921:43:1"
											},
											{
												"expression": {
													"expression": {
														"id": 416,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "3981:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3983:12:1",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 303,
													"src": "3981:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 409,
												"id": 418,
												"nodeType": "Return",
												"src": "3974:21:1"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "3823:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3859:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3870:2:1"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "3902:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3902:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3901:9:1"
									},
									"scope": 884,
									"src": "3850:152:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1102
									],
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "4109:97:1",
										"statements": [
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4140:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 439,
														"src": "4119:22:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 429,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 428,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4119:12:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 308,
																"src": "4119:12:1"
															},
															"referencedDeclaration": 308,
															"src": "4119:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 433,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 431,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "4144:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$308_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4144:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4119:43:1"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 434,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "4179:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4181:9:1",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 295,
														"src": "4179:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 437,
													"indexExpression": {
														"id": 436,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "4191:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4179:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 427,
												"id": 438,
												"nodeType": "Return",
												"src": "4172:27:1"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "4008:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4044:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4062:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "4054:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4053:17:1"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "4100:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4099:9:1"
									},
									"scope": 884,
									"src": "4035:171:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1112
									],
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "4476:103:1",
										"statements": [
											{
												"assignments": [
													451
												],
												"declarations": [
													{
														"constant": false,
														"id": 451,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4494:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 463,
														"src": "4486:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 450,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4486:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 454,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 452,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "4502:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4502:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4486:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 456,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "4534:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 457,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "4541:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 458,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "4545:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 455,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "4524:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4524:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "4524:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4568:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 449,
												"id": 462,
												"nodeType": "Return",
												"src": "4561:11:1"
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "4212:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4410:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4427:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "4419:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4419:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4439:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "4431:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4418:27:1"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "4470:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4470:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4469:6:1"
									},
									"scope": 884,
									"src": "4401:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1122
									],
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "4701:106:1",
										"statements": [
											{
												"assignments": [
													476
												],
												"declarations": [
													{
														"constant": false,
														"id": 476,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4732:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 487,
														"src": "4711:22:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 475,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 474,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4711:12:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 308,
																"src": "4711:12:1"
															},
															"referencedDeclaration": 308,
															"src": "4711:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 479,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 477,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "4736:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$308_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4736:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4711:43:1"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 480,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "4771:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 481,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4773:11:1",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 301,
															"src": "4771:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 483,
														"indexExpression": {
															"id": 482,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "4785:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4771:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 485,
													"indexExpression": {
														"id": 484,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "4792:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4771:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 473,
												"id": 486,
												"nodeType": "Return",
												"src": "4764:36:1"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "4585:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4621:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4639:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "4631:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4654:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "4646:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4646:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:32:1"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "4692:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4691:9:1"
									},
									"scope": 884,
									"src": "4612:195:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1132
									],
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "5193:107:1",
										"statements": [
											{
												"assignments": [
													499
												],
												"declarations": [
													{
														"constant": false,
														"id": 499,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5211:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "5203:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 498,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5203:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 502,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 500,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "5219:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5219:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5203:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 504,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "5250:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 505,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "5257:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "5266:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 503,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															767,
															835
														],
														"referencedDeclaration": 767,
														"src": "5241:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5241:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "5241:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5289:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 497,
												"id": 510,
												"nodeType": "Return",
												"src": "5282:11:1"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "4813:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5123:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5139:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "5131:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5131:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5156:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "5148:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5148:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5130:32:1"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "5187:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 495,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5187:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5186:6:1"
									},
									"scope": 884,
									"src": "5114:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1144
									],
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "5985:151:1",
										"statements": [
											{
												"assignments": [
													525
												],
												"declarations": [
													{
														"constant": false,
														"id": 525,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6003:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 543,
														"src": "5995:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 524,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5995:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 528,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 526,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "6013:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6013:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5995:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "6051:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "6057:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 532,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "6066:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "6035:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6035:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "6035:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 536,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "6092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "6098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 538,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "6102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 535,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "6082:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6082:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "6082:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6125:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 523,
												"id": 542,
												"nodeType": "Return",
												"src": "6118:11:1"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "5306:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5901:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5922:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "5914:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5914:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5936:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "5928:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5928:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5948:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "5940:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5940:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5913:41:1"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "5979:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5979:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5978:6:1"
									},
									"scope": 884,
									"src": "5892:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "6578:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "6592:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6608:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6600:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6600:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6600:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6592:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "6588:86:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "6612:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6660:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6652:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6652:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6652:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "6633:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6633:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "6626:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "6687:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6701:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6693:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6693:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6693:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6687:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "6683:86:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "6705:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6755:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6747:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6747:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6747:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "6726:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6726:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "6719:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 585,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "6786:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 586,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "6792:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 587,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "6796:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 584,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "6778:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6778:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "6778:24:1"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "6142:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6518:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6536:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6528:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6528:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6550:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6542:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6542:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6562:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6554:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6554:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6527:41:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6578:0:1"
									},
									"scope": 884,
									"src": "6509:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "7199:1095:1",
										"statements": [
											{
												"assignments": [
													603
												],
												"declarations": [
													{
														"constant": false,
														"id": 603,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7230:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 682,
														"src": "7209:22:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 602,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 601,
																"name": "ERC20Storage",
																"nameLocations": [
																	"7209:12:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 308,
																"src": "7209:12:1"
															},
															"referencedDeclaration": 308,
															"src": "7209:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 606,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 604,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "7234:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$308_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7234:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7209:43:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 607,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "7266:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7282:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7274:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 608,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7274:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7274:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7266:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 649,
													"nodeType": "Block",
													"src": "7442:366:1",
													"statements": [
														{
															"assignments": [
																621
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 621,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7464:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 649,
																	"src": "7456:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 620,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7456:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 626,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 622,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 603,
																		"src": "7478:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 623,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7480:9:1",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 295,
																	"src": "7478:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 625,
																"indexExpression": {
																	"id": 624,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "7490:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7478:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7456:39:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 627,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 621,
																	"src": "7513:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 628,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "7527:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7513:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 637,
															"nodeType": "IfStatement",
															"src": "7509:115:1",
															"trueBody": {
																"id": 636,
																"nodeType": "Block",
																"src": "7534:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 631,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 594,
																					"src": "7584:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 632,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 621,
																					"src": "7590:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 633,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 598,
																					"src": "7603:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 630,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 942,
																				"src": "7559:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7559:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 635,
																		"nodeType": "RevertStatement",
																		"src": "7552:57:1"
																	}
																]
															}
														},
														{
															"id": 648,
															"nodeType": "UncheckedBlock",
															"src": "7637:161:1",
															"statements": [
																{
																	"expression": {
																		"id": 646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 638,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 603,
																					"src": "7744:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 641,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7746:9:1",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 295,
																				"src": "7744:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 642,
																			"indexExpression": {
																				"id": 640,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 594,
																				"src": "7756:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7744:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 643,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 621,
																				"src": "7764:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 644,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 598,
																				"src": "7778:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7764:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7744:39:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 647,
																	"nodeType": "ExpressionStatement",
																	"src": "7744:39:1"
																}
															]
														}
													]
												},
												"id": 650,
												"nodeType": "IfStatement",
												"src": "7262:546:1",
												"trueBody": {
													"id": 619,
													"nodeType": "Block",
													"src": "7286:150:1",
													"statements": [
														{
															"expression": {
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 613,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 603,
																		"src": "7402:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 615,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7404:12:1",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 303,
																	"src": "7402:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 616,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "7420:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7402:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 618,
															"nodeType": "ExpressionStatement",
															"src": "7402:23:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 651,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "7822:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7836:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7828:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 652,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7828:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7828:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7822:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 674,
													"nodeType": "Block",
													"src": "8039:208:1",
													"statements": [
														{
															"id": 673,
															"nodeType": "UncheckedBlock",
															"src": "8053:184:1",
															"statements": [
																{
																	"expression": {
																		"id": 671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 665,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 603,
																					"src": "8198:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 668,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8200:9:1",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 295,
																				"src": "8198:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 669,
																			"indexExpression": {
																				"id": 667,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 596,
																				"src": "8210:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8198:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 670,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "8217:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8198:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 672,
																	"nodeType": "ExpressionStatement",
																	"src": "8198:24:1"
																}
															]
														}
													]
												},
												"id": 675,
												"nodeType": "IfStatement",
												"src": "7818:429:1",
												"trueBody": {
													"id": 664,
													"nodeType": "Block",
													"src": "7840:193:1",
													"statements": [
														{
															"id": 663,
															"nodeType": "UncheckedBlock",
															"src": "7854:169:1",
															"statements": [
																{
																	"expression": {
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 657,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 603,
																				"src": "7985:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 659,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "7987:12:1",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 303,
																			"src": "7985:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 660,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "8003:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7985:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 662,
																	"nodeType": "ExpressionStatement",
																	"src": "7985:23:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 677,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "8271:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 678,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "8277:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 679,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "8281:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 676,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "8262:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8262:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "EmitStatement",
												"src": "8257:30:1"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "6815:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7133:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7149:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "7141:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7141:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7163:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "7155:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7155:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7175:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "7167:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7167:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7140:41:1"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7199:0:1"
									},
									"scope": 884,
									"src": "7124:1170:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "8693:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 691,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "8707:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8726:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8718:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 692,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8718:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8718:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8707:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 705,
												"nodeType": "IfStatement",
												"src": "8703:91:1",
												"trueBody": {
													"id": 704,
													"nodeType": "Block",
													"src": "8730:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 700,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8780:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8772:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 698,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8772:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8772:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 697,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "8751:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8751:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 703,
															"nodeType": "RevertStatement",
															"src": "8744:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8819:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8811:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 707,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8811:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8811:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 711,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "8823:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "8832:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 706,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "8803:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8803:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "8803:35:1"
											}
										]
									},
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "8300:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8646:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "8652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "8669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8669:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8651:32:1"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8693:0:1"
									},
									"scope": 884,
									"src": "8637:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "9219:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 724,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "9233:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9252:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9244:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 725,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9244:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9244:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9233:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 738,
												"nodeType": "IfStatement",
												"src": "9229:89:1",
												"trueBody": {
													"id": 737,
													"nodeType": "Block",
													"src": "9256:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 733,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9304:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9296:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 731,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9296:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9296:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 730,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "9277:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 736,
															"nodeType": "RevertStatement",
															"src": "9270:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 740,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "9335:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9352:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9344:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 741,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9344:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9344:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 745,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "9356:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 739,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "9327:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9327:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "9327:35:1"
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "8851:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9172:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9186:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "9178:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9178:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9203:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "9195:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9195:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9177:32:1"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9219:0:1"
									},
									"scope": 884,
									"src": "9163:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "9979:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 760,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "9998:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 761,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "10005:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 762,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "10014:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10021:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 759,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															767,
															835
														],
														"referencedDeclaration": 835,
														"src": "9989:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9989:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "9989:37:1"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "9375:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9914:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9931:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9923:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9923:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9946:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9938:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9938:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9963:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9955:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9955:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9922:47:1"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9979:0:1"
									},
									"scope": 884,
									"src": "9905:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "10978:389:1",
										"statements": [
											{
												"assignments": [
													781
												],
												"declarations": [
													{
														"constant": false,
														"id": 781,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11009:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 834,
														"src": "10988:22:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 780,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 779,
																"name": "ERC20Storage",
																"nameLocations": [
																	"10988:12:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 308,
																"src": "10988:12:1"
															},
															"referencedDeclaration": 308,
															"src": "10988:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 784,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 782,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "11013:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$308_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11013:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10988:43:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 785,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "11045:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11062:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11054:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 786,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11054:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11054:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11045:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 799,
												"nodeType": "IfStatement",
												"src": "11041:89:1",
												"trueBody": {
													"id": 798,
													"nodeType": "Block",
													"src": "11066:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 794,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11116:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11108:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 792,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11108:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11108:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 791,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "11087:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11087:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 797,
															"nodeType": "RevertStatement",
															"src": "11080:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 800,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "11143:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11162:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11154:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 801,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11154:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11154:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11143:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 814,
												"nodeType": "IfStatement",
												"src": "11139:90:1",
												"trueBody": {
													"id": 813,
													"nodeType": "Block",
													"src": "11166:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 809,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11215:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11207:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 807,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11207:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11207:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 806,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "11187:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11187:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 812,
															"nodeType": "RevertStatement",
															"src": "11180:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 815,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 781,
																	"src": "11238:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 819,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11240:11:1",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 301,
																"src": "11238:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 820,
															"indexExpression": {
																"id": 817,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "11252:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11238:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 821,
														"indexExpression": {
															"id": 818,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11259:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11238:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 822,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "11270:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11238:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "11238:37:1"
											},
											{
												"condition": {
													"id": 825,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 776,
													"src": "11289:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 833,
												"nodeType": "IfStatement",
												"src": "11285:76:1",
												"trueBody": {
													"id": 832,
													"nodeType": "Block",
													"src": "11300:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 827,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "11328:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 828,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 772,
																		"src": "11335:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 829,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "11344:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 826,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1088,
																	"src": "11319:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11319:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 831,
															"nodeType": "EmitStatement",
															"src": "11314:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "10039:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10889:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10906:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "10898:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10921:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "10913:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10913:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10938:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "10930:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10930:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10950:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "10945:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 775,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10945:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10897:63:1"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10978:0:1"
									},
									"scope": 884,
									"src": "10880:487:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "11738:387:1",
										"statements": [
											{
												"assignments": [
													846
												],
												"declarations": [
													{
														"constant": false,
														"id": 846,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11756:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 882,
														"src": "11748:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 845,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11748:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 851,
												"initialValue": {
													"arguments": [
														{
															"id": 848,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "11785:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "11792:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 847,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "11775:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11775:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11748:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 852,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "11814:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11838:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 854,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11838:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 853,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11833:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11833:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11847:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11833:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11814:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 881,
												"nodeType": "IfStatement",
												"src": "11810:309:1",
												"trueBody": {
													"id": 880,
													"nodeType": "Block",
													"src": "11852:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 859,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "11870:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 860,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "11889:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11870:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 869,
															"nodeType": "IfStatement",
															"src": "11866:130:1",
															"trueBody": {
																"id": 868,
																"nodeType": "Block",
																"src": "11896:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 863,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 840,
																					"src": "11948:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 864,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 846,
																					"src": "11957:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 865,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 842,
																					"src": "11975:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 862,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 961,
																				"src": "11921:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11921:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 867,
																		"nodeType": "RevertStatement",
																		"src": "11914:67:1"
																	}
																]
															}
														},
														{
															"id": 879,
															"nodeType": "UncheckedBlock",
															"src": "12009:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 871,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 838,
																				"src": "12046:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 872,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 840,
																				"src": "12053:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 875,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 873,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 846,
																					"src": "12062:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 874,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 842,
																					"src": "12081:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12062:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 876,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12088:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 870,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				767,
																				835
																			],
																			"referencedDeclaration": 835,
																			"src": "12037:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12037:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 878,
																	"nodeType": "ExpressionStatement",
																	"src": "12037:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "11373:271:1",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11658:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11682:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "11674:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11674:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11697:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "11689:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11714:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "11706:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11706:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11673:47:1"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11738:0:1"
									},
									"scope": 884,
									"src": "11649:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 885,
							"src": "1281:10846:1",
							"usedErrors": [
								16,
								19,
								942,
								947,
								952,
								961,
								966,
								971
							],
							"usedEvents": [
								24,
								1079,
								1088
							]
						}
					],
					"src": "105:12023:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							930
						],
						"Initializable": [
							267
						]
					},
					"id": 931,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 886,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 888,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 931,
							"sourceUnit": 268,
							"src": "126:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 887,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 267,
										"src": "134:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 890,
										"name": "Initializable",
										"nameLocations": [
											"728:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 267,
										"src": "728:13:2"
									},
									"id": 891,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:2"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 889,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 930,
							"linearizedBaseContracts": [
								930,
								267
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "800:7:2",
										"statements": []
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 894,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 893,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "783:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:2"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:2"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:2"
									},
									"scope": 930,
									"src": "748:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "875:7:2",
										"statements": []
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 900,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 899,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "858:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:2"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:2"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:2"
									},
									"scope": 930,
									"src": "813:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "949:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 908,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 907,
												"id": 910,
												"nodeType": "Return",
												"src": "959:17:2"
											}
										]
									},
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:2"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "940:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:2"
									},
									"scope": 930,
									"src": "887:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "1056:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 917,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 916,
												"id": 919,
												"nodeType": "Return",
												"src": "1066:15:2"
											}
										]
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:2"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "1040:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 914,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:2"
									},
									"scope": 930,
									"src": "989:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "1166:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 925,
												"id": 927,
												"nodeType": "Return",
												"src": "1176:8:2"
											}
										]
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:2"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "1157:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:2"
									},
									"scope": 930,
									"src": "1094:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 931,
							"src": "688:505:2",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "101:1093:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							1067
						],
						"IERC20Errors": [
							972
						],
						"IERC721Errors": [
							1020
						]
					},
					"id": 1068,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 932,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 933,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:3",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 972,
							"linearizedBaseContracts": [
								972
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 942,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "654:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "670:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "687:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:3"
									},
									"src": "623:80:3"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 947,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "891:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:3"
									},
									"src": "866:41:3"
								},
								{
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 952,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1104:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:3"
									},
									"src": "1077:45:3"
								},
								{
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 961,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1511:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1528:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1547:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:3"
									},
									"src": "1478:85:3"
								},
								{
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 966,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "1775:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:3"
									},
									"src": "1748:45:3"
								},
								{
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 971,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "2025:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:3"
									},
									"src": "1999:43:3"
								}
							],
							"scope": 1068,
							"src": "280:1764:3",
							"usedErrors": [
								942,
								947,
								952,
								961,
								966,
								971
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 973,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:3",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 1020,
							"linearizedBaseContracts": [
								1020
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 978,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "2469:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:3"
									},
									"src": "2444:40:3"
								},
								{
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 983,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "2656:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:3"
									},
									"src": "2627:46:3"
								},
								{
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 992,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "3000:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "3016:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "3033:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:3"
									},
									"src": "2973:75:3"
								},
								{
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 997,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "3237:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:3"
									},
									"src": "3211:42:3"
								},
								{
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1002,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "3451:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:3"
									},
									"src": "3423:46:3"
								},
								{
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1009,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "3760:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "3778:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:3"
									},
									"src": "3727:68:3"
								},
								{
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1014,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "4008:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:3"
									},
									"src": "3980:46:3"
								},
								{
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1019,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "4262:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:3"
									},
									"src": "4234:46:3"
								}
							],
							"scope": 1068,
							"src": "2190:2092:3",
							"usedErrors": [
								978,
								983,
								992,
								997,
								1002,
								1009,
								1014,
								1019
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1021,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:3",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1067,
							"linearizedBaseContracts": [
								1067
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1032,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4860:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4876:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4893:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4909:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:3"
									},
									"src": "4827:99:3"
								},
								{
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1037,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "5116:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:3"
									},
									"src": "5089:43:3"
								},
								{
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1042,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "5331:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:3"
									},
									"src": "5302:47:3"
								},
								{
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1049,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "5651:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "5669:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:3"
									},
									"src": "5616:68:3"
								},
								{
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1054,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "5898:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:3"
									},
									"src": "5869:47:3"
								},
								{
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1059,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "6153:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:3"
									},
									"src": "6124:47:3"
								},
								{
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1066,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "6494:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "6513:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:3"
									},
									"src": "6462:73:3"
								}
							],
							"scope": 1068,
							"src": "4430:2107:3",
							"usedErrors": [
								1032,
								1037,
								1042,
								1049,
								1054,
								1059,
								1066
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1145
						]
					},
					"id": 1146,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1069,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1070,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1145,
							"linearizedBaseContracts": [
								1145
							],
							"name": "IERC20",
							"nameLocation": "215:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1079,
									"name": "Transfer",
									"nameLocation": "397:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "406:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "428:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "448:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:4"
									},
									"src": "391:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1088,
									"name": "Approval",
									"nameLocation": "628:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "637:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "660:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "685:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:4"
									},
									"src": "622:78:4"
								},
								{
									"documentation": {
										"id": 1089,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:4"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "822:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:4"
									},
									"scope": 1145,
									"src": "776:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "932:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:4"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "972:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:4"
									},
									"scope": 1145,
									"src": "913:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1103,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1223:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1235:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:4"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:4"
									},
									"scope": 1145,
									"src": "1205:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1568:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1583:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:4"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:4"
									},
									"scope": 1145,
									"src": "1549:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "2327:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "2344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:4"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:4"
									},
									"scope": 1145,
									"src": "2310:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "2713:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "2727:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "2739:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:4"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "2772:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1141,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:4"
									},
									"scope": 1145,
									"src": "2691:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1146,
							"src": "205:2575:4",
							"usedErrors": [],
							"usedEvents": [
								1079,
								1088
							]
						}
					],
					"src": "106:2675:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1145
						],
						"IERC20Metadata": [
							1171
						]
					},
					"id": 1172,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1147,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1172,
							"sourceUnit": 1146,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1148,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1145,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1151,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1145,
										"src": "306:6:5"
									},
									"id": 1152,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1150,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1171,
							"linearizedBaseContracts": [
								1171,
								1145
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1155,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 1171,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1164,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1161,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 1171,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1165,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1167,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 1171,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1172,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								1079,
								1088
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"hopium/common/interface/imDirectory.sol": {
				"ast": {
					"absolutePath": "hopium/common/interface/imDirectory.sol",
					"exportedSymbols": {
						"IDirectory": [
							1187
						],
						"ImDirectory": [
							1298
						]
					},
					"id": 1299,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1173,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDirectory",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1174,
								"nodeType": "StructuredDocumentation",
								"src": "57:78:6",
								"text": "@notice Interface used by the registry to talk to the external directory."
							},
							"fullyImplemented": false,
							"id": 1187,
							"linearizedBaseContracts": [
								1187
							],
							"name": "IDirectory",
							"nameLocation": "145:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8da5cb5b",
									"id": 1179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "171:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "176:2:6"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "202:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "201:9:6"
									},
									"scope": 1187,
									"src": "162:49:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "27262618",
									"id": 1186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fetchFromDirectory",
									"nameLocation": "225:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "258:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "244:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1180,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "244:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "243:20:6"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "287:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "286:9:6"
									},
									"scope": 1187,
									"src": "216:80:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1299,
							"src": "135:163:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ImDirectory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1298,
							"linearizedBaseContracts": [
								1298
							],
							"name": "ImDirectory",
							"nameLocation": "318:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "658a847a",
									"id": 1190,
									"mutability": "mutable",
									"name": "Directory",
									"nameLocation": "354:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1298,
									"src": "336:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDirectory_$1187",
										"typeString": "contract IDirectory"
									},
									"typeName": {
										"id": 1189,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1188,
											"name": "IDirectory",
											"nameLocations": [
												"336:10:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1187,
											"src": "336:10:6"
										},
										"referencedDeclaration": 1187,
										"src": "336:10:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDirectory_$1187",
											"typeString": "contract IDirectory"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "402:62:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1196,
															"name": "_directory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "426:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1195,
														"name": "_setDirectory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "412:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "412:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "412:25:6"
											}
										]
									},
									"id": 1200,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "_directory",
												"nameLocation": "390:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "382:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "382:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "381:20:6"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "402:0:6"
									},
									"scope": 1298,
									"src": "370:94:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "541:42:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1208,
															"name": "_directory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "565:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1207,
														"name": "_setDirectory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "551:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "551:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "551:25:6"
											}
										]
									},
									"functionSelector": "ba4c7be1",
									"id": 1212,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1205,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1204,
												"name": "onlyOwner",
												"nameLocations": [
													"531:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1274,
												"src": "531:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "531:9:6"
										}
									],
									"name": "changeDirectoryAddress",
									"nameLocation": "479:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "_directory",
												"nameLocation": "510:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "502:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "501:20:6"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "541:0:6"
									},
									"scope": 1298,
									"src": "470:113:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "641:409:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1218,
																"name": "_directory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1214,
																"src": "659:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "681:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "673:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1219,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "673:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "673:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "659:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4469726563746f72792063616e6e6f74206265207a65726f2061646472657373",
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "685:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
																"typeString": "literal_string \"Directory cannot be zero address\""
															},
															"value": "Directory cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
																"typeString": "literal_string \"Directory cannot be zero address\""
															}
														],
														"id": 1217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "651:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "651:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "651:69:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1228,
																		"name": "_directory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1214,
																		"src": "738:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "749:4:6",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "738:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "754:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "738:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "763:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "738:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4469726563746f7279206d757374206265206120636f6e7472616374",
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "766:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
																"typeString": "literal_string \"Directory must be a contract\""
															},
															"value": "Directory must be a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
																"typeString": "literal_string \"Directory must be a contract\""
															}
														],
														"id": 1227,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "730:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "730:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "730:67:6"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 1250,
															"nodeType": "Block",
															"src": "899:59:6",
															"statements": [
																{
																	"expression": {
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1244,
																			"name": "Directory",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1190,
																			"src": "913:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IDirectory_$1187",
																				"typeString": "contract IDirectory"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 1246,
																					"name": "_directory",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1214,
																					"src": "936:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1245,
																				"name": "IDirectory",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "925:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IDirectory_$1187_$",
																					"typeString": "type(contract IDirectory)"
																				}
																			},
																			"id": 1247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "925:22:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IDirectory_$1187",
																				"typeString": "contract IDirectory"
																			}
																		},
																		"src": "913:34:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IDirectory_$1187",
																			"typeString": "contract IDirectory"
																		}
																	},
																	"id": 1249,
																	"nodeType": "ExpressionStatement",
																	"src": "913:34:6"
																}
															]
														},
														"errorName": "",
														"id": 1251,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1243,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1242,
																	"mutability": "mutable",
																	"name": "",
																	"nameLocation": "-1:-1:-1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1251,
																	"src": "890:7:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1241,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "890:7:6",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "889:9:6"
														},
														"src": "881:77:6"
													},
													{
														"block": {
															"id": 1256,
															"nodeType": "Block",
															"src": "965:79:6",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "4469726563746f7279206164647265737320646f6573206e6f7420696d706c656d656e74206f776e65722829",
																				"id": 1253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "986:46:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
																					"typeString": "literal_string \"Directory address does not implement owner()\""
																				},
																				"value": "Directory address does not implement owner()"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
																					"typeString": "literal_string \"Directory address does not implement owner()\""
																				}
																			],
																			"id": 1252,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "979:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "979:54:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1255,
																	"nodeType": "ExpressionStatement",
																	"src": "979:54:6"
																}
															]
														},
														"errorName": "",
														"id": 1257,
														"nodeType": "TryCatchClause",
														"src": "959:85:6"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1237,
																	"name": "_directory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "861:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1236,
																"name": "IDirectory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "850:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDirectory_$1187_$",
																	"typeString": "type(contract IDirectory)"
																}
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "850:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDirectory_$1187",
																"typeString": "contract IDirectory"
															}
														},
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "873:5:6",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1179,
														"src": "850:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "850:30:6",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1258,
												"nodeType": "TryStatement",
												"src": "846:198:6"
											}
										]
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setDirectory",
									"nameLocation": "598:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "_directory",
												"nameLocation": "620:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "612:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:20:6"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "641:0:6"
									},
									"scope": 1298,
									"src": "589:461:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1273,
										"nodeType": "Block",
										"src": "1077:95:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1263,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1095:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1099:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1095:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1265,
																		"name": "Directory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1190,
																		"src": "1109:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IDirectory_$1187",
																			"typeString": "contract IDirectory"
																		}
																	},
																	"id": 1266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1119:5:6",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1179,
																	"src": "1109:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1109:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1095:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1128:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
																"typeString": "literal_string \"Caller is not the owner\""
															},
															"value": "Caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
																"typeString": "literal_string \"Caller is not the owner\""
															}
														],
														"id": 1262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1087:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1087:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "1087:67:6"
											},
											{
												"id": 1272,
												"nodeType": "PlaceholderStatement",
												"src": "1164:1:6"
											}
										]
									},
									"id": 1274,
									"name": "onlyOwner",
									"nameLocation": "1065:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1074:2:6"
									},
									"src": "1056:116:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "1225:41:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1279,
															"name": "Directory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "1242:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDirectory_$1187",
																"typeString": "contract IDirectory"
															}
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1252:5:6",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1179,
														"src": "1242:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1242:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1278,
												"id": 1282,
												"nodeType": "Return",
												"src": "1235:24:6"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1187:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1192:2:6"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "1216:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1215:9:6"
									},
									"scope": 1298,
									"src": "1178:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "1350:58:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1293,
															"name": "_key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "1396:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1291,
															"name": "Directory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "1367:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDirectory_$1187",
																"typeString": "contract IDirectory"
															}
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1377:18:6",
														"memberName": "fetchFromDirectory",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1186,
														"src": "1367:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
															"typeString": "function (string memory) view external returns (address)"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1367:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1290,
												"id": 1295,
												"nodeType": "Return",
												"src": "1360:41:6"
											}
										]
									},
									"functionSelector": "27262618",
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchFromDirectory",
									"nameLocation": "1281:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "1314:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "1300:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1285,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1300:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1299:20:6"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "1341:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:9:6"
									},
									"scope": 1298,
									"src": "1272:136:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1299,
							"src": "300:1110:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1379:6"
				},
				"id": 6
			},
			"hopium/etf/interface/imEtfRouter.sol": {
				"ast": {
					"absolutePath": "hopium/etf/interface/imEtfRouter.sol",
					"exportedSymbols": {
						"IDirectory": [
							1187
						],
						"IEtfRouter": [
							1302
						],
						"ImDirectory": [
							1298
						],
						"ImEtfRouter": [
							1332
						]
					},
					"id": 1333,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1300,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"absolutePath": "hopium/common/interface/imDirectory.sol",
							"file": "hopium/common/interface/imDirectory.sol",
							"id": 1301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1333,
							"sourceUnit": 1299,
							"src": "57:49:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IEtfRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 1302,
							"linearizedBaseContracts": [
								1302
							],
							"name": "IEtfRouter",
							"nameLocation": "118:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1333,
							"src": "108:29:7",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1303,
										"name": "ImDirectory",
										"nameLocations": [
											"172:11:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1298,
										"src": "172:11:7"
									},
									"id": 1304,
									"nodeType": "InheritanceSpecifier",
									"src": "172:11:7"
								}
							],
							"canonicalName": "ImEtfRouter",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1332,
							"linearizedBaseContracts": [
								1332,
								1298
							],
							"name": "ImEtfRouter",
							"nameLocation": "157:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "258:68:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "6574662d726f75746572",
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "305:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f88d96806ae6e0ffb90f33067f9d810b2e6d69273e5977263af7566ab4b3aa6a",
																		"typeString": "literal_string \"etf-router\""
																	},
																	"value": "etf-router"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_f88d96806ae6e0ffb90f33067f9d810b2e6d69273e5977263af7566ab4b3aa6a",
																		"typeString": "literal_string \"etf-router\""
																	}
																],
																"id": 1311,
																"name": "fetchFromDirectory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "286:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$",
																	"typeString": "function (string memory) view returns (address)"
																}
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "286:32:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1310,
														"name": "IEtfRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1302,
														"src": "275:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IEtfRouter_$1302_$",
															"typeString": "type(contract IEtfRouter)"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "275:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEtfRouter_$1302",
														"typeString": "contract IEtfRouter"
													}
												},
												"functionReturnParameters": 1309,
												"id": 1315,
												"nodeType": "Return",
												"src": "268:51:7"
											}
										]
									},
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEtfRouter",
									"nameLocation": "200:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "212:2:7"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "246:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IEtfRouter_$1302",
													"typeString": "contract IEtfRouter"
												},
												"typeName": {
													"id": 1307,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1306,
														"name": "IEtfRouter",
														"nameLocations": [
															"246:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1302,
														"src": "246:10:7"
													},
													"referencedDeclaration": 1302,
													"src": "246:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEtfRouter_$1302",
														"typeString": "contract IEtfRouter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "245:12:7"
									},
									"scope": 1332,
									"src": "191:135:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "357:115:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1320,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "375:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "379:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "375:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "6574662d726f75746572",
																		"id": 1323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "408:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f88d96806ae6e0ffb90f33067f9d810b2e6d69273e5977263af7566ab4b3aa6a",
																			"typeString": "literal_string \"etf-router\""
																		},
																		"value": "etf-router"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_f88d96806ae6e0ffb90f33067f9d810b2e6d69273e5977263af7566ab4b3aa6a",
																			"typeString": "literal_string \"etf-router\""
																		}
																	],
																	"id": 1322,
																	"name": "fetchFromDirectory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1297,
																	"src": "389:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$",
																		"typeString": "function (string memory) view returns (address)"
																	}
																},
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "389:32:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "375:46:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d73672e73656e646572206973206e6f742065746620726f75746572",
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "423:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9",
																"typeString": "literal_string \"msg.sender is not etf router\""
															},
															"value": "msg.sender is not etf router"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9",
																"typeString": "literal_string \"msg.sender is not etf router\""
															}
														],
														"id": 1319,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "367:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "367:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1328,
												"nodeType": "ExpressionStatement",
												"src": "367:87:7"
											},
											{
												"id": 1329,
												"nodeType": "PlaceholderStatement",
												"src": "464:1:7"
											}
										]
									},
									"id": 1331,
									"name": "onlyEtfRouter",
									"nameLocation": "341:13:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "354:2:7"
									},
									"src": "332:140:7",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1333,
							"src": "139:335:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:442:7"
				},
				"id": 7
			},
			"hopium/etf/interface/imEtfTokenEvents.sol": {
				"ast": {
					"absolutePath": "hopium/etf/interface/imEtfTokenEvents.sol",
					"exportedSymbols": {
						"IDirectory": [
							1187
						],
						"IEtfTokenEvents": [
							1345
						],
						"ImDirectory": [
							1298
						],
						"ImEtfTokenEvents": [
							1361
						]
					},
					"id": 1362,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1334,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"absolutePath": "hopium/common/interface/imDirectory.sol",
							"file": "hopium/common/interface/imDirectory.sol",
							"id": 1335,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1362,
							"sourceUnit": 1299,
							"src": "57:49:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IEtfTokenEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1345,
							"linearizedBaseContracts": [
								1345
							],
							"name": "IEtfTokenEvents",
							"nameLocation": "118:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a6d49dca",
									"id": 1344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "emitTransferEvent",
									"nameLocation": "149:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "fromAddress",
												"nameLocation": "175:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "167:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "167:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "toAddress",
												"nameLocation": "196:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "188:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "188:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "transferAmount",
												"nameLocation": "215:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "207:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "207:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "166:64:8"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "239:0:8"
									},
									"scope": 1345,
									"src": "140:100:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1362,
							"src": "108:134:8",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1346,
										"name": "ImDirectory",
										"nameLocations": [
											"282:11:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1298,
										"src": "282:11:8"
									},
									"id": 1347,
									"nodeType": "InheritanceSpecifier",
									"src": "282:11:8"
								}
							],
							"canonicalName": "ImEtfTokenEvents",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1361,
							"linearizedBaseContracts": [
								1361,
								1298
							],
							"name": "ImEtfTokenEvents",
							"nameLocation": "262:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "378:79:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "6574662d746f6b656e2d6576656e7473",
																	"id": 1355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "430:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_643eb6203be3ce5b9c248e107118a331775c648ee915ae8faab3ff888f949b19",
																		"typeString": "literal_string \"etf-token-events\""
																	},
																	"value": "etf-token-events"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_643eb6203be3ce5b9c248e107118a331775c648ee915ae8faab3ff888f949b19",
																		"typeString": "literal_string \"etf-token-events\""
																	}
																],
																"id": 1354,
																"name": "fetchFromDirectory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "411:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$",
																	"typeString": "function (string memory) view returns (address)"
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "411:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1353,
														"name": "IEtfTokenEvents",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "395:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IEtfTokenEvents_$1345_$",
															"typeString": "type(contract IEtfTokenEvents)"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "395:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEtfTokenEvents_$1345",
														"typeString": "contract IEtfTokenEvents"
													}
												},
												"functionReturnParameters": 1352,
												"id": 1358,
												"nodeType": "Return",
												"src": "388:62:8"
											}
										]
									},
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEtfTokenEvents",
									"nameLocation": "310:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:2:8"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "361:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IEtfTokenEvents_$1345",
													"typeString": "contract IEtfTokenEvents"
												},
												"typeName": {
													"id": 1350,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1349,
														"name": "IEtfTokenEvents",
														"nameLocations": [
															"361:15:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1345,
														"src": "361:15:8"
													},
													"referencedDeclaration": 1345,
													"src": "361:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEtfTokenEvents_$1345",
														"typeString": "contract IEtfTokenEvents"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:17:8"
									},
									"scope": 1361,
									"src": "301:156:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1362,
							"src": "244:220:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:432:8"
				},
				"id": 8
			},
			"hopium/etf/main/etf-token.sol": {
				"ast": {
					"absolutePath": "hopium/etf/main/etf-token.sol",
					"exportedSymbols": {
						"ERC20Upgradeable": [
							884
						],
						"EtfToken": [
							1503
						],
						"IDirectory": [
							1187
						],
						"IEtfRouter": [
							1302
						],
						"IEtfTokenEvents": [
							1345
						],
						"ImDirectory": [
							1298
						],
						"ImEtfRouter": [
							1332
						],
						"ImEtfTokenEvents": [
							1361
						],
						"Initializable": [
							267
						]
					},
					"id": 1504,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1363,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1504,
							"sourceUnit": 268,
							"src": "57:96:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1364,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 267,
										"src": "65:13:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 1367,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1504,
							"sourceUnit": 885,
							"src": "154:102:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1366,
										"name": "ERC20Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 884,
										"src": "162:16:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "hopium/common/interface/imDirectory.sol",
							"file": "hopium/common/interface/imDirectory.sol",
							"id": 1368,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1504,
							"sourceUnit": 1299,
							"src": "258:49:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "hopium/etf/interface/imEtfRouter.sol",
							"file": "hopium/etf/interface/imEtfRouter.sol",
							"id": 1369,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1504,
							"sourceUnit": 1333,
							"src": "308:46:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "hopium/etf/interface/imEtfTokenEvents.sol",
							"file": "hopium/etf/interface/imEtfTokenEvents.sol",
							"id": 1370,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1504,
							"sourceUnit": 1362,
							"src": "355:51:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1372,
										"name": "Initializable",
										"nameLocations": [
											"656:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 267,
										"src": "656:13:9"
									},
									"id": 1373,
									"nodeType": "InheritanceSpecifier",
									"src": "656:13:9"
								},
								{
									"baseName": {
										"id": 1374,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"671:16:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 884,
										"src": "671:16:9"
									},
									"id": 1375,
									"nodeType": "InheritanceSpecifier",
									"src": "671:16:9"
								},
								{
									"baseName": {
										"id": 1376,
										"name": "ImEtfRouter",
										"nameLocations": [
											"689:11:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1332,
										"src": "689:11:9"
									},
									"id": 1377,
									"nodeType": "InheritanceSpecifier",
									"src": "689:11:9"
								},
								{
									"baseName": {
										"id": 1378,
										"name": "ImEtfTokenEvents",
										"nameLocations": [
											"702:16:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1361,
										"src": "702:16:9"
									},
									"id": 1379,
									"nodeType": "InheritanceSpecifier",
									"src": "702:16:9"
								}
							],
							"canonicalName": "EtfToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1371,
								"nodeType": "StructuredDocumentation",
								"src": "408:227:9",
								"text": "@notice Cloneable ETF ERC20 with per-clone name/symbol via initialize()\n @dev Uses OZ *Upgradeable* ERC20 so name/symbol can be set at runtime.\n      Access control (onlyEtfRouter/onlyOwner) resolves via ImDirectory."
							},
							"fullyImplemented": true,
							"id": 1503,
							"linearizedBaseContracts": [
								1503,
								1361,
								1332,
								1298,
								884,
								972,
								1171,
								1145,
								930,
								267
							],
							"name": "EtfToken",
							"nameLocation": "644:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1381,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "738:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1503,
									"src": "725:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1380,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "725:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "969:159:9",
										"statements": []
									},
									"documentation": {
										"id": 1382,
										"nodeType": "StructuredDocumentation",
										"src": "757:151:9",
										"text": "@dev The logic/implementation constructor runs once when you deploy the master.\n      Clones DO NOT run constructors, they use initialize()."
									},
									"id": 1391,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1387,
													"name": "_directory",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1384,
													"src": "957:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1388,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1386,
												"name": "ImDirectory",
												"nameLocations": [
													"945:11:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1298,
												"src": "945:11:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "945:23:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "_directory",
												"nameLocation": "933:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "925:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "924:20:9"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:0:9"
									},
									"scope": 1503,
									"src": "913:215:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "1324:293:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1342:13:9",
															"subExpression": {
																"id": 1404,
																"name": "_initialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "1343:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "457466546f6b656e3a20616c726561647920696e697469616c697a6564",
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1357:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bff9b1557c542a233ca52157ba744ff1a697493bf85768f97d646bb53c3c3c45",
																"typeString": "literal_string \"EtfToken: already initialized\""
															},
															"value": "EtfToken: already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bff9b1557c542a233ca52157ba744ff1a697493bf85768f97d646bb53c3c3c45",
																"typeString": "literal_string \"EtfToken: already initialized\""
															}
														],
														"id": 1403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1334:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "1334:55:9"
											},
											{
												"expression": {
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1409,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "1399:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1414:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1399:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1412,
												"nodeType": "ExpressionStatement",
												"src": "1399:19:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1414,
															"name": "directory_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "1510:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1413,
														"name": "_setDirectory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "1496:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1496:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1416,
												"nodeType": "ExpressionStatement",
												"src": "1496:25:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1418,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "1595:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1419,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "1602:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1417,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "1582:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1582:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1421,
												"nodeType": "ExpressionStatement",
												"src": "1582:28:9"
											}
										]
									},
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "1134:80:9",
										"text": "@notice One-time initializer for clones (constructors don't run for proxies)"
									},
									"functionSelector": "077f224a",
									"id": 1423,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1401,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1400,
												"name": "initializer",
												"nameLocations": [
													"1312:11:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 107,
												"src": "1312:11:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1312:11:9"
										}
									],
									"name": "initialize",
									"nameLocation": "1228:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1253:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "1239:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1393,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1239:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1274:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "1260:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1395,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1260:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "directory_",
												"nameLocation": "1291:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "1283:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1238:64:9"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1324:0:9"
									},
									"scope": 1503,
									"src": "1219:398:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1438,
										"nodeType": "Block",
										"src": "1727:34:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1434,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "1743:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1435,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "1747:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1433,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "1737:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1737:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "1737:17:9"
											}
										]
									},
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "1623:34:9",
										"text": "@notice Router-controlled mint"
									},
									"functionSelector": "40c10f19",
									"id": 1439,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1431,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1430,
												"name": "onlyEtfRouter",
												"nameLocations": [
													"1713:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1331,
												"src": "1713:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1713:13:9"
										}
									],
									"name": "mint",
									"nameLocation": "1671:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1684:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "1676:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1696:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "1688:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1675:28:9"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1727:0:9"
									},
									"scope": 1503,
									"src": "1662:99:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1454,
										"nodeType": "Block",
										"src": "1873:36:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1450,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "1889:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1451,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "1895:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1449,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "1883:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1883:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "1883:19:9"
											}
										]
									},
									"documentation": {
										"id": 1440,
										"nodeType": "StructuredDocumentation",
										"src": "1767:34:9",
										"text": "@notice Router-controlled burn"
									},
									"functionSelector": "9dc29fac",
									"id": 1455,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1447,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1446,
												"name": "onlyEtfRouter",
												"nameLocations": [
													"1859:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1331,
												"src": "1859:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1859:13:9"
										}
									],
									"name": "burn",
									"nameLocation": "1815:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1828:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "1820:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1820:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1842:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "1834:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1819:30:9"
									},
									"returnParameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1873:0:9"
									},
									"scope": 1503,
									"src": "1806:103:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										683
									],
									"body": {
										"id": 1501,
										"nodeType": "Block",
										"src": "2079:297:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1469,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "2103:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1470,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "2109:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1471,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "2113:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1466,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2089:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_EtfToken_$1503_$",
																"typeString": "type(contract super EtfToken)"
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2095:7:9",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 683,
														"src": "2089:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2089:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1473,
												"nodeType": "ExpressionStatement",
												"src": "2089:30:9"
											},
											{
												"assignments": [
													1476
												],
												"declarations": [
													{
														"constant": false,
														"id": 1476,
														"mutability": "mutable",
														"name": "etfTokenEvents",
														"nameLocation": "2181:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 1501,
														"src": "2165:30:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IEtfTokenEvents_$1345",
															"typeString": "contract IEtfTokenEvents"
														},
														"typeName": {
															"id": 1475,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1474,
																"name": "IEtfTokenEvents",
																"nameLocations": [
																	"2165:15:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1345,
																"src": "2165:15:9"
															},
															"referencedDeclaration": 1345,
															"src": "2165:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEtfTokenEvents_$1345",
																"typeString": "contract IEtfTokenEvents"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1479,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1477,
														"name": "getEtfTokenEvents",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "2198:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEtfTokenEvents_$1345_$",
															"typeString": "function () view returns (contract IEtfTokenEvents)"
														}
													},
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2198:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEtfTokenEvents_$1345",
														"typeString": "contract IEtfTokenEvents"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2165:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1483,
																		"name": "etfTokenEvents",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1476,
																		"src": "2243:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IEtfTokenEvents_$1345",
																			"typeString": "contract IEtfTokenEvents"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IEtfTokenEvents_$1345",
																			"typeString": "contract IEtfTokenEvents"
																		}
																	],
																	"id": 1482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2235:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1481,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2235:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2235:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2270:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2262:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1485,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2262:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2262:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2235:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "457466546f6b656e3a206576656e747320636f6e7472616374206e6f7420736574",
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2274:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4",
																"typeString": "literal_string \"EtfToken: events contract not set\""
															},
															"value": "EtfToken: events contract not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4",
																"typeString": "literal_string \"EtfToken: events contract not set\""
															}
														],
														"id": 1480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2227:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2227:83:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "2227:83:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1496,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "2353:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1497,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "2359:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1498,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "2363:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1493,
															"name": "etfTokenEvents",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "2320:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEtfTokenEvents_$1345",
																"typeString": "contract IEtfTokenEvents"
															}
														},
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2335:17:9",
														"memberName": "emitTransferEvent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1344,
														"src": "2320:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2320:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1500,
												"nodeType": "ExpressionStatement",
												"src": "2320:49:9"
											}
										]
									},
									"documentation": {
										"id": 1456,
										"nodeType": "StructuredDocumentation",
										"src": "1915:83:9",
										"text": "@dev OZ v5 central hook for transfer/mint/burn; forward event to EtfTokenEvents"
									},
									"id": 1502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "2012:7:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1464,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2070:8:9"
									},
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2028:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "2020:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2020:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2042:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "2034:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2054:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "2046:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2019:41:9"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2079:0:9"
									},
									"scope": 1503,
									"src": "2003:373:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1504,
							"src": "635:1743:9",
							"usedErrors": [
								16,
								19,
								942,
								947,
								952,
								961,
								966,
								971
							],
							"usedEvents": [
								24,
								1079,
								1088
							]
						}
					],
					"src": "32:2347:9"
				},
				"id": 9
			}
		}
	}
}