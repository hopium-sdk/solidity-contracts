{
	"id": "274b8efe2fc5a0d463b7df17dbe558e1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"hopium/etf/main/etf-token.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.30;\n\nimport {Initializable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport {ERC20Upgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\n\nimport \"hopium/common/interface/imDirectory.sol\";\nimport \"hopium/etf/interface/imEtfRouter.sol\";\nimport \"hopium/etf/interface/imEtfTokenEvents.sol\";\n\n/// @notice Cloneable ETF ERC20 with per-clone name/symbol via initialize()\n/// @dev Uses OZ *Upgradeable* ERC20 so name/symbol can be set at runtime.\n///      Access control (onlyEtfRouter/onlyOwner) resolves via ImDirectory.\ncontract EtfToken is Initializable, ERC20Upgradeable, ImEtfRouter, ImEtfTokenEvents {\n    bool private _initialized;\n    uint256 public etfId;\n\n    /// @dev The logic/implementation constructor runs once when you deploy the master.\n    ///      Clones DO NOT run constructors, they use initialize().\n    constructor(address _directory) ImDirectory(_directory) {\n        // Prevent the implementation from being used directly post-deployment.\n        // (No state to lock here; modifiers rely on Directory anyway.)\n    }\n\n    error AlreadyInitialized();\n    /// @notice One-time initializer for clones (constructors don't run for proxies)\n    function initialize(uint256 etfId_, string memory name_, string memory symbol_, address directory_) external initializer {\n        if (_initialized) revert AlreadyInitialized();\n        _initialized = true;\n\n        // Wire Directory for this clone first (so modifiers work)\n        _setDirectory(directory_);\n\n        // Initialize ERC20 storage (name/symbol)\n        __ERC20_init(name_, symbol_);\n\n        etfId = etfId_;\n    }\n\n    /// @notice Router-controlled mint\n    function mint(address to, uint256 amount) external onlyEtfRouter {\n        _mint(to, amount);\n    }\n\n    /// @notice Router-controlled burn\n    function burn(address from, uint256 amount) external onlyEtfRouter {\n        _burn(from, amount);\n    }\n\n    /// @dev OZ v5 central hook for transfer/mint/burn; forward event to EtfTokenEvents\n    function _update(address from, address to, uint256 value) internal override {\n        super._update(from, to, value); // state + standard Transfer event\n\n        IEtfTokenEvents etfTokenEvents = getEtfTokenEvents();\n        require(address(etfTokenEvents) != address(0), \"EtfToken: events contract not set\");\n        etfTokenEvents.emitTransferEvent(etfId, from, to, value);\n    }\n}\n"
			},
			"hopium/etf/interface/imEtfTokenEvents.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.30;\n\nimport \"hopium/common/interface/imDirectory.sol\";\n\ninterface IEtfTokenEvents {\n    function emitTransferEvent(uint256 etfId, address fromAddress, address toAddress, uint256 transferAmount) external;\n}\n\nabstract contract ImEtfTokenEvents is ImDirectory {\n\n    function getEtfTokenEvents() internal view virtual returns (IEtfTokenEvents) {\n        return IEtfTokenEvents(fetchFromDirectory(\"etf-token-events\"));\n    }\n    \n}"
			},
			"hopium/etf/interface/imEtfRouter.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.30;\n\nimport \"hopium/common/interface/imDirectory.sol\";\n\ninterface IEtfRouter {\n    \n}\n\nabstract contract ImEtfRouter is ImDirectory {\n\n    function getEtfRouter() internal view virtual returns (IEtfRouter) {\n        return IEtfRouter(fetchFromDirectory(\"etf-router\"));\n    }\n\n    modifier onlyEtfRouter() {\n        require(msg.sender == fetchFromDirectory(\"etf-router\"), \"msg.sender is not etf router\");\n        _;\n    }\n}"
			},
			"hopium/common/interface/imDirectory.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.30;\n\n/// @notice Interface used by the registry to talk to the external directory.\ninterface IDirectory {\n    function owner() external view returns (address);\n    function fetchFromDirectory(string memory _key) external view returns (address);\n}\n\nabstract contract ImDirectory {\n    IDirectory public Directory;\n\n    constructor(address _directory) {\n        _setDirectory(_directory); // no modifier here\n    }\n\n    function changeDirectoryAddress(address _directory) external onlyOwner {\n        _setDirectory(_directory);\n    }\n\n    function _setDirectory(address _directory) internal {\n        require(_directory != address(0), \"Directory cannot be zero address\");\n        require(_directory.code.length > 0, \"Directory must be a contract\");\n\n        // Sanity check the interface\n        try IDirectory(_directory).owner() returns (address) {\n            Directory = IDirectory(_directory);\n        } catch {\n            revert(\"Directory address does not implement owner()\");\n        }\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == Directory.owner(), \"Caller is not the owner\");\n        _;\n    }\n\n    function owner() public view returns (address) {\n        return Directory.owner();\n    }\n\n    function fetchFromDirectory(string memory _key) public view returns (address) {\n        return Directory.fetchFromDirectory(_key);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xfcd09c2aa8cc3f93e12545454359f901965db312bc03833daf84de0c03e05022\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07701188648d2ab83dab1037808298585264559bddf243bd8929037adcb984b0\",\"dweb:/ipfs/QmavmG5REdHCAWsZ8Cag26BCxAq27DRKGxr3uBg5ZYxQ51\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hopium/common/interface/imDirectory.sol": {
				"IDirectory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_key",
									"type": "string"
								}
							],
							"name": "fetchFromDirectory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"fetchFromDirectory(string)": "27262618",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"fetchFromDirectory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface used by the registry to talk to the external directory.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/common/interface/imDirectory.sol\":\"IDirectory\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Interface used by the registry to talk to the external directory.",
						"version": 1
					}
				},
				"ImDirectory": {
					"abi": [
						{
							"inputs": [],
							"name": "Directory",
							"outputs": [
								{
									"internalType": "contract IDirectory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_directory",
									"type": "address"
								}
							],
							"name": "changeDirectoryAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_key",
									"type": "string"
								}
							],
							"name": "fetchFromDirectory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"Directory()": "658a847a",
							"changeDirectoryAddress(address)": "ba4c7be1",
							"fetchFromDirectory(string)": "27262618",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Directory\",\"outputs\":[{\"internalType\":\"contract IDirectory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_directory\",\"type\":\"address\"}],\"name\":\"changeDirectoryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"fetchFromDirectory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/common/interface/imDirectory.sol\":\"ImDirectory\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1190,
								"contract": "hopium/common/interface/imDirectory.sol:ImDirectory",
								"label": "Directory",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDirectory)1187"
							}
						],
						"types": {
							"t_contract(IDirectory)1187": {
								"encoding": "inplace",
								"label": "contract IDirectory",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hopium/etf/interface/imEtfRouter.sol": {
				"IEtfRouter": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/etf/interface/imEtfRouter.sol\":\"IEtfRouter\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]},\"hopium/etf/interface/imEtfRouter.sol\":{\"keccak256\":\"0x9ef2dafe8d3bf78ea2372470cd04070489e0d2324d91a8fbc7c3867a8eabc9f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a558b98b69ec2677eb516606b18553fb1ea77376d5db15cef8ef4283c7b7ad95\",\"dweb:/ipfs/Qmdey7B1K99bf8XbQ3NAS1RMntRkziFFitrBQQpzM2hqiz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ImEtfRouter": {
					"abi": [
						{
							"inputs": [],
							"name": "Directory",
							"outputs": [
								{
									"internalType": "contract IDirectory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_directory",
									"type": "address"
								}
							],
							"name": "changeDirectoryAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_key",
									"type": "string"
								}
							],
							"name": "fetchFromDirectory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"Directory()": "658a847a",
							"changeDirectoryAddress(address)": "ba4c7be1",
							"fetchFromDirectory(string)": "27262618",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Directory\",\"outputs\":[{\"internalType\":\"contract IDirectory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_directory\",\"type\":\"address\"}],\"name\":\"changeDirectoryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"fetchFromDirectory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/etf/interface/imEtfRouter.sol\":\"ImEtfRouter\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]},\"hopium/etf/interface/imEtfRouter.sol\":{\"keccak256\":\"0x9ef2dafe8d3bf78ea2372470cd04070489e0d2324d91a8fbc7c3867a8eabc9f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a558b98b69ec2677eb516606b18553fb1ea77376d5db15cef8ef4283c7b7ad95\",\"dweb:/ipfs/Qmdey7B1K99bf8XbQ3NAS1RMntRkziFFitrBQQpzM2hqiz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1190,
								"contract": "hopium/etf/interface/imEtfRouter.sol:ImEtfRouter",
								"label": "Directory",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDirectory)1187"
							}
						],
						"types": {
							"t_contract(IDirectory)1187": {
								"encoding": "inplace",
								"label": "contract IDirectory",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hopium/etf/interface/imEtfTokenEvents.sol": {
				"IEtfTokenEvents": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "etfId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "fromAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "toAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "transferAmount",
									"type": "uint256"
								}
							],
							"name": "emitTransferEvent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"emitTransferEvent(uint256,address,address,uint256)": "c082f03f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"etfId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"transferAmount\",\"type\":\"uint256\"}],\"name\":\"emitTransferEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/etf/interface/imEtfTokenEvents.sol\":\"IEtfTokenEvents\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]},\"hopium/etf/interface/imEtfTokenEvents.sol\":{\"keccak256\":\"0x4e2b9c193cccc609fe1736ec8c10d9fe1c5913a734a2e72134f23f8125cc979d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72ff8a846020a7276c16846085a86ebfd8a075568d6c6f55366af086dc49f89c\",\"dweb:/ipfs/QmRsg6jgCp4MpHCGCGYYVh638U7C9mSYJidjHKryLgZswF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ImEtfTokenEvents": {
					"abi": [
						{
							"inputs": [],
							"name": "Directory",
							"outputs": [
								{
									"internalType": "contract IDirectory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_directory",
									"type": "address"
								}
							],
							"name": "changeDirectoryAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_key",
									"type": "string"
								}
							],
							"name": "fetchFromDirectory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"Directory()": "658a847a",
							"changeDirectoryAddress(address)": "ba4c7be1",
							"fetchFromDirectory(string)": "27262618",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Directory\",\"outputs\":[{\"internalType\":\"contract IDirectory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_directory\",\"type\":\"address\"}],\"name\":\"changeDirectoryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"fetchFromDirectory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/etf/interface/imEtfTokenEvents.sol\":\"ImEtfTokenEvents\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]},\"hopium/etf/interface/imEtfTokenEvents.sol\":{\"keccak256\":\"0x4e2b9c193cccc609fe1736ec8c10d9fe1c5913a734a2e72134f23f8125cc979d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72ff8a846020a7276c16846085a86ebfd8a075568d6c6f55366af086dc49f89c\",\"dweb:/ipfs/QmRsg6jgCp4MpHCGCGYYVh638U7C9mSYJidjHKryLgZswF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1190,
								"contract": "hopium/etf/interface/imEtfTokenEvents.sol:ImEtfTokenEvents",
								"label": "Directory",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDirectory)1187"
							}
						],
						"types": {
							"t_contract(IDirectory)1187": {
								"encoding": "inplace",
								"label": "contract IDirectory",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hopium/etf/main/etf-token.sol": {
				"EtfToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_directory",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AlreadyInitialized",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Directory",
							"outputs": [
								{
									"internalType": "contract IDirectory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_directory",
									"type": "address"
								}
							],
							"name": "changeDirectoryAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "etfId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_key",
									"type": "string"
								}
							],
							"name": "fetchFromDirectory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "etfId_",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "directory_",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Uses OZ *Upgradeable* ERC20 so name/symbol can be set at runtime.      Access control (onlyEtfRouter/onlyOwner) resolves via ImDirectory.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "The logic/implementation constructor runs once when you deploy the master.      Clones DO NOT run constructors, they use initialize()."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"hopium/etf/main/etf-token.sol\":635:2474  contract EtfToken is Initializable, ERC20Upgradeable, ImEtfRouter, ImEtfTokenEvents {... */\n  mstore(0x40, 0x80)\n    /* \"hopium/etf/main/etf-token.sol\":939:1154  constructor(address _directory) ImDirectory(_directory) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"hopium/etf/main/etf-token.sol\":983:993  _directory */\n  dup1\n    /* \"hopium/common/interface/imDirectory.sol\":412:437  _setDirectory(_directory) */\n  tag_7\n    /* \"hopium/common/interface/imDirectory.sol\":426:436  _directory */\n  dup2\n    /* \"hopium/common/interface/imDirectory.sol\":412:425  _setDirectory */\n  shl(0x20, tag_8)\n    /* \"hopium/common/interface/imDirectory.sol\":412:437  _setDirectory(_directory) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"hopium/common/interface/imDirectory.sol\":370:464  constructor(address _directory) {... */\n  pop\n    /* \"hopium/etf/main/etf-token.sol\":939:1154  constructor(address _directory) ImDirectory(_directory) {... */\n  pop\n    /* \"hopium/etf/main/etf-token.sol\":635:2474  contract EtfToken is Initializable, ERC20Upgradeable, ImEtfRouter, ImEtfTokenEvents {... */\n  jump(tag_10)\n    /* \"hopium/common/interface/imDirectory.sol\":589:1050  function _setDirectory(address _directory) internal {... */\ntag_8:\n    /* \"hopium/common/interface/imDirectory.sol\":681:682  0 */\n  0x00\n    /* \"hopium/common/interface/imDirectory.sol\":659:683  _directory != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"hopium/common/interface/imDirectory.sol\":659:669  _directory */\n  dup2\n    /* \"hopium/common/interface/imDirectory.sol\":659:683  _directory != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"hopium/common/interface/imDirectory.sol\":651:720  require(_directory != address(0), \"Directory cannot be zero address\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"hopium/common/interface/imDirectory.sol\":763:764  0 */\n  0x00\n    /* \"hopium/common/interface/imDirectory.sol\":738:748  _directory */\n  dup2\n    /* \"hopium/common/interface/imDirectory.sol\":738:760  _directory.code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"hopium/common/interface/imDirectory.sol\":738:764  _directory.code.length > 0 */\n  gt\n    /* \"hopium/common/interface/imDirectory.sol\":730:797  require(_directory.code.length > 0, \"Directory must be a contract\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"hopium/common/interface/imDirectory.sol\":861:871  _directory */\n  dup1\n    /* \"hopium/common/interface/imDirectory.sol\":850:878  IDirectory(_directory).owner */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8da5cb5b\n    /* \"hopium/common/interface/imDirectory.sol\":850:880  IDirectory(_directory).owner() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  swap3\n  pop\n  pop\n  pop\n  dup1\n  iszero\n  tag_18\n  jumpi\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_19\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_19:\n  0x01\ntag_18:\n    /* \"hopium/common/interface/imDirectory.sol\":846:1044  try IDirectory(_directory).owner() returns (address) {... */\n  tag_20\n  jumpi\n    /* \"hopium/common/interface/imDirectory.sol\":979:1033  revert(\"Directory address does not implement owner()\") */\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"hopium/common/interface/imDirectory.sol\":846:1044  try IDirectory(_directory).owner() returns (address) {... */\ntag_20:\n    /* \"hopium/common/interface/imDirectory.sol\":936:946  _directory */\n  dup2\n    /* \"hopium/common/interface/imDirectory.sol\":913:922  Directory */\n  0x00\n  0x00\n    /* \"hopium/common/interface/imDirectory.sol\":913:947  Directory = IDirectory(_directory) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"hopium/common/interface/imDirectory.sol\":881:958  returns (address) {... */\n  pop\n    /* \"hopium/common/interface/imDirectory.sol\":589:1050  function _setDirectory(address _directory) internal {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_28:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_30:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_31:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_47\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_30\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_32:\n    /* \"#utility.yul\":641:665   */\n  tag_49\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_31\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_50:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_33:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_52\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_32\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_55\n  tag_28\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":932:1051   */\ntag_54:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_56\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_33\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1371   */\ntag_34:\n    /* \"#utility.yul\":1286:1297   */\n  0x00\n    /* \"#utility.yul\":1320:1326   */\n  dup3\n    /* \"#utility.yul\":1315:1318   */\n  dup3\n    /* \"#utility.yul\":1308:1327   */\n  mstore\n    /* \"#utility.yul\":1360:1364   */\n  0x20\n    /* \"#utility.yul\":1355:1358   */\n  dup3\n    /* \"#utility.yul\":1351:1365   */\n  add\n    /* \"#utility.yul\":1336:1365   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1371   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1377:1559   */\ntag_35:\n    /* \"#utility.yul\":1517:1551   */\n  0x4469726563746f72792063616e6e6f74206265207a65726f2061646472657373\n    /* \"#utility.yul\":1513:1514   */\n  0x00\n    /* \"#utility.yul\":1505:1511   */\n  dup3\n    /* \"#utility.yul\":1501:1515   */\n  add\n    /* \"#utility.yul\":1494:1552   */\n  mstore\n    /* \"#utility.yul\":1377:1559   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1565:1931   */\ntag_36:\n    /* \"#utility.yul\":1707:1710   */\n  0x00\n    /* \"#utility.yul\":1728:1795   */\n  tag_60\n    /* \"#utility.yul\":1792:1794   */\n  0x20\n    /* \"#utility.yul\":1787:1790   */\n  dup4\n    /* \"#utility.yul\":1728:1795   */\n  tag_34\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1721:1795   */\n  swap2\n  pop\n    /* \"#utility.yul\":1804:1897   */\n  tag_61\n    /* \"#utility.yul\":1893:1896   */\n  dup3\n    /* \"#utility.yul\":1804:1897   */\n  tag_35\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1922:1924   */\n  0x20\n    /* \"#utility.yul\":1917:1920   */\n  dup3\n    /* \"#utility.yul\":1913:1925   */\n  add\n    /* \"#utility.yul\":1906:1925   */\n  swap1\n  pop\n    /* \"#utility.yul\":1565:1931   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1937:2356   */\ntag_14:\n    /* \"#utility.yul\":2103:2107   */\n  0x00\n    /* \"#utility.yul\":2141:2143   */\n  0x20\n    /* \"#utility.yul\":2130:2139   */\n  dup3\n    /* \"#utility.yul\":2126:2144   */\n  add\n    /* \"#utility.yul\":2118:2144   */\n  swap1\n  pop\n    /* \"#utility.yul\":2190:2199   */\n  dup2\n    /* \"#utility.yul\":2184:2188   */\n  dup2\n    /* \"#utility.yul\":2180:2200   */\n  sub\n    /* \"#utility.yul\":2176:2177   */\n  0x00\n    /* \"#utility.yul\":2165:2174   */\n  dup4\n    /* \"#utility.yul\":2161:2178   */\n  add\n    /* \"#utility.yul\":2154:2201   */\n  mstore\n    /* \"#utility.yul\":2218:2349   */\n  tag_63\n    /* \"#utility.yul\":2344:2348   */\n  dup2\n    /* \"#utility.yul\":2218:2349   */\n  tag_36\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2210:2349   */\n  swap1\n  pop\n    /* \"#utility.yul\":1937:2356   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2362:2540   */\ntag_37:\n    /* \"#utility.yul\":2502:2532   */\n  0x4469726563746f7279206d757374206265206120636f6e747261637400000000\n    /* \"#utility.yul\":2498:2499   */\n  0x00\n    /* \"#utility.yul\":2490:2496   */\n  dup3\n    /* \"#utility.yul\":2486:2500   */\n  add\n    /* \"#utility.yul\":2479:2533   */\n  mstore\n    /* \"#utility.yul\":2362:2540   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2546:2912   */\ntag_38:\n    /* \"#utility.yul\":2688:2691   */\n  0x00\n    /* \"#utility.yul\":2709:2776   */\n  tag_66\n    /* \"#utility.yul\":2773:2775   */\n  0x1c\n    /* \"#utility.yul\":2768:2771   */\n  dup4\n    /* \"#utility.yul\":2709:2776   */\n  tag_34\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2702:2776   */\n  swap2\n  pop\n    /* \"#utility.yul\":2785:2878   */\n  tag_67\n    /* \"#utility.yul\":2874:2877   */\n  dup3\n    /* \"#utility.yul\":2785:2878   */\n  tag_37\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2903:2905   */\n  0x20\n    /* \"#utility.yul\":2898:2901   */\n  dup3\n    /* \"#utility.yul\":2894:2906   */\n  add\n    /* \"#utility.yul\":2887:2906   */\n  swap1\n  pop\n    /* \"#utility.yul\":2546:2912   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2918:3337   */\ntag_17:\n    /* \"#utility.yul\":3084:3088   */\n  0x00\n    /* \"#utility.yul\":3122:3124   */\n  0x20\n    /* \"#utility.yul\":3111:3120   */\n  dup3\n    /* \"#utility.yul\":3107:3125   */\n  add\n    /* \"#utility.yul\":3099:3125   */\n  swap1\n  pop\n    /* \"#utility.yul\":3171:3180   */\n  dup2\n    /* \"#utility.yul\":3165:3169   */\n  dup2\n    /* \"#utility.yul\":3161:3181   */\n  sub\n    /* \"#utility.yul\":3157:3158   */\n  0x00\n    /* \"#utility.yul\":3146:3155   */\n  dup4\n    /* \"#utility.yul\":3142:3159   */\n  add\n    /* \"#utility.yul\":3135:3182   */\n  mstore\n    /* \"#utility.yul\":3199:3330   */\n  tag_69\n    /* \"#utility.yul\":3325:3329   */\n  dup2\n    /* \"#utility.yul\":3199:3330   */\n  tag_38\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":3191:3330   */\n  swap1\n  pop\n    /* \"#utility.yul\":2918:3337   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3343:3574   */\ntag_39:\n    /* \"#utility.yul\":3483:3517   */\n  0x4469726563746f7279206164647265737320646f6573206e6f7420696d706c65\n    /* \"#utility.yul\":3479:3480   */\n  0x00\n    /* \"#utility.yul\":3471:3477   */\n  dup3\n    /* \"#utility.yul\":3467:3481   */\n  add\n    /* \"#utility.yul\":3460:3518   */\n  mstore\n    /* \"#utility.yul\":3552:3566   */\n  0x6d656e74206f776e657228290000000000000000000000000000000000000000\n    /* \"#utility.yul\":3547:3549   */\n  0x20\n    /* \"#utility.yul\":3539:3545   */\n  dup3\n    /* \"#utility.yul\":3535:3550   */\n  add\n    /* \"#utility.yul\":3528:3567   */\n  mstore\n    /* \"#utility.yul\":3343:3574   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3580:3946   */\ntag_40:\n    /* \"#utility.yul\":3722:3725   */\n  0x00\n    /* \"#utility.yul\":3743:3810   */\n  tag_72\n    /* \"#utility.yul\":3807:3809   */\n  0x2c\n    /* \"#utility.yul\":3802:3805   */\n  dup4\n    /* \"#utility.yul\":3743:3810   */\n  tag_34\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":3736:3810   */\n  swap2\n  pop\n    /* \"#utility.yul\":3819:3912   */\n  tag_73\n    /* \"#utility.yul\":3908:3911   */\n  dup3\n    /* \"#utility.yul\":3819:3912   */\n  tag_39\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3937:3939   */\n  0x40\n    /* \"#utility.yul\":3932:3935   */\n  dup3\n    /* \"#utility.yul\":3928:3940   */\n  add\n    /* \"#utility.yul\":3921:3940   */\n  swap1\n  pop\n    /* \"#utility.yul\":3580:3946   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3952:4371   */\ntag_25:\n    /* \"#utility.yul\":4118:4122   */\n  0x00\n    /* \"#utility.yul\":4156:4158   */\n  0x20\n    /* \"#utility.yul\":4145:4154   */\n  dup3\n    /* \"#utility.yul\":4141:4159   */\n  add\n    /* \"#utility.yul\":4133:4159   */\n  swap1\n  pop\n    /* \"#utility.yul\":4205:4214   */\n  dup2\n    /* \"#utility.yul\":4199:4203   */\n  dup2\n    /* \"#utility.yul\":4195:4215   */\n  sub\n    /* \"#utility.yul\":4191:4192   */\n  0x00\n    /* \"#utility.yul\":4180:4189   */\n  dup4\n    /* \"#utility.yul\":4176:4193   */\n  add\n    /* \"#utility.yul\":4169:4216   */\n  mstore\n    /* \"#utility.yul\":4233:4364   */\n  tag_75\n    /* \"#utility.yul\":4359:4363   */\n  dup2\n    /* \"#utility.yul\":4233:4364   */\n  tag_40\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":4225:4364   */\n  swap1\n  pop\n    /* \"#utility.yul\":3952:4371   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"hopium/etf/main/etf-token.sol\":635:2474  contract EtfToken is Initializable, ERC20Upgradeable, ImEtfRouter, ImEtfTokenEvents {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"hopium/etf/main/etf-token.sol\":635:2474  contract EtfToken is Initializable, ERC20Upgradeable, ImEtfRouter, ImEtfTokenEvents {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6ebd362c\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x9dc29fac\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xba4c7be1\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xcfa36f3d\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x6ebd362c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x27262618\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x27262618\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x658a847a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5114:5300  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3850:4002  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5892:6136  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/common/interface/imDirectory.sol\":1272:1408  function fetchFromDirectory(string memory _key) public view returns (address) {... */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3735:3817  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/etf/main/etf-token.sol\":1751:1850  function mint(address to, uint256 amount) external onlyEtfRouter {... */\n    tag_9:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"hopium/common/interface/imDirectory.sol\":336:363  IDirectory public Directory */\n    tag_10:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/etf/main/etf-token.sol\":1277:1706  function initialize(uint256 etfId_, string memory name_, string memory symbol_, address directory_) external initializer {... */\n    tag_11:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4035:4206  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/common/interface/imDirectory.sol\":1178:1266  function owner() public view returns (address) {... */\n    tag_13:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2954:3102  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/etf/main/etf-token.sol\":1895:1998  function burn(address from, uint256 amount) external onlyEtfRouter {... */\n    tag_15:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4401:4579  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/common/interface/imDirectory.sol\":470:583  function changeDirectoryAddress(address _directory) external onlyOwner {... */\n    tag_17:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"hopium/etf/main/etf-token.sol\":756:776  uint256 public etfId */\n    tag_18:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4612:4807  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2742:2755  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2767:2789  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2810  _getERC20Storage() */\n      tag_93\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2808  _getERC20Storage */\n      tag_94\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2810  _getERC20Storage() */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2767:2810  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2827:2828  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2827:2834  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2820:2834  return $._name */\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_97\n      swap1\n      tag_96\n      jump\t// in\n    tag_97:\n      dup1\n      iszero\n      tag_98\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_99\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_98)\n    tag_99:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_100:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_100\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5114:5300  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5187:5191  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5203:5216  address owner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5219:5231  _msgSender() */\n      tag_102\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5219:5229  _msgSender */\n      tag_103\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5219:5231  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5203:5231  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5241:5272  _approve(owner, spender, value) */\n      tag_104\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5250:5255  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5257:5264  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5266:5271  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5241:5249  _approve */\n      tag_105\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5241:5272  _approve(owner, spender, value) */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5289:5293  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5282:5293  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5114:5300  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3850:4002  function totalSupply() public view virtual returns (uint256) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3902:3909  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3921:3943  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3946:3964  _getERC20Storage() */\n      tag_107\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3946:3962  _getERC20Storage */\n      tag_94\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3946:3964  _getERC20Storage() */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3921:3964  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3981:3982  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3981:3995  $._totalSupply */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3974:3995  return $._totalSupply */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3850:4002  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5892:6136  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5979:5983  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5995:6010  address spender */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6013:6025  _msgSender() */\n      tag_109\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6013:6023  _msgSender */\n      tag_103\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6013:6025  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5995:6025  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6035:6072  _spendAllowance(from, spender, value) */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6051:6055  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6057:6064  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6066:6071  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6035:6050  _spendAllowance */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6035:6072  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6082:6108  _transfer(from, to, value) */\n      tag_112\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6092:6096  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6098:6100  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6102:6107  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6082:6091  _transfer */\n      tag_113\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6082:6108  _transfer(from, to, value) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6125:6129  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6118:6129  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5892:6136  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"hopium/common/interface/imDirectory.sol\":1272:1408  function fetchFromDirectory(string memory _key) public view returns (address) {... */\n    tag_45:\n        /* \"hopium/common/interface/imDirectory.sol\":1341:1348  address */\n      0x00\n        /* \"hopium/common/interface/imDirectory.sol\":1367:1376  Directory */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/common/interface/imDirectory.sol\":1367:1395  Directory.fetchFromDirectory */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x27262618\n        /* \"hopium/common/interface/imDirectory.sol\":1396:1400  _key */\n      dup4\n        /* \"hopium/common/interface/imDirectory.sol\":1367:1401  Directory.fetchFromDirectory(_key) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_115:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_117\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"hopium/common/interface/imDirectory.sol\":1360:1401  return Directory.fetchFromDirectory(_key) */\n      swap1\n      pop\n        /* \"hopium/common/interface/imDirectory.sol\":1272:1408  function fetchFromDirectory(string memory _key) public view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3735:3817  function decimals() public view virtual returns (uint8) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3784:3789  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3808:3810  18 */\n      0x12\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3801:3810  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3735:3817  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"hopium/etf/main/etf-token.sol\":1751:1850  function mint(address to, uint256 amount) external onlyEtfRouter {... */\n    tag_54:\n        /* \"hopium/etf/interface/imEtfRouter.sol\":389:421  fetchFromDirectory(\"etf-router\") */\n      tag_122\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x6574662d726f7574657200000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"hopium/etf/interface/imEtfRouter.sol\":389:407  fetchFromDirectory */\n      tag_45\n        /* \"hopium/etf/interface/imEtfRouter.sol\":389:421  fetchFromDirectory(\"etf-router\") */\n      jump\t// in\n    tag_122:\n        /* \"hopium/etf/interface/imEtfRouter.sol\":375:421  msg.sender == fetchFromDirectory(\"etf-router\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/etf/interface/imEtfRouter.sol\":375:385  msg.sender */\n      caller\n        /* \"hopium/etf/interface/imEtfRouter.sol\":375:421  msg.sender == fetchFromDirectory(\"etf-router\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"hopium/etf/interface/imEtfRouter.sol\":367:454  require(msg.sender == fetchFromDirectory(\"etf-router\"), \"msg.sender is not etf router\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"hopium/etf/main/etf-token.sol\":1826:1843  _mint(to, amount) */\n      tag_127\n        /* \"hopium/etf/main/etf-token.sol\":1832:1834  to */\n      dup3\n        /* \"hopium/etf/main/etf-token.sol\":1836:1842  amount */\n      dup3\n        /* \"hopium/etf/main/etf-token.sol\":1826:1831  _mint */\n      tag_128\n        /* \"hopium/etf/main/etf-token.sol\":1826:1843  _mint(to, amount) */\n      jump\t// in\n    tag_127:\n        /* \"hopium/etf/main/etf-token.sol\":1751:1850  function mint(address to, uint256 amount) external onlyEtfRouter {... */\n      pop\n      pop\n      jump\t// out\n        /* \"hopium/common/interface/imDirectory.sol\":336:363  IDirectory public Directory */\n    tag_56:\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"hopium/etf/main/etf-token.sol\":1277:1706  function initialize(uint256 etfId_, string memory name_, string memory symbol_, address directory_) external initializer {... */\n    tag_62:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_131\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4721  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4739:4740  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4735  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4740  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_132\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4744:4758  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n    tag_132:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4758  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4785  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4803:4804  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4799  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_133\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4837:4838  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4816:4820  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4833  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4838  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n    tag_133:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4838  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4854:4866  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4866  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_134\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4871:4883  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4870:4883  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n    tag_134:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n      iszero\n      tag_135\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4906:4929  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4966:4967  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4950  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4963  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4981:4995  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n      iszero\n      tag_136\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5029:5033  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5012  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5026  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5033  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n    tag_136:\n        /* \"hopium/etf/main/etf-token.sol\":1412:1424  _initialized */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"hopium/etf/main/etf-token.sol\":1408:1453  if (_initialized) revert AlreadyInitialized() */\n      iszero\n      tag_138\n      jumpi\n        /* \"hopium/etf/main/etf-token.sol\":1433:1453  AlreadyInitialized() */\n      mload(0x40)\n      0x0dc149f000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hopium/etf/main/etf-token.sol\":1408:1453  if (_initialized) revert AlreadyInitialized() */\n    tag_138:\n        /* \"hopium/etf/main/etf-token.sol\":1478:1482  true */\n      0x01\n        /* \"hopium/etf/main/etf-token.sol\":1463:1475  _initialized */\n      0x00\n      0x14\n        /* \"hopium/etf/main/etf-token.sol\":1463:1482  _initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"hopium/etf/main/etf-token.sol\":1560:1585  _setDirectory(directory_) */\n      tag_139\n        /* \"hopium/etf/main/etf-token.sol\":1574:1584  directory_ */\n      dup7\n        /* \"hopium/etf/main/etf-token.sol\":1560:1573  _setDirectory */\n      tag_140\n        /* \"hopium/etf/main/etf-token.sol\":1560:1585  _setDirectory(directory_) */\n      jump\t// in\n    tag_139:\n        /* \"hopium/etf/main/etf-token.sol\":1646:1674  __ERC20_init(name_, symbol_) */\n      tag_141\n        /* \"hopium/etf/main/etf-token.sol\":1659:1664  name_ */\n      dup9\n        /* \"hopium/etf/main/etf-token.sol\":1666:1673  symbol_ */\n      dup9\n        /* \"hopium/etf/main/etf-token.sol\":1646:1658  __ERC20_init */\n      tag_142\n        /* \"hopium/etf/main/etf-token.sol\":1646:1674  __ERC20_init(name_, symbol_) */\n      jump\t// in\n    tag_141:\n        /* \"hopium/etf/main/etf-token.sol\":1693:1699  etfId_ */\n      dup9\n        /* \"hopium/etf/main/etf-token.sol\":1685:1690  etfId */\n      0x01\n        /* \"hopium/etf/main/etf-token.sol\":1685:1699  etfId = etfId_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5068:5082  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n      iszero\n      tag_143\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5116:5121  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5099  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5113  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5121  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5152:5153  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5171  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"hopium/etf/main/etf-token.sol\":1277:1706  function initialize(uint256 etfId_, string memory name_, string memory symbol_, address directory_) external initializer {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4035:4206  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4100:4107  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4119:4141  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4144:4162  _getERC20Storage() */\n      tag_147\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4144:4160  _getERC20Storage */\n      tag_94\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4144:4162  _getERC20Storage() */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4119:4162  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4179:4180  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4179:4190  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4179:4199  $._balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4191:4198  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4179:4199  $._balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4172:4199  return $._balances[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4035:4206  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"hopium/common/interface/imDirectory.sol\":1178:1266  function owner() public view returns (address) {... */\n    tag_69:\n        /* \"hopium/common/interface/imDirectory.sol\":1216:1223  address */\n      0x00\n        /* \"hopium/common/interface/imDirectory.sol\":1242:1251  Directory */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/common/interface/imDirectory.sol\":1242:1257  Directory.owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"hopium/common/interface/imDirectory.sol\":1242:1259  Directory.owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_150\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_151:\n        /* \"hopium/common/interface/imDirectory.sol\":1235:1259  return Directory.owner() */\n      swap1\n      pop\n        /* \"hopium/common/interface/imDirectory.sol\":1178:1266  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2954:3102  function symbol() public view virtual returns (string memory) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3001:3014  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3026:3048  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3051:3069  _getERC20Storage() */\n      tag_153\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3051:3067  _getERC20Storage */\n      tag_94\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3051:3069  _getERC20Storage() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3026:3069  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3086:3087  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3086:3095  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3079:3095  return $._symbol */\n      dup1\n      sload\n      tag_154\n      swap1\n      tag_96\n      jump\t// in\n    tag_154:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_155\n      swap1\n      tag_96\n      jump\t// in\n    tag_155:\n      dup1\n      iszero\n      tag_156\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_157\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_156)\n    tag_157:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_158:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_158\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2954:3102  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"hopium/etf/main/etf-token.sol\":1895:1998  function burn(address from, uint256 amount) external onlyEtfRouter {... */\n    tag_76:\n        /* \"hopium/etf/interface/imEtfRouter.sol\":389:421  fetchFromDirectory(\"etf-router\") */\n      tag_160\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x6574662d726f7574657200000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"hopium/etf/interface/imEtfRouter.sol\":389:407  fetchFromDirectory */\n      tag_45\n        /* \"hopium/etf/interface/imEtfRouter.sol\":389:421  fetchFromDirectory(\"etf-router\") */\n      jump\t// in\n    tag_160:\n        /* \"hopium/etf/interface/imEtfRouter.sol\":375:421  msg.sender == fetchFromDirectory(\"etf-router\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/etf/interface/imEtfRouter.sol\":375:385  msg.sender */\n      caller\n        /* \"hopium/etf/interface/imEtfRouter.sol\":375:421  msg.sender == fetchFromDirectory(\"etf-router\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"hopium/etf/interface/imEtfRouter.sol\":367:454  require(msg.sender == fetchFromDirectory(\"etf-router\"), \"msg.sender is not etf router\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_125\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"hopium/etf/main/etf-token.sol\":1972:1991  _burn(from, amount) */\n      tag_164\n        /* \"hopium/etf/main/etf-token.sol\":1978:1982  from */\n      dup3\n        /* \"hopium/etf/main/etf-token.sol\":1984:1990  amount */\n      dup3\n        /* \"hopium/etf/main/etf-token.sol\":1972:1977  _burn */\n      tag_165\n        /* \"hopium/etf/main/etf-token.sol\":1972:1991  _burn(from, amount) */\n      jump\t// in\n    tag_164:\n        /* \"hopium/etf/main/etf-token.sol\":1895:1998  function burn(address from, uint256 amount) external onlyEtfRouter {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4401:4579  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4470:4474  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4486:4499  address owner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4502:4514  _msgSender() */\n      tag_167\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4502:4512  _msgSender */\n      tag_103\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4502:4514  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4486:4514  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4524:4551  _transfer(owner, to, value) */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4534:4539  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4541:4543  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4545:4550  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4524:4533  _transfer */\n      tag_113\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4524:4551  _transfer(owner, to, value) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4568:4572  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4561:4572  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4401:4579  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"hopium/common/interface/imDirectory.sol\":470:583  function changeDirectoryAddress(address _directory) external onlyOwner {... */\n    tag_83:\n        /* \"hopium/common/interface/imDirectory.sol\":1109:1118  Directory */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/common/interface/imDirectory.sol\":1109:1124  Directory.owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"hopium/common/interface/imDirectory.sol\":1109:1126  Directory.owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_172\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_172:\n        /* \"hopium/common/interface/imDirectory.sol\":1095:1126  msg.sender == Directory.owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/common/interface/imDirectory.sol\":1095:1105  msg.sender */\n      caller\n        /* \"hopium/common/interface/imDirectory.sol\":1095:1126  msg.sender == Directory.owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"hopium/common/interface/imDirectory.sol\":1087:1154  require(msg.sender == Directory.owner(), \"Caller is not the owner\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"hopium/common/interface/imDirectory.sol\":551:576  _setDirectory(_directory) */\n      tag_177\n        /* \"hopium/common/interface/imDirectory.sol\":565:575  _directory */\n      dup2\n        /* \"hopium/common/interface/imDirectory.sol\":551:564  _setDirectory */\n      tag_140\n        /* \"hopium/common/interface/imDirectory.sol\":551:576  _setDirectory(_directory) */\n      jump\t// in\n    tag_177:\n        /* \"hopium/common/interface/imDirectory.sol\":470:583  function changeDirectoryAddress(address _directory) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"hopium/etf/main/etf-token.sol\":756:776  uint256 public etfId */\n    tag_85:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4612:4807  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4692:4699  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4711:4733  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4736:4754  _getERC20Storage() */\n      tag_179\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4736:4752  _getERC20Storage */\n      tag_94\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4736:4754  _getERC20Storage() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4711:4754  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4771:4772  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4771:4784  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4771:4791  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4785:4790  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4771:4791  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4771:4800  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4792:4799  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4771:4800  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4764:4800  return $._allowances[owner][spender] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4612:4807  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1997:2019  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2064:2084  ERC20StorageLocation */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2054:2084  $.slot := ERC20StorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9905:10033  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_105:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9989:10026  _approve(owner, spender, value, true) */\n      tag_183\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9998:10003  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10005:10012  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10014:10019  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10021:10025  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9989:9997  _approve */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9989:10026  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9905:10033  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11649:12125  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_111:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11748:11772  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11775:11800  allowance(owner, spender) */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11785:11790  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11792:11799  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11775:11784  allowance */\n      tag_90\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11775:11800  allowance(owner, spender) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11748:11800  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11833:11850  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11814:11830  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11814:11850  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11810:12119  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11889:11894  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11870:11886  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11870:11894  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11866:11996  if (currentAllowance < value) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11948:11955  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11957:11973  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11975:11980  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11921:11981  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11866:11996  if (currentAllowance < value) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12037:12094  _approve(owner, spender, currentAllowance - value, false) */\n      tag_191\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12046:12051  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12053:12060  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12081:12086  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12062:12078  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12062:12086  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12088:12093  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12037:12045  _approve */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12037:12094  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11810:12119  if (currentAllowance < type(uint256).max) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11738:12125  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11649:12125  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6509:6809  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_113:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6608:6609  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6592:6610  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6592:6596  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6592:6610  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6588:6674  if (from == address(0)) {... */\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6660:6661  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6633:6663  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6588:6674  if (from == address(0)) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6701:6702  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6687:6703  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6687:6689  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6687:6703  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6683:6769  if (to == address(0)) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6755:6756  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6726:6758  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6683:6769  if (to == address(0)) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6778:6802  _update(from, to, value) */\n      tag_197\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6786:6790  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6792:6794  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6796:6801  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6778:6785  _update */\n      tag_198\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6778:6802  _update(from, to, value) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6509:6809  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8637:8845  function _mint(address account, uint256 value) internal {... */\n    tag_128:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8726:8727  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8707:8728  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8707:8714  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8707:8728  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8703:8794  if (account == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8780:8781  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8751:8783  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8703:8794  if (account == address(0)) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8838  _update(address(0), account, value) */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8819:8820  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8823:8830  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8832:8837  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8810  _update */\n      tag_198\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8838  _update(address(0), account, value) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8637:8845  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9129:9159  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9183  bytes32 slot */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      tag_204\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9211  _initializableStorageSlot */\n      tag_205\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9213  bytes32 slot = _initializableStorageSlot() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9256:9260  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9246:9260  $.slot := slot */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9232:9270  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"hopium/common/interface/imDirectory.sol\":589:1050  function _setDirectory(address _directory) internal {... */\n    tag_140:\n        /* \"hopium/common/interface/imDirectory.sol\":681:682  0 */\n      0x00\n        /* \"hopium/common/interface/imDirectory.sol\":659:683  _directory != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/common/interface/imDirectory.sol\":659:669  _directory */\n      dup2\n        /* \"hopium/common/interface/imDirectory.sol\":659:683  _directory != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"hopium/common/interface/imDirectory.sol\":651:720  require(_directory != address(0), \"Directory cannot be zero address\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"hopium/common/interface/imDirectory.sol\":763:764  0 */\n      0x00\n        /* \"hopium/common/interface/imDirectory.sol\":738:748  _directory */\n      dup2\n        /* \"hopium/common/interface/imDirectory.sol\":738:760  _directory.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"hopium/common/interface/imDirectory.sol\":738:764  _directory.code.length > 0 */\n      gt\n        /* \"hopium/common/interface/imDirectory.sol\":730:797  require(_directory.code.length > 0, \"Directory must be a contract\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"hopium/common/interface/imDirectory.sol\":861:871  _directory */\n      dup1\n        /* \"hopium/common/interface/imDirectory.sol\":850:878  IDirectory(_directory).owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"hopium/common/interface/imDirectory.sol\":850:880  IDirectory(_directory).owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_213\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_214\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_214:\n      0x01\n    tag_213:\n        /* \"hopium/common/interface/imDirectory.sol\":846:1044  try IDirectory(_directory).owner() returns (address) {... */\n      tag_215\n      jumpi\n        /* \"hopium/common/interface/imDirectory.sol\":979:1033  revert(\"Directory address does not implement owner()\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hopium/common/interface/imDirectory.sol\":846:1044  try IDirectory(_directory).owner() returns (address) {... */\n    tag_215:\n        /* \"hopium/common/interface/imDirectory.sol\":936:946  _directory */\n      dup2\n        /* \"hopium/common/interface/imDirectory.sol\":913:922  Directory */\n      0x00\n      0x00\n        /* \"hopium/common/interface/imDirectory.sol\":913:947  Directory = IDirectory(_directory) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"hopium/common/interface/imDirectory.sol\":881:958  returns (address) {... */\n      pop\n        /* \"hopium/common/interface/imDirectory.sol\":589:1050  function _setDirectory(address _directory) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2263:2410  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_142:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2403  __ERC20_init_unchained(name_, symbol_) */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2388:2393  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2395:2402  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2387  __ERC20_init_unchained */\n      tag_227\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2403  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2263:2410  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9163:9369  function _burn(address account, uint256 value) internal {... */\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9252:9253  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9233:9254  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9233:9240  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9233:9254  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9229:9318  if (account == address(0)) {... */\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9304:9305  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9277:9307  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9229:9318  if (account == address(0)) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9327:9362  _update(account, address(0), value) */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9335:9342  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9352:9353  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9356:9361  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9327:9334  _update */\n      tag_198\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9327:9362  _update(account, address(0), value) */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9163:9369  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10880:11367  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_184:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10988:11010  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11013:11031  _getERC20Storage() */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11013:11029  _getERC20Storage */\n      tag_94\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11013:11031  _getERC20Storage() */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10988:11031  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11062:11063  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11045:11064  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11045:11050  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11045:11064  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11041:11130  if (owner == address(0)) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11116:11117  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11087:11119  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11041:11130  if (owner == address(0)) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11162:11163  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11143:11164  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11143:11150  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11143:11164  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11139:11229  if (spender == address(0)) {... */\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11215:11216  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11187:11218  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11139:11229  if (spender == address(0)) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11270:11275  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11238:11239  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11238:11251  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11238:11258  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11252:11257  owner */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11238:11258  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11238:11267  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11259:11266  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11238:11267  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11238:11275  $._allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11289:11298  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11285:11361  if (emitEvent) {... */\n      iszero\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11335:11342  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11319:11350  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11328:11333  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11319:11350  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11344:11349  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11319:11350  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_239\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11285:11361  if (emitEvent) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10978:11367  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10880:11367  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"hopium/etf/main/etf-token.sol\":2092:2472  function _update(address from, address to, uint256 value) internal override {... */\n    tag_198:\n        /* \"hopium/etf/main/etf-token.sol\":2178:2208  super._update(from, to, value) */\n      tag_241\n        /* \"hopium/etf/main/etf-token.sol\":2192:2196  from */\n      dup4\n        /* \"hopium/etf/main/etf-token.sol\":2198:2200  to */\n      dup4\n        /* \"hopium/etf/main/etf-token.sol\":2202:2207  value */\n      dup4\n        /* \"hopium/etf/main/etf-token.sol\":2178:2191  super._update */\n      tag_242\n        /* \"hopium/etf/main/etf-token.sol\":2178:2208  super._update(from, to, value) */\n      jump\t// in\n    tag_241:\n        /* \"hopium/etf/main/etf-token.sol\":2254:2284  IEtfTokenEvents etfTokenEvents */\n      0x00\n        /* \"hopium/etf/main/etf-token.sol\":2287:2306  getEtfTokenEvents() */\n      tag_243\n        /* \"hopium/etf/main/etf-token.sol\":2287:2304  getEtfTokenEvents */\n      tag_244\n        /* \"hopium/etf/main/etf-token.sol\":2287:2306  getEtfTokenEvents() */\n      jump\t// in\n    tag_243:\n        /* \"hopium/etf/main/etf-token.sol\":2254:2306  IEtfTokenEvents etfTokenEvents = getEtfTokenEvents() */\n      swap1\n      pop\n        /* \"hopium/etf/main/etf-token.sol\":2359:2360  0 */\n      0x00\n        /* \"hopium/etf/main/etf-token.sol\":2324:2361  address(etfTokenEvents) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/etf/main/etf-token.sol\":2332:2346  etfTokenEvents */\n      dup2\n        /* \"hopium/etf/main/etf-token.sol\":2324:2361  address(etfTokenEvents) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"hopium/etf/main/etf-token.sol\":2316:2399  require(address(etfTokenEvents) != address(0), \"EtfToken: events contract not set\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_245:\n        /* \"hopium/etf/main/etf-token.sol\":2409:2423  etfTokenEvents */\n      dup1\n        /* \"hopium/etf/main/etf-token.sol\":2409:2441  etfTokenEvents.emitTransferEvent */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc082f03f\n        /* \"hopium/etf/main/etf-token.sol\":2442:2447  etfId */\n      sload(0x01)\n        /* \"hopium/etf/main/etf-token.sol\":2449:2453  from */\n      dup7\n        /* \"hopium/etf/main/etf-token.sol\":2455:2457  to */\n      dup7\n        /* \"hopium/etf/main/etf-token.sol\":2459:2464  value */\n      dup7\n        /* \"hopium/etf/main/etf-token.sol\":2409:2465  etfTokenEvents.emitTransferEvent(etfId, from, to, value) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_250\n      jumpi\n      revert(0x00, 0x00)\n    tag_250:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_252\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_252:\n      pop\n      pop\n      pop\n      pop\n        /* \"hopium/etf/main/etf-token.sol\":2168:2472  {... */\n      pop\n        /* \"hopium/etf/main/etf-token.sol\":2092:2472  function _update(address from, address to, uint256 value) internal override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8887:8894  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8913:8934  INITIALIZABLE_STORAGE */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8906:8934  return INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n    tag_224:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      tag_255\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7164  _isInitializing */\n      tag_256\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n      tag_257\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7189:7206  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2416:2632  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_259\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2528:2550  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2553:2571  _getERC20Storage() */\n      tag_261\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2553:2569  _getERC20Storage */\n      tag_94\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2553:2571  _getERC20Storage() */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2528:2571  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2591:2596  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2582  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2588  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2596  $._name = name_ */\n      swap1\n      dup2\n      tag_262\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2618:2625  symbol_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2607  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2615  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2625  $._symbol = symbol_ */\n      swap1\n      dup2\n      tag_264\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_264:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2518:2632  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2416:2632  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7124:8294  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7209:7231  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7234:7252  _getERC20Storage() */\n      tag_266\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7234:7250  _getERC20Storage */\n      tag_94\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7234:7252  _getERC20Storage() */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7209:7252  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7282:7283  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7266:7284  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7266:7270  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7266:7284  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7262:7808  if (from == address(0)) {... */\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7420:7425  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7402:7403  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7402:7416  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7402:7425  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_268\n      swap2\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7262:7808  if (from == address(0)) {... */\n      jump(tag_270)\n    tag_267:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7456:7475  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7478:7479  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7478:7489  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7478:7495  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7490:7494  from */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7478:7495  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7456:7495  uint256 fromBalance = $._balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7527:7532  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7513:7524  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7513:7532  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7509:7624  if (fromBalance < value) {... */\n      iszero\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7584:7588  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7590:7601  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7603:7608  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7559:7609  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7509:7624  if (fromBalance < value) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7778:7783  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7764:7775  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7764:7783  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7744:7745  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7744:7755  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7744:7761  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7756:7760  from */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7744:7761  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7744:7783  $._balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7442:7808  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7262:7808  if (from == address(0)) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7836:7837  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7822:7838  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7822:7824  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7822:7838  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7818:8247  if (to == address(0)) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8003:8008  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7985:7986  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7985:7999  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7985:8008  $._totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7818:8247  if (to == address(0)) {... */\n      jump(tag_274)\n    tag_273:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8217:8222  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8198:8199  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8198:8209  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8198:8213  $._balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8210:8212  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8198:8213  $._balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8198:8222  $._balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7818:8247  if (to == address(0)) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8277:8279  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8262:8287  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8271:8275  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8262:8287  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8281:8286  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8262:8287  Transfer(from, to, value) */\n      mload(0x40)\n      tag_275\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7199:8294  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7124:8294  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"hopium/etf/interface/imEtfTokenEvents.sol\":316:472  function getEtfTokenEvents() internal view virtual returns (IEtfTokenEvents) {... */\n    tag_244:\n        /* \"hopium/etf/interface/imEtfTokenEvents.sol\":376:391  IEtfTokenEvents */\n      0x00\n        /* \"hopium/etf/interface/imEtfTokenEvents.sol\":426:464  fetchFromDirectory(\"etf-token-events\") */\n      tag_277\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      0x6574662d746f6b656e2d6576656e747300000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"hopium/etf/interface/imEtfTokenEvents.sol\":426:444  fetchFromDirectory */\n      tag_45\n        /* \"hopium/etf/interface/imEtfTokenEvents.sol\":426:464  fetchFromDirectory(\"etf-token-events\") */\n      jump\t// in\n    tag_277:\n        /* \"hopium/etf/interface/imEtfTokenEvents.sol\":403:465  return IEtfTokenEvents(fetchFromDirectory(\"etf-token-events\")) */\n      swap1\n      pop\n        /* \"hopium/etf/interface/imEtfTokenEvents.sol\":316:472  function getEtfTokenEvents() internal view virtual returns (IEtfTokenEvents) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8535:8539  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      tag_279\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8582  _getInitializableStorage */\n      tag_131\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8598  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8551:8598  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_280:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_281:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_282:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_283:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_284:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_354\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_280\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":711:782   */\n      tag_355\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_281\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_356\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_282\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":881:910   */\n      tag_357\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_283\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_26:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_359\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_284\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1317   */\n    tag_285:\n        /* \"#utility.yul\":1275:1281   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1302:1311   */\n      mload\n        /* \"#utility.yul\":1292:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1317   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_286:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_287:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_288:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_289:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_365\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_288\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_290:\n        /* \"#utility.yul\":1876:1900   */\n      tag_367\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_289\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_368\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_368:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_291:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_370\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_290\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_292:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_293:\n        /* \"#utility.yul\":2232:2256   */\n      tag_373\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_292\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_374\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_374:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_294:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_376\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_293\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_29:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_379\n      tag_286\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":2525:2644   */\n    tag_378:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_380\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_291\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_381\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_294\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_295:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_296:\n        /* \"#utility.yul\":3089:3110   */\n      tag_384\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_295\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_32:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_386\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_296\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_297:\n        /* \"#utility.yul\":3426:3450   */\n      tag_388\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_292\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_36:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_390\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_297\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_39:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_393\n      tag_286\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":3801:3920   */\n    tag_392:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_394\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_291\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_395\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_291\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_396\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_294\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4433   */\n    tag_298:\n        /* \"#utility.yul\":4425:4426   */\n      0x00\n        /* \"#utility.yul\":4422:4423   */\n      0x00\n        /* \"#utility.yul\":4415:4427   */\n      revert\n        /* \"#utility.yul\":4439:4556   */\n    tag_299:\n        /* \"#utility.yul\":4548:4549   */\n      0x00\n        /* \"#utility.yul\":4545:4546   */\n      0x00\n        /* \"#utility.yul\":4538:4550   */\n      revert\n        /* \"#utility.yul\":4562:4742   */\n    tag_300:\n        /* \"#utility.yul\":4610:4687   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4607:4608   */\n      0x00\n        /* \"#utility.yul\":4600:4688   */\n      mstore\n        /* \"#utility.yul\":4707:4711   */\n      0x41\n        /* \"#utility.yul\":4704:4705   */\n      0x04\n        /* \"#utility.yul\":4697:4712   */\n      mstore\n        /* \"#utility.yul\":4731:4735   */\n      0x24\n        /* \"#utility.yul\":4728:4729   */\n      0x00\n        /* \"#utility.yul\":4721:4736   */\n      revert\n        /* \"#utility.yul\":4748:5029   */\n    tag_301:\n        /* \"#utility.yul\":4831:4858   */\n      tag_401\n        /* \"#utility.yul\":4853:4857   */\n      dup3\n        /* \"#utility.yul\":4831:4858   */\n      tag_283\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":4823:4829   */\n      dup2\n        /* \"#utility.yul\":4819:4859   */\n      add\n        /* \"#utility.yul\":4961:4967   */\n      dup2\n        /* \"#utility.yul\":4949:4959   */\n      dup2\n        /* \"#utility.yul\":4946:4968   */\n      lt\n        /* \"#utility.yul\":4925:4943   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4913:4923   */\n      dup3\n        /* \"#utility.yul\":4910:4944   */\n      gt\n        /* \"#utility.yul\":4907:4969   */\n      or\n        /* \"#utility.yul\":4904:4992   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":4972:4990   */\n      tag_403\n      tag_300\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":4904:4992   */\n    tag_402:\n        /* \"#utility.yul\":5012:5022   */\n      dup1\n        /* \"#utility.yul\":5008:5010   */\n      0x40\n        /* \"#utility.yul\":5001:5023   */\n      mstore\n        /* \"#utility.yul\":4791:5029   */\n      pop\n        /* \"#utility.yul\":4748:5029   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5035:5164   */\n    tag_302:\n        /* \"#utility.yul\":5069:5075   */\n      0x00\n        /* \"#utility.yul\":5096:5116   */\n      tag_405\n      tag_285\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":5086:5116   */\n      swap1\n      pop\n        /* \"#utility.yul\":5125:5158   */\n      tag_406\n        /* \"#utility.yul\":5153:5157   */\n      dup3\n        /* \"#utility.yul\":5145:5151   */\n      dup3\n        /* \"#utility.yul\":5125:5158   */\n      tag_301\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":5035:5164   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5170:5478   */\n    tag_303:\n        /* \"#utility.yul\":5232:5236   */\n      0x00\n        /* \"#utility.yul\":5322:5340   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5314:5320   */\n      dup3\n        /* \"#utility.yul\":5311:5341   */\n      gt\n        /* \"#utility.yul\":5308:5364   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":5344:5362   */\n      tag_409\n      tag_300\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":5308:5364   */\n    tag_408:\n        /* \"#utility.yul\":5382:5411   */\n      tag_410\n        /* \"#utility.yul\":5404:5410   */\n      dup3\n        /* \"#utility.yul\":5382:5411   */\n      tag_283\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":5374:5411   */\n      swap1\n      pop\n        /* \"#utility.yul\":5466:5470   */\n      0x20\n        /* \"#utility.yul\":5460:5464   */\n      dup2\n        /* \"#utility.yul\":5456:5471   */\n      add\n        /* \"#utility.yul\":5448:5471   */\n      swap1\n      pop\n        /* \"#utility.yul\":5170:5478   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5484:5632   */\n    tag_304:\n        /* \"#utility.yul\":5582:5588   */\n      dup3\n        /* \"#utility.yul\":5577:5580   */\n      dup2\n        /* \"#utility.yul\":5572:5575   */\n      dup4\n        /* \"#utility.yul\":5559:5589   */\n      calldatacopy\n        /* \"#utility.yul\":5623:5624   */\n      0x00\n        /* \"#utility.yul\":5614:5620   */\n      dup4\n        /* \"#utility.yul\":5609:5612   */\n      dup4\n        /* \"#utility.yul\":5605:5621   */\n      add\n        /* \"#utility.yul\":5598:5625   */\n      mstore\n        /* \"#utility.yul\":5484:5632   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5638:6063   */\n    tag_305:\n        /* \"#utility.yul\":5716:5721   */\n      0x00\n        /* \"#utility.yul\":5741:5807   */\n      tag_413\n        /* \"#utility.yul\":5757:5806   */\n      tag_414\n        /* \"#utility.yul\":5799:5805   */\n      dup5\n        /* \"#utility.yul\":5757:5806   */\n      tag_303\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":5741:5807   */\n      tag_302\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":5732:5807   */\n      swap1\n      pop\n        /* \"#utility.yul\":5830:5836   */\n      dup3\n        /* \"#utility.yul\":5823:5828   */\n      dup2\n        /* \"#utility.yul\":5816:5837   */\n      mstore\n        /* \"#utility.yul\":5868:5872   */\n      0x20\n        /* \"#utility.yul\":5861:5866   */\n      dup2\n        /* \"#utility.yul\":5857:5873   */\n      add\n        /* \"#utility.yul\":5906:5909   */\n      dup5\n        /* \"#utility.yul\":5897:5903   */\n      dup5\n        /* \"#utility.yul\":5892:5895   */\n      dup5\n        /* \"#utility.yul\":5888:5904   */\n      add\n        /* \"#utility.yul\":5885:5910   */\n      gt\n        /* \"#utility.yul\":5882:5994   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":5913:5992   */\n      tag_416\n      tag_299\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":5882:5994   */\n    tag_415:\n        /* \"#utility.yul\":6003:6057   */\n      tag_417\n        /* \"#utility.yul\":6050:6056   */\n      dup5\n        /* \"#utility.yul\":6045:6048   */\n      dup3\n        /* \"#utility.yul\":6040:6043   */\n      dup6\n        /* \"#utility.yul\":6003:6057   */\n      tag_304\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":5722:6063   */\n      pop\n        /* \"#utility.yul\":5638:6063   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6083:6423   */\n    tag_306:\n        /* \"#utility.yul\":6139:6144   */\n      0x00\n        /* \"#utility.yul\":6188:6191   */\n      dup3\n        /* \"#utility.yul\":6181:6185   */\n      0x1f\n        /* \"#utility.yul\":6173:6179   */\n      dup4\n        /* \"#utility.yul\":6169:6186   */\n      add\n        /* \"#utility.yul\":6165:6192   */\n      slt\n        /* \"#utility.yul\":6155:6277   */\n      tag_419\n      jumpi\n        /* \"#utility.yul\":6196:6275   */\n      tag_420\n      tag_298\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":6155:6277   */\n    tag_419:\n        /* \"#utility.yul\":6313:6319   */\n      dup2\n        /* \"#utility.yul\":6300:6320   */\n      calldataload\n        /* \"#utility.yul\":6338:6417   */\n      tag_421\n        /* \"#utility.yul\":6413:6416   */\n      dup5\n        /* \"#utility.yul\":6405:6411   */\n      dup3\n        /* \"#utility.yul\":6398:6402   */\n      0x20\n        /* \"#utility.yul\":6390:6396   */\n      dup7\n        /* \"#utility.yul\":6386:6403   */\n      add\n        /* \"#utility.yul\":6338:6417   */\n      tag_305\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":6329:6417   */\n      swap2\n      pop\n        /* \"#utility.yul\":6145:6423   */\n      pop\n        /* \"#utility.yul\":6083:6423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6429:6938   */\n    tag_44:\n        /* \"#utility.yul\":6498:6504   */\n      0x00\n        /* \"#utility.yul\":6547:6549   */\n      0x20\n        /* \"#utility.yul\":6535:6544   */\n      dup3\n        /* \"#utility.yul\":6526:6533   */\n      dup5\n        /* \"#utility.yul\":6522:6545   */\n      sub\n        /* \"#utility.yul\":6518:6550   */\n      slt\n        /* \"#utility.yul\":6515:6634   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":6553:6632   */\n      tag_424\n      tag_286\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":6515:6634   */\n    tag_423:\n        /* \"#utility.yul\":6701:6702   */\n      0x00\n        /* \"#utility.yul\":6690:6699   */\n      dup3\n        /* \"#utility.yul\":6686:6703   */\n      add\n        /* \"#utility.yul\":6673:6704   */\n      calldataload\n        /* \"#utility.yul\":6731:6749   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6723:6729   */\n      dup2\n        /* \"#utility.yul\":6720:6750   */\n      gt\n        /* \"#utility.yul\":6717:6834   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":6753:6832   */\n      tag_426\n      tag_287\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":6717:6834   */\n    tag_425:\n        /* \"#utility.yul\":6858:6921   */\n      tag_427\n        /* \"#utility.yul\":6913:6920   */\n      dup5\n        /* \"#utility.yul\":6904:6910   */\n      dup3\n        /* \"#utility.yul\":6893:6902   */\n      dup6\n        /* \"#utility.yul\":6889:6911   */\n      add\n        /* \"#utility.yul\":6858:6921   */\n      tag_306\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":6848:6921   */\n      swap2\n      pop\n        /* \"#utility.yul\":6644:6931   */\n      pop\n        /* \"#utility.yul\":6429:6938   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6944:7062   */\n    tag_307:\n        /* \"#utility.yul\":7031:7055   */\n      tag_429\n        /* \"#utility.yul\":7049:7054   */\n      dup2\n        /* \"#utility.yul\":7031:7055   */\n      tag_289\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":7026:7029   */\n      dup3\n        /* \"#utility.yul\":7019:7056   */\n      mstore\n        /* \"#utility.yul\":6944:7062   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7068:7290   */\n    tag_47:\n        /* \"#utility.yul\":7161:7165   */\n      0x00\n        /* \"#utility.yul\":7199:7201   */\n      0x20\n        /* \"#utility.yul\":7188:7197   */\n      dup3\n        /* \"#utility.yul\":7184:7202   */\n      add\n        /* \"#utility.yul\":7176:7202   */\n      swap1\n      pop\n        /* \"#utility.yul\":7212:7283   */\n      tag_431\n        /* \"#utility.yul\":7280:7281   */\n      0x00\n        /* \"#utility.yul\":7269:7278   */\n      dup4\n        /* \"#utility.yul\":7265:7282   */\n      add\n        /* \"#utility.yul\":7256:7262   */\n      dup5\n        /* \"#utility.yul\":7212:7283   */\n      tag_307\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":7068:7290   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7296:7382   */\n    tag_308:\n        /* \"#utility.yul\":7331:7338   */\n      0x00\n        /* \"#utility.yul\":7371:7375   */\n      0xff\n        /* \"#utility.yul\":7364:7369   */\n      dup3\n        /* \"#utility.yul\":7360:7376   */\n      and\n        /* \"#utility.yul\":7349:7376   */\n      swap1\n      pop\n        /* \"#utility.yul\":7296:7382   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7388:7500   */\n    tag_309:\n        /* \"#utility.yul\":7471:7493   */\n      tag_434\n        /* \"#utility.yul\":7487:7492   */\n      dup2\n        /* \"#utility.yul\":7471:7493   */\n      tag_308\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":7466:7469   */\n      dup3\n        /* \"#utility.yul\":7459:7494   */\n      mstore\n        /* \"#utility.yul\":7388:7500   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7506:7720   */\n    tag_51:\n        /* \"#utility.yul\":7595:7599   */\n      0x00\n        /* \"#utility.yul\":7633:7635   */\n      0x20\n        /* \"#utility.yul\":7622:7631   */\n      dup3\n        /* \"#utility.yul\":7618:7636   */\n      add\n        /* \"#utility.yul\":7610:7636   */\n      swap1\n      pop\n        /* \"#utility.yul\":7646:7713   */\n      tag_436\n        /* \"#utility.yul\":7710:7711   */\n      0x00\n        /* \"#utility.yul\":7699:7708   */\n      dup4\n        /* \"#utility.yul\":7695:7712   */\n      add\n        /* \"#utility.yul\":7686:7692   */\n      dup5\n        /* \"#utility.yul\":7646:7713   */\n      tag_309\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":7506:7720   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7726:7786   */\n    tag_310:\n        /* \"#utility.yul\":7754:7757   */\n      0x00\n        /* \"#utility.yul\":7775:7780   */\n      dup2\n        /* \"#utility.yul\":7768:7780   */\n      swap1\n      pop\n        /* \"#utility.yul\":7726:7786   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7792:7934   */\n    tag_311:\n        /* \"#utility.yul\":7842:7851   */\n      0x00\n        /* \"#utility.yul\":7875:7928   */\n      tag_439\n        /* \"#utility.yul\":7893:7927   */\n      tag_440\n        /* \"#utility.yul\":7902:7926   */\n      tag_441\n        /* \"#utility.yul\":7920:7925   */\n      dup5\n        /* \"#utility.yul\":7902:7926   */\n      tag_288\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":7893:7927   */\n      tag_310\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":7875:7928   */\n      tag_288\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":7862:7928   */\n      swap1\n      pop\n        /* \"#utility.yul\":7792:7934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7940:8066   */\n    tag_312:\n        /* \"#utility.yul\":7990:7999   */\n      0x00\n        /* \"#utility.yul\":8023:8060   */\n      tag_443\n        /* \"#utility.yul\":8054:8059   */\n      dup3\n        /* \"#utility.yul\":8023:8060   */\n      tag_311\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":8010:8060   */\n      swap1\n      pop\n        /* \"#utility.yul\":7940:8066   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8072:8217   */\n    tag_313:\n        /* \"#utility.yul\":8141:8150   */\n      0x00\n        /* \"#utility.yul\":8174:8211   */\n      tag_445\n        /* \"#utility.yul\":8205:8210   */\n      dup3\n        /* \"#utility.yul\":8174:8211   */\n      tag_312\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":8161:8211   */\n      swap1\n      pop\n        /* \"#utility.yul\":8072:8217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8223:8392   */\n    tag_314:\n        /* \"#utility.yul\":8329:8385   */\n      tag_447\n        /* \"#utility.yul\":8379:8384   */\n      dup2\n        /* \"#utility.yul\":8329:8385   */\n      tag_313\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":8324:8327   */\n      dup3\n        /* \"#utility.yul\":8317:8386   */\n      mstore\n        /* \"#utility.yul\":8223:8392   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8398:8658   */\n    tag_58:\n        /* \"#utility.yul\":8510:8514   */\n      0x00\n        /* \"#utility.yul\":8548:8550   */\n      0x20\n        /* \"#utility.yul\":8537:8546   */\n      dup3\n        /* \"#utility.yul\":8533:8551   */\n      add\n        /* \"#utility.yul\":8525:8551   */\n      swap1\n      pop\n        /* \"#utility.yul\":8561:8651   */\n      tag_449\n        /* \"#utility.yul\":8648:8649   */\n      0x00\n        /* \"#utility.yul\":8637:8646   */\n      dup4\n        /* \"#utility.yul\":8633:8650   */\n      add\n        /* \"#utility.yul\":8624:8630   */\n      dup5\n        /* \"#utility.yul\":8561:8651   */\n      tag_314\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":8398:8658   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8664:9789   */\n    tag_61:\n        /* \"#utility.yul\":8770:8776   */\n      0x00\n        /* \"#utility.yul\":8778:8784   */\n      0x00\n        /* \"#utility.yul\":8786:8792   */\n      0x00\n        /* \"#utility.yul\":8794:8800   */\n      0x00\n        /* \"#utility.yul\":8843:8846   */\n      0x80\n        /* \"#utility.yul\":8831:8840   */\n      dup6\n        /* \"#utility.yul\":8822:8829   */\n      dup8\n        /* \"#utility.yul\":8818:8841   */\n      sub\n        /* \"#utility.yul\":8814:8847   */\n      slt\n        /* \"#utility.yul\":8811:8931   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":8850:8929   */\n      tag_452\n      tag_286\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":8811:8931   */\n    tag_451:\n        /* \"#utility.yul\":8970:8971   */\n      0x00\n        /* \"#utility.yul\":8995:9048   */\n      tag_453\n        /* \"#utility.yul\":9040:9047   */\n      dup8\n        /* \"#utility.yul\":9031:9037   */\n      dup3\n        /* \"#utility.yul\":9020:9029   */\n      dup9\n        /* \"#utility.yul\":9016:9038   */\n      add\n        /* \"#utility.yul\":8995:9048   */\n      tag_294\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":8985:9048   */\n      swap5\n      pop\n        /* \"#utility.yul\":8941:9058   */\n      pop\n        /* \"#utility.yul\":9125:9127   */\n      0x20\n        /* \"#utility.yul\":9114:9123   */\n      dup6\n        /* \"#utility.yul\":9110:9128   */\n      add\n        /* \"#utility.yul\":9097:9129   */\n      calldataload\n        /* \"#utility.yul\":9156:9174   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9148:9154   */\n      dup2\n        /* \"#utility.yul\":9145:9175   */\n      gt\n        /* \"#utility.yul\":9142:9259   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":9178:9257   */\n      tag_455\n      tag_287\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":9142:9259   */\n    tag_454:\n        /* \"#utility.yul\":9283:9346   */\n      tag_456\n        /* \"#utility.yul\":9338:9345   */\n      dup8\n        /* \"#utility.yul\":9329:9335   */\n      dup3\n        /* \"#utility.yul\":9318:9327   */\n      dup9\n        /* \"#utility.yul\":9314:9336   */\n      add\n        /* \"#utility.yul\":9283:9346   */\n      tag_306\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":9273:9346   */\n      swap4\n      pop\n        /* \"#utility.yul\":9068:9356   */\n      pop\n        /* \"#utility.yul\":9423:9425   */\n      0x40\n        /* \"#utility.yul\":9412:9421   */\n      dup6\n        /* \"#utility.yul\":9408:9426   */\n      add\n        /* \"#utility.yul\":9395:9427   */\n      calldataload\n        /* \"#utility.yul\":9454:9472   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9446:9452   */\n      dup2\n        /* \"#utility.yul\":9443:9473   */\n      gt\n        /* \"#utility.yul\":9440:9557   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":9476:9555   */\n      tag_458\n      tag_287\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":9440:9557   */\n    tag_457:\n        /* \"#utility.yul\":9581:9644   */\n      tag_459\n        /* \"#utility.yul\":9636:9643   */\n      dup8\n        /* \"#utility.yul\":9627:9633   */\n      dup3\n        /* \"#utility.yul\":9616:9625   */\n      dup9\n        /* \"#utility.yul\":9612:9634   */\n      add\n        /* \"#utility.yul\":9581:9644   */\n      tag_306\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":9571:9644   */\n      swap3\n      pop\n        /* \"#utility.yul\":9366:9654   */\n      pop\n        /* \"#utility.yul\":9693:9695   */\n      0x60\n        /* \"#utility.yul\":9719:9772   */\n      tag_460\n        /* \"#utility.yul\":9764:9771   */\n      dup8\n        /* \"#utility.yul\":9755:9761   */\n      dup3\n        /* \"#utility.yul\":9744:9753   */\n      dup9\n        /* \"#utility.yul\":9740:9762   */\n      add\n        /* \"#utility.yul\":9719:9772   */\n      tag_291\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":9709:9772   */\n      swap2\n      pop\n        /* \"#utility.yul\":9664:9782   */\n      pop\n        /* \"#utility.yul\":8664:9789   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9795:10124   */\n    tag_65:\n        /* \"#utility.yul\":9854:9860   */\n      0x00\n        /* \"#utility.yul\":9903:9905   */\n      0x20\n        /* \"#utility.yul\":9891:9900   */\n      dup3\n        /* \"#utility.yul\":9882:9889   */\n      dup5\n        /* \"#utility.yul\":9878:9901   */\n      sub\n        /* \"#utility.yul\":9874:9906   */\n      slt\n        /* \"#utility.yul\":9871:9990   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":9909:9988   */\n      tag_463\n      tag_286\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":9871:9990   */\n    tag_462:\n        /* \"#utility.yul\":10029:10030   */\n      0x00\n        /* \"#utility.yul\":10054:10107   */\n      tag_464\n        /* \"#utility.yul\":10099:10106   */\n      dup5\n        /* \"#utility.yul\":10090:10096   */\n      dup3\n        /* \"#utility.yul\":10079:10088   */\n      dup6\n        /* \"#utility.yul\":10075:10097   */\n      add\n        /* \"#utility.yul\":10054:10107   */\n      tag_291\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":10044:10107   */\n      swap2\n      pop\n        /* \"#utility.yul\":10000:10117   */\n      pop\n        /* \"#utility.yul\":9795:10124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10130:10604   */\n    tag_89:\n        /* \"#utility.yul\":10198:10204   */\n      0x00\n        /* \"#utility.yul\":10206:10212   */\n      0x00\n        /* \"#utility.yul\":10255:10257   */\n      0x40\n        /* \"#utility.yul\":10243:10252   */\n      dup4\n        /* \"#utility.yul\":10234:10241   */\n      dup6\n        /* \"#utility.yul\":10230:10253   */\n      sub\n        /* \"#utility.yul\":10226:10258   */\n      slt\n        /* \"#utility.yul\":10223:10342   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":10261:10340   */\n      tag_467\n      tag_286\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":10223:10342   */\n    tag_466:\n        /* \"#utility.yul\":10381:10382   */\n      0x00\n        /* \"#utility.yul\":10406:10459   */\n      tag_468\n        /* \"#utility.yul\":10451:10458   */\n      dup6\n        /* \"#utility.yul\":10442:10448   */\n      dup3\n        /* \"#utility.yul\":10431:10440   */\n      dup7\n        /* \"#utility.yul\":10427:10449   */\n      add\n        /* \"#utility.yul\":10406:10459   */\n      tag_291\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":10396:10459   */\n      swap3\n      pop\n        /* \"#utility.yul\":10352:10469   */\n      pop\n        /* \"#utility.yul\":10508:10510   */\n      0x20\n        /* \"#utility.yul\":10534:10587   */\n      tag_469\n        /* \"#utility.yul\":10579:10586   */\n      dup6\n        /* \"#utility.yul\":10570:10576   */\n      dup3\n        /* \"#utility.yul\":10559:10568   */\n      dup7\n        /* \"#utility.yul\":10555:10577   */\n      add\n        /* \"#utility.yul\":10534:10587   */\n      tag_291\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":10524:10587   */\n      swap2\n      pop\n        /* \"#utility.yul\":10479:10597   */\n      pop\n        /* \"#utility.yul\":10130:10604   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10610:10790   */\n    tag_315:\n        /* \"#utility.yul\":10658:10735   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10655:10656   */\n      0x00\n        /* \"#utility.yul\":10648:10736   */\n      mstore\n        /* \"#utility.yul\":10755:10759   */\n      0x22\n        /* \"#utility.yul\":10752:10753   */\n      0x04\n        /* \"#utility.yul\":10745:10760   */\n      mstore\n        /* \"#utility.yul\":10779:10783   */\n      0x24\n        /* \"#utility.yul\":10776:10777   */\n      0x00\n        /* \"#utility.yul\":10769:10784   */\n      revert\n        /* \"#utility.yul\":10796:11116   */\n    tag_96:\n        /* \"#utility.yul\":10840:10846   */\n      0x00\n        /* \"#utility.yul\":10877:10878   */\n      0x02\n        /* \"#utility.yul\":10871:10875   */\n      dup3\n        /* \"#utility.yul\":10867:10879   */\n      div\n        /* \"#utility.yul\":10857:10879   */\n      swap1\n      pop\n        /* \"#utility.yul\":10924:10925   */\n      0x01\n        /* \"#utility.yul\":10918:10922   */\n      dup3\n        /* \"#utility.yul\":10914:10926   */\n      and\n        /* \"#utility.yul\":10945:10963   */\n      dup1\n        /* \"#utility.yul\":10935:11016   */\n      tag_472\n      jumpi\n        /* \"#utility.yul\":11001:11005   */\n      0x7f\n        /* \"#utility.yul\":10993:10999   */\n      dup3\n        /* \"#utility.yul\":10989:11006   */\n      and\n        /* \"#utility.yul\":10979:11006   */\n      swap2\n      pop\n        /* \"#utility.yul\":10935:11016   */\n    tag_472:\n        /* \"#utility.yul\":11063:11065   */\n      0x20\n        /* \"#utility.yul\":11055:11061   */\n      dup3\n        /* \"#utility.yul\":11052:11066   */\n      lt\n        /* \"#utility.yul\":11032:11050   */\n      dup2\n        /* \"#utility.yul\":11029:11067   */\n      sub\n        /* \"#utility.yul\":11026:11110   */\n      tag_473\n      jumpi\n        /* \"#utility.yul\":11082:11100   */\n      tag_474\n      tag_315\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":11026:11110   */\n    tag_473:\n        /* \"#utility.yul\":10847:11116   */\n      pop\n        /* \"#utility.yul\":10796:11116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11122:11265   */\n    tag_316:\n        /* \"#utility.yul\":11179:11184   */\n      0x00\n        /* \"#utility.yul\":11210:11216   */\n      dup2\n        /* \"#utility.yul\":11204:11217   */\n      mload\n        /* \"#utility.yul\":11195:11217   */\n      swap1\n      pop\n        /* \"#utility.yul\":11226:11259   */\n      tag_476\n        /* \"#utility.yul\":11253:11258   */\n      dup2\n        /* \"#utility.yul\":11226:11259   */\n      tag_290\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":11122:11265   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11271:11622   */\n    tag_119:\n        /* \"#utility.yul\":11341:11347   */\n      0x00\n        /* \"#utility.yul\":11390:11392   */\n      0x20\n        /* \"#utility.yul\":11378:11387   */\n      dup3\n        /* \"#utility.yul\":11369:11376   */\n      dup5\n        /* \"#utility.yul\":11365:11388   */\n      sub\n        /* \"#utility.yul\":11361:11393   */\n      slt\n        /* \"#utility.yul\":11358:11477   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":11396:11475   */\n      tag_479\n      tag_286\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":11358:11477   */\n    tag_478:\n        /* \"#utility.yul\":11516:11517   */\n      0x00\n        /* \"#utility.yul\":11541:11605   */\n      tag_480\n        /* \"#utility.yul\":11597:11604   */\n      dup5\n        /* \"#utility.yul\":11588:11594   */\n      dup3\n        /* \"#utility.yul\":11577:11586   */\n      dup6\n        /* \"#utility.yul\":11573:11595   */\n      add\n        /* \"#utility.yul\":11541:11605   */\n      tag_316\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":11531:11605   */\n      swap2\n      pop\n        /* \"#utility.yul\":11487:11615   */\n      pop\n        /* \"#utility.yul\":11271:11622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11628:11806   */\n    tag_317:\n        /* \"#utility.yul\":11768:11798   */\n      0x6d73672e73656e646572206973206e6f742065746620726f7574657200000000\n        /* \"#utility.yul\":11764:11765   */\n      0x00\n        /* \"#utility.yul\":11756:11762   */\n      dup3\n        /* \"#utility.yul\":11752:11766   */\n      add\n        /* \"#utility.yul\":11745:11799   */\n      mstore\n        /* \"#utility.yul\":11628:11806   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11812:12178   */\n    tag_318:\n        /* \"#utility.yul\":11954:11957   */\n      0x00\n        /* \"#utility.yul\":11975:12042   */\n      tag_483\n        /* \"#utility.yul\":12039:12041   */\n      0x1c\n        /* \"#utility.yul\":12034:12037   */\n      dup4\n        /* \"#utility.yul\":11975:12042   */\n      tag_281\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":11968:12042   */\n      swap2\n      pop\n        /* \"#utility.yul\":12051:12144   */\n      tag_484\n        /* \"#utility.yul\":12140:12143   */\n      dup3\n        /* \"#utility.yul\":12051:12144   */\n      tag_317\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":12169:12171   */\n      0x20\n        /* \"#utility.yul\":12164:12167   */\n      dup3\n        /* \"#utility.yul\":12160:12172   */\n      add\n        /* \"#utility.yul\":12153:12172   */\n      swap1\n      pop\n        /* \"#utility.yul\":11812:12178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12184:12603   */\n    tag_125:\n        /* \"#utility.yul\":12350:12354   */\n      0x00\n        /* \"#utility.yul\":12388:12390   */\n      0x20\n        /* \"#utility.yul\":12377:12386   */\n      dup3\n        /* \"#utility.yul\":12373:12391   */\n      add\n        /* \"#utility.yul\":12365:12391   */\n      swap1\n      pop\n        /* \"#utility.yul\":12437:12446   */\n      dup2\n        /* \"#utility.yul\":12431:12435   */\n      dup2\n        /* \"#utility.yul\":12427:12447   */\n      sub\n        /* \"#utility.yul\":12423:12424   */\n      0x00\n        /* \"#utility.yul\":12412:12421   */\n      dup4\n        /* \"#utility.yul\":12408:12425   */\n      add\n        /* \"#utility.yul\":12401:12448   */\n      mstore\n        /* \"#utility.yul\":12465:12596   */\n      tag_486\n        /* \"#utility.yul\":12591:12595   */\n      dup2\n        /* \"#utility.yul\":12465:12596   */\n      tag_318\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":12457:12596   */\n      swap1\n      pop\n        /* \"#utility.yul\":12184:12603   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12609:12694   */\n    tag_319:\n        /* \"#utility.yul\":12654:12661   */\n      0x00\n        /* \"#utility.yul\":12683:12688   */\n      dup2\n        /* \"#utility.yul\":12672:12688   */\n      swap1\n      pop\n        /* \"#utility.yul\":12609:12694   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12700:12801   */\n    tag_320:\n        /* \"#utility.yul\":12736:12743   */\n      0x00\n        /* \"#utility.yul\":12776:12794   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12769:12774   */\n      dup3\n        /* \"#utility.yul\":12765:12795   */\n      and\n        /* \"#utility.yul\":12754:12795   */\n      swap1\n      pop\n        /* \"#utility.yul\":12700:12801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12807:12963   */\n    tag_321:\n        /* \"#utility.yul\":12864:12873   */\n      0x00\n        /* \"#utility.yul\":12897:12957   */\n      tag_490\n        /* \"#utility.yul\":12914:12956   */\n      tag_491\n        /* \"#utility.yul\":12923:12955   */\n      tag_492\n        /* \"#utility.yul\":12949:12954   */\n      dup5\n        /* \"#utility.yul\":12923:12955   */\n      tag_319\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":12914:12956   */\n      tag_310\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":12897:12957   */\n      tag_320\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":12884:12957   */\n      swap1\n      pop\n        /* \"#utility.yul\":12807:12963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12969:13114   */\n    tag_322:\n        /* \"#utility.yul\":13063:13107   */\n      tag_494\n        /* \"#utility.yul\":13101:13106   */\n      dup2\n        /* \"#utility.yul\":13063:13107   */\n      tag_321\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":13058:13061   */\n      dup3\n        /* \"#utility.yul\":13051:13108   */\n      mstore\n        /* \"#utility.yul\":12969:13114   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13120:13356   */\n    tag_145:\n        /* \"#utility.yul\":13220:13224   */\n      0x00\n        /* \"#utility.yul\":13258:13260   */\n      0x20\n        /* \"#utility.yul\":13247:13256   */\n      dup3\n        /* \"#utility.yul\":13243:13261   */\n      add\n        /* \"#utility.yul\":13235:13261   */\n      swap1\n      pop\n        /* \"#utility.yul\":13271:13349   */\n      tag_496\n        /* \"#utility.yul\":13346:13347   */\n      0x00\n        /* \"#utility.yul\":13335:13344   */\n      dup4\n        /* \"#utility.yul\":13331:13348   */\n      add\n        /* \"#utility.yul\":13322:13328   */\n      dup5\n        /* \"#utility.yul\":13271:13349   */\n      tag_322\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":13120:13356   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13362:13535   */\n    tag_323:\n        /* \"#utility.yul\":13502:13527   */\n      0x43616c6c6572206973206e6f7420746865206f776e6572000000000000000000\n        /* \"#utility.yul\":13498:13499   */\n      0x00\n        /* \"#utility.yul\":13490:13496   */\n      dup3\n        /* \"#utility.yul\":13486:13500   */\n      add\n        /* \"#utility.yul\":13479:13528   */\n      mstore\n        /* \"#utility.yul\":13362:13535   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13541:13907   */\n    tag_324:\n        /* \"#utility.yul\":13683:13686   */\n      0x00\n        /* \"#utility.yul\":13704:13771   */\n      tag_499\n        /* \"#utility.yul\":13768:13770   */\n      0x17\n        /* \"#utility.yul\":13763:13766   */\n      dup4\n        /* \"#utility.yul\":13704:13771   */\n      tag_281\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":13697:13771   */\n      swap2\n      pop\n        /* \"#utility.yul\":13780:13873   */\n      tag_500\n        /* \"#utility.yul\":13869:13872   */\n      dup3\n        /* \"#utility.yul\":13780:13873   */\n      tag_323\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":13898:13900   */\n      0x20\n        /* \"#utility.yul\":13893:13896   */\n      dup3\n        /* \"#utility.yul\":13889:13901   */\n      add\n        /* \"#utility.yul\":13882:13901   */\n      swap1\n      pop\n        /* \"#utility.yul\":13541:13907   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13913:14332   */\n    tag_175:\n        /* \"#utility.yul\":14079:14083   */\n      0x00\n        /* \"#utility.yul\":14117:14119   */\n      0x20\n        /* \"#utility.yul\":14106:14115   */\n      dup3\n        /* \"#utility.yul\":14102:14120   */\n      add\n        /* \"#utility.yul\":14094:14120   */\n      swap1\n      pop\n        /* \"#utility.yul\":14166:14175   */\n      dup2\n        /* \"#utility.yul\":14160:14164   */\n      dup2\n        /* \"#utility.yul\":14156:14176   */\n      sub\n        /* \"#utility.yul\":14152:14153   */\n      0x00\n        /* \"#utility.yul\":14141:14150   */\n      dup4\n        /* \"#utility.yul\":14137:14154   */\n      add\n        /* \"#utility.yul\":14130:14177   */\n      mstore\n        /* \"#utility.yul\":14194:14325   */\n      tag_502\n        /* \"#utility.yul\":14320:14324   */\n      dup2\n        /* \"#utility.yul\":14194:14325   */\n      tag_324\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":14186:14325   */\n      swap1\n      pop\n        /* \"#utility.yul\":13913:14332   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14338:14780   */\n    tag_190:\n        /* \"#utility.yul\":14487:14491   */\n      0x00\n        /* \"#utility.yul\":14525:14527   */\n      0x60\n        /* \"#utility.yul\":14514:14523   */\n      dup3\n        /* \"#utility.yul\":14510:14528   */\n      add\n        /* \"#utility.yul\":14502:14528   */\n      swap1\n      pop\n        /* \"#utility.yul\":14538:14609   */\n      tag_504\n        /* \"#utility.yul\":14606:14607   */\n      0x00\n        /* \"#utility.yul\":14595:14604   */\n      dup4\n        /* \"#utility.yul\":14591:14608   */\n      add\n        /* \"#utility.yul\":14582:14588   */\n      dup7\n        /* \"#utility.yul\":14538:14609   */\n      tag_307\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":14619:14691   */\n      tag_505\n        /* \"#utility.yul\":14687:14689   */\n      0x20\n        /* \"#utility.yul\":14676:14685   */\n      dup4\n        /* \"#utility.yul\":14672:14690   */\n      add\n        /* \"#utility.yul\":14663:14669   */\n      dup6\n        /* \"#utility.yul\":14619:14691   */\n      tag_297\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":14701:14773   */\n      tag_506\n        /* \"#utility.yul\":14769:14771   */\n      0x40\n        /* \"#utility.yul\":14758:14767   */\n      dup4\n        /* \"#utility.yul\":14754:14772   */\n      add\n        /* \"#utility.yul\":14745:14751   */\n      dup5\n        /* \"#utility.yul\":14701:14773   */\n      tag_297\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":14338:14780   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14786:14968   */\n    tag_325:\n        /* \"#utility.yul\":14926:14960   */\n      0x4469726563746f72792063616e6e6f74206265207a65726f2061646472657373\n        /* \"#utility.yul\":14922:14923   */\n      0x00\n        /* \"#utility.yul\":14914:14920   */\n      dup3\n        /* \"#utility.yul\":14910:14924   */\n      add\n        /* \"#utility.yul\":14903:14961   */\n      mstore\n        /* \"#utility.yul\":14786:14968   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14974:15340   */\n    tag_326:\n        /* \"#utility.yul\":15116:15119   */\n      0x00\n        /* \"#utility.yul\":15137:15204   */\n      tag_509\n        /* \"#utility.yul\":15201:15203   */\n      0x20\n        /* \"#utility.yul\":15196:15199   */\n      dup4\n        /* \"#utility.yul\":15137:15204   */\n      tag_281\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":15130:15204   */\n      swap2\n      pop\n        /* \"#utility.yul\":15213:15306   */\n      tag_510\n        /* \"#utility.yul\":15302:15305   */\n      dup3\n        /* \"#utility.yul\":15213:15306   */\n      tag_325\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":15331:15333   */\n      0x20\n        /* \"#utility.yul\":15326:15329   */\n      dup3\n        /* \"#utility.yul\":15322:15334   */\n      add\n        /* \"#utility.yul\":15315:15334   */\n      swap1\n      pop\n        /* \"#utility.yul\":14974:15340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15346:15765   */\n    tag_209:\n        /* \"#utility.yul\":15512:15516   */\n      0x00\n        /* \"#utility.yul\":15550:15552   */\n      0x20\n        /* \"#utility.yul\":15539:15548   */\n      dup3\n        /* \"#utility.yul\":15535:15553   */\n      add\n        /* \"#utility.yul\":15527:15553   */\n      swap1\n      pop\n        /* \"#utility.yul\":15599:15608   */\n      dup2\n        /* \"#utility.yul\":15593:15597   */\n      dup2\n        /* \"#utility.yul\":15589:15609   */\n      sub\n        /* \"#utility.yul\":15585:15586   */\n      0x00\n        /* \"#utility.yul\":15574:15583   */\n      dup4\n        /* \"#utility.yul\":15570:15587   */\n      add\n        /* \"#utility.yul\":15563:15610   */\n      mstore\n        /* \"#utility.yul\":15627:15758   */\n      tag_512\n        /* \"#utility.yul\":15753:15757   */\n      dup2\n        /* \"#utility.yul\":15627:15758   */\n      tag_326\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":15619:15758   */\n      swap1\n      pop\n        /* \"#utility.yul\":15346:15765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15771:15949   */\n    tag_327:\n        /* \"#utility.yul\":15911:15941   */\n      0x4469726563746f7279206d757374206265206120636f6e747261637400000000\n        /* \"#utility.yul\":15907:15908   */\n      0x00\n        /* \"#utility.yul\":15899:15905   */\n      dup3\n        /* \"#utility.yul\":15895:15909   */\n      add\n        /* \"#utility.yul\":15888:15942   */\n      mstore\n        /* \"#utility.yul\":15771:15949   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15955:16321   */\n    tag_328:\n        /* \"#utility.yul\":16097:16100   */\n      0x00\n        /* \"#utility.yul\":16118:16185   */\n      tag_515\n        /* \"#utility.yul\":16182:16184   */\n      0x1c\n        /* \"#utility.yul\":16177:16180   */\n      dup4\n        /* \"#utility.yul\":16118:16185   */\n      tag_281\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":16111:16185   */\n      swap2\n      pop\n        /* \"#utility.yul\":16194:16287   */\n      tag_516\n        /* \"#utility.yul\":16283:16286   */\n      dup3\n        /* \"#utility.yul\":16194:16287   */\n      tag_327\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":16312:16314   */\n      0x20\n        /* \"#utility.yul\":16307:16310   */\n      dup3\n        /* \"#utility.yul\":16303:16315   */\n      add\n        /* \"#utility.yul\":16296:16315   */\n      swap1\n      pop\n        /* \"#utility.yul\":15955:16321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16327:16746   */\n    tag_212:\n        /* \"#utility.yul\":16493:16497   */\n      0x00\n        /* \"#utility.yul\":16531:16533   */\n      0x20\n        /* \"#utility.yul\":16520:16529   */\n      dup3\n        /* \"#utility.yul\":16516:16534   */\n      add\n        /* \"#utility.yul\":16508:16534   */\n      swap1\n      pop\n        /* \"#utility.yul\":16580:16589   */\n      dup2\n        /* \"#utility.yul\":16574:16578   */\n      dup2\n        /* \"#utility.yul\":16570:16590   */\n      sub\n        /* \"#utility.yul\":16566:16567   */\n      0x00\n        /* \"#utility.yul\":16555:16564   */\n      dup4\n        /* \"#utility.yul\":16551:16568   */\n      add\n        /* \"#utility.yul\":16544:16591   */\n      mstore\n        /* \"#utility.yul\":16608:16739   */\n      tag_518\n        /* \"#utility.yul\":16734:16738   */\n      dup2\n        /* \"#utility.yul\":16608:16739   */\n      tag_328\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":16600:16739   */\n      swap1\n      pop\n        /* \"#utility.yul\":16327:16746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16752:16983   */\n    tag_329:\n        /* \"#utility.yul\":16892:16926   */\n      0x4469726563746f7279206164647265737320646f6573206e6f7420696d706c65\n        /* \"#utility.yul\":16888:16889   */\n      0x00\n        /* \"#utility.yul\":16880:16886   */\n      dup3\n        /* \"#utility.yul\":16876:16890   */\n      add\n        /* \"#utility.yul\":16869:16927   */\n      mstore\n        /* \"#utility.yul\":16961:16975   */\n      0x6d656e74206f776e657228290000000000000000000000000000000000000000\n        /* \"#utility.yul\":16956:16958   */\n      0x20\n        /* \"#utility.yul\":16948:16954   */\n      dup3\n        /* \"#utility.yul\":16944:16959   */\n      add\n        /* \"#utility.yul\":16937:16976   */\n      mstore\n        /* \"#utility.yul\":16752:16983   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16989:17355   */\n    tag_330:\n        /* \"#utility.yul\":17131:17134   */\n      0x00\n        /* \"#utility.yul\":17152:17219   */\n      tag_521\n        /* \"#utility.yul\":17216:17218   */\n      0x2c\n        /* \"#utility.yul\":17211:17214   */\n      dup4\n        /* \"#utility.yul\":17152:17219   */\n      tag_281\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":17145:17219   */\n      swap2\n      pop\n        /* \"#utility.yul\":17228:17321   */\n      tag_522\n        /* \"#utility.yul\":17317:17320   */\n      dup3\n        /* \"#utility.yul\":17228:17321   */\n      tag_329\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":17346:17348   */\n      0x40\n        /* \"#utility.yul\":17341:17344   */\n      dup3\n        /* \"#utility.yul\":17337:17349   */\n      add\n        /* \"#utility.yul\":17330:17349   */\n      swap1\n      pop\n        /* \"#utility.yul\":16989:17355   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17361:17780   */\n    tag_220:\n        /* \"#utility.yul\":17527:17531   */\n      0x00\n        /* \"#utility.yul\":17565:17567   */\n      0x20\n        /* \"#utility.yul\":17554:17563   */\n      dup3\n        /* \"#utility.yul\":17550:17568   */\n      add\n        /* \"#utility.yul\":17542:17568   */\n      swap1\n      pop\n        /* \"#utility.yul\":17614:17623   */\n      dup2\n        /* \"#utility.yul\":17608:17612   */\n      dup2\n        /* \"#utility.yul\":17604:17624   */\n      sub\n        /* \"#utility.yul\":17600:17601   */\n      0x00\n        /* \"#utility.yul\":17589:17598   */\n      dup4\n        /* \"#utility.yul\":17585:17602   */\n      add\n        /* \"#utility.yul\":17578:17625   */\n      mstore\n        /* \"#utility.yul\":17642:17773   */\n      tag_524\n        /* \"#utility.yul\":17768:17772   */\n      dup2\n        /* \"#utility.yul\":17642:17773   */\n      tag_330\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":17634:17773   */\n      swap1\n      pop\n        /* \"#utility.yul\":17361:17780   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17786:18006   */\n    tag_331:\n        /* \"#utility.yul\":17926:17960   */\n      0x457466546f6b656e3a206576656e747320636f6e7472616374206e6f74207365\n        /* \"#utility.yul\":17922:17923   */\n      0x00\n        /* \"#utility.yul\":17914:17920   */\n      dup3\n        /* \"#utility.yul\":17910:17924   */\n      add\n        /* \"#utility.yul\":17903:17961   */\n      mstore\n        /* \"#utility.yul\":17995:17998   */\n      0x7400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17990:17992   */\n      0x20\n        /* \"#utility.yul\":17982:17988   */\n      dup3\n        /* \"#utility.yul\":17978:17993   */\n      add\n        /* \"#utility.yul\":17971:17999   */\n      mstore\n        /* \"#utility.yul\":17786:18006   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18012:18378   */\n    tag_332:\n        /* \"#utility.yul\":18154:18157   */\n      0x00\n        /* \"#utility.yul\":18175:18242   */\n      tag_527\n        /* \"#utility.yul\":18239:18241   */\n      0x21\n        /* \"#utility.yul\":18234:18237   */\n      dup4\n        /* \"#utility.yul\":18175:18242   */\n      tag_281\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":18168:18242   */\n      swap2\n      pop\n        /* \"#utility.yul\":18251:18344   */\n      tag_528\n        /* \"#utility.yul\":18340:18343   */\n      dup3\n        /* \"#utility.yul\":18251:18344   */\n      tag_331\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":18369:18371   */\n      0x40\n        /* \"#utility.yul\":18364:18367   */\n      dup3\n        /* \"#utility.yul\":18360:18372   */\n      add\n        /* \"#utility.yul\":18353:18372   */\n      swap1\n      pop\n        /* \"#utility.yul\":18012:18378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18384:18803   */\n    tag_247:\n        /* \"#utility.yul\":18550:18554   */\n      0x00\n        /* \"#utility.yul\":18588:18590   */\n      0x20\n        /* \"#utility.yul\":18577:18586   */\n      dup3\n        /* \"#utility.yul\":18573:18591   */\n      add\n        /* \"#utility.yul\":18565:18591   */\n      swap1\n      pop\n        /* \"#utility.yul\":18637:18646   */\n      dup2\n        /* \"#utility.yul\":18631:18635   */\n      dup2\n        /* \"#utility.yul\":18627:18647   */\n      sub\n        /* \"#utility.yul\":18623:18624   */\n      0x00\n        /* \"#utility.yul\":18612:18621   */\n      dup4\n        /* \"#utility.yul\":18608:18625   */\n      add\n        /* \"#utility.yul\":18601:18648   */\n      mstore\n        /* \"#utility.yul\":18665:18796   */\n      tag_530\n        /* \"#utility.yul\":18791:18795   */\n      dup2\n        /* \"#utility.yul\":18665:18796   */\n      tag_332\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":18657:18796   */\n      swap1\n      pop\n        /* \"#utility.yul\":18384:18803   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18809:19362   */\n    tag_249:\n        /* \"#utility.yul\":18986:18990   */\n      0x00\n        /* \"#utility.yul\":19024:19027   */\n      0x80\n        /* \"#utility.yul\":19013:19022   */\n      dup3\n        /* \"#utility.yul\":19009:19028   */\n      add\n        /* \"#utility.yul\":19001:19028   */\n      swap1\n      pop\n        /* \"#utility.yul\":19038:19109   */\n      tag_532\n        /* \"#utility.yul\":19106:19107   */\n      0x00\n        /* \"#utility.yul\":19095:19104   */\n      dup4\n        /* \"#utility.yul\":19091:19108   */\n      add\n        /* \"#utility.yul\":19082:19088   */\n      dup8\n        /* \"#utility.yul\":19038:19109   */\n      tag_297\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":19119:19191   */\n      tag_533\n        /* \"#utility.yul\":19187:19189   */\n      0x20\n        /* \"#utility.yul\":19176:19185   */\n      dup4\n        /* \"#utility.yul\":19172:19190   */\n      add\n        /* \"#utility.yul\":19163:19169   */\n      dup7\n        /* \"#utility.yul\":19119:19191   */\n      tag_307\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":19201:19273   */\n      tag_534\n        /* \"#utility.yul\":19269:19271   */\n      0x40\n        /* \"#utility.yul\":19258:19267   */\n      dup4\n        /* \"#utility.yul\":19254:19272   */\n      add\n        /* \"#utility.yul\":19245:19251   */\n      dup6\n        /* \"#utility.yul\":19201:19273   */\n      tag_307\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":19283:19355   */\n      tag_535\n        /* \"#utility.yul\":19351:19353   */\n      0x60\n        /* \"#utility.yul\":19340:19349   */\n      dup4\n        /* \"#utility.yul\":19336:19354   */\n      add\n        /* \"#utility.yul\":19327:19333   */\n      dup5\n        /* \"#utility.yul\":19283:19355   */\n      tag_297\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":18809:19362   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19368:19509   */\n    tag_333:\n        /* \"#utility.yul\":19417:19421   */\n      0x00\n        /* \"#utility.yul\":19440:19443   */\n      dup2\n        /* \"#utility.yul\":19432:19443   */\n      swap1\n      pop\n        /* \"#utility.yul\":19463:19466   */\n      dup2\n        /* \"#utility.yul\":19460:19461   */\n      0x00\n        /* \"#utility.yul\":19453:19467   */\n      mstore\n        /* \"#utility.yul\":19497:19501   */\n      0x20\n        /* \"#utility.yul\":19494:19495   */\n      0x00\n        /* \"#utility.yul\":19484:19502   */\n      keccak256\n        /* \"#utility.yul\":19476:19502   */\n      swap1\n      pop\n        /* \"#utility.yul\":19368:19509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19515:19608   */\n    tag_334:\n        /* \"#utility.yul\":19552:19558   */\n      0x00\n        /* \"#utility.yul\":19599:19601   */\n      0x20\n        /* \"#utility.yul\":19594:19596   */\n      0x1f\n        /* \"#utility.yul\":19587:19592   */\n      dup4\n        /* \"#utility.yul\":19583:19597   */\n      add\n        /* \"#utility.yul\":19579:19602   */\n      div\n        /* \"#utility.yul\":19569:19602   */\n      swap1\n      pop\n        /* \"#utility.yul\":19515:19608   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19614:19721   */\n    tag_335:\n        /* \"#utility.yul\":19658:19666   */\n      0x00\n        /* \"#utility.yul\":19708:19713   */\n      dup3\n        /* \"#utility.yul\":19702:19706   */\n      dup3\n        /* \"#utility.yul\":19698:19714   */\n      shl\n        /* \"#utility.yul\":19677:19714   */\n      swap1\n      pop\n        /* \"#utility.yul\":19614:19721   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19727:20120   */\n    tag_336:\n        /* \"#utility.yul\":19796:19802   */\n      0x00\n        /* \"#utility.yul\":19846:19847   */\n      0x08\n        /* \"#utility.yul\":19834:19844   */\n      dup4\n        /* \"#utility.yul\":19830:19848   */\n      mul\n        /* \"#utility.yul\":19869:19966   */\n      tag_540\n        /* \"#utility.yul\":19899:19965   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19888:19897   */\n      dup3\n        /* \"#utility.yul\":19869:19966   */\n      tag_335\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":19987:20026   */\n      tag_541\n        /* \"#utility.yul\":20017:20025   */\n      dup7\n        /* \"#utility.yul\":20006:20015   */\n      dup4\n        /* \"#utility.yul\":19987:20026   */\n      tag_335\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":19975:20026   */\n      swap6\n      pop\n        /* \"#utility.yul\":20059:20063   */\n      dup1\n        /* \"#utility.yul\":20055:20064   */\n      not\n        /* \"#utility.yul\":20048:20053   */\n      dup5\n        /* \"#utility.yul\":20044:20065   */\n      and\n        /* \"#utility.yul\":20035:20065   */\n      swap4\n      pop\n        /* \"#utility.yul\":20108:20112   */\n      dup1\n        /* \"#utility.yul\":20098:20106   */\n      dup7\n        /* \"#utility.yul\":20094:20113   */\n      and\n        /* \"#utility.yul\":20087:20092   */\n      dup5\n        /* \"#utility.yul\":20084:20114   */\n      or\n        /* \"#utility.yul\":20074:20114   */\n      swap3\n      pop\n        /* \"#utility.yul\":19803:20120   */\n      pop\n      pop\n        /* \"#utility.yul\":19727:20120   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20126:20268   */\n    tag_337:\n        /* \"#utility.yul\":20176:20185   */\n      0x00\n        /* \"#utility.yul\":20209:20262   */\n      tag_543\n        /* \"#utility.yul\":20227:20261   */\n      tag_544\n        /* \"#utility.yul\":20236:20260   */\n      tag_545\n        /* \"#utility.yul\":20254:20259   */\n      dup5\n        /* \"#utility.yul\":20236:20260   */\n      tag_292\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":20227:20261   */\n      tag_310\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":20209:20262   */\n      tag_292\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":20196:20262   */\n      swap1\n      pop\n        /* \"#utility.yul\":20126:20268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20274:20349   */\n    tag_338:\n        /* \"#utility.yul\":20317:20320   */\n      0x00\n        /* \"#utility.yul\":20338:20343   */\n      dup2\n        /* \"#utility.yul\":20331:20343   */\n      swap1\n      pop\n        /* \"#utility.yul\":20274:20349   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20355:20624   */\n    tag_339:\n        /* \"#utility.yul\":20465:20504   */\n      tag_548\n        /* \"#utility.yul\":20496:20503   */\n      dup4\n        /* \"#utility.yul\":20465:20504   */\n      tag_337\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":20526:20617   */\n      tag_549\n        /* \"#utility.yul\":20575:20616   */\n      tag_550\n        /* \"#utility.yul\":20599:20615   */\n      dup3\n        /* \"#utility.yul\":20575:20616   */\n      tag_338\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":20567:20573   */\n      dup5\n        /* \"#utility.yul\":20560:20564   */\n      dup5\n        /* \"#utility.yul\":20554:20565   */\n      sload\n        /* \"#utility.yul\":20526:20617   */\n      tag_336\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":20520:20524   */\n      dup3\n        /* \"#utility.yul\":20513:20618   */\n      sstore\n        /* \"#utility.yul\":20431:20624   */\n      pop\n        /* \"#utility.yul\":20355:20624   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20630:20703   */\n    tag_340:\n        /* \"#utility.yul\":20675:20678   */\n      0x00\n        /* \"#utility.yul\":20696:20697   */\n      0x00\n        /* \"#utility.yul\":20689:20697   */\n      swap1\n      pop\n        /* \"#utility.yul\":20630:20703   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":20709:20898   */\n    tag_341:\n        /* \"#utility.yul\":20786:20818   */\n      tag_553\n      tag_340\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":20827:20892   */\n      tag_554\n        /* \"#utility.yul\":20885:20891   */\n      dup2\n        /* \"#utility.yul\":20877:20883   */\n      dup5\n        /* \"#utility.yul\":20871:20875   */\n      dup5\n        /* \"#utility.yul\":20827:20892   */\n      tag_339\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":20762:20898   */\n      pop\n        /* \"#utility.yul\":20709:20898   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20904:21090   */\n    tag_342:\n        /* \"#utility.yul\":20964:21084   */\n    tag_556:\n        /* \"#utility.yul\":20981:20984   */\n      dup2\n        /* \"#utility.yul\":20974:20979   */\n      dup2\n        /* \"#utility.yul\":20971:20985   */\n      lt\n        /* \"#utility.yul\":20964:21084   */\n      iszero\n      tag_558\n      jumpi\n        /* \"#utility.yul\":21035:21074   */\n      tag_559\n        /* \"#utility.yul\":21072:21073   */\n      0x00\n        /* \"#utility.yul\":21065:21070   */\n      dup3\n        /* \"#utility.yul\":21035:21074   */\n      tag_341\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":21008:21009   */\n      0x01\n        /* \"#utility.yul\":21001:21006   */\n      dup2\n        /* \"#utility.yul\":20997:21010   */\n      add\n        /* \"#utility.yul\":20988:21010   */\n      swap1\n      pop\n        /* \"#utility.yul\":20964:21084   */\n      jump(tag_556)\n    tag_558:\n        /* \"#utility.yul\":20904:21090   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21096:21639   */\n    tag_343:\n        /* \"#utility.yul\":21197:21199   */\n      0x1f\n        /* \"#utility.yul\":21192:21195   */\n      dup3\n        /* \"#utility.yul\":21189:21200   */\n      gt\n        /* \"#utility.yul\":21186:21632   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":21231:21269   */\n      tag_562\n        /* \"#utility.yul\":21263:21268   */\n      dup2\n        /* \"#utility.yul\":21231:21269   */\n      tag_333\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":21315:21344   */\n      tag_563\n        /* \"#utility.yul\":21333:21343   */\n      dup5\n        /* \"#utility.yul\":21315:21344   */\n      tag_334\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":21305:21313   */\n      dup2\n        /* \"#utility.yul\":21301:21345   */\n      add\n        /* \"#utility.yul\":21498:21500   */\n      0x20\n        /* \"#utility.yul\":21486:21496   */\n      dup6\n        /* \"#utility.yul\":21483:21501   */\n      lt\n        /* \"#utility.yul\":21480:21529   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":21519:21527   */\n      dup2\n        /* \"#utility.yul\":21504:21527   */\n      swap1\n      pop\n        /* \"#utility.yul\":21480:21529   */\n    tag_564:\n        /* \"#utility.yul\":21542:21622   */\n      tag_565\n        /* \"#utility.yul\":21598:21620   */\n      tag_566\n        /* \"#utility.yul\":21616:21619   */\n      dup6\n        /* \"#utility.yul\":21598:21620   */\n      tag_334\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":21588:21596   */\n      dup4\n        /* \"#utility.yul\":21584:21621   */\n      add\n        /* \"#utility.yul\":21571:21582   */\n      dup3\n        /* \"#utility.yul\":21542:21622   */\n      tag_342\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":21201:21632   */\n      pop\n      pop\n        /* \"#utility.yul\":21186:21632   */\n    tag_561:\n        /* \"#utility.yul\":21096:21639   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21645:21762   */\n    tag_344:\n        /* \"#utility.yul\":21699:21707   */\n      0x00\n        /* \"#utility.yul\":21749:21754   */\n      dup3\n        /* \"#utility.yul\":21743:21747   */\n      dup3\n        /* \"#utility.yul\":21739:21755   */\n      shr\n        /* \"#utility.yul\":21718:21755   */\n      swap1\n      pop\n        /* \"#utility.yul\":21645:21762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21768:21937   */\n    tag_345:\n        /* \"#utility.yul\":21812:21818   */\n      0x00\n        /* \"#utility.yul\":21845:21896   */\n      tag_569\n        /* \"#utility.yul\":21893:21894   */\n      0x00\n        /* \"#utility.yul\":21889:21895   */\n      not\n        /* \"#utility.yul\":21881:21886   */\n      dup5\n        /* \"#utility.yul\":21878:21879   */\n      0x08\n        /* \"#utility.yul\":21874:21887   */\n      mul\n        /* \"#utility.yul\":21845:21896   */\n      tag_344\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":21841:21897   */\n      not\n        /* \"#utility.yul\":21926:21930   */\n      dup1\n        /* \"#utility.yul\":21920:21924   */\n      dup4\n        /* \"#utility.yul\":21916:21931   */\n      and\n        /* \"#utility.yul\":21906:21931   */\n      swap2\n      pop\n        /* \"#utility.yul\":21819:21937   */\n      pop\n        /* \"#utility.yul\":21768:21937   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21942:22237   */\n    tag_346:\n        /* \"#utility.yul\":22018:22022   */\n      0x00\n        /* \"#utility.yul\":22164:22193   */\n      tag_571\n        /* \"#utility.yul\":22189:22192   */\n      dup4\n        /* \"#utility.yul\":22183:22187   */\n      dup4\n        /* \"#utility.yul\":22164:22193   */\n      tag_345\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":22156:22193   */\n      swap2\n      pop\n        /* \"#utility.yul\":22226:22229   */\n      dup3\n        /* \"#utility.yul\":22223:22224   */\n      0x02\n        /* \"#utility.yul\":22219:22230   */\n      mul\n        /* \"#utility.yul\":22213:22217   */\n      dup3\n        /* \"#utility.yul\":22210:22231   */\n      or\n        /* \"#utility.yul\":22202:22231   */\n      swap1\n      pop\n        /* \"#utility.yul\":21942:22237   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22242:23637   */\n    tag_263:\n        /* \"#utility.yul\":22359:22396   */\n      tag_573\n        /* \"#utility.yul\":22392:22395   */\n      dup3\n        /* \"#utility.yul\":22359:22396   */\n      tag_280\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":22461:22479   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":22453:22459   */\n      dup2\n        /* \"#utility.yul\":22450:22480   */\n      gt\n        /* \"#utility.yul\":22447:22503   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":22483:22501   */\n      tag_575\n      tag_300\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":22447:22503   */\n    tag_574:\n        /* \"#utility.yul\":22527:22565   */\n      tag_576\n        /* \"#utility.yul\":22559:22563   */\n      dup3\n        /* \"#utility.yul\":22553:22564   */\n      sload\n        /* \"#utility.yul\":22527:22565   */\n      tag_96\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":22612:22679   */\n      tag_577\n        /* \"#utility.yul\":22672:22678   */\n      dup3\n        /* \"#utility.yul\":22664:22670   */\n      dup3\n        /* \"#utility.yul\":22658:22662   */\n      dup6\n        /* \"#utility.yul\":22612:22679   */\n      tag_343\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":22706:22707   */\n      0x00\n        /* \"#utility.yul\":22730:22734   */\n      0x20\n        /* \"#utility.yul\":22717:22734   */\n      swap1\n      pop\n        /* \"#utility.yul\":22762:22764   */\n      0x1f\n        /* \"#utility.yul\":22754:22760   */\n      dup4\n        /* \"#utility.yul\":22751:22765   */\n      gt\n        /* \"#utility.yul\":22779:22780   */\n      0x01\n        /* \"#utility.yul\":22774:23392   */\n      dup2\n      eq\n      tag_579\n      jumpi\n        /* \"#utility.yul\":23436:23437   */\n      0x00\n        /* \"#utility.yul\":23453:23459   */\n      dup5\n        /* \"#utility.yul\":23450:23527   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":23502:23511   */\n      dup3\n        /* \"#utility.yul\":23497:23500   */\n      dup8\n        /* \"#utility.yul\":23493:23512   */\n      add\n        /* \"#utility.yul\":23487:23513   */\n      mload\n        /* \"#utility.yul\":23478:23513   */\n      swap1\n      pop\n        /* \"#utility.yul\":23450:23527   */\n    tag_580:\n        /* \"#utility.yul\":23553:23620   */\n      tag_581\n        /* \"#utility.yul\":23613:23619   */\n      dup6\n        /* \"#utility.yul\":23606:23611   */\n      dup3\n        /* \"#utility.yul\":23553:23620   */\n      tag_346\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":23547:23551   */\n      dup7\n        /* \"#utility.yul\":23540:23621   */\n      sstore\n        /* \"#utility.yul\":23409:23631   */\n      pop\n        /* \"#utility.yul\":22744:23631   */\n      jump(tag_578)\n        /* \"#utility.yul\":22774:23392   */\n    tag_579:\n        /* \"#utility.yul\":22826:22830   */\n      0x1f\n        /* \"#utility.yul\":22822:22831   */\n      not\n        /* \"#utility.yul\":22814:22820   */\n      dup5\n        /* \"#utility.yul\":22810:22832   */\n      and\n        /* \"#utility.yul\":22860:22897   */\n      tag_582\n        /* \"#utility.yul\":22892:22896   */\n      dup7\n        /* \"#utility.yul\":22860:22897   */\n      tag_333\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":22919:22920   */\n      0x00\n        /* \"#utility.yul\":22933:23141   */\n    tag_583:\n        /* \"#utility.yul\":22947:22954   */\n      dup3\n        /* \"#utility.yul\":22944:22945   */\n      dup2\n        /* \"#utility.yul\":22941:22955   */\n      lt\n        /* \"#utility.yul\":22933:23141   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":23026:23035   */\n      dup5\n        /* \"#utility.yul\":23021:23024   */\n      dup10\n        /* \"#utility.yul\":23017:23036   */\n      add\n        /* \"#utility.yul\":23011:23037   */\n      mload\n        /* \"#utility.yul\":23003:23009   */\n      dup3\n        /* \"#utility.yul\":22996:23038   */\n      sstore\n        /* \"#utility.yul\":23077:23078   */\n      0x01\n        /* \"#utility.yul\":23069:23075   */\n      dup3\n        /* \"#utility.yul\":23065:23079   */\n      add\n        /* \"#utility.yul\":23055:23079   */\n      swap2\n      pop\n        /* \"#utility.yul\":23124:23126   */\n      0x20\n        /* \"#utility.yul\":23113:23122   */\n      dup6\n        /* \"#utility.yul\":23109:23127   */\n      add\n        /* \"#utility.yul\":23096:23127   */\n      swap5\n      pop\n        /* \"#utility.yul\":22970:22974   */\n      0x20\n        /* \"#utility.yul\":22967:22968   */\n      dup2\n        /* \"#utility.yul\":22963:22975   */\n      add\n        /* \"#utility.yul\":22958:22975   */\n      swap1\n      pop\n        /* \"#utility.yul\":22933:23141   */\n      jump(tag_583)\n    tag_585:\n        /* \"#utility.yul\":23169:23175   */\n      dup7\n        /* \"#utility.yul\":23160:23167   */\n      dup4\n        /* \"#utility.yul\":23157:23176   */\n      lt\n        /* \"#utility.yul\":23154:23333   */\n      iszero\n      tag_586\n      jumpi\n        /* \"#utility.yul\":23227:23236   */\n      dup5\n        /* \"#utility.yul\":23222:23225   */\n      dup10\n        /* \"#utility.yul\":23218:23237   */\n      add\n        /* \"#utility.yul\":23212:23238   */\n      mload\n        /* \"#utility.yul\":23270:23318   */\n      tag_587\n        /* \"#utility.yul\":23312:23316   */\n      0x1f\n        /* \"#utility.yul\":23304:23310   */\n      dup10\n        /* \"#utility.yul\":23300:23317   */\n      and\n        /* \"#utility.yul\":23289:23298   */\n      dup3\n        /* \"#utility.yul\":23270:23318   */\n      tag_345\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":23262:23268   */\n      dup4\n        /* \"#utility.yul\":23255:23319   */\n      sstore\n        /* \"#utility.yul\":23177:23333   */\n      pop\n        /* \"#utility.yul\":23154:23333   */\n    tag_586:\n        /* \"#utility.yul\":23379:23380   */\n      0x01\n        /* \"#utility.yul\":23375:23376   */\n      0x02\n        /* \"#utility.yul\":23367:23373   */\n      dup9\n        /* \"#utility.yul\":23363:23377   */\n      mul\n        /* \"#utility.yul\":23359:23381   */\n      add\n        /* \"#utility.yul\":23353:23357   */\n      dup9\n        /* \"#utility.yul\":23346:23382   */\n      sstore\n        /* \"#utility.yul\":22781:23392   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":22744:23631   */\n    tag_578:\n      pop\n        /* \"#utility.yul\":22334:23637   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":22242:23637   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23643:23823   */\n    tag_347:\n        /* \"#utility.yul\":23691:23768   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23688:23689   */\n      0x00\n        /* \"#utility.yul\":23681:23769   */\n      mstore\n        /* \"#utility.yul\":23788:23792   */\n      0x11\n        /* \"#utility.yul\":23785:23786   */\n      0x04\n        /* \"#utility.yul\":23778:23793   */\n      mstore\n        /* \"#utility.yul\":23812:23816   */\n      0x24\n        /* \"#utility.yul\":23809:23810   */\n      0x00\n        /* \"#utility.yul\":23802:23817   */\n      revert\n        /* \"#utility.yul\":23829:24020   */\n    tag_269:\n        /* \"#utility.yul\":23869:23872   */\n      0x00\n        /* \"#utility.yul\":23888:23908   */\n      tag_590\n        /* \"#utility.yul\":23906:23907   */\n      dup3\n        /* \"#utility.yul\":23888:23908   */\n      tag_292\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":23883:23908   */\n      swap2\n      pop\n        /* \"#utility.yul\":23922:23942   */\n      tag_591\n        /* \"#utility.yul\":23940:23941   */\n      dup4\n        /* \"#utility.yul\":23922:23942   */\n      tag_292\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":23917:23942   */\n      swap3\n      pop\n        /* \"#utility.yul\":23965:23966   */\n      dup3\n        /* \"#utility.yul\":23962:23963   */\n      dup3\n        /* \"#utility.yul\":23958:23967   */\n      add\n        /* \"#utility.yul\":23951:23967   */\n      swap1\n      pop\n        /* \"#utility.yul\":23986:23989   */\n      dup1\n        /* \"#utility.yul\":23983:23984   */\n      dup3\n        /* \"#utility.yul\":23980:23990   */\n      gt\n        /* \"#utility.yul\":23977:24013   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":23993:24011   */\n      tag_593\n      tag_347\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":23977:24013   */\n    tag_592:\n        /* \"#utility.yul\":23829:24020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200d673eab98b6c661ca292c3f3e8cb8388a1e2f0ae382c35194917cbcd8c523d564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1200": {
									"entryPoint": null,
									"id": 1200,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_1395": {
									"entryPoint": null,
									"id": 1395,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setDirectory_1260": {
									"entryPoint": 72,
									"id": 1260,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af": {
									"entryPoint": 866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4374:10",
										"nodeType": "YulBlock",
										"src": "0:4374:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "759:80:10",
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nativeSrc": "769:22:10",
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nativeSrc": "778:13:10",
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nativeSrc": "800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nativeSrc": "800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:10",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:10",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nativeSrc": "922:274:10",
													"nodeType": "YulBlock",
													"src": "922:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:10",
																"nodeType": "YulBlock",
																"src": "968:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:10"
																			},
																			"nativeSrc": "970:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:10"
																		},
																		"nativeSrc": "970:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:10"
																		},
																		"nativeSrc": "939:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:10",
																		"nodeType": "YulLiteral",
																		"src": "964:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:10"
																},
																"nativeSrc": "935:32:10",
																"nodeType": "YulFunctionCall",
																"src": "935:32:10"
															},
															"nativeSrc": "932:119:10",
															"nodeType": "YulIf",
															"src": "932:119:10"
														},
														{
															"nativeSrc": "1061:128:10",
															"nodeType": "YulBlock",
															"src": "1061:128:10",
															"statements": [
																{
																	"nativeSrc": "1076:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:10"
																				},
																				"nativeSrc": "1147:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:10"
																		},
																		"nativeSrc": "1115:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:10",
														"nodeType": "YulTypedName",
														"src": "892:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:10",
														"nodeType": "YulTypedName",
														"src": "903:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:10",
														"nodeType": "YulTypedName",
														"src": "915:6:10",
														"type": ""
													}
												],
												"src": "845:351:10"
											},
											{
												"body": {
													"nativeSrc": "1298:73:10",
													"nodeType": "YulBlock",
													"src": "1298:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1315:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1315:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1320:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1320:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1308:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1308:6:10"
																},
																"nativeSrc": "1308:19:10",
																"nodeType": "YulFunctionCall",
																"src": "1308:19:10"
															},
															"nativeSrc": "1308:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "1308:19:10"
														},
														{
															"nativeSrc": "1336:29:10",
															"nodeType": "YulAssignment",
															"src": "1336:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1355:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1355:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1360:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1360:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1351:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1351:3:10"
																},
																"nativeSrc": "1351:14:10",
																"nodeType": "YulFunctionCall",
																"src": "1351:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1336:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "1336:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1202:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1270:3:10",
														"nodeType": "YulTypedName",
														"src": "1270:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1275:6:10",
														"nodeType": "YulTypedName",
														"src": "1275:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1286:11:10",
														"nodeType": "YulTypedName",
														"src": "1286:11:10",
														"type": ""
													}
												],
												"src": "1202:169:10"
											},
											{
												"body": {
													"nativeSrc": "1483:76:10",
													"nodeType": "YulBlock",
													"src": "1483:76:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1505:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1505:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1513:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1513:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1501:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1501:3:10"
																		},
																		"nativeSrc": "1501:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1501:14:10"
																	},
																	{
																		"hexValue": "4469726563746f72792063616e6e6f74206265207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "1517:34:10",
																		"nodeType": "YulLiteral",
																		"src": "1517:34:10",
																		"type": "",
																		"value": "Directory cannot be zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1494:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1494:6:10"
																},
																"nativeSrc": "1494:58:10",
																"nodeType": "YulFunctionCall",
																"src": "1494:58:10"
															},
															"nativeSrc": "1494:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "1494:58:10"
														}
													]
												},
												"name": "store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
												"nativeSrc": "1377:182:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1475:6:10",
														"nodeType": "YulTypedName",
														"src": "1475:6:10",
														"type": ""
													}
												],
												"src": "1377:182:10"
											},
											{
												"body": {
													"nativeSrc": "1711:220:10",
													"nodeType": "YulBlock",
													"src": "1711:220:10",
													"statements": [
														{
															"nativeSrc": "1721:74:10",
															"nodeType": "YulAssignment",
															"src": "1721:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1787:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1787:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1792:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1792:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1728:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "1728:58:10"
																},
																"nativeSrc": "1728:67:10",
																"nodeType": "YulFunctionCall",
																"src": "1728:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1721:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1721:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1893:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1893:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
																	"nativeSrc": "1804:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "1804:88:10"
																},
																"nativeSrc": "1804:93:10",
																"nodeType": "YulFunctionCall",
																"src": "1804:93:10"
															},
															"nativeSrc": "1804:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "1804:93:10"
														},
														{
															"nativeSrc": "1906:19:10",
															"nodeType": "YulAssignment",
															"src": "1906:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1917:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1917:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1922:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1922:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1913:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1913:3:10"
																},
																"nativeSrc": "1913:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1913:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1906:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1906:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1565:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1699:3:10",
														"nodeType": "YulTypedName",
														"src": "1699:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1707:3:10",
														"nodeType": "YulTypedName",
														"src": "1707:3:10",
														"type": ""
													}
												],
												"src": "1565:366:10"
											},
											{
												"body": {
													"nativeSrc": "2108:248:10",
													"nodeType": "YulBlock",
													"src": "2108:248:10",
													"statements": [
														{
															"nativeSrc": "2118:26:10",
															"nodeType": "YulAssignment",
															"src": "2118:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2130:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2130:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2141:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2141:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2126:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2126:3:10"
																},
																"nativeSrc": "2126:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2126:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2118:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2118:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2165:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2165:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2176:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2176:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2161:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2161:3:10"
																		},
																		"nativeSrc": "2161:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2161:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2184:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2184:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2190:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2190:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2180:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2180:3:10"
																		},
																		"nativeSrc": "2180:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2180:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2154:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2154:6:10"
																},
																"nativeSrc": "2154:47:10",
																"nodeType": "YulFunctionCall",
																"src": "2154:47:10"
															},
															"nativeSrc": "2154:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "2154:47:10"
														},
														{
															"nativeSrc": "2210:139:10",
															"nodeType": "YulAssignment",
															"src": "2210:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2344:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2344:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2218:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "2218:124:10"
																},
																"nativeSrc": "2218:131:10",
																"nodeType": "YulFunctionCall",
																"src": "2218:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2210:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2210:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1937:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2088:9:10",
														"nodeType": "YulTypedName",
														"src": "2088:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2103:4:10",
														"nodeType": "YulTypedName",
														"src": "2103:4:10",
														"type": ""
													}
												],
												"src": "1937:419:10"
											},
											{
												"body": {
													"nativeSrc": "2468:72:10",
													"nodeType": "YulBlock",
													"src": "2468:72:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2490:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2490:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2498:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2498:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2486:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2486:3:10"
																		},
																		"nativeSrc": "2486:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2486:14:10"
																	},
																	{
																		"hexValue": "4469726563746f7279206d757374206265206120636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "2502:30:10",
																		"nodeType": "YulLiteral",
																		"src": "2502:30:10",
																		"type": "",
																		"value": "Directory must be a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2479:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2479:6:10"
																},
																"nativeSrc": "2479:54:10",
																"nodeType": "YulFunctionCall",
																"src": "2479:54:10"
															},
															"nativeSrc": "2479:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "2479:54:10"
														}
													]
												},
												"name": "store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
												"nativeSrc": "2362:178:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2460:6:10",
														"nodeType": "YulTypedName",
														"src": "2460:6:10",
														"type": ""
													}
												],
												"src": "2362:178:10"
											},
											{
												"body": {
													"nativeSrc": "2692:220:10",
													"nodeType": "YulBlock",
													"src": "2692:220:10",
													"statements": [
														{
															"nativeSrc": "2702:74:10",
															"nodeType": "YulAssignment",
															"src": "2702:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2768:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2768:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2773:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2773:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2709:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "2709:58:10"
																},
																"nativeSrc": "2709:67:10",
																"nodeType": "YulFunctionCall",
																"src": "2709:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2702:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2702:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2874:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2874:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
																	"nativeSrc": "2785:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "2785:88:10"
																},
																"nativeSrc": "2785:93:10",
																"nodeType": "YulFunctionCall",
																"src": "2785:93:10"
															},
															"nativeSrc": "2785:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "2785:93:10"
														},
														{
															"nativeSrc": "2887:19:10",
															"nodeType": "YulAssignment",
															"src": "2887:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2898:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2898:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2903:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2903:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2894:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2894:3:10"
																},
																"nativeSrc": "2894:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2894:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2887:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2887:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2546:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2680:3:10",
														"nodeType": "YulTypedName",
														"src": "2680:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2688:3:10",
														"nodeType": "YulTypedName",
														"src": "2688:3:10",
														"type": ""
													}
												],
												"src": "2546:366:10"
											},
											{
												"body": {
													"nativeSrc": "3089:248:10",
													"nodeType": "YulBlock",
													"src": "3089:248:10",
													"statements": [
														{
															"nativeSrc": "3099:26:10",
															"nodeType": "YulAssignment",
															"src": "3099:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3111:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3122:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3107:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:10"
																},
																"nativeSrc": "3107:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3107:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3099:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3146:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3146:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3157:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3157:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3142:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3142:3:10"
																		},
																		"nativeSrc": "3142:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3142:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3165:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "3165:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3171:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3171:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3161:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3161:3:10"
																		},
																		"nativeSrc": "3161:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3161:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3135:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3135:6:10"
																},
																"nativeSrc": "3135:47:10",
																"nodeType": "YulFunctionCall",
																"src": "3135:47:10"
															},
															"nativeSrc": "3135:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "3135:47:10"
														},
														{
															"nativeSrc": "3191:139:10",
															"nodeType": "YulAssignment",
															"src": "3191:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3325:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3325:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3199:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "3199:124:10"
																},
																"nativeSrc": "3199:131:10",
																"nodeType": "YulFunctionCall",
																"src": "3199:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3191:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3191:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2918:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3069:9:10",
														"nodeType": "YulTypedName",
														"src": "3069:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3084:4:10",
														"nodeType": "YulTypedName",
														"src": "3084:4:10",
														"type": ""
													}
												],
												"src": "2918:419:10"
											},
											{
												"body": {
													"nativeSrc": "3449:125:10",
													"nodeType": "YulBlock",
													"src": "3449:125:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3471:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3471:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3479:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3479:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3467:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3467:3:10"
																		},
																		"nativeSrc": "3467:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3467:14:10"
																	},
																	{
																		"hexValue": "4469726563746f7279206164647265737320646f6573206e6f7420696d706c65",
																		"kind": "string",
																		"nativeSrc": "3483:34:10",
																		"nodeType": "YulLiteral",
																		"src": "3483:34:10",
																		"type": "",
																		"value": "Directory address does not imple"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3460:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3460:6:10"
																},
																"nativeSrc": "3460:58:10",
																"nodeType": "YulFunctionCall",
																"src": "3460:58:10"
															},
															"nativeSrc": "3460:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "3460:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3539:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3539:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3547:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3547:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3535:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3535:3:10"
																		},
																		"nativeSrc": "3535:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3535:15:10"
																	},
																	{
																		"hexValue": "6d656e74206f776e65722829",
																		"kind": "string",
																		"nativeSrc": "3552:14:10",
																		"nodeType": "YulLiteral",
																		"src": "3552:14:10",
																		"type": "",
																		"value": "ment owner()"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3528:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3528:6:10"
																},
																"nativeSrc": "3528:39:10",
																"nodeType": "YulFunctionCall",
																"src": "3528:39:10"
															},
															"nativeSrc": "3528:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "3528:39:10"
														}
													]
												},
												"name": "store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
												"nativeSrc": "3343:231:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3441:6:10",
														"nodeType": "YulTypedName",
														"src": "3441:6:10",
														"type": ""
													}
												],
												"src": "3343:231:10"
											},
											{
												"body": {
													"nativeSrc": "3726:220:10",
													"nodeType": "YulBlock",
													"src": "3726:220:10",
													"statements": [
														{
															"nativeSrc": "3736:74:10",
															"nodeType": "YulAssignment",
															"src": "3736:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3802:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3802:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3807:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3807:2:10",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3743:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "3743:58:10"
																},
																"nativeSrc": "3743:67:10",
																"nodeType": "YulFunctionCall",
																"src": "3743:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3736:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3736:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3908:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3908:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
																	"nativeSrc": "3819:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "3819:88:10"
																},
																"nativeSrc": "3819:93:10",
																"nodeType": "YulFunctionCall",
																"src": "3819:93:10"
															},
															"nativeSrc": "3819:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "3819:93:10"
														},
														{
															"nativeSrc": "3921:19:10",
															"nodeType": "YulAssignment",
															"src": "3921:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3932:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3932:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3937:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3937:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3928:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3928:3:10"
																},
																"nativeSrc": "3928:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3928:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3921:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3921:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3580:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3714:3:10",
														"nodeType": "YulTypedName",
														"src": "3714:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3722:3:10",
														"nodeType": "YulTypedName",
														"src": "3722:3:10",
														"type": ""
													}
												],
												"src": "3580:366:10"
											},
											{
												"body": {
													"nativeSrc": "4123:248:10",
													"nodeType": "YulBlock",
													"src": "4123:248:10",
													"statements": [
														{
															"nativeSrc": "4133:26:10",
															"nodeType": "YulAssignment",
															"src": "4133:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4145:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4145:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4156:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4156:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4141:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4141:3:10"
																},
																"nativeSrc": "4141:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4141:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4133:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4133:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4180:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4180:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4191:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4191:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4176:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4176:3:10"
																		},
																		"nativeSrc": "4176:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4176:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4199:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4199:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4205:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4205:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4195:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4195:3:10"
																		},
																		"nativeSrc": "4195:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4195:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4169:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4169:6:10"
																},
																"nativeSrc": "4169:47:10",
																"nodeType": "YulFunctionCall",
																"src": "4169:47:10"
															},
															"nativeSrc": "4169:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "4169:47:10"
														},
														{
															"nativeSrc": "4225:139:10",
															"nodeType": "YulAssignment",
															"src": "4225:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4359:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4359:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4233:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "4233:124:10"
																},
																"nativeSrc": "4233:131:10",
																"nodeType": "YulFunctionCall",
																"src": "4233:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4225:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4225:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3952:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4103:9:10",
														"nodeType": "YulTypedName",
														"src": "4103:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4118:4:10",
														"nodeType": "YulTypedName",
														"src": "4118:4:10",
														"type": ""
													}
												],
												"src": "3952:419:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory cannot be zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory must be a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory address does not imple\")\n\n        mstore(add(memPtr, 32), \"ment owner()\")\n\n    }\n\n    function abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060405161271c38038061271c83398181016040528101906100319190610257565b806100418161004860201b60201c565b50506103f0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ad906102dc565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff163b1161010f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010690610344565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561017757506040513d601f19601f820116820180604052508101906101749190610257565b60015b6101b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ad906103d2565b60405180910390fd5b815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610226826101fd565b9050919050565b6102368161021c565b8114610240575f5ffd5b50565b5f815190506102518161022d565b92915050565b5f6020828403121561026c5761026b6101f9565b5b5f61027984828501610243565b91505092915050565b5f82825260208201905092915050565b7f4469726563746f72792063616e6e6f74206265207a65726f20616464726573735f82015250565b5f6102c6602083610282565b91506102d182610292565b602082019050919050565b5f6020820190508181035f8301526102f3816102ba565b9050919050565b7f4469726563746f7279206d757374206265206120636f6e7472616374000000005f82015250565b5f61032e601c83610282565b9150610339826102fa565b602082019050919050565b5f6020820190508181035f83015261035b81610322565b9050919050565b7f4469726563746f7279206164647265737320646f6573206e6f7420696d706c655f8201527f6d656e74206f776e657228290000000000000000000000000000000000000000602082015250565b5f6103bc602c83610282565b91506103c782610362565b604082019050919050565b5f6020820190508181035f8301526103e9816103b0565b9050919050565b61231f806103fd5f395ff3fe608060405234801561000f575f5ffd5b5060043610610109575f3560e01c80636ebd362c116100a05780639dc29fac1161006f5780639dc29fac146102b9578063a9059cbb146102d5578063ba4c7be114610305578063cfa36f3d14610321578063dd62ed3e1461033f57610109565b80636ebd362c1461023157806370a082311461024d5780638da5cb5b1461027d57806395d89b411461029b57610109565b806327262618116100dc57806327262618146101a9578063313ce567146101d957806340c10f19146101f7578063658a847a1461021357610109565b806306fdde031461010d578063095ea7b31461012b57806318160ddd1461015b57806323b872dd14610179575b5f5ffd5b61011561036f565b60405161012291906116ff565b60405180910390f35b610145600480360381019061014091906117bd565b61040d565b6040516101529190611815565b60405180910390f35b61016361042f565b604051610170919061183d565b60405180910390f35b610193600480360381019061018e9190611856565b610446565b6040516101a09190611815565b60405180910390f35b6101c360048036038101906101be91906119d2565b610474565b6040516101d09190611a28565b60405180910390f35b6101e1610514565b6040516101ee9190611a5c565b60405180910390f35b610211600480360381019061020c91906117bd565b61051c565b005b61021b6105d5565b6040516102289190611ad0565b60405180910390f35b61024b60048036038101906102469190611ae9565b6105f9565b005b61026760048036038101906102629190611b85565b6107ee565b604051610274919061183d565b60405180910390f35b610285610841565b6040516102929190611a28565b60405180910390f35b6102a36108d4565b6040516102b091906116ff565b60405180910390f35b6102d360048036038101906102ce91906117bd565b610972565b005b6102ef60048036038101906102ea91906117bd565b610a2b565b6040516102fc9190611815565b60405180910390f35b61031f600480360381019061031a9190611b85565b610a4d565b005b610329610b53565b604051610336919061183d565b60405180910390f35b61035960048036038101906103549190611bb0565b610b59565b604051610366919061183d565b60405180910390f35b60605f61037a610be9565b905080600301805461038b90611c1b565b80601f01602080910402602001604051908101604052809291908181526020018280546103b790611c1b565b80156104025780601f106103d957610100808354040283529160200191610402565b820191905f5260205f20905b8154815290600101906020018083116103e557829003601f168201915b505050505091505090565b5f5f610417610c10565b9050610424818585610c17565b600191505092915050565b5f5f610439610be9565b9050806002015491505090565b5f5f610450610c10565b905061045d858285610c29565b610468858585610cbc565b60019150509392505050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327262618836040518263ffffffff1660e01b81526004016104ce91906116ff565b602060405180830381865afa1580156104e9573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061050d9190611c5f565b9050919050565b5f6012905090565b61055a6040518060400160405280600a81526020017f6574662d726f7574657200000000000000000000000000000000000000000000815250610474565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105be90611cd4565b60405180910390fd5b6105d18282610dac565b5050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f610602610e2b565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff1614801561064a5750825b90505f60018367ffffffffffffffff1614801561067d57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561068b575080155b156106c2576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561070f576001855f0160086101000a81548160ff0219169083151502179055505b5f60149054906101000a900460ff1615610755576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015f60146101000a81548160ff02191690831515021790555061077886610e3e565b6107828888610fef565b8860018190555083156107e3575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516107da9190611d3e565b60405180910390a15b505050505050505050565b5f5f6107f8610be9565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108ab573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108cf9190611c5f565b905090565b60605f6108df610be9565b90508060040180546108f090611c1b565b80601f016020809104026020016040519081016040528092919081815260200182805461091c90611c1b565b80156109675780601f1061093e57610100808354040283529160200191610967565b820191905f5260205f20905b81548152906001019060200180831161094a57829003601f168201915b505050505091505090565b6109b06040518060400160405280600a81526020017f6574662d726f7574657200000000000000000000000000000000000000000000815250610474565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1490611cd4565b60405180910390fd5b610a278282611005565b5050565b5f5f610a35610c10565b9050610a42818585610cbc565b600191505092915050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ab6573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ada9190611c5f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3e90611da1565b60405180910390fd5b610b5081610e3e565b50565b60015481565b5f5f610b63610be9565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b610c248383836001611084565b505050565b5f610c348484610b59565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610cb65781811015610ca7578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610c9e93929190611dbf565b60405180910390fd5b610cb584848484035f611084565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d2c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610d239190611a28565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d9c575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d939190611a28565b60405180910390fd5b610da7838383611261565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e1c575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e139190611a28565b60405180910390fd5b610e275f8383611261565b5050565b5f5f610e35611359565b90508091505090565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610eac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea390611e3e565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff163b11610f05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efc90611ea6565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610f6d57506040513d601f19601f82011682018060405250810190610f6a9190611c5f565b60015b610fac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa390611f34565b60405180910390fd5b815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b610ff7611382565b61100182826113c2565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611075575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161106c9190611a28565b60405180910390fd5b611080825f83611261565b5050565b5f61108d610be9565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036110ff575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016110f69190611a28565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361116f575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016111669190611a28565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550811561125a578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051611251919061183d565b60405180910390a35b5050505050565b61126c8383836113fe565b5f61127561162d565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112dc90611fc2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663c082f03f6001548686866040518563ffffffff1660e01b81526004016113269493929190611fe0565b5f604051808303815f87803b15801561133d575f5ffd5b505af115801561134f573d5f5f3e3d5ffd5b5050505050505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b61138a611671565b6113c0576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6113ca611382565b5f6113d3610be9565b9050828160030190816113e691906121ba565b50818160040190816113f891906121ba565b50505050565b5f611407610be9565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361145b5781816002015f82825461144f91906122b6565b9250508190555061152d565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050828110156114e6578481846040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016114dd93929190611dbf565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115765781816002015f82825403925050819055506115c2565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161161f919061183d565b60405180910390a350505050565b5f61166c6040518060400160405280601081526020017f6574662d746f6b656e2d6576656e747300000000000000000000000000000000815250610474565b905090565b5f61167a610e2b565b5f0160089054906101000a900460ff16905090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6116d18261168f565b6116db8185611699565b93506116eb8185602086016116a9565b6116f4816116b7565b840191505092915050565b5f6020820190508181035f83015261171781846116c7565b905092915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61175982611730565b9050919050565b6117698161174f565b8114611773575f5ffd5b50565b5f8135905061178481611760565b92915050565b5f819050919050565b61179c8161178a565b81146117a6575f5ffd5b50565b5f813590506117b781611793565b92915050565b5f5f604083850312156117d3576117d2611728565b5b5f6117e085828601611776565b92505060206117f1858286016117a9565b9150509250929050565b5f8115159050919050565b61180f816117fb565b82525050565b5f6020820190506118285f830184611806565b92915050565b6118378161178a565b82525050565b5f6020820190506118505f83018461182e565b92915050565b5f5f5f6060848603121561186d5761186c611728565b5b5f61187a86828701611776565b935050602061188b86828701611776565b925050604061189c868287016117a9565b9150509250925092565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6118e4826116b7565b810181811067ffffffffffffffff82111715611903576119026118ae565b5b80604052505050565b5f61191561171f565b905061192182826118db565b919050565b5f67ffffffffffffffff8211156119405761193f6118ae565b5b611949826116b7565b9050602081019050919050565b828183375f83830152505050565b5f61197661197184611926565b61190c565b905082815260208101848484011115611992576119916118aa565b5b61199d848285611956565b509392505050565b5f82601f8301126119b9576119b86118a6565b5b81356119c9848260208601611964565b91505092915050565b5f602082840312156119e7576119e6611728565b5b5f82013567ffffffffffffffff811115611a0457611a0361172c565b5b611a10848285016119a5565b91505092915050565b611a228161174f565b82525050565b5f602082019050611a3b5f830184611a19565b92915050565b5f60ff82169050919050565b611a5681611a41565b82525050565b5f602082019050611a6f5f830184611a4d565b92915050565b5f819050919050565b5f611a98611a93611a8e84611730565b611a75565b611730565b9050919050565b5f611aa982611a7e565b9050919050565b5f611aba82611a9f565b9050919050565b611aca81611ab0565b82525050565b5f602082019050611ae35f830184611ac1565b92915050565b5f5f5f5f60808587031215611b0157611b00611728565b5b5f611b0e878288016117a9565b945050602085013567ffffffffffffffff811115611b2f57611b2e61172c565b5b611b3b878288016119a5565b935050604085013567ffffffffffffffff811115611b5c57611b5b61172c565b5b611b68878288016119a5565b9250506060611b7987828801611776565b91505092959194509250565b5f60208284031215611b9a57611b99611728565b5b5f611ba784828501611776565b91505092915050565b5f5f60408385031215611bc657611bc5611728565b5b5f611bd385828601611776565b9250506020611be485828601611776565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611c3257607f821691505b602082108103611c4557611c44611bee565b5b50919050565b5f81519050611c5981611760565b92915050565b5f60208284031215611c7457611c73611728565b5b5f611c8184828501611c4b565b91505092915050565b7f6d73672e73656e646572206973206e6f742065746620726f75746572000000005f82015250565b5f611cbe601c83611699565b9150611cc982611c8a565b602082019050919050565b5f6020820190508181035f830152611ceb81611cb2565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f611d28611d23611d1e84611cf2565b611a75565b611cfb565b9050919050565b611d3881611d0e565b82525050565b5f602082019050611d515f830184611d2f565b92915050565b7f43616c6c6572206973206e6f7420746865206f776e65720000000000000000005f82015250565b5f611d8b601783611699565b9150611d9682611d57565b602082019050919050565b5f6020820190508181035f830152611db881611d7f565b9050919050565b5f606082019050611dd25f830186611a19565b611ddf602083018561182e565b611dec604083018461182e565b949350505050565b7f4469726563746f72792063616e6e6f74206265207a65726f20616464726573735f82015250565b5f611e28602083611699565b9150611e3382611df4565b602082019050919050565b5f6020820190508181035f830152611e5581611e1c565b9050919050565b7f4469726563746f7279206d757374206265206120636f6e7472616374000000005f82015250565b5f611e90601c83611699565b9150611e9b82611e5c565b602082019050919050565b5f6020820190508181035f830152611ebd81611e84565b9050919050565b7f4469726563746f7279206164647265737320646f6573206e6f7420696d706c655f8201527f6d656e74206f776e657228290000000000000000000000000000000000000000602082015250565b5f611f1e602c83611699565b9150611f2982611ec4565b604082019050919050565b5f6020820190508181035f830152611f4b81611f12565b9050919050565b7f457466546f6b656e3a206576656e747320636f6e7472616374206e6f742073655f8201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b5f611fac602183611699565b9150611fb782611f52565b604082019050919050565b5f6020820190508181035f830152611fd981611fa0565b9050919050565b5f608082019050611ff35f83018761182e565b6120006020830186611a19565b61200d6040830185611a19565b61201a606083018461182e565b95945050505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261207f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612044565b6120898683612044565b95508019841693508086168417925050509392505050565b5f6120bb6120b66120b18461178a565b611a75565b61178a565b9050919050565b5f819050919050565b6120d4836120a1565b6120e86120e0826120c2565b848454612050565b825550505050565b5f5f905090565b6120ff6120f0565b61210a8184846120cb565b505050565b5b8181101561212d576121225f826120f7565b600181019050612110565b5050565b601f8211156121725761214381612023565b61214c84612035565b8101602085101561215b578190505b61216f61216785612035565b83018261210f565b50505b505050565b5f82821c905092915050565b5f6121925f1984600802612177565b1980831691505092915050565b5f6121aa8383612183565b9150826002028217905092915050565b6121c38261168f565b67ffffffffffffffff8111156121dc576121db6118ae565b5b6121e68254611c1b565b6121f1828285612131565b5f60209050601f831160018114612222575f8415612210578287015190505b61221a858261219f565b865550612281565b601f19841661223086612023565b5f5b8281101561225757848901518255600182019150602085019450602081019050612232565b868310156122745784890151612270601f891682612183565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6122c08261178a565b91506122cb8361178a565b92508282019050808211156122e3576122e2612289565b5b9291505056fea26469706673582212200d673eab98b6c661ca292c3f3e8cb8388a1e2f0ae382c35194917cbcd8c523d564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x271C CODESIZE SUB DUP1 PUSH2 0x271C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x257 JUMP JUMPDEST DUP1 PUSH2 0x41 DUP2 PUSH2 0x48 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x3F0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD SWAP1 PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT PUSH2 0x10F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP1 PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x177 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x257 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD SWAP1 PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x226 DUP3 PUSH2 0x1FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x236 DUP2 PUSH2 0x21C JUMP JUMPDEST DUP2 EQ PUSH2 0x240 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x251 DUP2 PUSH2 0x22D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26C JUMPI PUSH2 0x26B PUSH2 0x1F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x279 DUP5 DUP3 DUP6 ADD PUSH2 0x243 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4469726563746F72792063616E6E6F74206265207A65726F2061646472657373 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C6 PUSH1 0x20 DUP4 PUSH2 0x282 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D1 DUP3 PUSH2 0x292 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F3 DUP2 PUSH2 0x2BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206D757374206265206120636F6E747261637400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x32E PUSH1 0x1C DUP4 PUSH2 0x282 JUMP JUMPDEST SWAP2 POP PUSH2 0x339 DUP3 PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x35B DUP2 PUSH2 0x322 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206164647265737320646F6573206E6F7420696D706C65 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D656E74206F776E657228290000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3BC PUSH1 0x2C DUP4 PUSH2 0x282 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C7 DUP3 PUSH2 0x362 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3E9 DUP2 PUSH2 0x3B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x231F DUP1 PUSH2 0x3FD PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6EBD362C GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xBA4C7BE1 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xCFA36F3D EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x33F JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6EBD362C EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29B JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x27262618 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x27262618 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x658A847A EQ PUSH2 0x213 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x17BD JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1856 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0x474 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x17BD JUMP JUMPDEST PUSH2 0x51C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21B PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1AE9 JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1B85 JUMP JUMPDEST PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH2 0x841 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x17BD JUMP JUMPDEST PUSH2 0x972 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x17BD JUMP JUMPDEST PUSH2 0xA2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x1B85 JUMP JUMPDEST PUSH2 0xA4D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x329 PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x1BB0 JUMP JUMPDEST PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x37A PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x38B SWAP1 PUSH2 0x1C1B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B7 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x402 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x402 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x417 PUSH2 0xC10 JUMP JUMPDEST SWAP1 POP PUSH2 0x424 DUP2 DUP6 DUP6 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x439 PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x450 PUSH2 0xC10 JUMP JUMPDEST SWAP1 POP PUSH2 0x45D DUP6 DUP3 DUP6 PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x468 DUP6 DUP6 DUP6 PUSH2 0xCBC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x27262618 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4E9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x1C5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x55A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6574662D726F7574657200000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x474 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BE SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5D1 DUP3 DUP3 PUSH2 0xDAC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x602 PUSH2 0xE2B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x64A JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x67D JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x68B JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x70F JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x755 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDC149F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x778 DUP7 PUSH2 0xE3E JUMP JUMPDEST PUSH2 0x782 DUP9 DUP9 PUSH2 0xFEF JUMP JUMPDEST DUP9 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x7E3 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x7DA SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7F8 PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8AB JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CF SWAP2 SWAP1 PUSH2 0x1C5F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x8DF PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x8F0 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x91C SWAP1 PUSH2 0x1C1B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x967 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x93E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x967 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x94A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x9B0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6574662D726F7574657200000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x474 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA14 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA27 DUP3 DUP3 PUSH2 0x1005 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xA35 PUSH2 0xC10 JUMP JUMPDEST SWAP1 POP PUSH2 0xA42 DUP2 DUP6 DUP6 PUSH2 0xCBC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xADA SWAP2 SWAP1 PUSH2 0x1C5F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3E SWAP1 PUSH2 0x1DA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB50 DUP2 PUSH2 0xE3E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xB63 PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC24 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1084 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC34 DUP5 DUP5 PUSH2 0xB59 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xCB6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCA7 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB5 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1084 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD2C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD23 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD9C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD93 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDA7 DUP4 DUP4 DUP4 PUSH2 0x1261 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE1C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE13 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE27 PUSH0 DUP4 DUP4 PUSH2 0x1261 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xE35 PUSH2 0x1359 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA3 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT PUSH2 0xF05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFC SWAP1 PUSH2 0x1EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF6D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF6A SWAP2 SWAP1 PUSH2 0x1C5F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA3 SWAP1 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xFF7 PUSH2 0x1382 JUMP JUMPDEST PUSH2 0x1001 DUP3 DUP3 PUSH2 0x13C2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1075 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106C SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1080 DUP3 PUSH0 DUP4 PUSH2 0x1261 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x108D PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10FF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F6 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x116F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1166 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x125A JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1251 SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x126C DUP4 DUP4 DUP4 PUSH2 0x13FE JUMP JUMPDEST PUSH0 PUSH2 0x1275 PUSH2 0x162D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DC SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC082F03F PUSH1 0x1 SLOAD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1326 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x133D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x134F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x138A PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x13C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x13CA PUSH2 0x1382 JUMP JUMPDEST PUSH0 PUSH2 0x13D3 PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x13E6 SWAP2 SWAP1 PUSH2 0x21BA JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x13F8 SWAP2 SWAP1 PUSH2 0x21BA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1407 PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x145B JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x144F SWAP2 SWAP1 PUSH2 0x22B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x152D JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x14E6 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1576 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x15C2 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x161F SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x166C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6574662D746F6B656E2D6576656E747300000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x474 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x167A PUSH2 0xE2B JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16D1 DUP3 PUSH2 0x168F JUMP JUMPDEST PUSH2 0x16DB DUP2 DUP6 PUSH2 0x1699 JUMP JUMPDEST SWAP4 POP PUSH2 0x16EB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x16F4 DUP2 PUSH2 0x16B7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1717 DUP2 DUP5 PUSH2 0x16C7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1759 DUP3 PUSH2 0x1730 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1769 DUP2 PUSH2 0x174F JUMP JUMPDEST DUP2 EQ PUSH2 0x1773 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1784 DUP2 PUSH2 0x1760 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x179C DUP2 PUSH2 0x178A JUMP JUMPDEST DUP2 EQ PUSH2 0x17A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17B7 DUP2 PUSH2 0x1793 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17D3 JUMPI PUSH2 0x17D2 PUSH2 0x1728 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17E0 DUP6 DUP3 DUP7 ADD PUSH2 0x1776 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17F1 DUP6 DUP3 DUP7 ADD PUSH2 0x17A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180F DUP2 PUSH2 0x17FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1828 PUSH0 DUP4 ADD DUP5 PUSH2 0x1806 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1837 DUP2 PUSH2 0x178A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1850 PUSH0 DUP4 ADD DUP5 PUSH2 0x182E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x186D JUMPI PUSH2 0x186C PUSH2 0x1728 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x187A DUP7 DUP3 DUP8 ADD PUSH2 0x1776 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x188B DUP7 DUP3 DUP8 ADD PUSH2 0x1776 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x189C DUP7 DUP3 DUP8 ADD PUSH2 0x17A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x18E4 DUP3 PUSH2 0x16B7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1903 JUMPI PUSH2 0x1902 PUSH2 0x18AE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1915 PUSH2 0x171F JUMP JUMPDEST SWAP1 POP PUSH2 0x1921 DUP3 DUP3 PUSH2 0x18DB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1940 JUMPI PUSH2 0x193F PUSH2 0x18AE JUMP JUMPDEST JUMPDEST PUSH2 0x1949 DUP3 PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1976 PUSH2 0x1971 DUP5 PUSH2 0x1926 JUMP JUMPDEST PUSH2 0x190C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1992 JUMPI PUSH2 0x1991 PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH2 0x199D DUP5 DUP3 DUP6 PUSH2 0x1956 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19B9 JUMPI PUSH2 0x19B8 PUSH2 0x18A6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19C9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1964 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19E7 JUMPI PUSH2 0x19E6 PUSH2 0x1728 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A04 JUMPI PUSH2 0x1A03 PUSH2 0x172C JUMP JUMPDEST JUMPDEST PUSH2 0x1A10 DUP5 DUP3 DUP6 ADD PUSH2 0x19A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A22 DUP2 PUSH2 0x174F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A3B PUSH0 DUP4 ADD DUP5 PUSH2 0x1A19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A56 DUP2 PUSH2 0x1A41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A6F PUSH0 DUP4 ADD DUP5 PUSH2 0x1A4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A98 PUSH2 0x1A93 PUSH2 0x1A8E DUP5 PUSH2 0x1730 JUMP JUMPDEST PUSH2 0x1A75 JUMP JUMPDEST PUSH2 0x1730 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AA9 DUP3 PUSH2 0x1A7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ABA DUP3 PUSH2 0x1A9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ACA DUP2 PUSH2 0x1AB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AE3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B01 JUMPI PUSH2 0x1B00 PUSH2 0x1728 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B0E DUP8 DUP3 DUP9 ADD PUSH2 0x17A9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B2F JUMPI PUSH2 0x1B2E PUSH2 0x172C JUMP JUMPDEST JUMPDEST PUSH2 0x1B3B DUP8 DUP3 DUP9 ADD PUSH2 0x19A5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B5C JUMPI PUSH2 0x1B5B PUSH2 0x172C JUMP JUMPDEST JUMPDEST PUSH2 0x1B68 DUP8 DUP3 DUP9 ADD PUSH2 0x19A5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1B79 DUP8 DUP3 DUP9 ADD PUSH2 0x1776 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B9A JUMPI PUSH2 0x1B99 PUSH2 0x1728 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BA7 DUP5 DUP3 DUP6 ADD PUSH2 0x1776 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BC6 JUMPI PUSH2 0x1BC5 PUSH2 0x1728 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BD3 DUP6 DUP3 DUP7 ADD PUSH2 0x1776 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BE4 DUP6 DUP3 DUP7 ADD PUSH2 0x1776 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C32 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C45 JUMPI PUSH2 0x1C44 PUSH2 0x1BEE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C59 DUP2 PUSH2 0x1760 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C74 JUMPI PUSH2 0x1C73 PUSH2 0x1728 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C81 DUP5 DUP3 DUP6 ADD PUSH2 0x1C4B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6D73672E73656E646572206973206E6F742065746620726F7574657200000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CBE PUSH1 0x1C DUP4 PUSH2 0x1699 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC9 DUP3 PUSH2 0x1C8A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CEB DUP2 PUSH2 0x1CB2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D28 PUSH2 0x1D23 PUSH2 0x1D1E DUP5 PUSH2 0x1CF2 JUMP JUMPDEST PUSH2 0x1A75 JUMP JUMPDEST PUSH2 0x1CFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D38 DUP2 PUSH2 0x1D0E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D51 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420746865206F776E6572000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D8B PUSH1 0x17 DUP4 PUSH2 0x1699 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D96 DUP3 PUSH2 0x1D57 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DB8 DUP2 PUSH2 0x1D7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DD2 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A19 JUMP JUMPDEST PUSH2 0x1DDF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x1DEC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x182E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4469726563746F72792063616E6E6F74206265207A65726F2061646472657373 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E28 PUSH1 0x20 DUP4 PUSH2 0x1699 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E33 DUP3 PUSH2 0x1DF4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E55 DUP2 PUSH2 0x1E1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206D757374206265206120636F6E747261637400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E90 PUSH1 0x1C DUP4 PUSH2 0x1699 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E9B DUP3 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EBD DUP2 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206164647265737320646F6573206E6F7420696D706C65 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D656E74206F776E657228290000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F1E PUSH1 0x2C DUP4 PUSH2 0x1699 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F29 DUP3 PUSH2 0x1EC4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F4B DUP2 PUSH2 0x1F12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x457466546F6B656E3A206576656E747320636F6E7472616374206E6F74207365 PUSH0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FAC PUSH1 0x21 DUP4 PUSH2 0x1699 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB7 DUP3 PUSH2 0x1F52 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FD9 DUP2 PUSH2 0x1FA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FF3 PUSH0 DUP4 ADD DUP8 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x2000 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A19 JUMP JUMPDEST PUSH2 0x200D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1A19 JUMP JUMPDEST PUSH2 0x201A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x182E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x207F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x2089 DUP7 DUP4 PUSH2 0x2044 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20BB PUSH2 0x20B6 PUSH2 0x20B1 DUP5 PUSH2 0x178A JUMP JUMPDEST PUSH2 0x1A75 JUMP JUMPDEST PUSH2 0x178A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20D4 DUP4 PUSH2 0x20A1 JUMP JUMPDEST PUSH2 0x20E8 PUSH2 0x20E0 DUP3 PUSH2 0x20C2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2050 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x20FF PUSH2 0x20F0 JUMP JUMPDEST PUSH2 0x210A DUP2 DUP5 DUP5 PUSH2 0x20CB JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x212D JUMPI PUSH2 0x2122 PUSH0 DUP3 PUSH2 0x20F7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2110 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2172 JUMPI PUSH2 0x2143 DUP2 PUSH2 0x2023 JUMP JUMPDEST PUSH2 0x214C DUP5 PUSH2 0x2035 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x215B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x216F PUSH2 0x2167 DUP6 PUSH2 0x2035 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x210F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2192 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2177 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21AA DUP4 DUP4 PUSH2 0x2183 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21C3 DUP3 PUSH2 0x168F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21DC JUMPI PUSH2 0x21DB PUSH2 0x18AE JUMP JUMPDEST JUMPDEST PUSH2 0x21E6 DUP3 SLOAD PUSH2 0x1C1B JUMP JUMPDEST PUSH2 0x21F1 DUP3 DUP3 DUP6 PUSH2 0x2131 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2222 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2210 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x221A DUP6 DUP3 PUSH2 0x219F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2281 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2230 DUP7 PUSH2 0x2023 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2257 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2232 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2274 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2270 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2183 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x22C0 DUP3 PUSH2 0x178A JUMP JUMPDEST SWAP2 POP PUSH2 0x22CB DUP4 PUSH2 0x178A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22E3 JUMPI PUSH2 0x22E2 PUSH2 0x2289 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD PUSH8 0x3EAB98B6C661CA29 0x2C EXTCODEHASH RETURNDATACOPY DUP13 0xB8 CODESIZE DUP11 0x1E 0x2F EXP CALLF 0x82C3 MLOAD SWAP5 SWAP2 PUSH29 0xBCD8C523D564736F6C634300081E003300000000000000000000000000 ",
							"sourceMap": "635:1839:9:-:0;;;939:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;983:10;412:25:6;426:10;412:13;;;:25;;:::i;:::-;370:94;939:215:9;635:1839;;589:461:6;681:1;659:24;;:10;:24;;;651:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;763:1;738:10;:22;;;:26;730:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;861:10;850:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;846:198;;979:54;;;;;;;;;;:::i;:::-;;;;;;;;846:198;936:10;913:9;;:34;;;;;;;;;;;;;;;;;;881:77;589:461;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:169::-;1286:11;1320:6;1315:3;1308:19;1360:4;1355:3;1351:14;1336:29;;1202:169;;;;:::o;1377:182::-;1517:34;1513:1;1505:6;1501:14;1494:58;1377:182;:::o;1565:366::-;1707:3;1728:67;1792:2;1787:3;1728:67;:::i;:::-;1721:74;;1804:93;1893:3;1804:93;:::i;:::-;1922:2;1917:3;1913:12;1906:19;;1565:366;;;:::o;1937:419::-;2103:4;2141:2;2130:9;2126:18;2118:26;;2190:9;2184:4;2180:20;2176:1;2165:9;2161:17;2154:47;2218:131;2344:4;2218:131;:::i;:::-;2210:139;;1937:419;;;:::o;2362:178::-;2502:30;2498:1;2490:6;2486:14;2479:54;2362:178;:::o;2546:366::-;2688:3;2709:67;2773:2;2768:3;2709:67;:::i;:::-;2702:74;;2785:93;2874:3;2785:93;:::i;:::-;2903:2;2898:3;2894:12;2887:19;;2546:366;;;:::o;2918:419::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3171:9;3165:4;3161:20;3157:1;3146:9;3142:17;3135:47;3199:131;3325:4;3199:131;:::i;:::-;3191:139;;2918:419;;;:::o;3343:231::-;3483:34;3479:1;3471:6;3467:14;3460:58;3552:14;3547:2;3539:6;3535:15;3528:39;3343:231;:::o;3580:366::-;3722:3;3743:67;3807:2;3802:3;3743:67;:::i;:::-;3736:74;;3819:93;3908:3;3819:93;:::i;:::-;3937:2;3932:3;3928:12;3921:19;;3580:366;;;:::o;3952:419::-;4118:4;4156:2;4145:9;4141:18;4133:26;;4205:9;4199:4;4195:20;4191:1;4180:9;4176:17;4169:47;4233:131;4359:4;4233:131;:::i;:::-;4225:139;;3952:419;;;:::o;635:1839:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Directory_1190": {
									"entryPoint": 1493,
									"id": 1190,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20_init_335": {
									"entryPoint": 4079,
									"id": 335,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_363": {
									"entryPoint": 5058,
									"id": 363,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_approve_767": {
									"entryPoint": 3095,
									"id": 767,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_835": {
									"entryPoint": 4228,
									"id": 835,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_749": {
									"entryPoint": 4101,
									"id": 749,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_175": {
									"entryPoint": 4994,
									"id": 175,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getERC20Storage_319": {
									"entryPoint": 3049,
									"id": 319,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_266": {
									"entryPoint": 3627,
									"id": 266,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_252": {
									"entryPoint": 4953,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_243": {
									"entryPoint": 5745,
									"id": 243,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_716": {
									"entryPoint": 3500,
									"id": 716,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_912": {
									"entryPoint": 3088,
									"id": 912,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setDirectory_1260": {
									"entryPoint": 3646,
									"id": 1260,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_883": {
									"entryPoint": 3113,
									"id": 883,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_591": {
									"entryPoint": 3260,
									"id": 591,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1514": {
									"entryPoint": 4705,
									"id": 1514,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_683": {
									"entryPoint": 5118,
									"id": 683,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_488": {
									"entryPoint": 2905,
									"id": 488,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_512": {
									"entryPoint": 1037,
									"id": 512,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_440": {
									"entryPoint": 2030,
									"id": 440,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1466": {
									"entryPoint": 2418,
									"id": 1466,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@changeDirectoryAddress_1212": {
									"entryPoint": 2637,
									"id": 1212,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_404": {
									"entryPoint": 1300,
									"id": 404,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@etfId_1385": {
									"entryPoint": 2899,
									"id": 1385,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fetchFromDirectory_1297": {
									"entryPoint": 1140,
									"id": 1297,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getEtfTokenEvents_1362": {
									"entryPoint": 5677,
									"id": 1362,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_1434": {
									"entryPoint": 1529,
									"id": 1434,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@mint_1450": {
									"entryPoint": 1308,
									"id": 1450,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_379": {
									"entryPoint": 879,
									"id": 379,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_1284": {
									"entryPoint": 2113,
									"id": 1284,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_395": {
									"entryPoint": 2260,
									"id": 395,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_420": {
									"entryPoint": 1071,
									"id": 420,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_544": {
									"entryPoint": 1094,
									"id": 544,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_464": {
									"entryPoint": 2603,
									"id": 464,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 6500,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 7243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 6565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 7263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 6610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_address": {
									"entryPoint": 6889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IDirectory_$1187_to_t_address_fromStack": {
									"entryPoint": 6849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 7471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7615,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IDirectory_$1187__to_t_address__fromStack_reversed": {
									"entryPoint": 6864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 7486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_address_t_uint256__to_t_uint256_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8160,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5919,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 6438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 8227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 8497,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 5967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 7410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 7419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 8463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_IDirectory_$1187_to_t_address": {
									"entryPoint": 6832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 7438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 8634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6486,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5801,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 8607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 6773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 8579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8841,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7150,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6318,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6310,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6314,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5932,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5928,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 8567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33": {
									"entryPoint": 7511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679": {
									"entryPoint": 7772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758": {
									"entryPoint": 7668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af": {
									"entryPoint": 7876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9": {
									"entryPoint": 7306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4": {
									"entryPoint": 8018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8272,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8395,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8432,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:24023:10",
										"nodeType": "YulBlock",
										"src": "0:24023:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:10",
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nativeSrc": "77:22:10",
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nativeSrc": "87:12:10",
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:10",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:10",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nativeSrc": "208:73:10",
													"nodeType": "YulBlock",
													"src": "208:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:10"
																},
																"nativeSrc": "218:19:10",
																"nodeType": "YulFunctionCall",
																"src": "218:19:10"
															},
															"nativeSrc": "218:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:10"
														},
														{
															"nativeSrc": "246:29:10",
															"nodeType": "YulAssignment",
															"src": "246:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:10",
																		"nodeType": "YulLiteral",
																		"src": "270:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:10"
																},
																"nativeSrc": "261:14:10",
																"nodeType": "YulFunctionCall",
																"src": "261:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:10",
														"nodeType": "YulTypedName",
														"src": "180:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:10",
														"nodeType": "YulTypedName",
														"src": "185:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:10",
														"nodeType": "YulTypedName",
														"src": "196:11:10",
														"type": ""
													}
												],
												"src": "112:169:10"
											},
											{
												"body": {
													"nativeSrc": "349:77:10",
													"nodeType": "YulBlock",
													"src": "349:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:10"
																},
																"nativeSrc": "360:23:10",
																"nodeType": "YulFunctionCall",
																"src": "360:23:10"
															},
															"nativeSrc": "360:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:10"
																		},
																		"nativeSrc": "399:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:10",
																		"nodeType": "YulLiteral",
																		"src": "417:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:10"
																},
																"nativeSrc": "392:27:10",
																"nodeType": "YulFunctionCall",
																"src": "392:27:10"
															},
															"nativeSrc": "392:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:10",
														"nodeType": "YulTypedName",
														"src": "331:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:10",
														"nodeType": "YulTypedName",
														"src": "336:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:10",
														"nodeType": "YulTypedName",
														"src": "341:6:10",
														"type": ""
													}
												],
												"src": "287:139:10"
											},
											{
												"body": {
													"nativeSrc": "480:54:10",
													"nodeType": "YulBlock",
													"src": "480:54:10",
													"statements": [
														{
															"nativeSrc": "490:38:10",
															"nodeType": "YulAssignment",
															"src": "490:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:10",
																				"nodeType": "YulLiteral",
																				"src": "515:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:10"
																		},
																		"nativeSrc": "504:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:10",
																				"nodeType": "YulLiteral",
																				"src": "524:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:10"
																		},
																		"nativeSrc": "520:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:10"
																},
																"nativeSrc": "500:28:10",
																"nodeType": "YulFunctionCall",
																"src": "500:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:10",
														"nodeType": "YulTypedName",
														"src": "463:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:10",
														"nodeType": "YulTypedName",
														"src": "473:6:10",
														"type": ""
													}
												],
												"src": "432:102:10"
											},
											{
												"body": {
													"nativeSrc": "632:285:10",
													"nodeType": "YulBlock",
													"src": "632:285:10",
													"statements": [
														{
															"nativeSrc": "642:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:10"
																},
																"nativeSrc": "656:39:10",
																"nodeType": "YulFunctionCall",
																"src": "656:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:10",
																	"nodeType": "YulTypedName",
																	"src": "646:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:10",
															"nodeType": "YulAssignment",
															"src": "704:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:10"
																},
																"nativeSrc": "711:71:10",
																"nodeType": "YulFunctionCall",
																"src": "711:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:10",
																				"nodeType": "YulLiteral",
																				"src": "837:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:10"
																		},
																		"nativeSrc": "826:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:10"
																},
																"nativeSrc": "791:65:10",
																"nodeType": "YulFunctionCall",
																"src": "791:65:10"
															},
															"nativeSrc": "791:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:10"
														},
														{
															"nativeSrc": "865:46:10",
															"nodeType": "YulAssignment",
															"src": "865:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:10"
																		},
																		"nativeSrc": "881:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:10"
																},
																"nativeSrc": "872:39:10",
																"nodeType": "YulFunctionCall",
																"src": "872:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:10",
														"nodeType": "YulTypedName",
														"src": "613:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:10",
														"nodeType": "YulTypedName",
														"src": "620:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:10",
														"nodeType": "YulTypedName",
														"src": "628:3:10",
														"type": ""
													}
												],
												"src": "540:377:10"
											},
											{
												"body": {
													"nativeSrc": "1041:195:10",
													"nodeType": "YulBlock",
													"src": "1041:195:10",
													"statements": [
														{
															"nativeSrc": "1051:26:10",
															"nodeType": "YulAssignment",
															"src": "1051:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:10"
																},
																"nativeSrc": "1059:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:10"
																		},
																		"nativeSrc": "1094:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:10"
																		},
																		"nativeSrc": "1113:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:10"
																},
																"nativeSrc": "1087:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:10"
															},
															"nativeSrc": "1087:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:10"
														},
														{
															"nativeSrc": "1143:86:10",
															"nodeType": "YulAssignment",
															"src": "1143:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:10"
																},
																"nativeSrc": "1151:78:10",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:10",
														"nodeType": "YulTypedName",
														"src": "1013:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:10",
														"nodeType": "YulTypedName",
														"src": "1025:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:10",
														"nodeType": "YulTypedName",
														"src": "1036:4:10",
														"type": ""
													}
												],
												"src": "923:313:10"
											},
											{
												"body": {
													"nativeSrc": "1282:35:10",
													"nodeType": "YulBlock",
													"src": "1282:35:10",
													"statements": [
														{
															"nativeSrc": "1292:19:10",
															"nodeType": "YulAssignment",
															"src": "1292:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:10"
																},
																"nativeSrc": "1302:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:10",
														"nodeType": "YulTypedName",
														"src": "1275:6:10",
														"type": ""
													}
												],
												"src": "1242:75:10"
											},
											{
												"body": {
													"nativeSrc": "1412:28:10",
													"nodeType": "YulBlock",
													"src": "1412:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:10"
																},
																"nativeSrc": "1422:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:10"
															},
															"nativeSrc": "1422:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:10"
											},
											{
												"body": {
													"nativeSrc": "1535:28:10",
													"nodeType": "YulBlock",
													"src": "1535:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:10"
																},
																"nativeSrc": "1545:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:10"
															},
															"nativeSrc": "1545:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:10"
											},
											{
												"body": {
													"nativeSrc": "1614:81:10",
													"nodeType": "YulBlock",
													"src": "1614:81:10",
													"statements": [
														{
															"nativeSrc": "1624:65:10",
															"nodeType": "YulAssignment",
															"src": "1624:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:10"
																},
																"nativeSrc": "1635:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:10",
														"nodeType": "YulTypedName",
														"src": "1596:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:10",
														"nodeType": "YulTypedName",
														"src": "1606:7:10",
														"type": ""
													}
												],
												"src": "1569:126:10"
											},
											{
												"body": {
													"nativeSrc": "1746:51:10",
													"nodeType": "YulBlock",
													"src": "1746:51:10",
													"statements": [
														{
															"nativeSrc": "1756:35:10",
															"nodeType": "YulAssignment",
															"src": "1756:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:10"
																},
																"nativeSrc": "1767:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:10",
														"nodeType": "YulTypedName",
														"src": "1728:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:10",
														"nodeType": "YulTypedName",
														"src": "1738:7:10",
														"type": ""
													}
												],
												"src": "1701:96:10"
											},
											{
												"body": {
													"nativeSrc": "1846:79:10",
													"nodeType": "YulBlock",
													"src": "1846:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:10",
																"nodeType": "YulBlock",
																"src": "1903:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:10"
																			},
																			"nativeSrc": "1905:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:10"
																		},
																		"nativeSrc": "1905:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:10"
																				},
																				"nativeSrc": "1876:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:10"
																		},
																		"nativeSrc": "1866:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:10"
																},
																"nativeSrc": "1859:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:10"
															},
															"nativeSrc": "1856:63:10",
															"nodeType": "YulIf",
															"src": "1856:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:10",
														"nodeType": "YulTypedName",
														"src": "1839:5:10",
														"type": ""
													}
												],
												"src": "1803:122:10"
											},
											{
												"body": {
													"nativeSrc": "1983:87:10",
													"nodeType": "YulBlock",
													"src": "1983:87:10",
													"statements": [
														{
															"nativeSrc": "1993:29:10",
															"nodeType": "YulAssignment",
															"src": "1993:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:10"
																},
																"nativeSrc": "2002:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:10"
																},
																"nativeSrc": "2031:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:10"
															},
															"nativeSrc": "2031:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:10",
														"nodeType": "YulTypedName",
														"src": "1961:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:10",
														"nodeType": "YulTypedName",
														"src": "1969:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:10",
														"nodeType": "YulTypedName",
														"src": "1977:5:10",
														"type": ""
													}
												],
												"src": "1931:139:10"
											},
											{
												"body": {
													"nativeSrc": "2121:32:10",
													"nodeType": "YulBlock",
													"src": "2121:32:10",
													"statements": [
														{
															"nativeSrc": "2131:16:10",
															"nodeType": "YulAssignment",
															"src": "2131:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:10",
																"nodeType": "YulIdentifier",
																"src": "2142:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:10",
														"nodeType": "YulTypedName",
														"src": "2103:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:10",
														"nodeType": "YulTypedName",
														"src": "2113:7:10",
														"type": ""
													}
												],
												"src": "2076:77:10"
											},
											{
												"body": {
													"nativeSrc": "2202:79:10",
													"nodeType": "YulBlock",
													"src": "2202:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:10",
																"nodeType": "YulBlock",
																"src": "2259:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:10"
																			},
																			"nativeSrc": "2261:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:10"
																		},
																		"nativeSrc": "2261:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:10"
																				},
																				"nativeSrc": "2232:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:10"
																		},
																		"nativeSrc": "2222:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:10"
																},
																"nativeSrc": "2215:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:10"
															},
															"nativeSrc": "2212:63:10",
															"nodeType": "YulIf",
															"src": "2212:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:10",
														"nodeType": "YulTypedName",
														"src": "2195:5:10",
														"type": ""
													}
												],
												"src": "2159:122:10"
											},
											{
												"body": {
													"nativeSrc": "2339:87:10",
													"nodeType": "YulBlock",
													"src": "2339:87:10",
													"statements": [
														{
															"nativeSrc": "2349:29:10",
															"nodeType": "YulAssignment",
															"src": "2349:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:10"
																},
																"nativeSrc": "2358:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:10"
																},
																"nativeSrc": "2387:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:10"
															},
															"nativeSrc": "2387:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:10",
														"nodeType": "YulTypedName",
														"src": "2317:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:10",
														"nodeType": "YulTypedName",
														"src": "2325:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:10",
														"nodeType": "YulTypedName",
														"src": "2333:5:10",
														"type": ""
													}
												],
												"src": "2287:139:10"
											},
											{
												"body": {
													"nativeSrc": "2515:391:10",
													"nodeType": "YulBlock",
													"src": "2515:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:10",
																"nodeType": "YulBlock",
																"src": "2561:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:10"
																			},
																			"nativeSrc": "2563:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:10"
																		},
																		"nativeSrc": "2563:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:10"
																		},
																		"nativeSrc": "2532:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:10"
																},
																"nativeSrc": "2528:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:10"
															},
															"nativeSrc": "2525:119:10",
															"nodeType": "YulIf",
															"src": "2525:119:10"
														},
														{
															"nativeSrc": "2654:117:10",
															"nodeType": "YulBlock",
															"src": "2654:117:10",
															"statements": [
																{
																	"nativeSrc": "2669:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:10"
																				},
																				"nativeSrc": "2729:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:10"
																		},
																		"nativeSrc": "2708:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:10",
															"nodeType": "YulBlock",
															"src": "2781:118:10",
															"statements": [
																{
																	"nativeSrc": "2796:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:10"
																				},
																				"nativeSrc": "2857:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:10"
																		},
																		"nativeSrc": "2836:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:10",
														"nodeType": "YulTypedName",
														"src": "2477:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:10",
														"nodeType": "YulTypedName",
														"src": "2488:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:10",
														"nodeType": "YulTypedName",
														"src": "2500:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:10",
														"nodeType": "YulTypedName",
														"src": "2508:6:10",
														"type": ""
													}
												],
												"src": "2432:474:10"
											},
											{
												"body": {
													"nativeSrc": "2954:48:10",
													"nodeType": "YulBlock",
													"src": "2954:48:10",
													"statements": [
														{
															"nativeSrc": "2964:32:10",
															"nodeType": "YulAssignment",
															"src": "2964:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:10"
																		},
																		"nativeSrc": "2982:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:10"
																},
																"nativeSrc": "2975:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:10",
														"nodeType": "YulTypedName",
														"src": "2936:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:10",
														"nodeType": "YulTypedName",
														"src": "2946:7:10",
														"type": ""
													}
												],
												"src": "2912:90:10"
											},
											{
												"body": {
													"nativeSrc": "3067:50:10",
													"nodeType": "YulBlock",
													"src": "3067:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:10"
																		},
																		"nativeSrc": "3089:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:10"
																},
																"nativeSrc": "3077:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:10"
															},
															"nativeSrc": "3077:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:10",
														"nodeType": "YulTypedName",
														"src": "3055:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:10",
														"nodeType": "YulTypedName",
														"src": "3062:3:10",
														"type": ""
													}
												],
												"src": "3008:109:10"
											},
											{
												"body": {
													"nativeSrc": "3215:118:10",
													"nodeType": "YulBlock",
													"src": "3215:118:10",
													"statements": [
														{
															"nativeSrc": "3225:26:10",
															"nodeType": "YulAssignment",
															"src": "3225:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:10"
																},
																"nativeSrc": "3233:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:10"
																		},
																		"nativeSrc": "3308:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:10"
																},
																"nativeSrc": "3261:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:10"
															},
															"nativeSrc": "3261:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:10",
														"nodeType": "YulTypedName",
														"src": "3187:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:10",
														"nodeType": "YulTypedName",
														"src": "3199:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:10",
														"nodeType": "YulTypedName",
														"src": "3210:4:10",
														"type": ""
													}
												],
												"src": "3123:210:10"
											},
											{
												"body": {
													"nativeSrc": "3404:53:10",
													"nodeType": "YulBlock",
													"src": "3404:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:10"
																		},
																		"nativeSrc": "3426:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:10"
																},
																"nativeSrc": "3414:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:10"
															},
															"nativeSrc": "3414:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:10",
														"nodeType": "YulTypedName",
														"src": "3392:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:10",
														"nodeType": "YulTypedName",
														"src": "3399:3:10",
														"type": ""
													}
												],
												"src": "3339:118:10"
											},
											{
												"body": {
													"nativeSrc": "3561:124:10",
													"nodeType": "YulBlock",
													"src": "3561:124:10",
													"statements": [
														{
															"nativeSrc": "3571:26:10",
															"nodeType": "YulAssignment",
															"src": "3571:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:10"
																},
																"nativeSrc": "3579:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:10"
																		},
																		"nativeSrc": "3660:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:10"
																},
																"nativeSrc": "3607:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:10"
															},
															"nativeSrc": "3607:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:10",
														"nodeType": "YulTypedName",
														"src": "3533:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:10",
														"nodeType": "YulTypedName",
														"src": "3545:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:10",
														"nodeType": "YulTypedName",
														"src": "3556:4:10",
														"type": ""
													}
												],
												"src": "3463:222:10"
											},
											{
												"body": {
													"nativeSrc": "3791:519:10",
													"nodeType": "YulBlock",
													"src": "3791:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:10",
																"nodeType": "YulBlock",
																"src": "3837:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:10"
																			},
																			"nativeSrc": "3839:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:10"
																		},
																		"nativeSrc": "3839:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:10"
																		},
																		"nativeSrc": "3808:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:10"
																},
																"nativeSrc": "3804:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:10"
															},
															"nativeSrc": "3801:119:10",
															"nodeType": "YulIf",
															"src": "3801:119:10"
														},
														{
															"nativeSrc": "3930:117:10",
															"nodeType": "YulBlock",
															"src": "3930:117:10",
															"statements": [
																{
																	"nativeSrc": "3945:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:10"
																				},
																				"nativeSrc": "4005:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:10"
																		},
																		"nativeSrc": "3984:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:10",
															"nodeType": "YulBlock",
															"src": "4057:118:10",
															"statements": [
																{
																	"nativeSrc": "4072:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:10"
																				},
																				"nativeSrc": "4133:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:10"
																		},
																		"nativeSrc": "4112:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:10",
															"nodeType": "YulBlock",
															"src": "4185:118:10",
															"statements": [
																{
																	"nativeSrc": "4200:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:10"
																				},
																				"nativeSrc": "4261:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:10"
																		},
																		"nativeSrc": "4240:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:10",
														"nodeType": "YulTypedName",
														"src": "3745:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:10",
														"nodeType": "YulTypedName",
														"src": "3756:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:10",
														"nodeType": "YulTypedName",
														"src": "3768:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:10",
														"nodeType": "YulTypedName",
														"src": "3776:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:10",
														"nodeType": "YulTypedName",
														"src": "3784:6:10",
														"type": ""
													}
												],
												"src": "3691:619:10"
											},
											{
												"body": {
													"nativeSrc": "4405:28:10",
													"nodeType": "YulBlock",
													"src": "4405:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4422:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4422:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4425:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4425:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4415:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4415:6:10"
																},
																"nativeSrc": "4415:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4415:12:10"
															},
															"nativeSrc": "4415:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "4415:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4316:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "4316:117:10"
											},
											{
												"body": {
													"nativeSrc": "4528:28:10",
													"nodeType": "YulBlock",
													"src": "4528:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4545:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4545:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4548:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4548:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4538:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4538:6:10"
																},
																"nativeSrc": "4538:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4538:12:10"
															},
															"nativeSrc": "4538:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "4538:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "4439:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "4439:117:10"
											},
											{
												"body": {
													"nativeSrc": "4590:152:10",
													"nodeType": "YulBlock",
													"src": "4590:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4607:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4607:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4610:77:10",
																		"nodeType": "YulLiteral",
																		"src": "4610:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4600:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4600:6:10"
																},
																"nativeSrc": "4600:88:10",
																"nodeType": "YulFunctionCall",
																"src": "4600:88:10"
															},
															"nativeSrc": "4600:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "4600:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4704:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4704:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4707:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4707:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4697:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4697:6:10"
																},
																"nativeSrc": "4697:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4697:15:10"
															},
															"nativeSrc": "4697:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4697:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4728:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4728:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4731:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4731:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4721:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4721:6:10"
																},
																"nativeSrc": "4721:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4721:15:10"
															},
															"nativeSrc": "4721:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4721:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4562:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "4562:180:10"
											},
											{
												"body": {
													"nativeSrc": "4791:238:10",
													"nodeType": "YulBlock",
													"src": "4791:238:10",
													"statements": [
														{
															"nativeSrc": "4801:58:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4801:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4823:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4823:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "4853:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4853:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4831:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "4831:21:10"
																		},
																		"nativeSrc": "4831:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4831:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4819:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4819:3:10"
																},
																"nativeSrc": "4819:40:10",
																"nodeType": "YulFunctionCall",
																"src": "4819:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4805:10:10",
																	"nodeType": "YulTypedName",
																	"src": "4805:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4970:22:10",
																"nodeType": "YulBlock",
																"src": "4970:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4972:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4972:16:10"
																			},
																			"nativeSrc": "4972:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4972:18:10"
																		},
																		"nativeSrc": "4972:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4972:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4913:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "4913:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4925:18:10",
																				"nodeType": "YulLiteral",
																				"src": "4925:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4910:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4910:2:10"
																		},
																		"nativeSrc": "4910:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4910:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4949:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "4949:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4961:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4961:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4946:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4946:2:10"
																		},
																		"nativeSrc": "4946:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4946:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4907:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4907:2:10"
																},
																"nativeSrc": "4907:62:10",
																"nodeType": "YulFunctionCall",
																"src": "4907:62:10"
															},
															"nativeSrc": "4904:88:10",
															"nodeType": "YulIf",
															"src": "4904:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5008:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5008:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5012:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "5012:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5001:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5001:6:10"
																},
																"nativeSrc": "5001:22:10",
																"nodeType": "YulFunctionCall",
																"src": "5001:22:10"
															},
															"nativeSrc": "5001:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "5001:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "4748:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4777:6:10",
														"nodeType": "YulTypedName",
														"src": "4777:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "4785:4:10",
														"nodeType": "YulTypedName",
														"src": "4785:4:10",
														"type": ""
													}
												],
												"src": "4748:281:10"
											},
											{
												"body": {
													"nativeSrc": "5076:88:10",
													"nodeType": "YulBlock",
													"src": "5076:88:10",
													"statements": [
														{
															"nativeSrc": "5086:30:10",
															"nodeType": "YulAssignment",
															"src": "5086:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5096:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "5096:18:10"
																},
																"nativeSrc": "5096:20:10",
																"nodeType": "YulFunctionCall",
																"src": "5096:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5086:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5086:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5145:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5145:6:10"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5153:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5153:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5125:19:10",
																	"nodeType": "YulIdentifier",
																	"src": "5125:19:10"
																},
																"nativeSrc": "5125:33:10",
																"nodeType": "YulFunctionCall",
																"src": "5125:33:10"
															},
															"nativeSrc": "5125:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "5125:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5035:129:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5060:4:10",
														"nodeType": "YulTypedName",
														"src": "5060:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5069:6:10",
														"nodeType": "YulTypedName",
														"src": "5069:6:10",
														"type": ""
													}
												],
												"src": "5035:129:10"
											},
											{
												"body": {
													"nativeSrc": "5237:241:10",
													"nodeType": "YulBlock",
													"src": "5237:241:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5342:22:10",
																"nodeType": "YulBlock",
																"src": "5342:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5344:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5344:16:10"
																			},
																			"nativeSrc": "5344:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5344:18:10"
																		},
																		"nativeSrc": "5344:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5344:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5314:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5314:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5322:18:10",
																		"nodeType": "YulLiteral",
																		"src": "5322:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5311:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5311:2:10"
																},
																"nativeSrc": "5311:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5311:30:10"
															},
															"nativeSrc": "5308:56:10",
															"nodeType": "YulIf",
															"src": "5308:56:10"
														},
														{
															"nativeSrc": "5374:37:10",
															"nodeType": "YulAssignment",
															"src": "5374:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5404:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5404:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "5382:21:10",
																	"nodeType": "YulIdentifier",
																	"src": "5382:21:10"
																},
																"nativeSrc": "5382:29:10",
																"nodeType": "YulFunctionCall",
																"src": "5382:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5374:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5374:4:10"
																}
															]
														},
														{
															"nativeSrc": "5448:23:10",
															"nodeType": "YulAssignment",
															"src": "5448:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5460:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5460:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5466:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5466:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5456:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5456:3:10"
																},
																"nativeSrc": "5456:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5456:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5448:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5448:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "5170:308:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5221:6:10",
														"nodeType": "YulTypedName",
														"src": "5221:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5232:4:10",
														"nodeType": "YulTypedName",
														"src": "5232:4:10",
														"type": ""
													}
												],
												"src": "5170:308:10"
											},
											{
												"body": {
													"nativeSrc": "5548:84:10",
													"nodeType": "YulBlock",
													"src": "5548:84:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5572:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5572:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "5577:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5577:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5582:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5582:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5559:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "5559:12:10"
																},
																"nativeSrc": "5559:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5559:30:10"
															},
															"nativeSrc": "5559:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "5559:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "5609:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5609:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5614:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5614:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5605:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5605:3:10"
																		},
																		"nativeSrc": "5605:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5605:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5623:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5623:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5598:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:10"
																},
																"nativeSrc": "5598:27:10",
																"nodeType": "YulFunctionCall",
																"src": "5598:27:10"
															},
															"nativeSrc": "5598:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "5598:27:10"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "5484:148:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5530:3:10",
														"nodeType": "YulTypedName",
														"src": "5530:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5535:3:10",
														"nodeType": "YulTypedName",
														"src": "5535:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5540:6:10",
														"nodeType": "YulTypedName",
														"src": "5540:6:10",
														"type": ""
													}
												],
												"src": "5484:148:10"
											},
											{
												"body": {
													"nativeSrc": "5722:341:10",
													"nodeType": "YulBlock",
													"src": "5722:341:10",
													"statements": [
														{
															"nativeSrc": "5732:75:10",
															"nodeType": "YulAssignment",
															"src": "5732:75:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5799:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5799:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "5757:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "5757:41:10"
																		},
																		"nativeSrc": "5757:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5757:49:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5741:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "5741:15:10"
																},
																"nativeSrc": "5741:66:10",
																"nodeType": "YulFunctionCall",
																"src": "5741:66:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5732:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5732:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5823:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5823:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5830:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5830:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5816:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5816:6:10"
																},
																"nativeSrc": "5816:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5816:21:10"
															},
															"nativeSrc": "5816:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "5816:21:10"
														},
														{
															"nativeSrc": "5846:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5846:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5861:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5861:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5868:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5868:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5857:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5857:3:10"
																},
																"nativeSrc": "5857:16:10",
																"nodeType": "YulFunctionCall",
																"src": "5857:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "5850:3:10",
																	"nodeType": "YulTypedName",
																	"src": "5850:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5911:83:10",
																"nodeType": "YulBlock",
																"src": "5911:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "5913:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5913:77:10"
																			},
																			"nativeSrc": "5913:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5913:79:10"
																		},
																		"nativeSrc": "5913:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5913:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "5892:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5892:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5897:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5897:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5888:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5888:3:10"
																		},
																		"nativeSrc": "5888:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5888:16:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5906:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5906:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5885:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5885:2:10"
																},
																"nativeSrc": "5885:25:10",
																"nodeType": "YulFunctionCall",
																"src": "5885:25:10"
															},
															"nativeSrc": "5882:112:10",
															"nodeType": "YulIf",
															"src": "5882:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6040:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6040:3:10"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "6045:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6045:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6050:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6050:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "6003:36:10",
																	"nodeType": "YulIdentifier",
																	"src": "6003:36:10"
																},
																"nativeSrc": "6003:54:10",
																"nodeType": "YulFunctionCall",
																"src": "6003:54:10"
															},
															"nativeSrc": "6003:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "6003:54:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "5638:425:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5695:3:10",
														"nodeType": "YulTypedName",
														"src": "5695:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5700:6:10",
														"nodeType": "YulTypedName",
														"src": "5700:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5708:3:10",
														"nodeType": "YulTypedName",
														"src": "5708:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5716:5:10",
														"nodeType": "YulTypedName",
														"src": "5716:5:10",
														"type": ""
													}
												],
												"src": "5638:425:10"
											},
											{
												"body": {
													"nativeSrc": "6145:278:10",
													"nodeType": "YulBlock",
													"src": "6145:278:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6194:83:10",
																"nodeType": "YulBlock",
																"src": "6194:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6196:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6196:77:10"
																			},
																			"nativeSrc": "6196:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6196:79:10"
																		},
																		"nativeSrc": "6196:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6196:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6173:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6173:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6181:4:10",
																						"nodeType": "YulLiteral",
																						"src": "6181:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6169:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6169:3:10"
																				},
																				"nativeSrc": "6169:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6169:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6188:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6188:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6165:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6165:3:10"
																		},
																		"nativeSrc": "6165:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6165:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6158:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6158:6:10"
																},
																"nativeSrc": "6158:35:10",
																"nodeType": "YulFunctionCall",
																"src": "6158:35:10"
															},
															"nativeSrc": "6155:122:10",
															"nodeType": "YulIf",
															"src": "6155:122:10"
														},
														{
															"nativeSrc": "6286:34:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6286:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6313:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6313:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6300:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "6300:12:10"
																},
																"nativeSrc": "6300:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6300:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6290:6:10",
																	"nodeType": "YulTypedName",
																	"src": "6290:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6329:88:10",
															"nodeType": "YulAssignment",
															"src": "6329:88:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6390:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6390:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6398:4:10",
																				"nodeType": "YulLiteral",
																				"src": "6398:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6386:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6386:3:10"
																		},
																		"nativeSrc": "6386:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6386:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6405:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6413:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6413:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "6338:47:10",
																	"nodeType": "YulIdentifier",
																	"src": "6338:47:10"
																},
																"nativeSrc": "6338:79:10",
																"nodeType": "YulFunctionCall",
																"src": "6338:79:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6329:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6329:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "6083:340:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6123:6:10",
														"nodeType": "YulTypedName",
														"src": "6123:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6131:3:10",
														"nodeType": "YulTypedName",
														"src": "6131:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6139:5:10",
														"nodeType": "YulTypedName",
														"src": "6139:5:10",
														"type": ""
													}
												],
												"src": "6083:340:10"
											},
											{
												"body": {
													"nativeSrc": "6505:433:10",
													"nodeType": "YulBlock",
													"src": "6505:433:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6551:83:10",
																"nodeType": "YulBlock",
																"src": "6551:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6553:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6553:77:10"
																			},
																			"nativeSrc": "6553:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6553:79:10"
																		},
																		"nativeSrc": "6553:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6553:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6526:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6526:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6535:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6535:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6522:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6522:3:10"
																		},
																		"nativeSrc": "6522:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6522:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6547:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6547:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6518:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6518:3:10"
																},
																"nativeSrc": "6518:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6518:32:10"
															},
															"nativeSrc": "6515:119:10",
															"nodeType": "YulIf",
															"src": "6515:119:10"
														},
														{
															"nativeSrc": "6644:287:10",
															"nodeType": "YulBlock",
															"src": "6644:287:10",
															"statements": [
																{
																	"nativeSrc": "6659:45:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6659:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6690:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6690:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6701:1:10",
																						"nodeType": "YulLiteral",
																						"src": "6701:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6686:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6686:3:10"
																				},
																				"nativeSrc": "6686:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6686:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6673:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "6673:12:10"
																		},
																		"nativeSrc": "6673:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6673:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6663:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6663:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "6751:83:10",
																		"nodeType": "YulBlock",
																		"src": "6751:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "6753:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "6753:77:10"
																					},
																					"nativeSrc": "6753:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6753:79:10"
																				},
																				"nativeSrc": "6753:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "6753:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6723:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6723:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6731:18:10",
																				"nodeType": "YulLiteral",
																				"src": "6731:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6720:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6720:2:10"
																		},
																		"nativeSrc": "6720:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6720:30:10"
																	},
																	"nativeSrc": "6717:117:10",
																	"nodeType": "YulIf",
																	"src": "6717:117:10"
																},
																{
																	"nativeSrc": "6848:73:10",
																	"nodeType": "YulAssignment",
																	"src": "6848:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6893:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6893:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6904:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6904:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6889:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6889:3:10"
																				},
																				"nativeSrc": "6889:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6889:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6913:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6913:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "6858:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "6858:30:10"
																		},
																		"nativeSrc": "6858:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6858:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6848:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6848:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "6429:509:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6475:9:10",
														"nodeType": "YulTypedName",
														"src": "6475:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6486:7:10",
														"nodeType": "YulTypedName",
														"src": "6486:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6498:6:10",
														"nodeType": "YulTypedName",
														"src": "6498:6:10",
														"type": ""
													}
												],
												"src": "6429:509:10"
											},
											{
												"body": {
													"nativeSrc": "7009:53:10",
													"nodeType": "YulBlock",
													"src": "7009:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7026:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7026:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7049:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7049:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7031:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "7031:17:10"
																		},
																		"nativeSrc": "7031:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7031:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7019:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7019:6:10"
																},
																"nativeSrc": "7019:37:10",
																"nodeType": "YulFunctionCall",
																"src": "7019:37:10"
															},
															"nativeSrc": "7019:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "7019:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6944:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6997:5:10",
														"nodeType": "YulTypedName",
														"src": "6997:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7004:3:10",
														"nodeType": "YulTypedName",
														"src": "7004:3:10",
														"type": ""
													}
												],
												"src": "6944:118:10"
											},
											{
												"body": {
													"nativeSrc": "7166:124:10",
													"nodeType": "YulBlock",
													"src": "7166:124:10",
													"statements": [
														{
															"nativeSrc": "7176:26:10",
															"nodeType": "YulAssignment",
															"src": "7176:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7188:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7188:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7199:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7199:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7184:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7184:3:10"
																},
																"nativeSrc": "7184:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7184:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7176:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7176:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7256:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7256:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7269:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7269:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7280:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7280:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7265:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7265:3:10"
																		},
																		"nativeSrc": "7265:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7265:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7212:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7212:43:10"
																},
																"nativeSrc": "7212:71:10",
																"nodeType": "YulFunctionCall",
																"src": "7212:71:10"
															},
															"nativeSrc": "7212:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "7212:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7068:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7138:9:10",
														"nodeType": "YulTypedName",
														"src": "7138:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7150:6:10",
														"nodeType": "YulTypedName",
														"src": "7150:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7161:4:10",
														"nodeType": "YulTypedName",
														"src": "7161:4:10",
														"type": ""
													}
												],
												"src": "7068:222:10"
											},
											{
												"body": {
													"nativeSrc": "7339:43:10",
													"nodeType": "YulBlock",
													"src": "7339:43:10",
													"statements": [
														{
															"nativeSrc": "7349:27:10",
															"nodeType": "YulAssignment",
															"src": "7349:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7364:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7364:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7371:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7371:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7360:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7360:3:10"
																},
																"nativeSrc": "7360:16:10",
																"nodeType": "YulFunctionCall",
																"src": "7360:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7349:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "7349:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "7296:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7321:5:10",
														"nodeType": "YulTypedName",
														"src": "7321:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7331:7:10",
														"nodeType": "YulTypedName",
														"src": "7331:7:10",
														"type": ""
													}
												],
												"src": "7296:86:10"
											},
											{
												"body": {
													"nativeSrc": "7449:51:10",
													"nodeType": "YulBlock",
													"src": "7449:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7466:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7466:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7487:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7487:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7471:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "7471:15:10"
																		},
																		"nativeSrc": "7471:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7471:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7459:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7459:6:10"
																},
																"nativeSrc": "7459:35:10",
																"nodeType": "YulFunctionCall",
																"src": "7459:35:10"
															},
															"nativeSrc": "7459:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "7459:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7388:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7437:5:10",
														"nodeType": "YulTypedName",
														"src": "7437:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7444:3:10",
														"nodeType": "YulTypedName",
														"src": "7444:3:10",
														"type": ""
													}
												],
												"src": "7388:112:10"
											},
											{
												"body": {
													"nativeSrc": "7600:120:10",
													"nodeType": "YulBlock",
													"src": "7600:120:10",
													"statements": [
														{
															"nativeSrc": "7610:26:10",
															"nodeType": "YulAssignment",
															"src": "7610:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7622:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7622:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7633:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7633:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7618:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7618:3:10"
																},
																"nativeSrc": "7618:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7618:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7610:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7610:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7686:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7686:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7699:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7699:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7710:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7710:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7695:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7695:3:10"
																		},
																		"nativeSrc": "7695:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7695:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7646:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "7646:39:10"
																},
																"nativeSrc": "7646:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7646:67:10"
															},
															"nativeSrc": "7646:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "7646:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7506:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7572:9:10",
														"nodeType": "YulTypedName",
														"src": "7572:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7584:6:10",
														"nodeType": "YulTypedName",
														"src": "7584:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7595:4:10",
														"nodeType": "YulTypedName",
														"src": "7595:4:10",
														"type": ""
													}
												],
												"src": "7506:214:10"
											},
											{
												"body": {
													"nativeSrc": "7758:28:10",
													"nodeType": "YulBlock",
													"src": "7758:28:10",
													"statements": [
														{
															"nativeSrc": "7768:12:10",
															"nodeType": "YulAssignment",
															"src": "7768:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "7775:5:10",
																"nodeType": "YulIdentifier",
																"src": "7775:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7768:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7768:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "7726:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7744:5:10",
														"nodeType": "YulTypedName",
														"src": "7744:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7754:3:10",
														"nodeType": "YulTypedName",
														"src": "7754:3:10",
														"type": ""
													}
												],
												"src": "7726:60:10"
											},
											{
												"body": {
													"nativeSrc": "7852:82:10",
													"nodeType": "YulBlock",
													"src": "7852:82:10",
													"statements": [
														{
															"nativeSrc": "7862:66:10",
															"nodeType": "YulAssignment",
															"src": "7862:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7920:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "7920:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "7902:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "7902:17:10"
																				},
																				"nativeSrc": "7902:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7902:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "7893:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "7893:8:10"
																		},
																		"nativeSrc": "7893:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7893:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "7875:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7875:17:10"
																},
																"nativeSrc": "7875:53:10",
																"nodeType": "YulFunctionCall",
																"src": "7875:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7862:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "7862:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "7792:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7832:5:10",
														"nodeType": "YulTypedName",
														"src": "7832:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7842:9:10",
														"nodeType": "YulTypedName",
														"src": "7842:9:10",
														"type": ""
													}
												],
												"src": "7792:142:10"
											},
											{
												"body": {
													"nativeSrc": "8000:66:10",
													"nodeType": "YulBlock",
													"src": "8000:66:10",
													"statements": [
														{
															"nativeSrc": "8010:50:10",
															"nodeType": "YulAssignment",
															"src": "8010:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8054:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8054:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "8023:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "8023:30:10"
																},
																"nativeSrc": "8023:37:10",
																"nodeType": "YulFunctionCall",
																"src": "8023:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8010:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "8010:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "7940:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7980:5:10",
														"nodeType": "YulTypedName",
														"src": "7980:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7990:9:10",
														"nodeType": "YulTypedName",
														"src": "7990:9:10",
														"type": ""
													}
												],
												"src": "7940:126:10"
											},
											{
												"body": {
													"nativeSrc": "8151:66:10",
													"nodeType": "YulBlock",
													"src": "8151:66:10",
													"statements": [
														{
															"nativeSrc": "8161:50:10",
															"nodeType": "YulAssignment",
															"src": "8161:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8205:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8205:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "8174:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "8174:30:10"
																},
																"nativeSrc": "8174:37:10",
																"nodeType": "YulFunctionCall",
																"src": "8174:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8161:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "8161:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IDirectory_$1187_to_t_address",
												"nativeSrc": "8072:145:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8131:5:10",
														"nodeType": "YulTypedName",
														"src": "8131:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "8141:9:10",
														"nodeType": "YulTypedName",
														"src": "8141:9:10",
														"type": ""
													}
												],
												"src": "8072:145:10"
											},
											{
												"body": {
													"nativeSrc": "8307:85:10",
													"nodeType": "YulBlock",
													"src": "8307:85:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8324:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8324:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8379:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8379:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IDirectory_$1187_to_t_address",
																			"nativeSrc": "8329:49:10",
																			"nodeType": "YulIdentifier",
																			"src": "8329:49:10"
																		},
																		"nativeSrc": "8329:56:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8329:56:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8317:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8317:6:10"
																},
																"nativeSrc": "8317:69:10",
																"nodeType": "YulFunctionCall",
																"src": "8317:69:10"
															},
															"nativeSrc": "8317:69:10",
															"nodeType": "YulExpressionStatement",
															"src": "8317:69:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IDirectory_$1187_to_t_address_fromStack",
												"nativeSrc": "8223:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8295:5:10",
														"nodeType": "YulTypedName",
														"src": "8295:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8302:3:10",
														"nodeType": "YulTypedName",
														"src": "8302:3:10",
														"type": ""
													}
												],
												"src": "8223:169:10"
											},
											{
												"body": {
													"nativeSrc": "8515:143:10",
													"nodeType": "YulBlock",
													"src": "8515:143:10",
													"statements": [
														{
															"nativeSrc": "8525:26:10",
															"nodeType": "YulAssignment",
															"src": "8525:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8537:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8537:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8548:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8548:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8533:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8533:3:10"
																},
																"nativeSrc": "8533:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8533:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8525:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8525:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8624:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8624:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8637:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8637:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8648:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8648:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8633:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8633:3:10"
																		},
																		"nativeSrc": "8633:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8633:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IDirectory_$1187_to_t_address_fromStack",
																	"nativeSrc": "8561:62:10",
																	"nodeType": "YulIdentifier",
																	"src": "8561:62:10"
																},
																"nativeSrc": "8561:90:10",
																"nodeType": "YulFunctionCall",
																"src": "8561:90:10"
															},
															"nativeSrc": "8561:90:10",
															"nodeType": "YulExpressionStatement",
															"src": "8561:90:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IDirectory_$1187__to_t_address__fromStack_reversed",
												"nativeSrc": "8398:260:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8487:9:10",
														"nodeType": "YulTypedName",
														"src": "8487:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8499:6:10",
														"nodeType": "YulTypedName",
														"src": "8499:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8510:4:10",
														"nodeType": "YulTypedName",
														"src": "8510:4:10",
														"type": ""
													}
												],
												"src": "8398:260:10"
											},
											{
												"body": {
													"nativeSrc": "8801:988:10",
													"nodeType": "YulBlock",
													"src": "8801:988:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8848:83:10",
																"nodeType": "YulBlock",
																"src": "8848:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8850:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "8850:77:10"
																			},
																			"nativeSrc": "8850:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8850:79:10"
																		},
																		"nativeSrc": "8850:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8850:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8822:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8822:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8831:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8831:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8818:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8818:3:10"
																		},
																		"nativeSrc": "8818:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8818:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8843:3:10",
																		"nodeType": "YulLiteral",
																		"src": "8843:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8814:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8814:3:10"
																},
																"nativeSrc": "8814:33:10",
																"nodeType": "YulFunctionCall",
																"src": "8814:33:10"
															},
															"nativeSrc": "8811:120:10",
															"nodeType": "YulIf",
															"src": "8811:120:10"
														},
														{
															"nativeSrc": "8941:117:10",
															"nodeType": "YulBlock",
															"src": "8941:117:10",
															"statements": [
																{
																	"nativeSrc": "8956:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8956:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8970:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8970:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8960:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8960:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8985:63:10",
																	"nodeType": "YulAssignment",
																	"src": "8985:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9020:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9020:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9031:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9031:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9016:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9016:3:10"
																				},
																				"nativeSrc": "9016:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9016:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9040:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9040:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8995:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "8995:20:10"
																		},
																		"nativeSrc": "8995:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8995:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8985:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8985:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9068:288:10",
															"nodeType": "YulBlock",
															"src": "9068:288:10",
															"statements": [
																{
																	"nativeSrc": "9083:46:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9083:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9114:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9114:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9125:2:10",
																						"nodeType": "YulLiteral",
																						"src": "9125:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9110:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9110:3:10"
																				},
																				"nativeSrc": "9110:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9110:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9097:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "9097:12:10"
																		},
																		"nativeSrc": "9097:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9097:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9087:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9087:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9176:83:10",
																		"nodeType": "YulBlock",
																		"src": "9176:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9178:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "9178:77:10"
																					},
																					"nativeSrc": "9178:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "9178:79:10"
																				},
																				"nativeSrc": "9178:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "9178:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9148:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9148:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9156:18:10",
																				"nodeType": "YulLiteral",
																				"src": "9156:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9145:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "9145:2:10"
																		},
																		"nativeSrc": "9145:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9145:30:10"
																	},
																	"nativeSrc": "9142:117:10",
																	"nodeType": "YulIf",
																	"src": "9142:117:10"
																},
																{
																	"nativeSrc": "9273:73:10",
																	"nodeType": "YulAssignment",
																	"src": "9273:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9318:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9318:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9329:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9329:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9314:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9314:3:10"
																				},
																				"nativeSrc": "9314:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9314:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9338:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9338:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "9283:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "9283:30:10"
																		},
																		"nativeSrc": "9283:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9283:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9273:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9273:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9366:288:10",
															"nodeType": "YulBlock",
															"src": "9366:288:10",
															"statements": [
																{
																	"nativeSrc": "9381:46:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9381:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9412:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9412:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9423:2:10",
																						"nodeType": "YulLiteral",
																						"src": "9423:2:10",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9408:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9408:3:10"
																				},
																				"nativeSrc": "9408:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9408:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9395:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "9395:12:10"
																		},
																		"nativeSrc": "9395:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9395:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9385:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9385:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9474:83:10",
																		"nodeType": "YulBlock",
																		"src": "9474:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9476:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "9476:77:10"
																					},
																					"nativeSrc": "9476:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "9476:79:10"
																				},
																				"nativeSrc": "9476:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "9476:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9446:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9446:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9454:18:10",
																				"nodeType": "YulLiteral",
																				"src": "9454:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9443:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "9443:2:10"
																		},
																		"nativeSrc": "9443:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9443:30:10"
																	},
																	"nativeSrc": "9440:117:10",
																	"nodeType": "YulIf",
																	"src": "9440:117:10"
																},
																{
																	"nativeSrc": "9571:73:10",
																	"nodeType": "YulAssignment",
																	"src": "9571:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9616:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9616:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9627:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9627:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9612:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9612:3:10"
																				},
																				"nativeSrc": "9612:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9612:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9636:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9636:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "9581:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "9581:30:10"
																		},
																		"nativeSrc": "9581:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9581:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9571:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9571:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9664:118:10",
															"nodeType": "YulBlock",
															"src": "9664:118:10",
															"statements": [
																{
																	"nativeSrc": "9679:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9679:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9693:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9693:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9683:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9683:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9709:63:10",
																	"nodeType": "YulAssignment",
																	"src": "9709:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9744:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9744:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9755:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9755:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9740:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9740:3:10"
																				},
																				"nativeSrc": "9740:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9740:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9764:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9764:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9719:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "9719:20:10"
																		},
																		"nativeSrc": "9719:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9719:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9709:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9709:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_address",
												"nativeSrc": "8664:1125:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8747:9:10",
														"nodeType": "YulTypedName",
														"src": "8747:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8758:7:10",
														"nodeType": "YulTypedName",
														"src": "8758:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8770:6:10",
														"nodeType": "YulTypedName",
														"src": "8770:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8778:6:10",
														"nodeType": "YulTypedName",
														"src": "8778:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8786:6:10",
														"nodeType": "YulTypedName",
														"src": "8786:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8794:6:10",
														"nodeType": "YulTypedName",
														"src": "8794:6:10",
														"type": ""
													}
												],
												"src": "8664:1125:10"
											},
											{
												"body": {
													"nativeSrc": "9861:263:10",
													"nodeType": "YulBlock",
													"src": "9861:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9907:83:10",
																"nodeType": "YulBlock",
																"src": "9907:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9909:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "9909:77:10"
																			},
																			"nativeSrc": "9909:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9909:79:10"
																		},
																		"nativeSrc": "9909:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9909:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9882:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9882:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9891:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9891:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9878:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9878:3:10"
																		},
																		"nativeSrc": "9878:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9878:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9903:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9903:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9874:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9874:3:10"
																},
																"nativeSrc": "9874:32:10",
																"nodeType": "YulFunctionCall",
																"src": "9874:32:10"
															},
															"nativeSrc": "9871:119:10",
															"nodeType": "YulIf",
															"src": "9871:119:10"
														},
														{
															"nativeSrc": "10000:117:10",
															"nodeType": "YulBlock",
															"src": "10000:117:10",
															"statements": [
																{
																	"nativeSrc": "10015:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10015:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10029:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10029:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10019:6:10",
																			"nodeType": "YulTypedName",
																			"src": "10019:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10044:63:10",
																	"nodeType": "YulAssignment",
																	"src": "10044:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10079:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10079:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10090:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10090:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10075:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10075:3:10"
																				},
																				"nativeSrc": "10075:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10075:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10099:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10099:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10054:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "10054:20:10"
																		},
																		"nativeSrc": "10054:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10054:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10044:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "10044:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "9795:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9831:9:10",
														"nodeType": "YulTypedName",
														"src": "9831:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9842:7:10",
														"nodeType": "YulTypedName",
														"src": "9842:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9854:6:10",
														"nodeType": "YulTypedName",
														"src": "9854:6:10",
														"type": ""
													}
												],
												"src": "9795:329:10"
											},
											{
												"body": {
													"nativeSrc": "10213:391:10",
													"nodeType": "YulBlock",
													"src": "10213:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10259:83:10",
																"nodeType": "YulBlock",
																"src": "10259:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10261:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "10261:77:10"
																			},
																			"nativeSrc": "10261:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10261:79:10"
																		},
																		"nativeSrc": "10261:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10261:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10234:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10234:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10243:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10243:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10230:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10230:3:10"
																		},
																		"nativeSrc": "10230:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10230:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10255:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10255:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10226:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10226:3:10"
																},
																"nativeSrc": "10226:32:10",
																"nodeType": "YulFunctionCall",
																"src": "10226:32:10"
															},
															"nativeSrc": "10223:119:10",
															"nodeType": "YulIf",
															"src": "10223:119:10"
														},
														{
															"nativeSrc": "10352:117:10",
															"nodeType": "YulBlock",
															"src": "10352:117:10",
															"statements": [
																{
																	"nativeSrc": "10367:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10367:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10381:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10381:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10371:6:10",
																			"nodeType": "YulTypedName",
																			"src": "10371:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10396:63:10",
																	"nodeType": "YulAssignment",
																	"src": "10396:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10431:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10431:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10442:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10442:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10427:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10427:3:10"
																				},
																				"nativeSrc": "10427:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10427:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10451:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10451:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10406:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "10406:20:10"
																		},
																		"nativeSrc": "10406:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10406:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10396:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "10396:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10479:118:10",
															"nodeType": "YulBlock",
															"src": "10479:118:10",
															"statements": [
																{
																	"nativeSrc": "10494:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10494:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10508:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10508:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10498:6:10",
																			"nodeType": "YulTypedName",
																			"src": "10498:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10524:63:10",
																	"nodeType": "YulAssignment",
																	"src": "10524:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10559:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10559:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10570:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10570:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10555:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10555:3:10"
																				},
																				"nativeSrc": "10555:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10555:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10579:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10579:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10534:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "10534:20:10"
																		},
																		"nativeSrc": "10534:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10534:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10524:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "10524:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "10130:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10175:9:10",
														"nodeType": "YulTypedName",
														"src": "10175:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10186:7:10",
														"nodeType": "YulTypedName",
														"src": "10186:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10198:6:10",
														"nodeType": "YulTypedName",
														"src": "10198:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10206:6:10",
														"nodeType": "YulTypedName",
														"src": "10206:6:10",
														"type": ""
													}
												],
												"src": "10130:474:10"
											},
											{
												"body": {
													"nativeSrc": "10638:152:10",
													"nodeType": "YulBlock",
													"src": "10638:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10655:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10655:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10658:77:10",
																		"nodeType": "YulLiteral",
																		"src": "10658:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10648:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10648:6:10"
																},
																"nativeSrc": "10648:88:10",
																"nodeType": "YulFunctionCall",
																"src": "10648:88:10"
															},
															"nativeSrc": "10648:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "10648:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10752:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10752:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10755:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10755:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10745:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10745:6:10"
																},
																"nativeSrc": "10745:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10745:15:10"
															},
															"nativeSrc": "10745:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10745:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10776:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10776:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10779:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10779:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10769:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10769:6:10"
																},
																"nativeSrc": "10769:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10769:15:10"
															},
															"nativeSrc": "10769:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10769:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10610:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "10610:180:10"
											},
											{
												"body": {
													"nativeSrc": "10847:269:10",
													"nodeType": "YulBlock",
													"src": "10847:269:10",
													"statements": [
														{
															"nativeSrc": "10857:22:10",
															"nodeType": "YulAssignment",
															"src": "10857:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10871:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10871:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10877:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10877:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10867:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10867:3:10"
																},
																"nativeSrc": "10867:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10867:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10857:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10857:6:10"
																}
															]
														},
														{
															"nativeSrc": "10888:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "10888:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10918:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10918:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10924:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10924:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10914:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10914:3:10"
																},
																"nativeSrc": "10914:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10914:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10892:18:10",
																	"nodeType": "YulTypedName",
																	"src": "10892:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10965:51:10",
																"nodeType": "YulBlock",
																"src": "10965:51:10",
																"statements": [
																	{
																		"nativeSrc": "10979:27:10",
																		"nodeType": "YulAssignment",
																		"src": "10979:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10993:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "10993:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11001:4:10",
																					"nodeType": "YulLiteral",
																					"src": "11001:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10989:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "10989:3:10"
																			},
																			"nativeSrc": "10989:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10989:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10979:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10979:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10945:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "10945:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10938:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10938:6:10"
																},
																"nativeSrc": "10938:26:10",
																"nodeType": "YulFunctionCall",
																"src": "10938:26:10"
															},
															"nativeSrc": "10935:81:10",
															"nodeType": "YulIf",
															"src": "10935:81:10"
														},
														{
															"body": {
																"nativeSrc": "11068:42:10",
																"nodeType": "YulBlock",
																"src": "11068:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "11082:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "11082:16:10"
																			},
																			"nativeSrc": "11082:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11082:18:10"
																		},
																		"nativeSrc": "11082:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11082:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11032:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "11032:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11055:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11055:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11063:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11063:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11052:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "11052:2:10"
																		},
																		"nativeSrc": "11052:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11052:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11029:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "11029:2:10"
																},
																"nativeSrc": "11029:38:10",
																"nodeType": "YulFunctionCall",
																"src": "11029:38:10"
															},
															"nativeSrc": "11026:84:10",
															"nodeType": "YulIf",
															"src": "11026:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10796:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10831:4:10",
														"nodeType": "YulTypedName",
														"src": "10831:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10840:6:10",
														"nodeType": "YulTypedName",
														"src": "10840:6:10",
														"type": ""
													}
												],
												"src": "10796:320:10"
											},
											{
												"body": {
													"nativeSrc": "11185:80:10",
													"nodeType": "YulBlock",
													"src": "11185:80:10",
													"statements": [
														{
															"nativeSrc": "11195:22:10",
															"nodeType": "YulAssignment",
															"src": "11195:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11210:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11210:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11204:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "11204:5:10"
																},
																"nativeSrc": "11204:13:10",
																"nodeType": "YulFunctionCall",
																"src": "11204:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11195:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "11195:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11253:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11253:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "11226:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "11226:26:10"
																},
																"nativeSrc": "11226:33:10",
																"nodeType": "YulFunctionCall",
																"src": "11226:33:10"
															},
															"nativeSrc": "11226:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "11226:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "11122:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11163:6:10",
														"nodeType": "YulTypedName",
														"src": "11163:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11171:3:10",
														"nodeType": "YulTypedName",
														"src": "11171:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11179:5:10",
														"nodeType": "YulTypedName",
														"src": "11179:5:10",
														"type": ""
													}
												],
												"src": "11122:143:10"
											},
											{
												"body": {
													"nativeSrc": "11348:274:10",
													"nodeType": "YulBlock",
													"src": "11348:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "11394:83:10",
																"nodeType": "YulBlock",
																"src": "11394:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11396:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "11396:77:10"
																			},
																			"nativeSrc": "11396:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11396:79:10"
																		},
																		"nativeSrc": "11396:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11396:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11369:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11369:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11378:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11378:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11365:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11365:3:10"
																		},
																		"nativeSrc": "11365:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11365:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11390:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11390:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11361:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11361:3:10"
																},
																"nativeSrc": "11361:32:10",
																"nodeType": "YulFunctionCall",
																"src": "11361:32:10"
															},
															"nativeSrc": "11358:119:10",
															"nodeType": "YulIf",
															"src": "11358:119:10"
														},
														{
															"nativeSrc": "11487:128:10",
															"nodeType": "YulBlock",
															"src": "11487:128:10",
															"statements": [
																{
																	"nativeSrc": "11502:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11502:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11516:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11516:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11506:6:10",
																			"nodeType": "YulTypedName",
																			"src": "11506:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11531:74:10",
																	"nodeType": "YulAssignment",
																	"src": "11531:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11577:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "11577:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11588:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "11588:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11573:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11573:3:10"
																				},
																				"nativeSrc": "11573:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11573:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11597:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11597:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "11541:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "11541:31:10"
																		},
																		"nativeSrc": "11541:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11541:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11531:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "11531:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "11271:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11318:9:10",
														"nodeType": "YulTypedName",
														"src": "11318:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11329:7:10",
														"nodeType": "YulTypedName",
														"src": "11329:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11341:6:10",
														"nodeType": "YulTypedName",
														"src": "11341:6:10",
														"type": ""
													}
												],
												"src": "11271:351:10"
											},
											{
												"body": {
													"nativeSrc": "11734:72:10",
													"nodeType": "YulBlock",
													"src": "11734:72:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11756:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11756:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11764:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11764:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11752:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11752:3:10"
																		},
																		"nativeSrc": "11752:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11752:14:10"
																	},
																	{
																		"hexValue": "6d73672e73656e646572206973206e6f742065746620726f75746572",
																		"kind": "string",
																		"nativeSrc": "11768:30:10",
																		"nodeType": "YulLiteral",
																		"src": "11768:30:10",
																		"type": "",
																		"value": "msg.sender is not etf router"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11745:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11745:6:10"
																},
																"nativeSrc": "11745:54:10",
																"nodeType": "YulFunctionCall",
																"src": "11745:54:10"
															},
															"nativeSrc": "11745:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "11745:54:10"
														}
													]
												},
												"name": "store_literal_in_memory_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9",
												"nativeSrc": "11628:178:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11726:6:10",
														"nodeType": "YulTypedName",
														"src": "11726:6:10",
														"type": ""
													}
												],
												"src": "11628:178:10"
											},
											{
												"body": {
													"nativeSrc": "11958:220:10",
													"nodeType": "YulBlock",
													"src": "11958:220:10",
													"statements": [
														{
															"nativeSrc": "11968:74:10",
															"nodeType": "YulAssignment",
															"src": "11968:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12034:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12034:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12039:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12039:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11975:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11975:58:10"
																},
																"nativeSrc": "11975:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11975:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11968:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11968:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12140:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12140:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9",
																	"nativeSrc": "12051:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "12051:88:10"
																},
																"nativeSrc": "12051:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12051:93:10"
															},
															"nativeSrc": "12051:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "12051:93:10"
														},
														{
															"nativeSrc": "12153:19:10",
															"nodeType": "YulAssignment",
															"src": "12153:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12164:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12164:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12169:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12169:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12160:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12160:3:10"
																},
																"nativeSrc": "12160:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12160:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12153:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12153:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11812:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11946:3:10",
														"nodeType": "YulTypedName",
														"src": "11946:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11954:3:10",
														"nodeType": "YulTypedName",
														"src": "11954:3:10",
														"type": ""
													}
												],
												"src": "11812:366:10"
											},
											{
												"body": {
													"nativeSrc": "12355:248:10",
													"nodeType": "YulBlock",
													"src": "12355:248:10",
													"statements": [
														{
															"nativeSrc": "12365:26:10",
															"nodeType": "YulAssignment",
															"src": "12365:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12377:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12377:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12388:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12388:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12373:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12373:3:10"
																},
																"nativeSrc": "12373:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12373:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12365:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12365:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12412:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12412:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12423:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12423:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12408:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12408:3:10"
																		},
																		"nativeSrc": "12408:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12408:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12431:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12431:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12437:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12437:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12427:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12427:3:10"
																		},
																		"nativeSrc": "12427:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12427:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12401:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12401:6:10"
																},
																"nativeSrc": "12401:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12401:47:10"
															},
															"nativeSrc": "12401:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12401:47:10"
														},
														{
															"nativeSrc": "12457:139:10",
															"nodeType": "YulAssignment",
															"src": "12457:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12591:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12591:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12465:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12465:124:10"
																},
																"nativeSrc": "12465:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12465:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12457:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12457:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12184:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12335:9:10",
														"nodeType": "YulTypedName",
														"src": "12335:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12350:4:10",
														"nodeType": "YulTypedName",
														"src": "12350:4:10",
														"type": ""
													}
												],
												"src": "12184:419:10"
											},
											{
												"body": {
													"nativeSrc": "12662:32:10",
													"nodeType": "YulBlock",
													"src": "12662:32:10",
													"statements": [
														{
															"nativeSrc": "12672:16:10",
															"nodeType": "YulAssignment",
															"src": "12672:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "12683:5:10",
																"nodeType": "YulIdentifier",
																"src": "12683:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12672:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "12672:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "12609:85:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12644:5:10",
														"nodeType": "YulTypedName",
														"src": "12644:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12654:7:10",
														"nodeType": "YulTypedName",
														"src": "12654:7:10",
														"type": ""
													}
												],
												"src": "12609:85:10"
											},
											{
												"body": {
													"nativeSrc": "12744:57:10",
													"nodeType": "YulBlock",
													"src": "12744:57:10",
													"statements": [
														{
															"nativeSrc": "12754:41:10",
															"nodeType": "YulAssignment",
															"src": "12754:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12769:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "12769:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12776:18:10",
																		"nodeType": "YulLiteral",
																		"src": "12776:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12765:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12765:3:10"
																},
																"nativeSrc": "12765:30:10",
																"nodeType": "YulFunctionCall",
																"src": "12765:30:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12754:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "12754:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "12700:101:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12726:5:10",
														"nodeType": "YulTypedName",
														"src": "12726:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12736:7:10",
														"nodeType": "YulTypedName",
														"src": "12736:7:10",
														"type": ""
													}
												],
												"src": "12700:101:10"
											},
											{
												"body": {
													"nativeSrc": "12874:89:10",
													"nodeType": "YulBlock",
													"src": "12874:89:10",
													"statements": [
														{
															"nativeSrc": "12884:73:10",
															"nodeType": "YulAssignment",
															"src": "12884:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12949:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "12949:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "12923:25:10",
																					"nodeType": "YulIdentifier",
																					"src": "12923:25:10"
																				},
																				"nativeSrc": "12923:32:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12923:32:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "12914:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "12914:8:10"
																		},
																		"nativeSrc": "12914:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12914:42:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "12897:16:10",
																	"nodeType": "YulIdentifier",
																	"src": "12897:16:10"
																},
																"nativeSrc": "12897:60:10",
																"nodeType": "YulFunctionCall",
																"src": "12897:60:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "12884:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "12884:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "12807:156:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12854:5:10",
														"nodeType": "YulTypedName",
														"src": "12854:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "12864:9:10",
														"nodeType": "YulTypedName",
														"src": "12864:9:10",
														"type": ""
													}
												],
												"src": "12807:156:10"
											},
											{
												"body": {
													"nativeSrc": "13041:73:10",
													"nodeType": "YulBlock",
													"src": "13041:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13058:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13058:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13101:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "13101:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "13063:37:10",
																			"nodeType": "YulIdentifier",
																			"src": "13063:37:10"
																		},
																		"nativeSrc": "13063:44:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13063:44:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13051:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13051:6:10"
																},
																"nativeSrc": "13051:57:10",
																"nodeType": "YulFunctionCall",
																"src": "13051:57:10"
															},
															"nativeSrc": "13051:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "13051:57:10"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "12969:145:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13029:5:10",
														"nodeType": "YulTypedName",
														"src": "13029:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13036:3:10",
														"nodeType": "YulTypedName",
														"src": "13036:3:10",
														"type": ""
													}
												],
												"src": "12969:145:10"
											},
											{
												"body": {
													"nativeSrc": "13225:131:10",
													"nodeType": "YulBlock",
													"src": "13225:131:10",
													"statements": [
														{
															"nativeSrc": "13235:26:10",
															"nodeType": "YulAssignment",
															"src": "13235:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13247:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13247:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13258:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13258:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13243:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13243:3:10"
																},
																"nativeSrc": "13243:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13243:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13235:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13235:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13322:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13322:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13335:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13335:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13346:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13346:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13331:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13331:3:10"
																		},
																		"nativeSrc": "13331:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13331:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "13271:50:10",
																	"nodeType": "YulIdentifier",
																	"src": "13271:50:10"
																},
																"nativeSrc": "13271:78:10",
																"nodeType": "YulFunctionCall",
																"src": "13271:78:10"
															},
															"nativeSrc": "13271:78:10",
															"nodeType": "YulExpressionStatement",
															"src": "13271:78:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "13120:236:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13197:9:10",
														"nodeType": "YulTypedName",
														"src": "13197:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13209:6:10",
														"nodeType": "YulTypedName",
														"src": "13209:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13220:4:10",
														"nodeType": "YulTypedName",
														"src": "13220:4:10",
														"type": ""
													}
												],
												"src": "13120:236:10"
											},
											{
												"body": {
													"nativeSrc": "13468:67:10",
													"nodeType": "YulBlock",
													"src": "13468:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13490:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13490:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13498:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13498:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13486:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13486:3:10"
																		},
																		"nativeSrc": "13486:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13486:14:10"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "13502:25:10",
																		"nodeType": "YulLiteral",
																		"src": "13502:25:10",
																		"type": "",
																		"value": "Caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13479:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13479:6:10"
																},
																"nativeSrc": "13479:49:10",
																"nodeType": "YulFunctionCall",
																"src": "13479:49:10"
															},
															"nativeSrc": "13479:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "13479:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
												"nativeSrc": "13362:173:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13460:6:10",
														"nodeType": "YulTypedName",
														"src": "13460:6:10",
														"type": ""
													}
												],
												"src": "13362:173:10"
											},
											{
												"body": {
													"nativeSrc": "13687:220:10",
													"nodeType": "YulBlock",
													"src": "13687:220:10",
													"statements": [
														{
															"nativeSrc": "13697:74:10",
															"nodeType": "YulAssignment",
															"src": "13697:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13763:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13763:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13768:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13768:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13704:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13704:58:10"
																},
																"nativeSrc": "13704:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13704:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13697:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13697:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13869:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13869:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
																	"nativeSrc": "13780:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13780:88:10"
																},
																"nativeSrc": "13780:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13780:93:10"
															},
															"nativeSrc": "13780:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13780:93:10"
														},
														{
															"nativeSrc": "13882:19:10",
															"nodeType": "YulAssignment",
															"src": "13882:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13893:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13893:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13898:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13898:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13889:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13889:3:10"
																},
																"nativeSrc": "13889:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13889:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13882:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13882:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13541:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13675:3:10",
														"nodeType": "YulTypedName",
														"src": "13675:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13683:3:10",
														"nodeType": "YulTypedName",
														"src": "13683:3:10",
														"type": ""
													}
												],
												"src": "13541:366:10"
											},
											{
												"body": {
													"nativeSrc": "14084:248:10",
													"nodeType": "YulBlock",
													"src": "14084:248:10",
													"statements": [
														{
															"nativeSrc": "14094:26:10",
															"nodeType": "YulAssignment",
															"src": "14094:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14106:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14106:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14117:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14117:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14102:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14102:3:10"
																},
																"nativeSrc": "14102:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14102:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14094:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14094:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14141:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14141:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14152:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14152:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14137:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14137:3:10"
																		},
																		"nativeSrc": "14137:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14137:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14160:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14160:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14166:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14166:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14156:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14156:3:10"
																		},
																		"nativeSrc": "14156:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14156:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14130:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14130:6:10"
																},
																"nativeSrc": "14130:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14130:47:10"
															},
															"nativeSrc": "14130:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14130:47:10"
														},
														{
															"nativeSrc": "14186:139:10",
															"nodeType": "YulAssignment",
															"src": "14186:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14320:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14320:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14194:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "14194:124:10"
																},
																"nativeSrc": "14194:131:10",
																"nodeType": "YulFunctionCall",
																"src": "14194:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14186:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14186:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13913:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14064:9:10",
														"nodeType": "YulTypedName",
														"src": "14064:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14079:4:10",
														"nodeType": "YulTypedName",
														"src": "14079:4:10",
														"type": ""
													}
												],
												"src": "13913:419:10"
											},
											{
												"body": {
													"nativeSrc": "14492:288:10",
													"nodeType": "YulBlock",
													"src": "14492:288:10",
													"statements": [
														{
															"nativeSrc": "14502:26:10",
															"nodeType": "YulAssignment",
															"src": "14502:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14514:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14514:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14525:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14525:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14510:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14510:3:10"
																},
																"nativeSrc": "14510:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14510:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14502:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14502:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14582:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14582:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14595:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14595:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14606:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14606:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14591:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14591:3:10"
																		},
																		"nativeSrc": "14591:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14591:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14538:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14538:43:10"
																},
																"nativeSrc": "14538:71:10",
																"nodeType": "YulFunctionCall",
																"src": "14538:71:10"
															},
															"nativeSrc": "14538:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "14538:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14663:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14663:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14676:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14676:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14687:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14687:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14672:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14672:3:10"
																		},
																		"nativeSrc": "14672:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14672:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14619:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14619:43:10"
																},
																"nativeSrc": "14619:72:10",
																"nodeType": "YulFunctionCall",
																"src": "14619:72:10"
															},
															"nativeSrc": "14619:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "14619:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14745:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14745:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14758:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14758:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14769:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14769:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14754:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14754:3:10"
																		},
																		"nativeSrc": "14754:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14754:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14701:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14701:43:10"
																},
																"nativeSrc": "14701:72:10",
																"nodeType": "YulFunctionCall",
																"src": "14701:72:10"
															},
															"nativeSrc": "14701:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "14701:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14338:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14448:9:10",
														"nodeType": "YulTypedName",
														"src": "14448:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14460:6:10",
														"nodeType": "YulTypedName",
														"src": "14460:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14468:6:10",
														"nodeType": "YulTypedName",
														"src": "14468:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14476:6:10",
														"nodeType": "YulTypedName",
														"src": "14476:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14487:4:10",
														"nodeType": "YulTypedName",
														"src": "14487:4:10",
														"type": ""
													}
												],
												"src": "14338:442:10"
											},
											{
												"body": {
													"nativeSrc": "14892:76:10",
													"nodeType": "YulBlock",
													"src": "14892:76:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14914:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14914:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14922:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14922:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14910:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14910:3:10"
																		},
																		"nativeSrc": "14910:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14910:14:10"
																	},
																	{
																		"hexValue": "4469726563746f72792063616e6e6f74206265207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "14926:34:10",
																		"nodeType": "YulLiteral",
																		"src": "14926:34:10",
																		"type": "",
																		"value": "Directory cannot be zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14903:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14903:6:10"
																},
																"nativeSrc": "14903:58:10",
																"nodeType": "YulFunctionCall",
																"src": "14903:58:10"
															},
															"nativeSrc": "14903:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "14903:58:10"
														}
													]
												},
												"name": "store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
												"nativeSrc": "14786:182:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14884:6:10",
														"nodeType": "YulTypedName",
														"src": "14884:6:10",
														"type": ""
													}
												],
												"src": "14786:182:10"
											},
											{
												"body": {
													"nativeSrc": "15120:220:10",
													"nodeType": "YulBlock",
													"src": "15120:220:10",
													"statements": [
														{
															"nativeSrc": "15130:74:10",
															"nodeType": "YulAssignment",
															"src": "15130:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15196:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15196:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15201:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15201:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15137:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "15137:58:10"
																},
																"nativeSrc": "15137:67:10",
																"nodeType": "YulFunctionCall",
																"src": "15137:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15130:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15130:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15302:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15302:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
																	"nativeSrc": "15213:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "15213:88:10"
																},
																"nativeSrc": "15213:93:10",
																"nodeType": "YulFunctionCall",
																"src": "15213:93:10"
															},
															"nativeSrc": "15213:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "15213:93:10"
														},
														{
															"nativeSrc": "15315:19:10",
															"nodeType": "YulAssignment",
															"src": "15315:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15326:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15326:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15331:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15331:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15322:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15322:3:10"
																},
																"nativeSrc": "15322:12:10",
																"nodeType": "YulFunctionCall",
																"src": "15322:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15315:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15315:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14974:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15108:3:10",
														"nodeType": "YulTypedName",
														"src": "15108:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15116:3:10",
														"nodeType": "YulTypedName",
														"src": "15116:3:10",
														"type": ""
													}
												],
												"src": "14974:366:10"
											},
											{
												"body": {
													"nativeSrc": "15517:248:10",
													"nodeType": "YulBlock",
													"src": "15517:248:10",
													"statements": [
														{
															"nativeSrc": "15527:26:10",
															"nodeType": "YulAssignment",
															"src": "15527:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15539:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15539:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15550:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15550:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15535:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15535:3:10"
																},
																"nativeSrc": "15535:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15535:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15527:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15527:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15574:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15574:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15585:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15585:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15570:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15570:3:10"
																		},
																		"nativeSrc": "15570:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15570:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15593:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15593:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15599:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15599:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15589:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15589:3:10"
																		},
																		"nativeSrc": "15589:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15589:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15563:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15563:6:10"
																},
																"nativeSrc": "15563:47:10",
																"nodeType": "YulFunctionCall",
																"src": "15563:47:10"
															},
															"nativeSrc": "15563:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "15563:47:10"
														},
														{
															"nativeSrc": "15619:139:10",
															"nodeType": "YulAssignment",
															"src": "15619:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15753:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15753:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15627:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15627:124:10"
																},
																"nativeSrc": "15627:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15627:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15619:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15619:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15346:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15497:9:10",
														"nodeType": "YulTypedName",
														"src": "15497:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15512:4:10",
														"nodeType": "YulTypedName",
														"src": "15512:4:10",
														"type": ""
													}
												],
												"src": "15346:419:10"
											},
											{
												"body": {
													"nativeSrc": "15877:72:10",
													"nodeType": "YulBlock",
													"src": "15877:72:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15899:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15899:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15907:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15907:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15895:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15895:3:10"
																		},
																		"nativeSrc": "15895:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15895:14:10"
																	},
																	{
																		"hexValue": "4469726563746f7279206d757374206265206120636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "15911:30:10",
																		"nodeType": "YulLiteral",
																		"src": "15911:30:10",
																		"type": "",
																		"value": "Directory must be a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15888:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15888:6:10"
																},
																"nativeSrc": "15888:54:10",
																"nodeType": "YulFunctionCall",
																"src": "15888:54:10"
															},
															"nativeSrc": "15888:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "15888:54:10"
														}
													]
												},
												"name": "store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
												"nativeSrc": "15771:178:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15869:6:10",
														"nodeType": "YulTypedName",
														"src": "15869:6:10",
														"type": ""
													}
												],
												"src": "15771:178:10"
											},
											{
												"body": {
													"nativeSrc": "16101:220:10",
													"nodeType": "YulBlock",
													"src": "16101:220:10",
													"statements": [
														{
															"nativeSrc": "16111:74:10",
															"nodeType": "YulAssignment",
															"src": "16111:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16177:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16177:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16182:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16182:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16118:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "16118:58:10"
																},
																"nativeSrc": "16118:67:10",
																"nodeType": "YulFunctionCall",
																"src": "16118:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16111:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16111:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16283:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16283:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
																	"nativeSrc": "16194:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "16194:88:10"
																},
																"nativeSrc": "16194:93:10",
																"nodeType": "YulFunctionCall",
																"src": "16194:93:10"
															},
															"nativeSrc": "16194:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "16194:93:10"
														},
														{
															"nativeSrc": "16296:19:10",
															"nodeType": "YulAssignment",
															"src": "16296:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16307:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16307:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16312:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16312:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16303:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16303:3:10"
																},
																"nativeSrc": "16303:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16303:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16296:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16296:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15955:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16089:3:10",
														"nodeType": "YulTypedName",
														"src": "16089:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16097:3:10",
														"nodeType": "YulTypedName",
														"src": "16097:3:10",
														"type": ""
													}
												],
												"src": "15955:366:10"
											},
											{
												"body": {
													"nativeSrc": "16498:248:10",
													"nodeType": "YulBlock",
													"src": "16498:248:10",
													"statements": [
														{
															"nativeSrc": "16508:26:10",
															"nodeType": "YulAssignment",
															"src": "16508:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16520:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16520:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16531:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16531:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16516:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16516:3:10"
																},
																"nativeSrc": "16516:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16516:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16508:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16508:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16555:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16555:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16566:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16566:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16551:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16551:3:10"
																		},
																		"nativeSrc": "16551:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16551:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16574:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "16574:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16580:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16580:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16570:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16570:3:10"
																		},
																		"nativeSrc": "16570:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16570:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16544:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16544:6:10"
																},
																"nativeSrc": "16544:47:10",
																"nodeType": "YulFunctionCall",
																"src": "16544:47:10"
															},
															"nativeSrc": "16544:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "16544:47:10"
														},
														{
															"nativeSrc": "16600:139:10",
															"nodeType": "YulAssignment",
															"src": "16600:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16734:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16734:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16608:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "16608:124:10"
																},
																"nativeSrc": "16608:131:10",
																"nodeType": "YulFunctionCall",
																"src": "16608:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16600:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16600:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16327:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16478:9:10",
														"nodeType": "YulTypedName",
														"src": "16478:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16493:4:10",
														"nodeType": "YulTypedName",
														"src": "16493:4:10",
														"type": ""
													}
												],
												"src": "16327:419:10"
											},
											{
												"body": {
													"nativeSrc": "16858:125:10",
													"nodeType": "YulBlock",
													"src": "16858:125:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16880:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16880:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16888:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16888:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16876:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16876:3:10"
																		},
																		"nativeSrc": "16876:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16876:14:10"
																	},
																	{
																		"hexValue": "4469726563746f7279206164647265737320646f6573206e6f7420696d706c65",
																		"kind": "string",
																		"nativeSrc": "16892:34:10",
																		"nodeType": "YulLiteral",
																		"src": "16892:34:10",
																		"type": "",
																		"value": "Directory address does not imple"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16869:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16869:6:10"
																},
																"nativeSrc": "16869:58:10",
																"nodeType": "YulFunctionCall",
																"src": "16869:58:10"
															},
															"nativeSrc": "16869:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "16869:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16948:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16948:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16956:2:10",
																				"nodeType": "YulLiteral",
																				"src": "16956:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16944:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16944:3:10"
																		},
																		"nativeSrc": "16944:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16944:15:10"
																	},
																	{
																		"hexValue": "6d656e74206f776e65722829",
																		"kind": "string",
																		"nativeSrc": "16961:14:10",
																		"nodeType": "YulLiteral",
																		"src": "16961:14:10",
																		"type": "",
																		"value": "ment owner()"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16937:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16937:6:10"
																},
																"nativeSrc": "16937:39:10",
																"nodeType": "YulFunctionCall",
																"src": "16937:39:10"
															},
															"nativeSrc": "16937:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "16937:39:10"
														}
													]
												},
												"name": "store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
												"nativeSrc": "16752:231:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16850:6:10",
														"nodeType": "YulTypedName",
														"src": "16850:6:10",
														"type": ""
													}
												],
												"src": "16752:231:10"
											},
											{
												"body": {
													"nativeSrc": "17135:220:10",
													"nodeType": "YulBlock",
													"src": "17135:220:10",
													"statements": [
														{
															"nativeSrc": "17145:74:10",
															"nodeType": "YulAssignment",
															"src": "17145:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17211:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17211:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17216:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17216:2:10",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17152:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "17152:58:10"
																},
																"nativeSrc": "17152:67:10",
																"nodeType": "YulFunctionCall",
																"src": "17152:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17145:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17145:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17317:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17317:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
																	"nativeSrc": "17228:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "17228:88:10"
																},
																"nativeSrc": "17228:93:10",
																"nodeType": "YulFunctionCall",
																"src": "17228:93:10"
															},
															"nativeSrc": "17228:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "17228:93:10"
														},
														{
															"nativeSrc": "17330:19:10",
															"nodeType": "YulAssignment",
															"src": "17330:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17341:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17341:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17346:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17346:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17337:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17337:3:10"
																},
																"nativeSrc": "17337:12:10",
																"nodeType": "YulFunctionCall",
																"src": "17337:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17330:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17330:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16989:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17123:3:10",
														"nodeType": "YulTypedName",
														"src": "17123:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17131:3:10",
														"nodeType": "YulTypedName",
														"src": "17131:3:10",
														"type": ""
													}
												],
												"src": "16989:366:10"
											},
											{
												"body": {
													"nativeSrc": "17532:248:10",
													"nodeType": "YulBlock",
													"src": "17532:248:10",
													"statements": [
														{
															"nativeSrc": "17542:26:10",
															"nodeType": "YulAssignment",
															"src": "17542:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17554:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17554:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17565:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17565:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17550:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17550:3:10"
																},
																"nativeSrc": "17550:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17550:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17542:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17542:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17589:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17589:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17600:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17600:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17585:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17585:3:10"
																		},
																		"nativeSrc": "17585:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17585:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17608:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "17608:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17614:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17614:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17604:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17604:3:10"
																		},
																		"nativeSrc": "17604:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17604:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17578:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17578:6:10"
																},
																"nativeSrc": "17578:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17578:47:10"
															},
															"nativeSrc": "17578:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17578:47:10"
														},
														{
															"nativeSrc": "17634:139:10",
															"nodeType": "YulAssignment",
															"src": "17634:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17768:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17768:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17642:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "17642:124:10"
																},
																"nativeSrc": "17642:131:10",
																"nodeType": "YulFunctionCall",
																"src": "17642:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17634:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17634:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17361:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17512:9:10",
														"nodeType": "YulTypedName",
														"src": "17512:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17527:4:10",
														"nodeType": "YulTypedName",
														"src": "17527:4:10",
														"type": ""
													}
												],
												"src": "17361:419:10"
											},
											{
												"body": {
													"nativeSrc": "17892:114:10",
													"nodeType": "YulBlock",
													"src": "17892:114:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17914:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17914:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17922:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17922:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17910:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17910:3:10"
																		},
																		"nativeSrc": "17910:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17910:14:10"
																	},
																	{
																		"hexValue": "457466546f6b656e3a206576656e747320636f6e7472616374206e6f74207365",
																		"kind": "string",
																		"nativeSrc": "17926:34:10",
																		"nodeType": "YulLiteral",
																		"src": "17926:34:10",
																		"type": "",
																		"value": "EtfToken: events contract not se"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17903:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17903:6:10"
																},
																"nativeSrc": "17903:58:10",
																"nodeType": "YulFunctionCall",
																"src": "17903:58:10"
															},
															"nativeSrc": "17903:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "17903:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17982:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17982:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17990:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17990:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17978:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17978:3:10"
																		},
																		"nativeSrc": "17978:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17978:15:10"
																	},
																	{
																		"hexValue": "74",
																		"kind": "string",
																		"nativeSrc": "17995:3:10",
																		"nodeType": "YulLiteral",
																		"src": "17995:3:10",
																		"type": "",
																		"value": "t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17971:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17971:6:10"
																},
																"nativeSrc": "17971:28:10",
																"nodeType": "YulFunctionCall",
																"src": "17971:28:10"
															},
															"nativeSrc": "17971:28:10",
															"nodeType": "YulExpressionStatement",
															"src": "17971:28:10"
														}
													]
												},
												"name": "store_literal_in_memory_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4",
												"nativeSrc": "17786:220:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17884:6:10",
														"nodeType": "YulTypedName",
														"src": "17884:6:10",
														"type": ""
													}
												],
												"src": "17786:220:10"
											},
											{
												"body": {
													"nativeSrc": "18158:220:10",
													"nodeType": "YulBlock",
													"src": "18158:220:10",
													"statements": [
														{
															"nativeSrc": "18168:74:10",
															"nodeType": "YulAssignment",
															"src": "18168:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18234:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18234:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18239:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18239:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18175:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "18175:58:10"
																},
																"nativeSrc": "18175:67:10",
																"nodeType": "YulFunctionCall",
																"src": "18175:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18168:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18168:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18340:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18340:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4",
																	"nativeSrc": "18251:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "18251:88:10"
																},
																"nativeSrc": "18251:93:10",
																"nodeType": "YulFunctionCall",
																"src": "18251:93:10"
															},
															"nativeSrc": "18251:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "18251:93:10"
														},
														{
															"nativeSrc": "18353:19:10",
															"nodeType": "YulAssignment",
															"src": "18353:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18364:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18364:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18369:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18369:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18360:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18360:3:10"
																},
																"nativeSrc": "18360:12:10",
																"nodeType": "YulFunctionCall",
																"src": "18360:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18353:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18353:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18012:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18146:3:10",
														"nodeType": "YulTypedName",
														"src": "18146:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18154:3:10",
														"nodeType": "YulTypedName",
														"src": "18154:3:10",
														"type": ""
													}
												],
												"src": "18012:366:10"
											},
											{
												"body": {
													"nativeSrc": "18555:248:10",
													"nodeType": "YulBlock",
													"src": "18555:248:10",
													"statements": [
														{
															"nativeSrc": "18565:26:10",
															"nodeType": "YulAssignment",
															"src": "18565:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18577:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18577:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18588:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18588:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18573:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18573:3:10"
																},
																"nativeSrc": "18573:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18573:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18565:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18565:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18612:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18612:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18623:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18623:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18608:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18608:3:10"
																		},
																		"nativeSrc": "18608:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18608:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18631:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "18631:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18637:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18637:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18627:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18627:3:10"
																		},
																		"nativeSrc": "18627:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18627:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18601:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18601:6:10"
																},
																"nativeSrc": "18601:47:10",
																"nodeType": "YulFunctionCall",
																"src": "18601:47:10"
															},
															"nativeSrc": "18601:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "18601:47:10"
														},
														{
															"nativeSrc": "18657:139:10",
															"nodeType": "YulAssignment",
															"src": "18657:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18791:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18791:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18665:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "18665:124:10"
																},
																"nativeSrc": "18665:131:10",
																"nodeType": "YulFunctionCall",
																"src": "18665:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18657:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18657:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18384:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18535:9:10",
														"nodeType": "YulTypedName",
														"src": "18535:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18550:4:10",
														"nodeType": "YulTypedName",
														"src": "18550:4:10",
														"type": ""
													}
												],
												"src": "18384:419:10"
											},
											{
												"body": {
													"nativeSrc": "18991:371:10",
													"nodeType": "YulBlock",
													"src": "18991:371:10",
													"statements": [
														{
															"nativeSrc": "19001:27:10",
															"nodeType": "YulAssignment",
															"src": "19001:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19013:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19013:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19024:3:10",
																		"nodeType": "YulLiteral",
																		"src": "19024:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19009:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19009:3:10"
																},
																"nativeSrc": "19009:19:10",
																"nodeType": "YulFunctionCall",
																"src": "19009:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19001:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19001:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19082:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19082:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19095:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19095:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19106:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19106:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19091:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19091:3:10"
																		},
																		"nativeSrc": "19091:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19091:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19038:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "19038:43:10"
																},
																"nativeSrc": "19038:71:10",
																"nodeType": "YulFunctionCall",
																"src": "19038:71:10"
															},
															"nativeSrc": "19038:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "19038:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19163:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19163:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19176:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19176:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19187:2:10",
																				"nodeType": "YulLiteral",
																				"src": "19187:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19172:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19172:3:10"
																		},
																		"nativeSrc": "19172:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19172:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19119:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "19119:43:10"
																},
																"nativeSrc": "19119:72:10",
																"nodeType": "YulFunctionCall",
																"src": "19119:72:10"
															},
															"nativeSrc": "19119:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "19119:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19245:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19245:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19258:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19258:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19269:2:10",
																				"nodeType": "YulLiteral",
																				"src": "19269:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19254:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19254:3:10"
																		},
																		"nativeSrc": "19254:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19254:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19201:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "19201:43:10"
																},
																"nativeSrc": "19201:72:10",
																"nodeType": "YulFunctionCall",
																"src": "19201:72:10"
															},
															"nativeSrc": "19201:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "19201:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "19327:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19327:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19340:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19340:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19351:2:10",
																				"nodeType": "YulLiteral",
																				"src": "19351:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19336:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19336:3:10"
																		},
																		"nativeSrc": "19336:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19336:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19283:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "19283:43:10"
																},
																"nativeSrc": "19283:72:10",
																"nodeType": "YulFunctionCall",
																"src": "19283:72:10"
															},
															"nativeSrc": "19283:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "19283:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_address_t_uint256__to_t_uint256_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18809:553:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18939:9:10",
														"nodeType": "YulTypedName",
														"src": "18939:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18951:6:10",
														"nodeType": "YulTypedName",
														"src": "18951:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18959:6:10",
														"nodeType": "YulTypedName",
														"src": "18959:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18967:6:10",
														"nodeType": "YulTypedName",
														"src": "18967:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18975:6:10",
														"nodeType": "YulTypedName",
														"src": "18975:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18986:4:10",
														"nodeType": "YulTypedName",
														"src": "18986:4:10",
														"type": ""
													}
												],
												"src": "18809:553:10"
											},
											{
												"body": {
													"nativeSrc": "19422:87:10",
													"nodeType": "YulBlock",
													"src": "19422:87:10",
													"statements": [
														{
															"nativeSrc": "19432:11:10",
															"nodeType": "YulAssignment",
															"src": "19432:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "19440:3:10",
																"nodeType": "YulIdentifier",
																"src": "19440:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "19432:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19432:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19460:1:10",
																		"nodeType": "YulLiteral",
																		"src": "19460:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "19463:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19463:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19453:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19453:6:10"
																},
																"nativeSrc": "19453:14:10",
																"nodeType": "YulFunctionCall",
																"src": "19453:14:10"
															},
															"nativeSrc": "19453:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "19453:14:10"
														},
														{
															"nativeSrc": "19476:26:10",
															"nodeType": "YulAssignment",
															"src": "19476:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19494:1:10",
																		"nodeType": "YulLiteral",
																		"src": "19494:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19497:4:10",
																		"nodeType": "YulLiteral",
																		"src": "19497:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "19484:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "19484:9:10"
																},
																"nativeSrc": "19484:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19484:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "19476:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19476:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "19368:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "19409:3:10",
														"nodeType": "YulTypedName",
														"src": "19409:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "19417:4:10",
														"nodeType": "YulTypedName",
														"src": "19417:4:10",
														"type": ""
													}
												],
												"src": "19368:141:10"
											},
											{
												"body": {
													"nativeSrc": "19559:49:10",
													"nodeType": "YulBlock",
													"src": "19559:49:10",
													"statements": [
														{
															"nativeSrc": "19569:33:10",
															"nodeType": "YulAssignment",
															"src": "19569:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19587:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "19587:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19594:2:10",
																				"nodeType": "YulLiteral",
																				"src": "19594:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19583:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19583:3:10"
																		},
																		"nativeSrc": "19583:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19583:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19599:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19599:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "19579:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19579:3:10"
																},
																"nativeSrc": "19579:23:10",
																"nodeType": "YulFunctionCall",
																"src": "19579:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "19569:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19569:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "19515:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19542:5:10",
														"nodeType": "YulTypedName",
														"src": "19542:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "19552:6:10",
														"nodeType": "YulTypedName",
														"src": "19552:6:10",
														"type": ""
													}
												],
												"src": "19515:93:10"
											},
											{
												"body": {
													"nativeSrc": "19667:54:10",
													"nodeType": "YulBlock",
													"src": "19667:54:10",
													"statements": [
														{
															"nativeSrc": "19677:37:10",
															"nodeType": "YulAssignment",
															"src": "19677:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "19702:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19702:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "19708:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "19708:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "19698:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19698:3:10"
																},
																"nativeSrc": "19698:16:10",
																"nodeType": "YulFunctionCall",
																"src": "19698:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "19677:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "19677:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "19614:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "19642:4:10",
														"nodeType": "YulTypedName",
														"src": "19642:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "19648:5:10",
														"nodeType": "YulTypedName",
														"src": "19648:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "19658:8:10",
														"nodeType": "YulTypedName",
														"src": "19658:8:10",
														"type": ""
													}
												],
												"src": "19614:107:10"
											},
											{
												"body": {
													"nativeSrc": "19803:317:10",
													"nodeType": "YulBlock",
													"src": "19803:317:10",
													"statements": [
														{
															"nativeSrc": "19813:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "19813:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "19834:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "19834:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19846:1:10",
																		"nodeType": "YulLiteral",
																		"src": "19846:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "19830:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19830:3:10"
																},
																"nativeSrc": "19830:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19830:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "19817:9:10",
																	"nodeType": "YulTypedName",
																	"src": "19817:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19857:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "19857:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "19888:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19888:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19899:66:10",
																		"nodeType": "YulLiteral",
																		"src": "19899:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "19869:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "19869:18:10"
																},
																"nativeSrc": "19869:97:10",
																"nodeType": "YulFunctionCall",
																"src": "19869:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "19861:4:10",
																	"nodeType": "YulTypedName",
																	"src": "19861:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19975:51:10",
															"nodeType": "YulAssignment",
															"src": "19975:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "20006:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20006:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "20017:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "20017:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "19987:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "19987:18:10"
																},
																"nativeSrc": "19987:39:10",
																"nodeType": "YulFunctionCall",
																"src": "19987:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "19975:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "19975:8:10"
																}
															]
														},
														{
															"nativeSrc": "20035:30:10",
															"nodeType": "YulAssignment",
															"src": "20035:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20048:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "20048:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "20059:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "20059:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "20055:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20055:3:10"
																		},
																		"nativeSrc": "20055:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20055:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "20044:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20044:3:10"
																},
																"nativeSrc": "20044:21:10",
																"nodeType": "YulFunctionCall",
																"src": "20044:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20035:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "20035:5:10"
																}
															]
														},
														{
															"nativeSrc": "20074:40:10",
															"nodeType": "YulAssignment",
															"src": "20074:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20087:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "20087:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "20098:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "20098:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "20108:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "20108:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "20094:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20094:3:10"
																		},
																		"nativeSrc": "20094:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20094:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "20084:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "20084:2:10"
																},
																"nativeSrc": "20084:30:10",
																"nodeType": "YulFunctionCall",
																"src": "20084:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "20074:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20074:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "19727:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19764:5:10",
														"nodeType": "YulTypedName",
														"src": "19764:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "19771:10:10",
														"nodeType": "YulTypedName",
														"src": "19771:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "19783:8:10",
														"nodeType": "YulTypedName",
														"src": "19783:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "19796:6:10",
														"nodeType": "YulTypedName",
														"src": "19796:6:10",
														"type": ""
													}
												],
												"src": "19727:393:10"
											},
											{
												"body": {
													"nativeSrc": "20186:82:10",
													"nodeType": "YulBlock",
													"src": "20186:82:10",
													"statements": [
														{
															"nativeSrc": "20196:66:10",
															"nodeType": "YulAssignment",
															"src": "20196:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "20254:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "20254:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "20236:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "20236:17:10"
																				},
																				"nativeSrc": "20236:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "20236:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "20227:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "20227:8:10"
																		},
																		"nativeSrc": "20227:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20227:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20209:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "20209:17:10"
																},
																"nativeSrc": "20209:53:10",
																"nodeType": "YulFunctionCall",
																"src": "20209:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "20196:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "20196:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "20126:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20166:5:10",
														"nodeType": "YulTypedName",
														"src": "20166:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "20176:9:10",
														"nodeType": "YulTypedName",
														"src": "20176:9:10",
														"type": ""
													}
												],
												"src": "20126:142:10"
											},
											{
												"body": {
													"nativeSrc": "20321:28:10",
													"nodeType": "YulBlock",
													"src": "20321:28:10",
													"statements": [
														{
															"nativeSrc": "20331:12:10",
															"nodeType": "YulAssignment",
															"src": "20331:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "20338:5:10",
																"nodeType": "YulIdentifier",
																"src": "20338:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "20331:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20331:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "20274:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20307:5:10",
														"nodeType": "YulTypedName",
														"src": "20307:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "20317:3:10",
														"nodeType": "YulTypedName",
														"src": "20317:3:10",
														"type": ""
													}
												],
												"src": "20274:75:10"
											},
											{
												"body": {
													"nativeSrc": "20431:193:10",
													"nodeType": "YulBlock",
													"src": "20431:193:10",
													"statements": [
														{
															"nativeSrc": "20441:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "20441:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "20496:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "20496:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "20465:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "20465:30:10"
																},
																"nativeSrc": "20465:39:10",
																"nodeType": "YulFunctionCall",
																"src": "20465:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "20445:16:10",
																	"nodeType": "YulTypedName",
																	"src": "20445:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "20520:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "20520:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "20560:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "20560:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "20554:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "20554:5:10"
																				},
																				"nativeSrc": "20554:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "20554:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "20567:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "20567:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "20599:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "20599:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "20575:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "20575:23:10"
																				},
																				"nativeSrc": "20575:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "20575:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "20526:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "20526:27:10"
																		},
																		"nativeSrc": "20526:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20526:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "20513:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20513:6:10"
																},
																"nativeSrc": "20513:105:10",
																"nodeType": "YulFunctionCall",
																"src": "20513:105:10"
															},
															"nativeSrc": "20513:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "20513:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "20355:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "20408:4:10",
														"nodeType": "YulTypedName",
														"src": "20408:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "20414:6:10",
														"nodeType": "YulTypedName",
														"src": "20414:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "20422:7:10",
														"nodeType": "YulTypedName",
														"src": "20422:7:10",
														"type": ""
													}
												],
												"src": "20355:269:10"
											},
											{
												"body": {
													"nativeSrc": "20679:24:10",
													"nodeType": "YulBlock",
													"src": "20679:24:10",
													"statements": [
														{
															"nativeSrc": "20689:8:10",
															"nodeType": "YulAssignment",
															"src": "20689:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "20696:1:10",
																"nodeType": "YulLiteral",
																"src": "20696:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "20689:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20689:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "20630:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "20675:3:10",
														"nodeType": "YulTypedName",
														"src": "20675:3:10",
														"type": ""
													}
												],
												"src": "20630:73:10"
											},
											{
												"body": {
													"nativeSrc": "20762:136:10",
													"nodeType": "YulBlock",
													"src": "20762:136:10",
													"statements": [
														{
															"nativeSrc": "20772:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "20772:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "20786:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "20786:30:10"
																},
																"nativeSrc": "20786:32:10",
																"nodeType": "YulFunctionCall",
																"src": "20786:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "20776:6:10",
																	"nodeType": "YulTypedName",
																	"src": "20776:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "20871:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "20871:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "20877:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20877:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "20885:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20885:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "20827:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20827:43:10"
																},
																"nativeSrc": "20827:65:10",
																"nodeType": "YulFunctionCall",
																"src": "20827:65:10"
															},
															"nativeSrc": "20827:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "20827:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "20709:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "20748:4:10",
														"nodeType": "YulTypedName",
														"src": "20748:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "20754:6:10",
														"nodeType": "YulTypedName",
														"src": "20754:6:10",
														"type": ""
													}
												],
												"src": "20709:189:10"
											},
											{
												"body": {
													"nativeSrc": "20954:136:10",
													"nodeType": "YulBlock",
													"src": "20954:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "21021:63:10",
																"nodeType": "YulBlock",
																"src": "21021:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "21065:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "21065:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21072:1:10",
																					"nodeType": "YulLiteral",
																					"src": "21072:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "21035:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "21035:29:10"
																			},
																			"nativeSrc": "21035:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "21035:39:10"
																		},
																		"nativeSrc": "21035:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "21035:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "20974:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "20974:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "20981:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20981:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "20971:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "20971:2:10"
																},
																"nativeSrc": "20971:14:10",
																"nodeType": "YulFunctionCall",
																"src": "20971:14:10"
															},
															"nativeSrc": "20964:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "20986:26:10",
																"nodeType": "YulBlock",
																"src": "20986:26:10",
																"statements": [
																	{
																		"nativeSrc": "20988:22:10",
																		"nodeType": "YulAssignment",
																		"src": "20988:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "21001:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "21001:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21008:1:10",
																					"nodeType": "YulLiteral",
																					"src": "21008:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "20997:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "20997:3:10"
																			},
																			"nativeSrc": "20997:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "20997:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "20988:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "20988:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "20968:2:10",
																"nodeType": "YulBlock",
																"src": "20968:2:10",
																"statements": []
															},
															"src": "20964:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "20904:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "20942:5:10",
														"nodeType": "YulTypedName",
														"src": "20942:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20949:3:10",
														"nodeType": "YulTypedName",
														"src": "20949:3:10",
														"type": ""
													}
												],
												"src": "20904:186:10"
											},
											{
												"body": {
													"nativeSrc": "21175:464:10",
													"nodeType": "YulBlock",
													"src": "21175:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "21201:431:10",
																"nodeType": "YulBlock",
																"src": "21201:431:10",
																"statements": [
																	{
																		"nativeSrc": "21215:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "21215:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "21263:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "21263:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "21231:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "21231:31:10"
																			},
																			"nativeSrc": "21231:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "21231:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "21219:8:10",
																				"nodeType": "YulTypedName",
																				"src": "21219:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "21282:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "21282:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "21305:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "21305:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "21333:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "21333:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "21315:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "21315:17:10"
																					},
																					"nativeSrc": "21315:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "21315:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "21301:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "21301:3:10"
																			},
																			"nativeSrc": "21301:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "21301:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "21286:11:10",
																				"nodeType": "YulTypedName",
																				"src": "21286:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "21502:27:10",
																			"nodeType": "YulBlock",
																			"src": "21502:27:10",
																			"statements": [
																				{
																					"nativeSrc": "21504:23:10",
																					"nodeType": "YulAssignment",
																					"src": "21504:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "21519:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "21519:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "21504:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "21504:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "21486:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "21486:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21498:2:10",
																					"nodeType": "YulLiteral",
																					"src": "21498:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "21483:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "21483:2:10"
																			},
																			"nativeSrc": "21483:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "21483:18:10"
																		},
																		"nativeSrc": "21480:49:10",
																		"nodeType": "YulIf",
																		"src": "21480:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "21571:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "21571:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "21588:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "21588:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "21616:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "21616:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "21598:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "21598:17:10"
																							},
																							"nativeSrc": "21598:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "21598:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "21584:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "21584:3:10"
																					},
																					"nativeSrc": "21584:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "21584:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "21542:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "21542:28:10"
																			},
																			"nativeSrc": "21542:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "21542:80:10"
																		},
																		"nativeSrc": "21542:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "21542:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "21192:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21192:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21197:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21197:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21189:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "21189:2:10"
																},
																"nativeSrc": "21189:11:10",
																"nodeType": "YulFunctionCall",
																"src": "21189:11:10"
															},
															"nativeSrc": "21186:446:10",
															"nodeType": "YulIf",
															"src": "21186:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "21096:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "21151:5:10",
														"nodeType": "YulTypedName",
														"src": "21151:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "21158:3:10",
														"nodeType": "YulTypedName",
														"src": "21158:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "21163:10:10",
														"nodeType": "YulTypedName",
														"src": "21163:10:10",
														"type": ""
													}
												],
												"src": "21096:543:10"
											},
											{
												"body": {
													"nativeSrc": "21708:54:10",
													"nodeType": "YulBlock",
													"src": "21708:54:10",
													"statements": [
														{
															"nativeSrc": "21718:37:10",
															"nodeType": "YulAssignment",
															"src": "21718:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "21743:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "21743:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "21749:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "21749:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "21739:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21739:3:10"
																},
																"nativeSrc": "21739:16:10",
																"nodeType": "YulFunctionCall",
																"src": "21739:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "21718:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "21718:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "21645:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "21683:4:10",
														"nodeType": "YulTypedName",
														"src": "21683:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "21689:5:10",
														"nodeType": "YulTypedName",
														"src": "21689:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "21699:8:10",
														"nodeType": "YulTypedName",
														"src": "21699:8:10",
														"type": ""
													}
												],
												"src": "21645:117:10"
											},
											{
												"body": {
													"nativeSrc": "21819:118:10",
													"nodeType": "YulBlock",
													"src": "21819:118:10",
													"statements": [
														{
															"nativeSrc": "21829:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "21829:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "21878:1:10",
																						"nodeType": "YulLiteral",
																						"src": "21878:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "21881:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "21881:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "21874:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "21874:3:10"
																				},
																				"nativeSrc": "21874:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "21874:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "21893:1:10",
																						"nodeType": "YulLiteral",
																						"src": "21893:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "21889:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "21889:3:10"
																				},
																				"nativeSrc": "21889:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "21889:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "21845:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "21845:28:10"
																		},
																		"nativeSrc": "21845:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21845:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "21841:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21841:3:10"
																},
																"nativeSrc": "21841:56:10",
																"nodeType": "YulFunctionCall",
																"src": "21841:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "21833:4:10",
																	"nodeType": "YulTypedName",
																	"src": "21833:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21906:25:10",
															"nodeType": "YulAssignment",
															"src": "21906:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21920:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "21920:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "21926:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "21926:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21916:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21916:3:10"
																},
																"nativeSrc": "21916:15:10",
																"nodeType": "YulFunctionCall",
																"src": "21916:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "21906:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21906:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "21768:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "21796:4:10",
														"nodeType": "YulTypedName",
														"src": "21796:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "21802:5:10",
														"nodeType": "YulTypedName",
														"src": "21802:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "21812:6:10",
														"nodeType": "YulTypedName",
														"src": "21812:6:10",
														"type": ""
													}
												],
												"src": "21768:169:10"
											},
											{
												"body": {
													"nativeSrc": "22023:214:10",
													"nodeType": "YulBlock",
													"src": "22023:214:10",
													"statements": [
														{
															"nativeSrc": "22156:37:10",
															"nodeType": "YulAssignment",
															"src": "22156:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "22183:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "22183:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "22189:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22189:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "22164:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "22164:18:10"
																},
																"nativeSrc": "22164:29:10",
																"nodeType": "YulFunctionCall",
																"src": "22164:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "22156:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22156:4:10"
																}
															]
														},
														{
															"nativeSrc": "22202:29:10",
															"nodeType": "YulAssignment",
															"src": "22202:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "22213:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "22213:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "22223:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22223:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "22226:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "22226:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "22219:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22219:3:10"
																		},
																		"nativeSrc": "22219:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22219:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "22210:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "22210:2:10"
																},
																"nativeSrc": "22210:21:10",
																"nodeType": "YulFunctionCall",
																"src": "22210:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "22202:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22202:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "21942:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "22004:4:10",
														"nodeType": "YulTypedName",
														"src": "22004:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "22010:3:10",
														"nodeType": "YulTypedName",
														"src": "22010:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "22018:4:10",
														"nodeType": "YulTypedName",
														"src": "22018:4:10",
														"type": ""
													}
												],
												"src": "21942:295:10"
											},
											{
												"body": {
													"nativeSrc": "22334:1303:10",
													"nodeType": "YulBlock",
													"src": "22334:1303:10",
													"statements": [
														{
															"nativeSrc": "22345:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "22345:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "22392:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22392:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "22359:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "22359:32:10"
																},
																"nativeSrc": "22359:37:10",
																"nodeType": "YulFunctionCall",
																"src": "22359:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "22349:6:10",
																	"nodeType": "YulTypedName",
																	"src": "22349:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22481:22:10",
																"nodeType": "YulBlock",
																"src": "22481:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "22483:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "22483:16:10"
																			},
																			"nativeSrc": "22483:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "22483:18:10"
																		},
																		"nativeSrc": "22483:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "22483:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "22453:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22453:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22461:18:10",
																		"nodeType": "YulLiteral",
																		"src": "22461:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22450:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "22450:2:10"
																},
																"nativeSrc": "22450:30:10",
																"nodeType": "YulFunctionCall",
																"src": "22450:30:10"
															},
															"nativeSrc": "22447:56:10",
															"nodeType": "YulIf",
															"src": "22447:56:10"
														},
														{
															"nativeSrc": "22513:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "22513:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "22559:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "22559:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "22553:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "22553:5:10"
																		},
																		"nativeSrc": "22553:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22553:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "22527:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "22527:25:10"
																},
																"nativeSrc": "22527:38:10",
																"nodeType": "YulFunctionCall",
																"src": "22527:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "22517:6:10",
																	"nodeType": "YulTypedName",
																	"src": "22517:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "22658:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "22658:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "22664:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22664:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "22672:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22672:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "22612:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "22612:45:10"
																},
																"nativeSrc": "22612:67:10",
																"nodeType": "YulFunctionCall",
																"src": "22612:67:10"
															},
															"nativeSrc": "22612:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "22612:67:10"
														},
														{
															"nativeSrc": "22689:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "22689:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "22706:1:10",
																"nodeType": "YulLiteral",
																"src": "22706:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "22693:9:10",
																	"nodeType": "YulTypedName",
																	"src": "22693:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22717:17:10",
															"nodeType": "YulAssignment",
															"src": "22717:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "22730:4:10",
																"nodeType": "YulLiteral",
																"src": "22730:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "22717:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "22717:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "22781:611:10",
																		"nodeType": "YulBlock",
																		"src": "22781:611:10",
																		"statements": [
																			{
																				"nativeSrc": "22795:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22795:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "22814:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "22814:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "22826:4:10",
																									"nodeType": "YulLiteral",
																									"src": "22826:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "22822:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "22822:3:10"
																							},
																							"nativeSrc": "22822:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "22822:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "22810:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "22810:3:10"
																					},
																					"nativeSrc": "22810:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "22810:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "22799:7:10",
																						"nodeType": "YulTypedName",
																						"src": "22799:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "22846:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22846:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "22892:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "22892:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "22860:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "22860:31:10"
																					},
																					"nativeSrc": "22860:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "22860:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "22850:6:10",
																						"nodeType": "YulTypedName",
																						"src": "22850:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "22910:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22910:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "22919:1:10",
																					"nodeType": "YulLiteral",
																					"src": "22919:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "22914:1:10",
																						"nodeType": "YulTypedName",
																						"src": "22914:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "22978:163:10",
																					"nodeType": "YulBlock",
																					"src": "22978:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "23003:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "23003:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "23021:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "23021:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "23026:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "23026:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "23017:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "23017:3:10"
																												},
																												"nativeSrc": "23017:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "23017:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "23011:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "23011:5:10"
																										},
																										"nativeSrc": "23011:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "23011:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "22996:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "22996:6:10"
																								},
																								"nativeSrc": "22996:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "22996:42:10"
																							},
																							"nativeSrc": "22996:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "22996:42:10"
																						},
																						{
																							"nativeSrc": "23055:24:10",
																							"nodeType": "YulAssignment",
																							"src": "23055:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "23069:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "23069:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "23077:1:10",
																										"nodeType": "YulLiteral",
																										"src": "23077:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "23065:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "23065:3:10"
																								},
																								"nativeSrc": "23065:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "23065:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "23055:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "23055:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "23096:31:10",
																							"nodeType": "YulAssignment",
																							"src": "23096:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "23113:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "23113:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "23124:2:10",
																										"nodeType": "YulLiteral",
																										"src": "23124:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "23109:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "23109:3:10"
																								},
																								"nativeSrc": "23109:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "23109:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "23096:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "23096:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "22944:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "22944:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "22947:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "22947:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "22941:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "22941:2:10"
																					},
																					"nativeSrc": "22941:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "22941:14:10"
																				},
																				"nativeSrc": "22933:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "22956:21:10",
																					"nodeType": "YulBlock",
																					"src": "22956:21:10",
																					"statements": [
																						{
																							"nativeSrc": "22958:17:10",
																							"nodeType": "YulAssignment",
																							"src": "22958:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "22967:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "22967:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "22970:4:10",
																										"nodeType": "YulLiteral",
																										"src": "22970:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "22963:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "22963:3:10"
																								},
																								"nativeSrc": "22963:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "22963:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "22958:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "22958:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "22937:3:10",
																					"nodeType": "YulBlock",
																					"src": "22937:3:10",
																					"statements": []
																				},
																				"src": "22933:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "23177:156:10",
																					"nodeType": "YulBlock",
																					"src": "23177:156:10",
																					"statements": [
																						{
																							"nativeSrc": "23195:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "23195:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "23222:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "23222:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "23227:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "23227:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "23218:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "23218:3:10"
																										},
																										"nativeSrc": "23218:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "23218:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "23212:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "23212:5:10"
																								},
																								"nativeSrc": "23212:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "23212:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "23199:9:10",
																									"nodeType": "YulTypedName",
																									"src": "23199:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "23262:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "23262:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "23289:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "23289:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "23304:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "23304:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "23312:4:10",
																														"nodeType": "YulLiteral",
																														"src": "23312:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "23300:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "23300:3:10"
																												},
																												"nativeSrc": "23300:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "23300:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "23270:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "23270:18:10"
																										},
																										"nativeSrc": "23270:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "23270:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "23255:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "23255:6:10"
																								},
																								"nativeSrc": "23255:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "23255:64:10"
																							},
																							"nativeSrc": "23255:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "23255:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "23160:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "23160:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "23169:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "23169:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "23157:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "23157:2:10"
																					},
																					"nativeSrc": "23157:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "23157:19:10"
																				},
																				"nativeSrc": "23154:179:10",
																				"nodeType": "YulIf",
																				"src": "23154:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "23353:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "23353:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "23367:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "23367:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "23375:1:10",
																											"nodeType": "YulLiteral",
																											"src": "23375:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "23363:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "23363:3:10"
																									},
																									"nativeSrc": "23363:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "23363:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "23379:1:10",
																									"nodeType": "YulLiteral",
																									"src": "23379:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "23359:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "23359:3:10"
																							},
																							"nativeSrc": "23359:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "23359:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "23346:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "23346:6:10"
																					},
																					"nativeSrc": "23346:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "23346:36:10"
																				},
																				"nativeSrc": "23346:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "23346:36:10"
																			}
																		]
																	},
																	"nativeSrc": "22774:618:10",
																	"nodeType": "YulCase",
																	"src": "22774:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22779:1:10",
																		"nodeType": "YulLiteral",
																		"src": "22779:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "23409:222:10",
																		"nodeType": "YulBlock",
																		"src": "23409:222:10",
																		"statements": [
																			{
																				"nativeSrc": "23423:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23423:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "23436:1:10",
																					"nodeType": "YulLiteral",
																					"src": "23436:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "23427:5:10",
																						"nodeType": "YulTypedName",
																						"src": "23427:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "23460:67:10",
																					"nodeType": "YulBlock",
																					"src": "23460:67:10",
																					"statements": [
																						{
																							"nativeSrc": "23478:35:10",
																							"nodeType": "YulAssignment",
																							"src": "23478:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "23497:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "23497:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "23502:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "23502:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "23493:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "23493:3:10"
																										},
																										"nativeSrc": "23493:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "23493:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "23487:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "23487:5:10"
																								},
																								"nativeSrc": "23487:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "23487:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "23478:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "23478:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "23453:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "23453:6:10"
																				},
																				"nativeSrc": "23450:77:10",
																				"nodeType": "YulIf",
																				"src": "23450:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "23547:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "23547:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "23606:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "23606:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "23613:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "23613:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "23553:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "23553:52:10"
																							},
																							"nativeSrc": "23553:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "23553:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "23540:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "23540:6:10"
																					},
																					"nativeSrc": "23540:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "23540:81:10"
																				},
																				"nativeSrc": "23540:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "23540:81:10"
																			}
																		]
																	},
																	"nativeSrc": "23401:230:10",
																	"nodeType": "YulCase",
																	"src": "23401:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "22754:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22754:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22762:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22762:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22751:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "22751:2:10"
																},
																"nativeSrc": "22751:14:10",
																"nodeType": "YulFunctionCall",
																"src": "22751:14:10"
															},
															"nativeSrc": "22744:887:10",
															"nodeType": "YulSwitch",
															"src": "22744:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "22242:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "22323:4:10",
														"nodeType": "YulTypedName",
														"src": "22323:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "22329:3:10",
														"nodeType": "YulTypedName",
														"src": "22329:3:10",
														"type": ""
													}
												],
												"src": "22242:1395:10"
											},
											{
												"body": {
													"nativeSrc": "23671:152:10",
													"nodeType": "YulBlock",
													"src": "23671:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23688:1:10",
																		"nodeType": "YulLiteral",
																		"src": "23688:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23691:77:10",
																		"nodeType": "YulLiteral",
																		"src": "23691:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23681:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23681:6:10"
																},
																"nativeSrc": "23681:88:10",
																"nodeType": "YulFunctionCall",
																"src": "23681:88:10"
															},
															"nativeSrc": "23681:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "23681:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23785:1:10",
																		"nodeType": "YulLiteral",
																		"src": "23785:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23788:4:10",
																		"nodeType": "YulLiteral",
																		"src": "23788:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23778:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23778:6:10"
																},
																"nativeSrc": "23778:15:10",
																"nodeType": "YulFunctionCall",
																"src": "23778:15:10"
															},
															"nativeSrc": "23778:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "23778:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23809:1:10",
																		"nodeType": "YulLiteral",
																		"src": "23809:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23812:4:10",
																		"nodeType": "YulLiteral",
																		"src": "23812:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "23802:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23802:6:10"
																},
																"nativeSrc": "23802:15:10",
																"nodeType": "YulFunctionCall",
																"src": "23802:15:10"
															},
															"nativeSrc": "23802:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "23802:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "23643:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "23643:180:10"
											},
											{
												"body": {
													"nativeSrc": "23873:147:10",
													"nodeType": "YulBlock",
													"src": "23873:147:10",
													"statements": [
														{
															"nativeSrc": "23883:25:10",
															"nodeType": "YulAssignment",
															"src": "23883:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23906:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "23906:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23888:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "23888:17:10"
																},
																"nativeSrc": "23888:20:10",
																"nodeType": "YulFunctionCall",
																"src": "23888:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "23883:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "23883:1:10"
																}
															]
														},
														{
															"nativeSrc": "23917:25:10",
															"nodeType": "YulAssignment",
															"src": "23917:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "23940:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "23940:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23922:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "23922:17:10"
																},
																"nativeSrc": "23922:20:10",
																"nodeType": "YulFunctionCall",
																"src": "23922:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "23917:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "23917:1:10"
																}
															]
														},
														{
															"nativeSrc": "23951:16:10",
															"nodeType": "YulAssignment",
															"src": "23951:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23962:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "23962:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "23965:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "23965:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23958:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23958:3:10"
																},
																"nativeSrc": "23958:9:10",
																"nodeType": "YulFunctionCall",
																"src": "23958:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "23951:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23951:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23991:22:10",
																"nodeType": "YulBlock",
																"src": "23991:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "23993:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "23993:16:10"
																			},
																			"nativeSrc": "23993:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "23993:18:10"
																		},
																		"nativeSrc": "23993:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "23993:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23983:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "23983:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "23986:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23986:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23980:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "23980:2:10"
																},
																"nativeSrc": "23980:10:10",
																"nodeType": "YulFunctionCall",
																"src": "23980:10:10"
															},
															"nativeSrc": "23977:36:10",
															"nodeType": "YulIf",
															"src": "23977:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "23829:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "23860:1:10",
														"nodeType": "YulTypedName",
														"src": "23860:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "23863:1:10",
														"nodeType": "YulTypedName",
														"src": "23863:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "23869:3:10",
														"nodeType": "YulTypedName",
														"src": "23869:3:10",
														"type": ""
													}
												],
												"src": "23829:191:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IDirectory_$1187_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IDirectory_$1187_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IDirectory_$1187_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IDirectory_$1187__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IDirectory_$1187_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9(memPtr) {\n\n        mstore(add(memPtr, 0), \"msg.sender is not etf router\")\n\n    }\n\n    function abi_encode_t_stringliteral_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory cannot be zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory must be a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory address does not imple\")\n\n        mstore(add(memPtr, 32), \"ment owner()\")\n\n    }\n\n    function abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4(memPtr) {\n\n        mstore(add(memPtr, 0), \"EtfToken: events contract not se\")\n\n        mstore(add(memPtr, 32), \"t\")\n\n    }\n\n    function abi_encode_t_stringliteral_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint256__to_t_uint256_t_address_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610109575f3560e01c80636ebd362c116100a05780639dc29fac1161006f5780639dc29fac146102b9578063a9059cbb146102d5578063ba4c7be114610305578063cfa36f3d14610321578063dd62ed3e1461033f57610109565b80636ebd362c1461023157806370a082311461024d5780638da5cb5b1461027d57806395d89b411461029b57610109565b806327262618116100dc57806327262618146101a9578063313ce567146101d957806340c10f19146101f7578063658a847a1461021357610109565b806306fdde031461010d578063095ea7b31461012b57806318160ddd1461015b57806323b872dd14610179575b5f5ffd5b61011561036f565b60405161012291906116ff565b60405180910390f35b610145600480360381019061014091906117bd565b61040d565b6040516101529190611815565b60405180910390f35b61016361042f565b604051610170919061183d565b60405180910390f35b610193600480360381019061018e9190611856565b610446565b6040516101a09190611815565b60405180910390f35b6101c360048036038101906101be91906119d2565b610474565b6040516101d09190611a28565b60405180910390f35b6101e1610514565b6040516101ee9190611a5c565b60405180910390f35b610211600480360381019061020c91906117bd565b61051c565b005b61021b6105d5565b6040516102289190611ad0565b60405180910390f35b61024b60048036038101906102469190611ae9565b6105f9565b005b61026760048036038101906102629190611b85565b6107ee565b604051610274919061183d565b60405180910390f35b610285610841565b6040516102929190611a28565b60405180910390f35b6102a36108d4565b6040516102b091906116ff565b60405180910390f35b6102d360048036038101906102ce91906117bd565b610972565b005b6102ef60048036038101906102ea91906117bd565b610a2b565b6040516102fc9190611815565b60405180910390f35b61031f600480360381019061031a9190611b85565b610a4d565b005b610329610b53565b604051610336919061183d565b60405180910390f35b61035960048036038101906103549190611bb0565b610b59565b604051610366919061183d565b60405180910390f35b60605f61037a610be9565b905080600301805461038b90611c1b565b80601f01602080910402602001604051908101604052809291908181526020018280546103b790611c1b565b80156104025780601f106103d957610100808354040283529160200191610402565b820191905f5260205f20905b8154815290600101906020018083116103e557829003601f168201915b505050505091505090565b5f5f610417610c10565b9050610424818585610c17565b600191505092915050565b5f5f610439610be9565b9050806002015491505090565b5f5f610450610c10565b905061045d858285610c29565b610468858585610cbc565b60019150509392505050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327262618836040518263ffffffff1660e01b81526004016104ce91906116ff565b602060405180830381865afa1580156104e9573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061050d9190611c5f565b9050919050565b5f6012905090565b61055a6040518060400160405280600a81526020017f6574662d726f7574657200000000000000000000000000000000000000000000815250610474565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105be90611cd4565b60405180910390fd5b6105d18282610dac565b5050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f610602610e2b565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff1614801561064a5750825b90505f60018367ffffffffffffffff1614801561067d57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561068b575080155b156106c2576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561070f576001855f0160086101000a81548160ff0219169083151502179055505b5f60149054906101000a900460ff1615610755576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015f60146101000a81548160ff02191690831515021790555061077886610e3e565b6107828888610fef565b8860018190555083156107e3575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516107da9190611d3e565b60405180910390a15b505050505050505050565b5f5f6107f8610be9565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108ab573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108cf9190611c5f565b905090565b60605f6108df610be9565b90508060040180546108f090611c1b565b80601f016020809104026020016040519081016040528092919081815260200182805461091c90611c1b565b80156109675780601f1061093e57610100808354040283529160200191610967565b820191905f5260205f20905b81548152906001019060200180831161094a57829003601f168201915b505050505091505090565b6109b06040518060400160405280600a81526020017f6574662d726f7574657200000000000000000000000000000000000000000000815250610474565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1490611cd4565b60405180910390fd5b610a278282611005565b5050565b5f5f610a35610c10565b9050610a42818585610cbc565b600191505092915050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ab6573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ada9190611c5f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3e90611da1565b60405180910390fd5b610b5081610e3e565b50565b60015481565b5f5f610b63610be9565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b610c248383836001611084565b505050565b5f610c348484610b59565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610cb65781811015610ca7578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610c9e93929190611dbf565b60405180910390fd5b610cb584848484035f611084565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d2c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610d239190611a28565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d9c575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d939190611a28565b60405180910390fd5b610da7838383611261565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e1c575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e139190611a28565b60405180910390fd5b610e275f8383611261565b5050565b5f5f610e35611359565b90508091505090565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610eac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea390611e3e565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff163b11610f05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efc90611ea6565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610f6d57506040513d601f19601f82011682018060405250810190610f6a9190611c5f565b60015b610fac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa390611f34565b60405180910390fd5b815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b610ff7611382565b61100182826113c2565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611075575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161106c9190611a28565b60405180910390fd5b611080825f83611261565b5050565b5f61108d610be9565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036110ff575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016110f69190611a28565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361116f575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016111669190611a28565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550811561125a578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051611251919061183d565b60405180910390a35b5050505050565b61126c8383836113fe565b5f61127561162d565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112dc90611fc2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663c082f03f6001548686866040518563ffffffff1660e01b81526004016113269493929190611fe0565b5f604051808303815f87803b15801561133d575f5ffd5b505af115801561134f573d5f5f3e3d5ffd5b5050505050505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b61138a611671565b6113c0576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6113ca611382565b5f6113d3610be9565b9050828160030190816113e691906121ba565b50818160040190816113f891906121ba565b50505050565b5f611407610be9565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361145b5781816002015f82825461144f91906122b6565b9250508190555061152d565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050828110156114e6578481846040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016114dd93929190611dbf565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115765781816002015f82825403925050819055506115c2565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161161f919061183d565b60405180910390a350505050565b5f61166c6040518060400160405280601081526020017f6574662d746f6b656e2d6576656e747300000000000000000000000000000000815250610474565b905090565b5f61167a610e2b565b5f0160089054906101000a900460ff16905090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6116d18261168f565b6116db8185611699565b93506116eb8185602086016116a9565b6116f4816116b7565b840191505092915050565b5f6020820190508181035f83015261171781846116c7565b905092915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61175982611730565b9050919050565b6117698161174f565b8114611773575f5ffd5b50565b5f8135905061178481611760565b92915050565b5f819050919050565b61179c8161178a565b81146117a6575f5ffd5b50565b5f813590506117b781611793565b92915050565b5f5f604083850312156117d3576117d2611728565b5b5f6117e085828601611776565b92505060206117f1858286016117a9565b9150509250929050565b5f8115159050919050565b61180f816117fb565b82525050565b5f6020820190506118285f830184611806565b92915050565b6118378161178a565b82525050565b5f6020820190506118505f83018461182e565b92915050565b5f5f5f6060848603121561186d5761186c611728565b5b5f61187a86828701611776565b935050602061188b86828701611776565b925050604061189c868287016117a9565b9150509250925092565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6118e4826116b7565b810181811067ffffffffffffffff82111715611903576119026118ae565b5b80604052505050565b5f61191561171f565b905061192182826118db565b919050565b5f67ffffffffffffffff8211156119405761193f6118ae565b5b611949826116b7565b9050602081019050919050565b828183375f83830152505050565b5f61197661197184611926565b61190c565b905082815260208101848484011115611992576119916118aa565b5b61199d848285611956565b509392505050565b5f82601f8301126119b9576119b86118a6565b5b81356119c9848260208601611964565b91505092915050565b5f602082840312156119e7576119e6611728565b5b5f82013567ffffffffffffffff811115611a0457611a0361172c565b5b611a10848285016119a5565b91505092915050565b611a228161174f565b82525050565b5f602082019050611a3b5f830184611a19565b92915050565b5f60ff82169050919050565b611a5681611a41565b82525050565b5f602082019050611a6f5f830184611a4d565b92915050565b5f819050919050565b5f611a98611a93611a8e84611730565b611a75565b611730565b9050919050565b5f611aa982611a7e565b9050919050565b5f611aba82611a9f565b9050919050565b611aca81611ab0565b82525050565b5f602082019050611ae35f830184611ac1565b92915050565b5f5f5f5f60808587031215611b0157611b00611728565b5b5f611b0e878288016117a9565b945050602085013567ffffffffffffffff811115611b2f57611b2e61172c565b5b611b3b878288016119a5565b935050604085013567ffffffffffffffff811115611b5c57611b5b61172c565b5b611b68878288016119a5565b9250506060611b7987828801611776565b91505092959194509250565b5f60208284031215611b9a57611b99611728565b5b5f611ba784828501611776565b91505092915050565b5f5f60408385031215611bc657611bc5611728565b5b5f611bd385828601611776565b9250506020611be485828601611776565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611c3257607f821691505b602082108103611c4557611c44611bee565b5b50919050565b5f81519050611c5981611760565b92915050565b5f60208284031215611c7457611c73611728565b5b5f611c8184828501611c4b565b91505092915050565b7f6d73672e73656e646572206973206e6f742065746620726f75746572000000005f82015250565b5f611cbe601c83611699565b9150611cc982611c8a565b602082019050919050565b5f6020820190508181035f830152611ceb81611cb2565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f611d28611d23611d1e84611cf2565b611a75565b611cfb565b9050919050565b611d3881611d0e565b82525050565b5f602082019050611d515f830184611d2f565b92915050565b7f43616c6c6572206973206e6f7420746865206f776e65720000000000000000005f82015250565b5f611d8b601783611699565b9150611d9682611d57565b602082019050919050565b5f6020820190508181035f830152611db881611d7f565b9050919050565b5f606082019050611dd25f830186611a19565b611ddf602083018561182e565b611dec604083018461182e565b949350505050565b7f4469726563746f72792063616e6e6f74206265207a65726f20616464726573735f82015250565b5f611e28602083611699565b9150611e3382611df4565b602082019050919050565b5f6020820190508181035f830152611e5581611e1c565b9050919050565b7f4469726563746f7279206d757374206265206120636f6e7472616374000000005f82015250565b5f611e90601c83611699565b9150611e9b82611e5c565b602082019050919050565b5f6020820190508181035f830152611ebd81611e84565b9050919050565b7f4469726563746f7279206164647265737320646f6573206e6f7420696d706c655f8201527f6d656e74206f776e657228290000000000000000000000000000000000000000602082015250565b5f611f1e602c83611699565b9150611f2982611ec4565b604082019050919050565b5f6020820190508181035f830152611f4b81611f12565b9050919050565b7f457466546f6b656e3a206576656e747320636f6e7472616374206e6f742073655f8201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b5f611fac602183611699565b9150611fb782611f52565b604082019050919050565b5f6020820190508181035f830152611fd981611fa0565b9050919050565b5f608082019050611ff35f83018761182e565b6120006020830186611a19565b61200d6040830185611a19565b61201a606083018461182e565b95945050505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261207f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612044565b6120898683612044565b95508019841693508086168417925050509392505050565b5f6120bb6120b66120b18461178a565b611a75565b61178a565b9050919050565b5f819050919050565b6120d4836120a1565b6120e86120e0826120c2565b848454612050565b825550505050565b5f5f905090565b6120ff6120f0565b61210a8184846120cb565b505050565b5b8181101561212d576121225f826120f7565b600181019050612110565b5050565b601f8211156121725761214381612023565b61214c84612035565b8101602085101561215b578190505b61216f61216785612035565b83018261210f565b50505b505050565b5f82821c905092915050565b5f6121925f1984600802612177565b1980831691505092915050565b5f6121aa8383612183565b9150826002028217905092915050565b6121c38261168f565b67ffffffffffffffff8111156121dc576121db6118ae565b5b6121e68254611c1b565b6121f1828285612131565b5f60209050601f831160018114612222575f8415612210578287015190505b61221a858261219f565b865550612281565b601f19841661223086612023565b5f5b8281101561225757848901518255600182019150602085019450602081019050612232565b868310156122745784890151612270601f891682612183565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6122c08261178a565b91506122cb8361178a565b92508282019050808211156122e3576122e2612289565b5b9291505056fea26469706673582212200d673eab98b6c661ca292c3f3e8cb8388a1e2f0ae382c35194917cbcd8c523d564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6EBD362C GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xBA4C7BE1 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xCFA36F3D EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x33F JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6EBD362C EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29B JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x27262618 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x27262618 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x658A847A EQ PUSH2 0x213 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x17BD JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1856 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0x474 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x17BD JUMP JUMPDEST PUSH2 0x51C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21B PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1AE9 JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1B85 JUMP JUMPDEST PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH2 0x841 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x17BD JUMP JUMPDEST PUSH2 0x972 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x17BD JUMP JUMPDEST PUSH2 0xA2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x1B85 JUMP JUMPDEST PUSH2 0xA4D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x329 PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x1BB0 JUMP JUMPDEST PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x37A PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x38B SWAP1 PUSH2 0x1C1B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B7 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x402 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x402 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x417 PUSH2 0xC10 JUMP JUMPDEST SWAP1 POP PUSH2 0x424 DUP2 DUP6 DUP6 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x439 PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x450 PUSH2 0xC10 JUMP JUMPDEST SWAP1 POP PUSH2 0x45D DUP6 DUP3 DUP6 PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x468 DUP6 DUP6 DUP6 PUSH2 0xCBC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x27262618 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4E9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x1C5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x55A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6574662D726F7574657200000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x474 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BE SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5D1 DUP3 DUP3 PUSH2 0xDAC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x602 PUSH2 0xE2B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x64A JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x67D JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x68B JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x70F JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x755 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDC149F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x778 DUP7 PUSH2 0xE3E JUMP JUMPDEST PUSH2 0x782 DUP9 DUP9 PUSH2 0xFEF JUMP JUMPDEST DUP9 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x7E3 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x7DA SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7F8 PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8AB JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CF SWAP2 SWAP1 PUSH2 0x1C5F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x8DF PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x8F0 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x91C SWAP1 PUSH2 0x1C1B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x967 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x93E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x967 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x94A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x9B0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6574662D726F7574657200000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x474 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA14 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA27 DUP3 DUP3 PUSH2 0x1005 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xA35 PUSH2 0xC10 JUMP JUMPDEST SWAP1 POP PUSH2 0xA42 DUP2 DUP6 DUP6 PUSH2 0xCBC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xADA SWAP2 SWAP1 PUSH2 0x1C5F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3E SWAP1 PUSH2 0x1DA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB50 DUP2 PUSH2 0xE3E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xB63 PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC24 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1084 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC34 DUP5 DUP5 PUSH2 0xB59 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xCB6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCA7 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB5 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1084 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD2C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD23 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD9C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD93 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDA7 DUP4 DUP4 DUP4 PUSH2 0x1261 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE1C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE13 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE27 PUSH0 DUP4 DUP4 PUSH2 0x1261 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xE35 PUSH2 0x1359 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA3 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT PUSH2 0xF05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFC SWAP1 PUSH2 0x1EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF6D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF6A SWAP2 SWAP1 PUSH2 0x1C5F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA3 SWAP1 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xFF7 PUSH2 0x1382 JUMP JUMPDEST PUSH2 0x1001 DUP3 DUP3 PUSH2 0x13C2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1075 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106C SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1080 DUP3 PUSH0 DUP4 PUSH2 0x1261 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x108D PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10FF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F6 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x116F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1166 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x125A JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1251 SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x126C DUP4 DUP4 DUP4 PUSH2 0x13FE JUMP JUMPDEST PUSH0 PUSH2 0x1275 PUSH2 0x162D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DC SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC082F03F PUSH1 0x1 SLOAD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1326 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x133D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x134F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x138A PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x13C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x13CA PUSH2 0x1382 JUMP JUMPDEST PUSH0 PUSH2 0x13D3 PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x13E6 SWAP2 SWAP1 PUSH2 0x21BA JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x13F8 SWAP2 SWAP1 PUSH2 0x21BA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1407 PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x145B JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x144F SWAP2 SWAP1 PUSH2 0x22B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x152D JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x14E6 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1576 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x15C2 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x161F SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x166C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6574662D746F6B656E2D6576656E747300000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x474 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x167A PUSH2 0xE2B JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16D1 DUP3 PUSH2 0x168F JUMP JUMPDEST PUSH2 0x16DB DUP2 DUP6 PUSH2 0x1699 JUMP JUMPDEST SWAP4 POP PUSH2 0x16EB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x16F4 DUP2 PUSH2 0x16B7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1717 DUP2 DUP5 PUSH2 0x16C7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1759 DUP3 PUSH2 0x1730 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1769 DUP2 PUSH2 0x174F JUMP JUMPDEST DUP2 EQ PUSH2 0x1773 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1784 DUP2 PUSH2 0x1760 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x179C DUP2 PUSH2 0x178A JUMP JUMPDEST DUP2 EQ PUSH2 0x17A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17B7 DUP2 PUSH2 0x1793 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17D3 JUMPI PUSH2 0x17D2 PUSH2 0x1728 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17E0 DUP6 DUP3 DUP7 ADD PUSH2 0x1776 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17F1 DUP6 DUP3 DUP7 ADD PUSH2 0x17A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180F DUP2 PUSH2 0x17FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1828 PUSH0 DUP4 ADD DUP5 PUSH2 0x1806 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1837 DUP2 PUSH2 0x178A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1850 PUSH0 DUP4 ADD DUP5 PUSH2 0x182E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x186D JUMPI PUSH2 0x186C PUSH2 0x1728 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x187A DUP7 DUP3 DUP8 ADD PUSH2 0x1776 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x188B DUP7 DUP3 DUP8 ADD PUSH2 0x1776 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x189C DUP7 DUP3 DUP8 ADD PUSH2 0x17A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x18E4 DUP3 PUSH2 0x16B7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1903 JUMPI PUSH2 0x1902 PUSH2 0x18AE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1915 PUSH2 0x171F JUMP JUMPDEST SWAP1 POP PUSH2 0x1921 DUP3 DUP3 PUSH2 0x18DB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1940 JUMPI PUSH2 0x193F PUSH2 0x18AE JUMP JUMPDEST JUMPDEST PUSH2 0x1949 DUP3 PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1976 PUSH2 0x1971 DUP5 PUSH2 0x1926 JUMP JUMPDEST PUSH2 0x190C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1992 JUMPI PUSH2 0x1991 PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH2 0x199D DUP5 DUP3 DUP6 PUSH2 0x1956 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19B9 JUMPI PUSH2 0x19B8 PUSH2 0x18A6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19C9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1964 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19E7 JUMPI PUSH2 0x19E6 PUSH2 0x1728 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A04 JUMPI PUSH2 0x1A03 PUSH2 0x172C JUMP JUMPDEST JUMPDEST PUSH2 0x1A10 DUP5 DUP3 DUP6 ADD PUSH2 0x19A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A22 DUP2 PUSH2 0x174F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A3B PUSH0 DUP4 ADD DUP5 PUSH2 0x1A19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A56 DUP2 PUSH2 0x1A41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A6F PUSH0 DUP4 ADD DUP5 PUSH2 0x1A4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A98 PUSH2 0x1A93 PUSH2 0x1A8E DUP5 PUSH2 0x1730 JUMP JUMPDEST PUSH2 0x1A75 JUMP JUMPDEST PUSH2 0x1730 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AA9 DUP3 PUSH2 0x1A7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ABA DUP3 PUSH2 0x1A9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ACA DUP2 PUSH2 0x1AB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AE3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B01 JUMPI PUSH2 0x1B00 PUSH2 0x1728 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B0E DUP8 DUP3 DUP9 ADD PUSH2 0x17A9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B2F JUMPI PUSH2 0x1B2E PUSH2 0x172C JUMP JUMPDEST JUMPDEST PUSH2 0x1B3B DUP8 DUP3 DUP9 ADD PUSH2 0x19A5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B5C JUMPI PUSH2 0x1B5B PUSH2 0x172C JUMP JUMPDEST JUMPDEST PUSH2 0x1B68 DUP8 DUP3 DUP9 ADD PUSH2 0x19A5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1B79 DUP8 DUP3 DUP9 ADD PUSH2 0x1776 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B9A JUMPI PUSH2 0x1B99 PUSH2 0x1728 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BA7 DUP5 DUP3 DUP6 ADD PUSH2 0x1776 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BC6 JUMPI PUSH2 0x1BC5 PUSH2 0x1728 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BD3 DUP6 DUP3 DUP7 ADD PUSH2 0x1776 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BE4 DUP6 DUP3 DUP7 ADD PUSH2 0x1776 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C32 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C45 JUMPI PUSH2 0x1C44 PUSH2 0x1BEE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C59 DUP2 PUSH2 0x1760 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C74 JUMPI PUSH2 0x1C73 PUSH2 0x1728 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C81 DUP5 DUP3 DUP6 ADD PUSH2 0x1C4B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6D73672E73656E646572206973206E6F742065746620726F7574657200000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CBE PUSH1 0x1C DUP4 PUSH2 0x1699 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC9 DUP3 PUSH2 0x1C8A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CEB DUP2 PUSH2 0x1CB2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D28 PUSH2 0x1D23 PUSH2 0x1D1E DUP5 PUSH2 0x1CF2 JUMP JUMPDEST PUSH2 0x1A75 JUMP JUMPDEST PUSH2 0x1CFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D38 DUP2 PUSH2 0x1D0E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D51 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420746865206F776E6572000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D8B PUSH1 0x17 DUP4 PUSH2 0x1699 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D96 DUP3 PUSH2 0x1D57 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DB8 DUP2 PUSH2 0x1D7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DD2 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A19 JUMP JUMPDEST PUSH2 0x1DDF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x1DEC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x182E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4469726563746F72792063616E6E6F74206265207A65726F2061646472657373 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E28 PUSH1 0x20 DUP4 PUSH2 0x1699 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E33 DUP3 PUSH2 0x1DF4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E55 DUP2 PUSH2 0x1E1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206D757374206265206120636F6E747261637400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E90 PUSH1 0x1C DUP4 PUSH2 0x1699 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E9B DUP3 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EBD DUP2 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206164647265737320646F6573206E6F7420696D706C65 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D656E74206F776E657228290000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F1E PUSH1 0x2C DUP4 PUSH2 0x1699 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F29 DUP3 PUSH2 0x1EC4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F4B DUP2 PUSH2 0x1F12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x457466546F6B656E3A206576656E747320636F6E7472616374206E6F74207365 PUSH0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FAC PUSH1 0x21 DUP4 PUSH2 0x1699 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB7 DUP3 PUSH2 0x1F52 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FD9 DUP2 PUSH2 0x1FA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FF3 PUSH0 DUP4 ADD DUP8 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x2000 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A19 JUMP JUMPDEST PUSH2 0x200D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1A19 JUMP JUMPDEST PUSH2 0x201A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x182E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x207F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x2089 DUP7 DUP4 PUSH2 0x2044 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20BB PUSH2 0x20B6 PUSH2 0x20B1 DUP5 PUSH2 0x178A JUMP JUMPDEST PUSH2 0x1A75 JUMP JUMPDEST PUSH2 0x178A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20D4 DUP4 PUSH2 0x20A1 JUMP JUMPDEST PUSH2 0x20E8 PUSH2 0x20E0 DUP3 PUSH2 0x20C2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2050 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x20FF PUSH2 0x20F0 JUMP JUMPDEST PUSH2 0x210A DUP2 DUP5 DUP5 PUSH2 0x20CB JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x212D JUMPI PUSH2 0x2122 PUSH0 DUP3 PUSH2 0x20F7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2110 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2172 JUMPI PUSH2 0x2143 DUP2 PUSH2 0x2023 JUMP JUMPDEST PUSH2 0x214C DUP5 PUSH2 0x2035 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x215B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x216F PUSH2 0x2167 DUP6 PUSH2 0x2035 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x210F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2192 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2177 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21AA DUP4 DUP4 PUSH2 0x2183 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21C3 DUP3 PUSH2 0x168F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21DC JUMPI PUSH2 0x21DB PUSH2 0x18AE JUMP JUMPDEST JUMPDEST PUSH2 0x21E6 DUP3 SLOAD PUSH2 0x1C1B JUMP JUMPDEST PUSH2 0x21F1 DUP3 DUP3 DUP6 PUSH2 0x2131 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2222 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2210 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x221A DUP6 DUP3 PUSH2 0x219F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2281 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2230 DUP7 PUSH2 0x2023 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2257 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2232 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2274 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2270 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2183 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x22C0 DUP3 PUSH2 0x178A JUMP JUMPDEST SWAP2 POP PUSH2 0x22CB DUP4 PUSH2 0x178A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22E3 JUMPI PUSH2 0x22E2 PUSH2 0x2289 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD PUSH8 0x3EAB98B6C661CA29 0x2C EXTCODEHASH RETURNDATACOPY DUP13 0xB8 CODESIZE DUP11 0x1E 0x2F EXP CALLF 0x82C3 MLOAD SWAP5 SWAP2 PUSH29 0xBCD8C523D564736F6C634300081E003300000000000000000000000000 ",
							"sourceMap": "635:1839:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:144:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5114:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3850:152;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5892:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1272:136:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3735:82:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1751:99:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;336:27:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1277:429:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4035:171:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1178:88:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2954:148:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1895:103:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4401:178:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;470:113:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;756:20:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4612:195:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2697:144;2742:13;2767:22;2792:18;:16;:18::i;:::-;2767:43;;2827:1;:7;;2820:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:144;:::o;5114:186::-;5187:4;5203:13;5219:12;:10;:12::i;:::-;5203:28;;5241:31;5250:5;5257:7;5266:5;5241:8;:31::i;:::-;5289:4;5282:11;;;5114:186;;;;:::o;3850:152::-;3902:7;3921:22;3946:18;:16;:18::i;:::-;3921:43;;3981:1;:14;;;3974:21;;;3850:152;:::o;5892:244::-;5979:4;5995:15;6013:12;:10;:12::i;:::-;5995:30;;6035:37;6051:4;6057:7;6066:5;6035:15;:37::i;:::-;6082:26;6092:4;6098:2;6102:5;6082:9;:26::i;:::-;6125:4;6118:11;;;5892:244;;;;;:::o;1272:136:6:-;1341:7;1367:9;;;;;;;;;;;:28;;;1396:4;1367:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1360:41;;1272:136;;;:::o;3735:82:1:-;3784:5;3808:2;3801:9;;3735:82;:::o;1751:99:9:-;389:32:7;;;;;;;;;;;;;;;;;;:18;:32::i;:::-;375:46;;:10;:46;;;367:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1826:17:9::1;1832:2;1836:6;1826:5;:17::i;:::-;1751:99:::0;;:::o;336:27:6:-;;;;;;;;;;;;;:::o;1277:429:9:-;4158:30:0;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;1412:12:9::1;;;;;;;;;;;1408:45;;;1433:20;;;;;;;;;;;;;;1408:45;1478:4;1463:12;;:19;;;;;;;;;;;;;;;;;;1560:25;1574:10;1560:13;:25::i;:::-;1646:28;1659:5;1666:7;1646:12;:28::i;:::-;1693:6;1685:5;:14;;;;5068::0::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;1277:429:9;;;;:::o;4035:171:1:-;4100:7;4119:22;4144:18;:16;:18::i;:::-;4119:43;;4179:1;:11;;:20;4191:7;4179:20;;;;;;;;;;;;;;;;4172:27;;;4035:171;;;:::o;1178:88:6:-;1216:7;1242:9;;;;;;;;;;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1235:24;;1178:88;:::o;2954:148:1:-;3001:13;3026:22;3051:18;:16;:18::i;:::-;3026:43;;3086:1;:9;;3079:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2954:148;:::o;1895:103:9:-;389:32:7;;;;;;;;;;;;;;;;;;:18;:32::i;:::-;375:46;;:10;:46;;;367:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1972:19:9::1;1978:4;1984:6;1972:5;:19::i;:::-;1895:103:::0;;:::o;4401:178:1:-;4470:4;4486:13;4502:12;:10;:12::i;:::-;4486:28;;4524:27;4534:5;4541:2;4545:5;4524:9;:27::i;:::-;4568:4;4561:11;;;4401:178;;;;:::o;470:113:6:-;1109:9;;;;;;;;;;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1095:31;;:10;:31;;;1087:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;551:25:::1;565:10;551:13;:25::i;:::-;470:113:::0;:::o;756:20:9:-;;;;:::o;4612:195:1:-;4692:7;4711:22;4736:18;:16;:18::i;:::-;4711:43;;4771:1;:13;;:20;4785:5;4771:20;;;;;;;;;;;;;;;:29;4792:7;4771:29;;;;;;;;;;;;;;;;4764:36;;;4612:195;;;;:::o;1947:153::-;1997:22;2064:20;2054:30;;1947:153;:::o;887:96:2:-;940:7;966:10;959:17;;887:96;:::o;9905:128:1:-;9989:37;9998:5;10005:7;10014:5;10021:4;9989:8;:37::i;:::-;9905:128;;;:::o;11649:476::-;11748:24;11775:25;11785:5;11792:7;11775:9;:25::i;:::-;11748:52;;11833:17;11814:16;:36;11810:309;;;11889:5;11870:16;:24;11866:130;;;11948:7;11957:16;11975:5;11921:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;11866:130;12037:57;12046:5;12053:7;12081:5;12062:16;:24;12088:5;12037:8;:57::i;:::-;11810:309;11738:387;11649:476;;;:::o;6509:300::-;6608:1;6592:18;;:4;:18;;;6588:86;;6660:1;6633:30;;;;;;;;;;;:::i;:::-;;;;;;;;6588:86;6701:1;6687:16;;:2;:16;;;6683:86;;6755:1;6726:32;;;;;;;;;;;:::i;:::-;;;;;;;;6683:86;6778:24;6786:4;6792:2;6796:5;6778:7;:24::i;:::-;6509:300;;;:::o;8637:208::-;8726:1;8707:21;;:7;:21;;;8703:91;;8780:1;8751:32;;;;;;;;;;;:::i;:::-;;;;;;;;8703:91;8803:35;8819:1;8823:7;8832:5;8803:7;:35::i;:::-;8637:208;;:::o;9071:205:0:-;9129:30;9171:12;9186:27;:25;:27::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;589:461:6:-;681:1;659:24;;:10;:24;;;651:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;763:1;738:10;:22;;;:26;730:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;861:10;850:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;846:198;;979:54;;;;;;;;;;:::i;:::-;;;;;;;;846:198;936:10;913:9;;:34;;;;;;;;;;;;;;;;;;881:77;589:461;:::o;2263:147:1:-;6929:20:0;:18;:20::i;:::-;2365:38:1::1;2388:5;2395:7;2365:22;:38::i;:::-;2263:147:::0;;:::o;9163:206::-;9252:1;9233:21;;:7;:21;;;9229:89;;9304:1;9277:30;;;;;;;;;;;:::i;:::-;;;;;;;;9229:89;9327:35;9335:7;9352:1;9356:5;9327:7;:35::i;:::-;9163:206;;:::o;10880:487::-;10988:22;11013:18;:16;:18::i;:::-;10988:43;;11062:1;11045:19;;:5;:19;;;11041:89;;11116:1;11087:32;;;;;;;;;;;:::i;:::-;;;;;;;;11041:89;11162:1;11143:21;;:7;:21;;;11139:90;;11215:1;11187:31;;;;;;;;;;;:::i;:::-;;;;;;;;11139:90;11270:5;11238:1;:13;;:20;11252:5;11238:20;;;;;;;;;;;;;;;:29;11259:7;11238:29;;;;;;;;;;;;;;;:37;;;;11289:9;11285:76;;;11335:7;11319:31;;11328:5;11319:31;;;11344:5;11319:31;;;;;;:::i;:::-;;;;;;;;11285:76;10978:389;10880:487;;;;:::o;2092:380:9:-;2178:30;2192:4;2198:2;2202:5;2178:13;:30::i;:::-;2254;2287:19;:17;:19::i;:::-;2254:52;;2359:1;2324:37;;2332:14;2324:37;;;2316:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;2409:14;:32;;;2442:5;;2449:4;2455:2;2459:5;2409:56;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:304;2092:380;;;:::o;8819:122:0:-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7082:141::-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;;;;;;;;;;;;;7144:73;7082:141::o;2416:216:1:-;6929:20:0;:18;:20::i;:::-;2528:22:1::1;2553:18;:16;:18::i;:::-;2528:43;;2591:5;2581:1;:7;;:15;;;;;;:::i;:::-;;2618:7;2606:1;:9;;:19;;;;;;:::i;:::-;;2518:114;2416:216:::0;;:::o;7124:1170::-;7209:22;7234:18;:16;:18::i;:::-;7209:43;;7282:1;7266:18;;:4;:18;;;7262:546;;7420:5;7402:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7262:546;;;7456:19;7478:1;:11;;:17;7490:4;7478:17;;;;;;;;;;;;;;;;7456:39;;7527:5;7513:11;:19;7509:115;;;7584:4;7590:11;7603:5;7559:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7509:115;7778:5;7764:11;:19;7744:1;:11;;:17;7756:4;7744:17;;;;;;;;;;;;;;;:39;;;;7442:366;7262:546;7836:1;7822:16;;:2;:16;;;7818:429;;8003:5;7985:1;:14;;;:23;;;;;;;;;;;7818:429;;;8217:5;8198:1;:11;;:15;8210:2;8198:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;7818:429;8277:2;8262:25;;8271:4;8262:25;;;8281:5;8262:25;;;;;;:::i;:::-;;;;;;;;7199:1095;7124:1170;;;:::o;316:156:8:-;376:15;426:38;;;;;;;;;;;;;;;;;;:18;:38::i;:::-;403:62;;316:156;:::o;8485:120:0:-;8535:4;8558:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8551:47;;8485:120;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:75::-;1275:6;1308:2;1302:9;1292:19;;1242:75;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:117::-;4425:1;4422;4415:12;4439:117;4548:1;4545;4538:12;4562:180;4610:77;4607:1;4600:88;4707:4;4704:1;4697:15;4731:4;4728:1;4721:15;4748:281;4831:27;4853:4;4831:27;:::i;:::-;4823:6;4819:40;4961:6;4949:10;4946:22;4925:18;4913:10;4910:34;4907:62;4904:88;;;4972:18;;:::i;:::-;4904:88;5012:10;5008:2;5001:22;4791:238;4748:281;;:::o;5035:129::-;5069:6;5096:20;;:::i;:::-;5086:30;;5125:33;5153:4;5145:6;5125:33;:::i;:::-;5035:129;;;:::o;5170:308::-;5232:4;5322:18;5314:6;5311:30;5308:56;;;5344:18;;:::i;:::-;5308:56;5382:29;5404:6;5382:29;:::i;:::-;5374:37;;5466:4;5460;5456:15;5448:23;;5170:308;;;:::o;5484:148::-;5582:6;5577:3;5572;5559:30;5623:1;5614:6;5609:3;5605:16;5598:27;5484:148;;;:::o;5638:425::-;5716:5;5741:66;5757:49;5799:6;5757:49;:::i;:::-;5741:66;:::i;:::-;5732:75;;5830:6;5823:5;5816:21;5868:4;5861:5;5857:16;5906:3;5897:6;5892:3;5888:16;5885:25;5882:112;;;5913:79;;:::i;:::-;5882:112;6003:54;6050:6;6045:3;6040;6003:54;:::i;:::-;5722:341;5638:425;;;;;:::o;6083:340::-;6139:5;6188:3;6181:4;6173:6;6169:17;6165:27;6155:122;;6196:79;;:::i;:::-;6155:122;6313:6;6300:20;6338:79;6413:3;6405:6;6398:4;6390:6;6386:17;6338:79;:::i;:::-;6329:88;;6145:278;6083:340;;;;:::o;6429:509::-;6498:6;6547:2;6535:9;6526:7;6522:23;6518:32;6515:119;;;6553:79;;:::i;:::-;6515:119;6701:1;6690:9;6686:17;6673:31;6731:18;6723:6;6720:30;6717:117;;;6753:79;;:::i;:::-;6717:117;6858:63;6913:7;6904:6;6893:9;6889:22;6858:63;:::i;:::-;6848:73;;6644:287;6429:509;;;;:::o;6944:118::-;7031:24;7049:5;7031:24;:::i;:::-;7026:3;7019:37;6944:118;;:::o;7068:222::-;7161:4;7199:2;7188:9;7184:18;7176:26;;7212:71;7280:1;7269:9;7265:17;7256:6;7212:71;:::i;:::-;7068:222;;;;:::o;7296:86::-;7331:7;7371:4;7364:5;7360:16;7349:27;;7296:86;;;:::o;7388:112::-;7471:22;7487:5;7471:22;:::i;:::-;7466:3;7459:35;7388:112;;:::o;7506:214::-;7595:4;7633:2;7622:9;7618:18;7610:26;;7646:67;7710:1;7699:9;7695:17;7686:6;7646:67;:::i;:::-;7506:214;;;;:::o;7726:60::-;7754:3;7775:5;7768:12;;7726:60;;;:::o;7792:142::-;7842:9;7875:53;7893:34;7902:24;7920:5;7902:24;:::i;:::-;7893:34;:::i;:::-;7875:53;:::i;:::-;7862:66;;7792:142;;;:::o;7940:126::-;7990:9;8023:37;8054:5;8023:37;:::i;:::-;8010:50;;7940:126;;;:::o;8072:145::-;8141:9;8174:37;8205:5;8174:37;:::i;:::-;8161:50;;8072:145;;;:::o;8223:169::-;8329:56;8379:5;8329:56;:::i;:::-;8324:3;8317:69;8223:169;;:::o;8398:260::-;8510:4;8548:2;8537:9;8533:18;8525:26;;8561:90;8648:1;8637:9;8633:17;8624:6;8561:90;:::i;:::-;8398:260;;;;:::o;8664:1125::-;8770:6;8778;8786;8794;8843:3;8831:9;8822:7;8818:23;8814:33;8811:120;;;8850:79;;:::i;:::-;8811:120;8970:1;8995:53;9040:7;9031:6;9020:9;9016:22;8995:53;:::i;:::-;8985:63;;8941:117;9125:2;9114:9;9110:18;9097:32;9156:18;9148:6;9145:30;9142:117;;;9178:79;;:::i;:::-;9142:117;9283:63;9338:7;9329:6;9318:9;9314:22;9283:63;:::i;:::-;9273:73;;9068:288;9423:2;9412:9;9408:18;9395:32;9454:18;9446:6;9443:30;9440:117;;;9476:79;;:::i;:::-;9440:117;9581:63;9636:7;9627:6;9616:9;9612:22;9581:63;:::i;:::-;9571:73;;9366:288;9693:2;9719:53;9764:7;9755:6;9744:9;9740:22;9719:53;:::i;:::-;9709:63;;9664:118;8664:1125;;;;;;;:::o;9795:329::-;9854:6;9903:2;9891:9;9882:7;9878:23;9874:32;9871:119;;;9909:79;;:::i;:::-;9871:119;10029:1;10054:53;10099:7;10090:6;10079:9;10075:22;10054:53;:::i;:::-;10044:63;;10000:117;9795:329;;;;:::o;10130:474::-;10198:6;10206;10255:2;10243:9;10234:7;10230:23;10226:32;10223:119;;;10261:79;;:::i;:::-;10223:119;10381:1;10406:53;10451:7;10442:6;10431:9;10427:22;10406:53;:::i;:::-;10396:63;;10352:117;10508:2;10534:53;10579:7;10570:6;10559:9;10555:22;10534:53;:::i;:::-;10524:63;;10479:118;10130:474;;;;;:::o;10610:180::-;10658:77;10655:1;10648:88;10755:4;10752:1;10745:15;10779:4;10776:1;10769:15;10796:320;10840:6;10877:1;10871:4;10867:12;10857:22;;10924:1;10918:4;10914:12;10945:18;10935:81;;11001:4;10993:6;10989:17;10979:27;;10935:81;11063:2;11055:6;11052:14;11032:18;11029:38;11026:84;;11082:18;;:::i;:::-;11026:84;10847:269;10796:320;;;:::o;11122:143::-;11179:5;11210:6;11204:13;11195:22;;11226:33;11253:5;11226:33;:::i;:::-;11122:143;;;;:::o;11271:351::-;11341:6;11390:2;11378:9;11369:7;11365:23;11361:32;11358:119;;;11396:79;;:::i;:::-;11358:119;11516:1;11541:64;11597:7;11588:6;11577:9;11573:22;11541:64;:::i;:::-;11531:74;;11487:128;11271:351;;;;:::o;11628:178::-;11768:30;11764:1;11756:6;11752:14;11745:54;11628:178;:::o;11812:366::-;11954:3;11975:67;12039:2;12034:3;11975:67;:::i;:::-;11968:74;;12051:93;12140:3;12051:93;:::i;:::-;12169:2;12164:3;12160:12;12153:19;;11812:366;;;:::o;12184:419::-;12350:4;12388:2;12377:9;12373:18;12365:26;;12437:9;12431:4;12427:20;12423:1;12412:9;12408:17;12401:47;12465:131;12591:4;12465:131;:::i;:::-;12457:139;;12184:419;;;:::o;12609:85::-;12654:7;12683:5;12672:16;;12609:85;;;:::o;12700:101::-;12736:7;12776:18;12769:5;12765:30;12754:41;;12700:101;;;:::o;12807:156::-;12864:9;12897:60;12914:42;12923:32;12949:5;12923:32;:::i;:::-;12914:42;:::i;:::-;12897:60;:::i;:::-;12884:73;;12807:156;;;:::o;12969:145::-;13063:44;13101:5;13063:44;:::i;:::-;13058:3;13051:57;12969:145;;:::o;13120:236::-;13220:4;13258:2;13247:9;13243:18;13235:26;;13271:78;13346:1;13335:9;13331:17;13322:6;13271:78;:::i;:::-;13120:236;;;;:::o;13362:173::-;13502:25;13498:1;13490:6;13486:14;13479:49;13362:173;:::o;13541:366::-;13683:3;13704:67;13768:2;13763:3;13704:67;:::i;:::-;13697:74;;13780:93;13869:3;13780:93;:::i;:::-;13898:2;13893:3;13889:12;13882:19;;13541:366;;;:::o;13913:419::-;14079:4;14117:2;14106:9;14102:18;14094:26;;14166:9;14160:4;14156:20;14152:1;14141:9;14137:17;14130:47;14194:131;14320:4;14194:131;:::i;:::-;14186:139;;13913:419;;;:::o;14338:442::-;14487:4;14525:2;14514:9;14510:18;14502:26;;14538:71;14606:1;14595:9;14591:17;14582:6;14538:71;:::i;:::-;14619:72;14687:2;14676:9;14672:18;14663:6;14619:72;:::i;:::-;14701;14769:2;14758:9;14754:18;14745:6;14701:72;:::i;:::-;14338:442;;;;;;:::o;14786:182::-;14926:34;14922:1;14914:6;14910:14;14903:58;14786:182;:::o;14974:366::-;15116:3;15137:67;15201:2;15196:3;15137:67;:::i;:::-;15130:74;;15213:93;15302:3;15213:93;:::i;:::-;15331:2;15326:3;15322:12;15315:19;;14974:366;;;:::o;15346:419::-;15512:4;15550:2;15539:9;15535:18;15527:26;;15599:9;15593:4;15589:20;15585:1;15574:9;15570:17;15563:47;15627:131;15753:4;15627:131;:::i;:::-;15619:139;;15346:419;;;:::o;15771:178::-;15911:30;15907:1;15899:6;15895:14;15888:54;15771:178;:::o;15955:366::-;16097:3;16118:67;16182:2;16177:3;16118:67;:::i;:::-;16111:74;;16194:93;16283:3;16194:93;:::i;:::-;16312:2;16307:3;16303:12;16296:19;;15955:366;;;:::o;16327:419::-;16493:4;16531:2;16520:9;16516:18;16508:26;;16580:9;16574:4;16570:20;16566:1;16555:9;16551:17;16544:47;16608:131;16734:4;16608:131;:::i;:::-;16600:139;;16327:419;;;:::o;16752:231::-;16892:34;16888:1;16880:6;16876:14;16869:58;16961:14;16956:2;16948:6;16944:15;16937:39;16752:231;:::o;16989:366::-;17131:3;17152:67;17216:2;17211:3;17152:67;:::i;:::-;17145:74;;17228:93;17317:3;17228:93;:::i;:::-;17346:2;17341:3;17337:12;17330:19;;16989:366;;;:::o;17361:419::-;17527:4;17565:2;17554:9;17550:18;17542:26;;17614:9;17608:4;17604:20;17600:1;17589:9;17585:17;17578:47;17642:131;17768:4;17642:131;:::i;:::-;17634:139;;17361:419;;;:::o;17786:220::-;17926:34;17922:1;17914:6;17910:14;17903:58;17995:3;17990:2;17982:6;17978:15;17971:28;17786:220;:::o;18012:366::-;18154:3;18175:67;18239:2;18234:3;18175:67;:::i;:::-;18168:74;;18251:93;18340:3;18251:93;:::i;:::-;18369:2;18364:3;18360:12;18353:19;;18012:366;;;:::o;18384:419::-;18550:4;18588:2;18577:9;18573:18;18565:26;;18637:9;18631:4;18627:20;18623:1;18612:9;18608:17;18601:47;18665:131;18791:4;18665:131;:::i;:::-;18657:139;;18384:419;;;:::o;18809:553::-;18986:4;19024:3;19013:9;19009:19;19001:27;;19038:71;19106:1;19095:9;19091:17;19082:6;19038:71;:::i;:::-;19119:72;19187:2;19176:9;19172:18;19163:6;19119:72;:::i;:::-;19201;19269:2;19258:9;19254:18;19245:6;19201:72;:::i;:::-;19283;19351:2;19340:9;19336:18;19327:6;19283:72;:::i;:::-;18809:553;;;;;;;:::o;19368:141::-;19417:4;19440:3;19432:11;;19463:3;19460:1;19453:14;19497:4;19494:1;19484:18;19476:26;;19368:141;;;:::o;19515:93::-;19552:6;19599:2;19594;19587:5;19583:14;19579:23;19569:33;;19515:93;;;:::o;19614:107::-;19658:8;19708:5;19702:4;19698:16;19677:37;;19614:107;;;;:::o;19727:393::-;19796:6;19846:1;19834:10;19830:18;19869:97;19899:66;19888:9;19869:97;:::i;:::-;19987:39;20017:8;20006:9;19987:39;:::i;:::-;19975:51;;20059:4;20055:9;20048:5;20044:21;20035:30;;20108:4;20098:8;20094:19;20087:5;20084:30;20074:40;;19803:317;;19727:393;;;;;:::o;20126:142::-;20176:9;20209:53;20227:34;20236:24;20254:5;20236:24;:::i;:::-;20227:34;:::i;:::-;20209:53;:::i;:::-;20196:66;;20126:142;;;:::o;20274:75::-;20317:3;20338:5;20331:12;;20274:75;;;:::o;20355:269::-;20465:39;20496:7;20465:39;:::i;:::-;20526:91;20575:41;20599:16;20575:41;:::i;:::-;20567:6;20560:4;20554:11;20526:91;:::i;:::-;20520:4;20513:105;20431:193;20355:269;;;:::o;20630:73::-;20675:3;20696:1;20689:8;;20630:73;:::o;20709:189::-;20786:32;;:::i;:::-;20827:65;20885:6;20877;20871:4;20827:65;:::i;:::-;20762:136;20709:189;;:::o;20904:186::-;20964:120;20981:3;20974:5;20971:14;20964:120;;;21035:39;21072:1;21065:5;21035:39;:::i;:::-;21008:1;21001:5;20997:13;20988:22;;20964:120;;;20904:186;;:::o;21096:543::-;21197:2;21192:3;21189:11;21186:446;;;21231:38;21263:5;21231:38;:::i;:::-;21315:29;21333:10;21315:29;:::i;:::-;21305:8;21301:44;21498:2;21486:10;21483:18;21480:49;;;21519:8;21504:23;;21480:49;21542:80;21598:22;21616:3;21598:22;:::i;:::-;21588:8;21584:37;21571:11;21542:80;:::i;:::-;21201:431;;21186:446;21096:543;;;:::o;21645:117::-;21699:8;21749:5;21743:4;21739:16;21718:37;;21645:117;;;;:::o;21768:169::-;21812:6;21845:51;21893:1;21889:6;21881:5;21878:1;21874:13;21845:51;:::i;:::-;21841:56;21926:4;21920;21916:15;21906:25;;21819:118;21768:169;;;;:::o;21942:295::-;22018:4;22164:29;22189:3;22183:4;22164:29;:::i;:::-;22156:37;;22226:3;22223:1;22219:11;22213:4;22210:21;22202:29;;21942:295;;;;:::o;22242:1395::-;22359:37;22392:3;22359:37;:::i;:::-;22461:18;22453:6;22450:30;22447:56;;;22483:18;;:::i;:::-;22447:56;22527:38;22559:4;22553:11;22527:38;:::i;:::-;22612:67;22672:6;22664;22658:4;22612:67;:::i;:::-;22706:1;22730:4;22717:17;;22762:2;22754:6;22751:14;22779:1;22774:618;;;;23436:1;23453:6;23450:77;;;23502:9;23497:3;23493:19;23487:26;23478:35;;23450:77;23553:67;23613:6;23606:5;23553:67;:::i;:::-;23547:4;23540:81;23409:222;22744:887;;22774:618;22826:4;22822:9;22814:6;22810:22;22860:37;22892:4;22860:37;:::i;:::-;22919:1;22933:208;22947:7;22944:1;22941:14;22933:208;;;23026:9;23021:3;23017:19;23011:26;23003:6;22996:42;23077:1;23069:6;23065:14;23055:24;;23124:2;23113:9;23109:18;23096:31;;22970:4;22967:1;22963:12;22958:17;;22933:208;;;23169:6;23160:7;23157:19;23154:179;;;23227:9;23222:3;23218:19;23212:26;23270:48;23312:4;23304:6;23300:17;23289:9;23270:48;:::i;:::-;23262:6;23255:64;23177:156;23154:179;23379:1;23375;23367:6;23363:14;23359:22;23353:4;23346:36;22781:611;;;22744:887;;22334:1303;;;22242:1395;;:::o;23643:180::-;23691:77;23688:1;23681:88;23788:4;23785:1;23778:15;23812:4;23809:1;23802:15;23829:191;23869:3;23888:20;23906:1;23888:20;:::i;:::-;23883:25;;23922:20;23940:1;23922:20;:::i;:::-;23917:25;;23965:1;23962;23958:9;23951:16;;23986:3;23983:1;23980:10;23977:36;;;23993:18;;:::i;:::-;23977:36;23829:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1798200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Directory()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2925",
								"burn(address,uint256)": "infinite",
								"changeDirectoryAddress(address)": "infinite",
								"decimals()": "383",
								"etfId()": "2513",
								"fetchFromDirectory(string)": "infinite",
								"initialize(uint256,string,string,address)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2552",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 635,
									"end": 2474,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 635,
									"end": 2474,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 635,
									"end": 2474,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 939,
									"end": 1154,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 983,
									"end": 993,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 412,
									"end": 437,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 426,
									"end": 436,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 412,
									"end": 425,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 412,
									"end": 425,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 412,
									"end": 425,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 412,
									"end": 437,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 412,
									"end": 437,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 412,
									"end": 437,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 412,
									"end": 437,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 412,
									"end": 437,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 370,
									"end": 464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 939,
									"end": 1154,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 635,
									"end": 2474,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 635,
									"end": 2474,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 589,
									"end": 1050,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 589,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 681,
									"end": 682,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 659,
									"end": 683,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 659,
									"end": 683,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 659,
									"end": 669,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 659,
									"end": 683,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 659,
									"end": 683,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 659,
									"end": 683,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 651,
									"end": 720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 651,
									"end": 720,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 763,
									"end": 764,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 738,
									"end": 748,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 738,
									"end": 760,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 738,
									"end": 760,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 738,
									"end": 760,
									"name": "EXTCODESIZE",
									"source": 6
								},
								{
									"begin": 738,
									"end": 764,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 730,
									"end": 797,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 730,
									"end": 797,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 861,
									"end": 871,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 850,
									"end": 878,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 850,
									"end": 878,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 850,
									"end": 878,
									"name": "PUSH",
									"source": 6,
									"value": "8DA5CB5B"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFF"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "STATICCALL",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 850,
									"end": 880,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 846,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 846,
									"end": 1044,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 979,
									"end": 1033,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 846,
									"end": 1044,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 846,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 936,
									"end": 946,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 913,
									"end": 922,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 913,
									"end": 922,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 913,
									"end": 947,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 913,
									"end": 947,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 913,
									"end": 947,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 913,
									"end": 947,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 913,
									"end": 947,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 881,
									"end": 958,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 589,
									"end": 1050,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 589,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1286,
									"end": 1297,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1320,
									"end": 1326,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1315,
									"end": 1318,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1308,
									"end": 1327,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1360,
									"end": 1364,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1355,
									"end": 1358,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1351,
									"end": 1365,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1336,
									"end": 1365,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1336,
									"end": 1365,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1377,
									"end": 1559,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1377,
									"end": 1559,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1517,
									"end": 1551,
									"name": "PUSH",
									"source": 10,
									"value": "4469726563746F72792063616E6E6F74206265207A65726F2061646472657373"
								},
								{
									"begin": 1513,
									"end": 1514,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 1511,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1501,
									"end": 1515,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1494,
									"end": 1552,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1377,
									"end": 1559,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1377,
									"end": 1559,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1565,
									"end": 1931,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1565,
									"end": 1931,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1707,
									"end": 1710,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1728,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1792,
									"end": 1794,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1787,
									"end": 1790,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1728,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1728,
									"end": 1795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1728,
									"end": 1795,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1728,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1721,
									"end": 1795,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1721,
									"end": 1795,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1804,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 1893,
									"end": 1896,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1804,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1804,
									"end": 1897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1804,
									"end": 1897,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 1804,
									"end": 1897,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1922,
									"end": 1924,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1917,
									"end": 1920,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1913,
									"end": 1925,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 1925,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 1925,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1565,
									"end": 1931,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1565,
									"end": 1931,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1565,
									"end": 1931,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1565,
									"end": 1931,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1937,
									"end": 2356,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 1937,
									"end": 2356,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2141,
									"end": 2143,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2130,
									"end": 2139,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2126,
									"end": 2144,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2118,
									"end": 2144,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2118,
									"end": 2144,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2190,
									"end": 2199,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2184,
									"end": 2188,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2180,
									"end": 2200,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2176,
									"end": 2177,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2165,
									"end": 2174,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2178,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2154,
									"end": 2201,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2218,
									"end": 2349,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2344,
									"end": 2348,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2218,
									"end": 2349,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 2218,
									"end": 2349,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2218,
									"end": 2349,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2218,
									"end": 2349,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2210,
									"end": 2349,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2210,
									"end": 2349,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1937,
									"end": 2356,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1937,
									"end": 2356,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1937,
									"end": 2356,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1937,
									"end": 2356,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2362,
									"end": 2540,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 2362,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2502,
									"end": 2532,
									"name": "PUSH",
									"source": 10,
									"value": "4469726563746F7279206D757374206265206120636F6E747261637400000000"
								},
								{
									"begin": 2498,
									"end": 2499,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2490,
									"end": 2496,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2486,
									"end": 2500,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2479,
									"end": 2533,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2362,
									"end": 2540,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2362,
									"end": 2540,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2546,
									"end": 2912,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 2546,
									"end": 2912,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2688,
									"end": 2691,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2709,
									"end": 2776,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 2773,
									"end": 2775,
									"name": "PUSH",
									"source": 10,
									"value": "1C"
								},
								{
									"begin": 2768,
									"end": 2771,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2709,
									"end": 2776,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 2709,
									"end": 2776,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2709,
									"end": 2776,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 2709,
									"end": 2776,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2702,
									"end": 2776,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2702,
									"end": 2776,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2785,
									"end": 2878,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2785,
									"end": 2878,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 2785,
									"end": 2878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2785,
									"end": 2878,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 2785,
									"end": 2878,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2903,
									"end": 2905,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2898,
									"end": 2901,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2894,
									"end": 2906,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2887,
									"end": 2906,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2887,
									"end": 2906,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2546,
									"end": 2912,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2546,
									"end": 2912,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2546,
									"end": 2912,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2546,
									"end": 2912,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2918,
									"end": 3337,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 2918,
									"end": 3337,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3084,
									"end": 3088,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3122,
									"end": 3124,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3111,
									"end": 3120,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3107,
									"end": 3125,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3099,
									"end": 3125,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3099,
									"end": 3125,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3171,
									"end": 3180,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3165,
									"end": 3169,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3161,
									"end": 3181,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3157,
									"end": 3158,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3146,
									"end": 3155,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3142,
									"end": 3159,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3182,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3199,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 3325,
									"end": 3329,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3199,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 3199,
									"end": 3330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3199,
									"end": 3330,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 3199,
									"end": 3330,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3191,
									"end": 3330,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3191,
									"end": 3330,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2918,
									"end": 3337,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2918,
									"end": 3337,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2918,
									"end": 3337,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2918,
									"end": 3337,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3343,
									"end": 3574,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 3343,
									"end": 3574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3483,
									"end": 3517,
									"name": "PUSH",
									"source": 10,
									"value": "4469726563746F7279206164647265737320646F6573206E6F7420696D706C65"
								},
								{
									"begin": 3479,
									"end": 3480,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3471,
									"end": 3477,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3467,
									"end": 3481,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3460,
									"end": 3518,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3552,
									"end": 3566,
									"name": "PUSH",
									"source": 10,
									"value": "6D656E74206F776E657228290000000000000000000000000000000000000000"
								},
								{
									"begin": 3547,
									"end": 3549,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3539,
									"end": 3545,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3535,
									"end": 3550,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3528,
									"end": 3567,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3343,
									"end": 3574,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3343,
									"end": 3574,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3580,
									"end": 3946,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3580,
									"end": 3946,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3722,
									"end": 3725,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3743,
									"end": 3810,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 3807,
									"end": 3809,
									"name": "PUSH",
									"source": 10,
									"value": "2C"
								},
								{
									"begin": 3802,
									"end": 3805,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3743,
									"end": 3810,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 3743,
									"end": 3810,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3743,
									"end": 3810,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 3743,
									"end": 3810,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3736,
									"end": 3810,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3736,
									"end": 3810,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3819,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 3908,
									"end": 3911,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3819,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 3819,
									"end": 3912,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3819,
									"end": 3912,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 3819,
									"end": 3912,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3937,
									"end": 3939,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3932,
									"end": 3935,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3928,
									"end": 3940,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3921,
									"end": 3940,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3921,
									"end": 3940,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3580,
									"end": 3946,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3580,
									"end": 3946,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3580,
									"end": 3946,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3580,
									"end": 3946,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3952,
									"end": 4371,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 3952,
									"end": 4371,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4122,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4156,
									"end": 4158,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4145,
									"end": 4154,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4141,
									"end": 4159,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4133,
									"end": 4159,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4133,
									"end": 4159,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4205,
									"end": 4214,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4199,
									"end": 4203,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4195,
									"end": 4215,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4191,
									"end": 4192,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4180,
									"end": 4189,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4176,
									"end": 4193,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4169,
									"end": 4216,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4233,
									"end": 4364,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 4359,
									"end": 4363,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4233,
									"end": 4364,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4233,
									"end": 4364,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4233,
									"end": 4364,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 4233,
									"end": 4364,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4225,
									"end": 4364,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4225,
									"end": 4364,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3952,
									"end": 4371,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3952,
									"end": 4371,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3952,
									"end": 4371,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3952,
									"end": 4371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 635,
									"end": 2474,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 635,
									"end": 2474,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 635,
									"end": 2474,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 635,
									"end": 2474,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 635,
									"end": 2474,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 635,
									"end": 2474,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 635,
									"end": 2474,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 635,
									"end": 2474,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 635,
									"end": 2474,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200d673eab98b6c661ca292c3f3e8cb8388a1e2f0ae382c35194917cbcd8c523d564736f6c634300081e0033",
									".code": [
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "6EBD362C"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "9DC29FAC"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "9DC29FAC"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "BA4C7BE1"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "CFA36F3D"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "6EBD362C"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "27262618"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "27262618"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "658A847A"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 2474,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5114,
											"end": 5300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5114,
											"end": 5300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5114,
											"end": 5300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3850,
											"end": 4002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3850,
											"end": 4002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5892,
											"end": 6136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5892,
											"end": 6136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5892,
											"end": 6136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1272,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1272,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1272,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3735,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3735,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1751,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1751,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 336,
											"end": 363,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 336,
											"end": 363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 336,
											"end": 363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1277,
											"end": 1706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1277,
											"end": 1706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4035,
											"end": 4206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4035,
											"end": 4206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4035,
											"end": 4206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1178,
											"end": 1266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1178,
											"end": 1266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2954,
											"end": 3102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2954,
											"end": 3102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1895,
											"end": 1998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1895,
											"end": 1998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4401,
											"end": 4579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4401,
											"end": 4579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4401,
											"end": 4579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 470,
											"end": 583,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 470,
											"end": 583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 470,
											"end": 583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 756,
											"end": 776,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 756,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 756,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 756,
											"end": 776,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 756,
											"end": 776,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 756,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 756,
											"end": 776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 756,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 756,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 756,
											"end": 776,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 756,
											"end": 776,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 756,
											"end": 776,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 756,
											"end": 776,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 756,
											"end": 776,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 756,
											"end": 776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 756,
											"end": 776,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4612,
											"end": 4807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4612,
											"end": 4807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4612,
											"end": 4807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2755,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2792,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2792,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2828,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2827,
											"end": 2834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2820,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2820,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5191,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5203,
											"end": 5216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5219,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5219,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5219,
											"end": 5231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5231,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5219,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5241,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5250,
											"end": 5255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5257,
											"end": 5264,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5266,
											"end": 5271,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5241,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5241,
											"end": 5272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5241,
											"end": 5272,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5241,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5289,
											"end": 5293,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 3909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3921,
											"end": 3943,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3946,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3946,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3946,
											"end": 3964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 3964,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3946,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3981,
											"end": 3982,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3981,
											"end": 3995,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3981,
											"end": 3995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3981,
											"end": 3995,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 3995,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 3995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 3995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5979,
											"end": 5983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5995,
											"end": 6010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6013,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 6013,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 6013,
											"end": 6025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6013,
											"end": 6025,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 6013,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6035,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 6051,
											"end": 6055,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6057,
											"end": 6064,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6066,
											"end": 6071,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6035,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6035,
											"end": 6072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6035,
											"end": 6072,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 6035,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6092,
											"end": 6096,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6098,
											"end": 6100,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6102,
											"end": 6107,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6082,
											"end": 6108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6129,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6118,
											"end": 6129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 6136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1348,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1367,
											"end": 1395,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "27262618"
										},
										{
											"begin": 1396,
											"end": 1400,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1367,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1367,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1360,
											"end": 1401,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1360,
											"end": 1401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3801,
											"end": 3810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "6574662D726F7574657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 389,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 389,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 375,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 375,
											"end": 385,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 375,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 375,
											"end": 421,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 367,
											"end": 454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1826,
											"end": 1843,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 1832,
											"end": 1834,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1836,
											"end": 1842,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 1826,
											"end": 1843,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1843,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 1826,
											"end": 1843,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1751,
											"end": 1850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1751,
											"end": 1850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 336,
											"end": 363,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 336,
											"end": 363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4758,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4808,
											"end": 4838,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 4883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 0,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4981,
											"end": 4995,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5033,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1408,
											"end": 1453,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1408,
											"end": 1453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 1408,
											"end": 1453,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1433,
											"end": 1453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1433,
											"end": 1453,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1433,
											"end": 1453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "DC149F000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1433,
											"end": 1453,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1433,
											"end": 1453,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1433,
											"end": 1453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1433,
											"end": 1453,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1433,
											"end": 1453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1433,
											"end": 1453,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1433,
											"end": 1453,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1433,
											"end": 1453,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1433,
											"end": 1453,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1433,
											"end": 1453,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1433,
											"end": 1453,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1408,
											"end": 1453,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 1408,
											"end": 1453,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1478,
											"end": 1482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1463,
											"end": 1475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1463,
											"end": 1482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1463,
											"end": 1482,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1482,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1482,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1482,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1463,
											"end": 1482,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1482,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1482,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1482,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1482,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1482,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1482,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1482,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1482,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1482,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1560,
											"end": 1585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 1574,
											"end": 1584,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1560,
											"end": 1573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1560,
											"end": 1585,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1560,
											"end": 1585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 1560,
											"end": 1585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1646,
											"end": 1674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 1659,
											"end": 1664,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 1673,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1646,
											"end": 1658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1646,
											"end": 1674,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1646,
											"end": 1674,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 1646,
											"end": 1674,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1693,
											"end": 1699,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1685,
											"end": 1690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1685,
											"end": 1699,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1685,
											"end": 1699,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1685,
											"end": 1699,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1685,
											"end": 1699,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5068,
											"end": 5082,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5116,
											"end": 5121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5099,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5140,
											"end": 5154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4100,
											"end": 4107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4141,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4144,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 4144,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4144,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4144,
											"end": 4162,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 4144,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4190,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4198,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4172,
											"end": 4199,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4172,
											"end": 4199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4172,
											"end": 4199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1223,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1257,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1257,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1257,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1242,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3001,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3026,
											"end": 3048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3051,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3051,
											"end": 3069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3086,
											"end": 3095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3079,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3079,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "6574662D726F7574657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 389,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 389,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 389,
											"end": 421,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 389,
											"end": 421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 375,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 375,
											"end": 385,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 375,
											"end": 421,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 375,
											"end": 421,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 367,
											"end": 454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 367,
											"end": 454,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 367,
											"end": 454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1972,
											"end": 1991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1978,
											"end": 1982,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1984,
											"end": 1990,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1972,
											"end": 1977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1972,
											"end": 1991,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1972,
											"end": 1991,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1972,
											"end": 1991,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1998,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4470,
											"end": 4474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4502,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4502,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4502,
											"end": 4514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4514,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4502,
											"end": 4514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 4534,
											"end": 4539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4543,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4545,
											"end": 4550,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4524,
											"end": 4551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 4572,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4561,
											"end": 4572,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 470,
											"end": 583,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1109,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1095,
											"end": 1105,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1087,
											"end": 1154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 551,
											"end": 576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 565,
											"end": 575,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 551,
											"end": 564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 551,
											"end": 576,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 551,
											"end": 576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 551,
											"end": 576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 756,
											"end": 776,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 756,
											"end": 776,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 756,
											"end": 776,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 756,
											"end": 776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4699,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4711,
											"end": 4733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 4736,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4736,
											"end": 4754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4784,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4771,
											"end": 4784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4785,
											"end": 4790,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4792,
											"end": 4799,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4764,
											"end": 4800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4764,
											"end": 4800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4764,
											"end": 4800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "PUSH",
											"source": 1,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00"
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 2100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9905,
											"end": 10033,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 9905,
											"end": 10033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10021,
											"end": 10025,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9989,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 9989,
											"end": 10026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10026,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 9989,
											"end": 10026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 10033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 10033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 10033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 10033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11649,
											"end": 12125,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 11649,
											"end": 12125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11748,
											"end": 11772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11775,
											"end": 11800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 11785,
											"end": 11790,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 11799,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11775,
											"end": 11784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 11775,
											"end": 11800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11775,
											"end": 11800,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 11775,
											"end": 11800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11748,
											"end": 11800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11748,
											"end": 11800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11833,
											"end": 11850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11814,
											"end": 11830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11814,
											"end": 11850,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11810,
											"end": 12119,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11810,
											"end": 12119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 11810,
											"end": 12119,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11889,
											"end": 11894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11870,
											"end": 11886,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11870,
											"end": 11894,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11866,
											"end": 11996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11866,
											"end": 11996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 11866,
											"end": 11996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11948,
											"end": 11955,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11957,
											"end": 11973,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11975,
											"end": 11980,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 11921,
											"end": 11981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11866,
											"end": 11996,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 11866,
											"end": 11996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12037,
											"end": 12094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 12046,
											"end": 12051,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12053,
											"end": 12060,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12081,
											"end": 12086,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12062,
											"end": 12078,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12062,
											"end": 12086,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12088,
											"end": 12093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12037,
											"end": 12045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 12037,
											"end": 12094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12037,
											"end": 12094,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 12037,
											"end": 12094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11810,
											"end": 12119,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 11810,
											"end": 12119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11738,
											"end": 12125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11649,
											"end": 12125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11649,
											"end": 12125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11649,
											"end": 12125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11649,
											"end": 12125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6509,
											"end": 6809,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6509,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 6596,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 6588,
											"end": 6674,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 6633,
											"end": 6663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6674,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 6588,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6702,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6703,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6687,
											"end": 6703,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6703,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6687,
											"end": 6703,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6703,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6683,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 6683,
											"end": 6769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6755,
											"end": 6756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 6726,
											"end": 6758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6683,
											"end": 6769,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 6683,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6778,
											"end": 6802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6794,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6796,
											"end": 6801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6778,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 6778,
											"end": 6802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6778,
											"end": 6802,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 6778,
											"end": 6802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6509,
											"end": 6809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6509,
											"end": 6809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6509,
											"end": 6809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6509,
											"end": 6809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8637,
											"end": 8845,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 8637,
											"end": 8845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8707,
											"end": 8728,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8707,
											"end": 8728,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8714,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8728,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8707,
											"end": 8728,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8728,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8703,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8703,
											"end": 8794,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8780,
											"end": 8781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 8751,
											"end": 8783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8703,
											"end": 8794,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8703,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8803,
											"end": 8838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 8819,
											"end": 8820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8823,
											"end": 8830,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8832,
											"end": 8837,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8803,
											"end": 8810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 8803,
											"end": 8838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8803,
											"end": 8838,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 8803,
											"end": 8838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8637,
											"end": 8845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8637,
											"end": 8845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8637,
											"end": 8845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9171,
											"end": 9183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 9186,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 9186,
											"end": 9213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9256,
											"end": 9260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9232,
											"end": 9270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9071,
											"end": 9276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1050,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 589,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 681,
											"end": 682,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 683,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 659,
											"end": 683,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 659,
											"end": 669,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 659,
											"end": 683,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 659,
											"end": 683,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 659,
											"end": 683,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 651,
											"end": 720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 651,
											"end": 720,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 763,
											"end": 764,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 748,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 738,
											"end": 760,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 738,
											"end": 760,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 738,
											"end": 764,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 730,
											"end": 797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 730,
											"end": 797,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 861,
											"end": 871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 878,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 850,
											"end": 878,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 850,
											"end": 878,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 850,
											"end": 880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 846,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 846,
											"end": 1044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 979,
											"end": 1033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 846,
											"end": 1044,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 846,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 936,
											"end": 946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 913,
											"end": 922,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 922,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 947,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 913,
											"end": 947,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 913,
											"end": 947,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 913,
											"end": 947,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 913,
											"end": 947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 881,
											"end": 958,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 589,
											"end": 1050,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 589,
											"end": 1050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2388,
											"end": 2393,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2402,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 2365,
											"end": 2403,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2365,
											"end": 2403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9163,
											"end": 9369,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 9163,
											"end": 9369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9252,
											"end": 9253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9233,
											"end": 9254,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9233,
											"end": 9254,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9233,
											"end": 9240,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9233,
											"end": 9254,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9233,
											"end": 9254,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9233,
											"end": 9254,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9229,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 9229,
											"end": 9318,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9304,
											"end": 9305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 9277,
											"end": 9307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9229,
											"end": 9318,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 9229,
											"end": 9318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9327,
											"end": 9362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 9335,
											"end": 9342,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9356,
											"end": 9361,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9327,
											"end": 9334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 9327,
											"end": 9362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9327,
											"end": 9362,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 9327,
											"end": 9362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9163,
											"end": 9369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9163,
											"end": 9369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9163,
											"end": 9369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 11367,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10880,
											"end": 11367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10988,
											"end": 11010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11013,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 11013,
											"end": 11029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11013,
											"end": 11031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11013,
											"end": 11031,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 11013,
											"end": 11031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10988,
											"end": 11031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10988,
											"end": 11031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11062,
											"end": 11063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11045,
											"end": 11064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11045,
											"end": 11064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11050,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11045,
											"end": 11064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11064,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11041,
											"end": 11130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 11041,
											"end": 11130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 11087,
											"end": 11119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11041,
											"end": 11130,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 11041,
											"end": 11130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11162,
											"end": 11163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11143,
											"end": 11164,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11143,
											"end": 11164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11143,
											"end": 11150,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11143,
											"end": 11164,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11143,
											"end": 11164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11143,
											"end": 11164,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11139,
											"end": 11229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 11139,
											"end": 11229,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 11187,
											"end": 11218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11139,
											"end": 11229,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 11139,
											"end": 11229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11270,
											"end": 11275,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11251,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11238,
											"end": 11251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11252,
											"end": 11257,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11259,
											"end": 11266,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11275,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11289,
											"end": 11298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11285,
											"end": 11361,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11285,
											"end": 11361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 11285,
											"end": 11361,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11335,
											"end": 11342,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11328,
											"end": 11333,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11344,
											"end": 11349,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 11319,
											"end": 11350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 11285,
											"end": 11361,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 11285,
											"end": 11361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10978,
											"end": 11367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 11367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 11367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 11367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 11367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 11367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2472,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 2092,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 2192,
											"end": 2196,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2198,
											"end": 2200,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2202,
											"end": 2207,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 2178,
											"end": 2208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2208,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 2178,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2254,
											"end": 2284,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 2287,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 2287,
											"end": 2306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2306,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 2287,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2359,
											"end": 2360,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2361,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2324,
											"end": 2361,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2346,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2324,
											"end": 2361,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2324,
											"end": 2361,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2324,
											"end": 2361,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 2316,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 2316,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2423,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH",
											"source": 9,
											"value": "C082F03F"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2449,
											"end": 2453,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2455,
											"end": 2457,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2459,
											"end": 2464,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 2409,
											"end": 2465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2092,
											"end": 2472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2092,
											"end": 2472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2092,
											"end": 2472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2092,
											"end": 2472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 0,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8819,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 7149,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 7149,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 0,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 2553,
											"end": 2569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2553,
											"end": 2571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 2553,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2571,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2596,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2581,
											"end": 2588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 2581,
											"end": 2596,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 2606,
											"end": 2625,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2632,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 8294,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 7124,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7234,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 7234,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 7234,
											"end": 7252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7234,
											"end": 7252,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 7234,
											"end": 7252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7266,
											"end": 7284,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7266,
											"end": 7284,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7270,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7284,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7266,
											"end": 7284,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7284,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7403,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7416,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7402,
											"end": 7416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7416,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 7402,
											"end": 7425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 7475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7478,
											"end": 7479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7478,
											"end": 7489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7490,
											"end": 7494,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 7495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 7495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7527,
											"end": 7532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7513,
											"end": 7524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7513,
											"end": 7532,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7624,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 7509,
											"end": 7624,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7584,
											"end": 7588,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7590,
											"end": 7601,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7603,
											"end": 7608,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 7559,
											"end": 7609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7624,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 7509,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7778,
											"end": 7783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7764,
											"end": 7775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7764,
											"end": 7783,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7744,
											"end": 7755,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7756,
											"end": 7760,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7783,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7442,
											"end": 7808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7836,
											"end": 7837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7822,
											"end": 7838,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7822,
											"end": 7838,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7822,
											"end": 7824,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7822,
											"end": 7838,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7822,
											"end": 7838,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7822,
											"end": 7838,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8003,
											"end": 8008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 7986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 7999,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7985,
											"end": 7999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 7999,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8217,
											"end": 8222,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8198,
											"end": 8209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8210,
											"end": 8212,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8271,
											"end": 8275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8281,
											"end": 8286,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 8262,
											"end": 8287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7199,
											"end": 8294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 8294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 8294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 8294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 8294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 316,
											"end": 472,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 316,
											"end": 472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 391,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 426,
											"end": 464,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 426,
											"end": 464,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 426,
											"end": 464,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 426,
											"end": 464,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 426,
											"end": 464,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 426,
											"end": 464,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 426,
											"end": 464,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 426,
											"end": 464,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 426,
											"end": 464,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 426,
											"end": 464,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 426,
											"end": 464,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 426,
											"end": 464,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 426,
											"end": 464,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 426,
											"end": 464,
											"name": "PUSH",
											"source": 8,
											"value": "6574662D746F6B656E2D6576656E747300000000000000000000000000000000"
										},
										{
											"begin": 426,
											"end": 464,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 426,
											"end": 464,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 426,
											"end": 464,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 426,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 426,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 426,
											"end": 464,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 426,
											"end": 464,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 403,
											"end": 465,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 316,
											"end": 472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 316,
											"end": 472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8535,
											"end": 8539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 8558,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 8558,
											"end": 8584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8485,
											"end": 8605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4433,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 4316,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4425,
											"end": 4426,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4422,
											"end": 4423,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4415,
											"end": 4427,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4439,
											"end": 4556,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 4439,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4548,
											"end": 4549,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4546,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4538,
											"end": 4550,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4562,
											"end": 4742,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 4562,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4687,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4607,
											"end": 4608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4600,
											"end": 4688,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4707,
											"end": 4711,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 4704,
											"end": 4705,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4697,
											"end": 4712,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4735,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4728,
											"end": 4729,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4736,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5029,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 4748,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4831,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 4853,
											"end": 4857,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4831,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 4831,
											"end": 4858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4831,
											"end": 4858,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 4831,
											"end": 4858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4823,
											"end": 4829,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4819,
											"end": 4859,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4961,
											"end": 4967,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4949,
											"end": 4959,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4946,
											"end": 4968,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4925,
											"end": 4943,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4913,
											"end": 4923,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4910,
											"end": 4944,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4907,
											"end": 4969,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4904,
											"end": 4992,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4904,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 4904,
											"end": 4992,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 4972,
											"end": 4990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4904,
											"end": 4992,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 4904,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5012,
											"end": 5022,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5008,
											"end": 5010,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5001,
											"end": 5023,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 5029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5035,
											"end": 5164,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 5035,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5069,
											"end": 5075,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 5096,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 5096,
											"end": 5116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5096,
											"end": 5116,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 5096,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5086,
											"end": 5116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5086,
											"end": 5116,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5125,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 5153,
											"end": 5157,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5145,
											"end": 5151,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5125,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 5125,
											"end": 5158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5125,
											"end": 5158,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 5125,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5035,
											"end": 5164,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5035,
											"end": 5164,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5035,
											"end": 5164,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5035,
											"end": 5164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5170,
											"end": 5478,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 5170,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5232,
											"end": 5236,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5322,
											"end": 5340,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5314,
											"end": 5320,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5311,
											"end": 5341,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5308,
											"end": 5364,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5308,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 5308,
											"end": 5364,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 5344,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 5344,
											"end": 5362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5362,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 5344,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5308,
											"end": 5364,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 5308,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5382,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5382,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 5382,
											"end": 5411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5382,
											"end": 5411,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 5382,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5374,
											"end": 5411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5374,
											"end": 5411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5466,
											"end": 5470,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5460,
											"end": 5464,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5456,
											"end": 5471,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5448,
											"end": 5471,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5448,
											"end": 5471,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5170,
											"end": 5478,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5170,
											"end": 5478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5170,
											"end": 5478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5170,
											"end": 5478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5484,
											"end": 5632,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 5484,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5588,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5577,
											"end": 5580,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5572,
											"end": 5575,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5589,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 5623,
											"end": 5624,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5614,
											"end": 5620,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5609,
											"end": 5612,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5605,
											"end": 5621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5598,
											"end": 5625,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5484,
											"end": 5632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5484,
											"end": 5632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5484,
											"end": 5632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5484,
											"end": 5632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 6063,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 5638,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5721,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 5757,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 5799,
											"end": 5805,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 5757,
											"end": 5806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5806,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 5757,
											"end": 5806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5741,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 5741,
											"end": 5807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5741,
											"end": 5807,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 5741,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5732,
											"end": 5807,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5732,
											"end": 5807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5830,
											"end": 5836,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5823,
											"end": 5828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5816,
											"end": 5837,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5868,
											"end": 5872,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5861,
											"end": 5866,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5857,
											"end": 5873,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5906,
											"end": 5909,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5897,
											"end": 5903,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5892,
											"end": 5895,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5888,
											"end": 5904,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5885,
											"end": 5910,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5882,
											"end": 5994,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5882,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 5882,
											"end": 5994,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5913,
											"end": 5992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 5913,
											"end": 5992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 5913,
											"end": 5992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5913,
											"end": 5992,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 5913,
											"end": 5992,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5882,
											"end": 5994,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 5882,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 6050,
											"end": 6056,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6045,
											"end": 6048,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6040,
											"end": 6043,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 6003,
											"end": 6057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6057,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 6003,
											"end": 6057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5722,
											"end": 6063,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 6063,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 6063,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 6063,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 6063,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 6063,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 6063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6083,
											"end": 6423,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 6083,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6139,
											"end": 6144,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6188,
											"end": 6191,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6181,
											"end": 6185,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6173,
											"end": 6179,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6169,
											"end": 6186,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6165,
											"end": 6192,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6155,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 6155,
											"end": 6277,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 6196,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 6196,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6275,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 6196,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6155,
											"end": 6277,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 6155,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6313,
											"end": 6319,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6300,
											"end": 6320,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6338,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 6413,
											"end": 6416,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6398,
											"end": 6402,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6390,
											"end": 6396,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6386,
											"end": 6403,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6338,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 6338,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6338,
											"end": 6417,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 6338,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6329,
											"end": 6417,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6329,
											"end": 6417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6145,
											"end": 6423,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6083,
											"end": 6423,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6083,
											"end": 6423,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6083,
											"end": 6423,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6083,
											"end": 6423,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6083,
											"end": 6423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6429,
											"end": 6938,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6429,
											"end": 6938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6504,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6549,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6535,
											"end": 6544,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6526,
											"end": 6533,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6545,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6518,
											"end": 6550,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6515,
											"end": 6634,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6515,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 6515,
											"end": 6634,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6553,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 6553,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 6553,
											"end": 6632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6553,
											"end": 6632,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 6553,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6515,
											"end": 6634,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 6515,
											"end": 6634,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6701,
											"end": 6702,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6690,
											"end": 6699,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6686,
											"end": 6703,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6673,
											"end": 6704,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6723,
											"end": 6729,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6750,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6717,
											"end": 6834,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6717,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 6717,
											"end": 6834,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6753,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 6753,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 6753,
											"end": 6832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6753,
											"end": 6832,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 6753,
											"end": 6832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6717,
											"end": 6834,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 6717,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6858,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 6913,
											"end": 6920,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6904,
											"end": 6910,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6893,
											"end": 6902,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 6911,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6858,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 6858,
											"end": 6921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6858,
											"end": 6921,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 6858,
											"end": 6921,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6848,
											"end": 6921,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6848,
											"end": 6921,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6644,
											"end": 6931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6429,
											"end": 6938,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6429,
											"end": 6938,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6429,
											"end": 6938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6429,
											"end": 6938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6429,
											"end": 6938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6944,
											"end": 7062,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 6944,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7031,
											"end": 7055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 7049,
											"end": 7054,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7031,
											"end": 7055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 7031,
											"end": 7055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7031,
											"end": 7055,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 7031,
											"end": 7055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7026,
											"end": 7029,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7056,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6944,
											"end": 7062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6944,
											"end": 7062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6944,
											"end": 7062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7068,
											"end": 7290,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 7068,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7165,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7199,
											"end": 7201,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7188,
											"end": 7197,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7184,
											"end": 7202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7176,
											"end": 7202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7176,
											"end": 7202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 7280,
											"end": 7281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7269,
											"end": 7278,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7265,
											"end": 7282,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7256,
											"end": 7262,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 7212,
											"end": 7283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7068,
											"end": 7290,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7068,
											"end": 7290,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7068,
											"end": 7290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7068,
											"end": 7290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7068,
											"end": 7290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7296,
											"end": 7382,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 7296,
											"end": 7382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7331,
											"end": 7338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7371,
											"end": 7375,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7364,
											"end": 7369,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7360,
											"end": 7376,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7349,
											"end": 7376,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7349,
											"end": 7376,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7296,
											"end": 7382,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7296,
											"end": 7382,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7296,
											"end": 7382,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7296,
											"end": 7382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7388,
											"end": 7500,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 7388,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7471,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 7487,
											"end": 7492,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7471,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 7471,
											"end": 7493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7471,
											"end": 7493,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 7471,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7466,
											"end": 7469,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7459,
											"end": 7494,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7388,
											"end": 7500,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7388,
											"end": 7500,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7388,
											"end": 7500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7720,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 7506,
											"end": 7720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7595,
											"end": 7599,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7633,
											"end": 7635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7631,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7618,
											"end": 7636,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7610,
											"end": 7636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7610,
											"end": 7636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 7713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 7710,
											"end": 7711,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7699,
											"end": 7708,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7695,
											"end": 7712,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7686,
											"end": 7692,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 7713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 7646,
											"end": 7713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 7713,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 7646,
											"end": 7713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7720,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7720,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7726,
											"end": 7786,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 7726,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7757,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7775,
											"end": 7780,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7768,
											"end": 7780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7768,
											"end": 7780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7726,
											"end": 7786,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7726,
											"end": 7786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7726,
											"end": 7786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7726,
											"end": 7786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7792,
											"end": 7934,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 7792,
											"end": 7934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7842,
											"end": 7851,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7875,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 7893,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 7902,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 7920,
											"end": 7925,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7902,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 7902,
											"end": 7926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7902,
											"end": 7926,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 7902,
											"end": 7926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7893,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 7893,
											"end": 7927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7893,
											"end": 7927,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 7893,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7875,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 7875,
											"end": 7928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7875,
											"end": 7928,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 7875,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7862,
											"end": 7928,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7862,
											"end": 7928,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7792,
											"end": 7934,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7792,
											"end": 7934,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7792,
											"end": 7934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7792,
											"end": 7934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7940,
											"end": 8066,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 7940,
											"end": 8066,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7990,
											"end": 7999,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8023,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 8054,
											"end": 8059,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8023,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 8023,
											"end": 8060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8023,
											"end": 8060,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 8023,
											"end": 8060,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8010,
											"end": 8060,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8010,
											"end": 8060,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7940,
											"end": 8066,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7940,
											"end": 8066,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7940,
											"end": 8066,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7940,
											"end": 8066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8072,
											"end": 8217,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 8072,
											"end": 8217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8141,
											"end": 8150,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8174,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 8205,
											"end": 8210,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8174,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 8174,
											"end": 8211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8174,
											"end": 8211,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 8174,
											"end": 8211,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8161,
											"end": 8211,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8161,
											"end": 8211,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8072,
											"end": 8217,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8072,
											"end": 8217,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8072,
											"end": 8217,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8072,
											"end": 8217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8392,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 8223,
											"end": 8392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8329,
											"end": 8385,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 8379,
											"end": 8384,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8329,
											"end": 8385,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 8329,
											"end": 8385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8329,
											"end": 8385,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 8329,
											"end": 8385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8324,
											"end": 8327,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8317,
											"end": 8386,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8392,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8392,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8398,
											"end": 8658,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 8398,
											"end": 8658,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8510,
											"end": 8514,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8548,
											"end": 8550,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8537,
											"end": 8546,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8533,
											"end": 8551,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8525,
											"end": 8551,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8525,
											"end": 8551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 8651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 8648,
											"end": 8649,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8637,
											"end": 8646,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8633,
											"end": 8650,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8624,
											"end": 8630,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 8651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 8561,
											"end": 8651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 8651,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 8561,
											"end": 8651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8398,
											"end": 8658,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8398,
											"end": 8658,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8398,
											"end": 8658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8398,
											"end": 8658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8398,
											"end": 8658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8664,
											"end": 9789,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 8664,
											"end": 9789,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8770,
											"end": 8776,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8778,
											"end": 8784,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8786,
											"end": 8792,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8794,
											"end": 8800,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8843,
											"end": 8846,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8831,
											"end": 8840,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8822,
											"end": 8829,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 8818,
											"end": 8841,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8814,
											"end": 8847,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8811,
											"end": 8931,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8811,
											"end": 8931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 8811,
											"end": 8931,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8850,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 8850,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 8850,
											"end": 8929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8850,
											"end": 8929,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 8850,
											"end": 8929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8811,
											"end": 8931,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 8811,
											"end": 8931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8970,
											"end": 8971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8995,
											"end": 9048,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 9040,
											"end": 9047,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9031,
											"end": 9037,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9020,
											"end": 9029,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9016,
											"end": 9038,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8995,
											"end": 9048,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 8995,
											"end": 9048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8995,
											"end": 9048,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 8995,
											"end": 9048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8985,
											"end": 9048,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8985,
											"end": 9048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8941,
											"end": 9058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9125,
											"end": 9127,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9114,
											"end": 9123,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9110,
											"end": 9128,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9097,
											"end": 9129,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9156,
											"end": 9174,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9148,
											"end": 9154,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9145,
											"end": 9175,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9142,
											"end": 9259,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9142,
											"end": 9259,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 9142,
											"end": 9259,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9178,
											"end": 9257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 9178,
											"end": 9257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 9178,
											"end": 9257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9178,
											"end": 9257,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 9178,
											"end": 9257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9142,
											"end": 9259,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 9142,
											"end": 9259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9283,
											"end": 9346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 9338,
											"end": 9345,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9329,
											"end": 9335,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9318,
											"end": 9327,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9314,
											"end": 9336,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9283,
											"end": 9346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 9283,
											"end": 9346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9283,
											"end": 9346,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 9283,
											"end": 9346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9273,
											"end": 9346,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9273,
											"end": 9346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9068,
											"end": 9356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9423,
											"end": 9425,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9412,
											"end": 9421,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9408,
											"end": 9426,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9395,
											"end": 9427,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9454,
											"end": 9472,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9446,
											"end": 9452,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9443,
											"end": 9473,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9440,
											"end": 9557,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9440,
											"end": 9557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 9440,
											"end": 9557,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9476,
											"end": 9555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 9476,
											"end": 9555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 9476,
											"end": 9555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9476,
											"end": 9555,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 9476,
											"end": 9555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9440,
											"end": 9557,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 9440,
											"end": 9557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9581,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 9636,
											"end": 9643,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9627,
											"end": 9633,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9616,
											"end": 9625,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9612,
											"end": 9634,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9581,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 9581,
											"end": 9644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9581,
											"end": 9644,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 9581,
											"end": 9644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9571,
											"end": 9644,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9571,
											"end": 9644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9366,
											"end": 9654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9693,
											"end": 9695,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9719,
											"end": 9772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 9764,
											"end": 9771,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9755,
											"end": 9761,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9744,
											"end": 9753,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9740,
											"end": 9762,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9719,
											"end": 9772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 9719,
											"end": 9772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9719,
											"end": 9772,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 9719,
											"end": 9772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9709,
											"end": 9772,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9709,
											"end": 9772,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9664,
											"end": 9782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8664,
											"end": 9789,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8664,
											"end": 9789,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8664,
											"end": 9789,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8664,
											"end": 9789,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8664,
											"end": 9789,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8664,
											"end": 9789,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8664,
											"end": 9789,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8664,
											"end": 9789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9795,
											"end": 10124,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 9795,
											"end": 10124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 9860,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9903,
											"end": 9905,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9891,
											"end": 9900,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9882,
											"end": 9889,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9878,
											"end": 9901,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9874,
											"end": 9906,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9871,
											"end": 9990,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9871,
											"end": 9990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 9871,
											"end": 9990,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9909,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 9909,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 9909,
											"end": 9988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9909,
											"end": 9988,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 9909,
											"end": 9988,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9871,
											"end": 9990,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 9871,
											"end": 9990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10029,
											"end": 10030,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10054,
											"end": 10107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 10099,
											"end": 10106,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10090,
											"end": 10096,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10079,
											"end": 10088,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10075,
											"end": 10097,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10054,
											"end": 10107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 10054,
											"end": 10107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10054,
											"end": 10107,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 10054,
											"end": 10107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10107,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10000,
											"end": 10117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9795,
											"end": 10124,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9795,
											"end": 10124,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9795,
											"end": 10124,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9795,
											"end": 10124,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9795,
											"end": 10124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10130,
											"end": 10604,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 10130,
											"end": 10604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10198,
											"end": 10204,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10206,
											"end": 10212,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10255,
											"end": 10257,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10243,
											"end": 10252,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10234,
											"end": 10241,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10230,
											"end": 10253,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10226,
											"end": 10258,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10223,
											"end": 10342,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10223,
											"end": 10342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 10223,
											"end": 10342,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10261,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 10261,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 10261,
											"end": 10340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10261,
											"end": 10340,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 10261,
											"end": 10340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10223,
											"end": 10342,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 10223,
											"end": 10342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10381,
											"end": 10382,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10406,
											"end": 10459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 10451,
											"end": 10458,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10442,
											"end": 10448,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 10440,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10427,
											"end": 10449,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10406,
											"end": 10459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 10406,
											"end": 10459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10406,
											"end": 10459,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 10406,
											"end": 10459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10396,
											"end": 10459,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10396,
											"end": 10459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10352,
											"end": 10469,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10510,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10534,
											"end": 10587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 10579,
											"end": 10586,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10576,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10559,
											"end": 10568,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10577,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10534,
											"end": 10587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 10534,
											"end": 10587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10534,
											"end": 10587,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 10534,
											"end": 10587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10524,
											"end": 10587,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10524,
											"end": 10587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10479,
											"end": 10597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10130,
											"end": 10604,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10130,
											"end": 10604,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10130,
											"end": 10604,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10130,
											"end": 10604,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10130,
											"end": 10604,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10130,
											"end": 10604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10610,
											"end": 10790,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 10610,
											"end": 10790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10735,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10655,
											"end": 10656,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10648,
											"end": 10736,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10755,
											"end": 10759,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 10752,
											"end": 10753,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10745,
											"end": 10760,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10776,
											"end": 10777,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10769,
											"end": 10784,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10796,
											"end": 11116,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 10796,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10840,
											"end": 10846,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10877,
											"end": 10878,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10871,
											"end": 10875,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10867,
											"end": 10879,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10857,
											"end": 10879,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10857,
											"end": 10879,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 10925,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10918,
											"end": 10922,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10914,
											"end": 10926,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10945,
											"end": 10963,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10935,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 10935,
											"end": 11016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11001,
											"end": 11005,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 10993,
											"end": 10999,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10989,
											"end": 11006,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10979,
											"end": 11006,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10979,
											"end": 11006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10935,
											"end": 11016,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 10935,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11063,
											"end": 11065,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11055,
											"end": 11061,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11052,
											"end": 11066,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 11032,
											"end": 11050,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11029,
											"end": 11067,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11026,
											"end": 11110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 11026,
											"end": 11110,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11082,
											"end": 11100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 11082,
											"end": 11100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 11082,
											"end": 11100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11082,
											"end": 11100,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 11082,
											"end": 11100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11026,
											"end": 11110,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 11026,
											"end": 11110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10847,
											"end": 11116,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10796,
											"end": 11116,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10796,
											"end": 11116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10796,
											"end": 11116,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10796,
											"end": 11116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11122,
											"end": 11265,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 11122,
											"end": 11265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11179,
											"end": 11184,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11210,
											"end": 11216,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11204,
											"end": 11217,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11195,
											"end": 11217,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11195,
											"end": 11217,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11226,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 11253,
											"end": 11258,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11226,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 11226,
											"end": 11259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11226,
											"end": 11259,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 11226,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11122,
											"end": 11265,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11122,
											"end": 11265,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11122,
											"end": 11265,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11122,
											"end": 11265,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11122,
											"end": 11265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11271,
											"end": 11622,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 11271,
											"end": 11622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11341,
											"end": 11347,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11390,
											"end": 11392,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11378,
											"end": 11387,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11369,
											"end": 11376,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11365,
											"end": 11388,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11361,
											"end": 11393,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 11358,
											"end": 11477,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11358,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 11358,
											"end": 11477,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11396,
											"end": 11475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 11396,
											"end": 11475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 11396,
											"end": 11475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11396,
											"end": 11475,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 11396,
											"end": 11475,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11358,
											"end": 11477,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 11358,
											"end": 11477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11516,
											"end": 11517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11541,
											"end": 11605,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 11597,
											"end": 11604,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11588,
											"end": 11594,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11577,
											"end": 11586,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11573,
											"end": 11595,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11605,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 11541,
											"end": 11605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11605,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 11541,
											"end": 11605,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11531,
											"end": 11605,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11531,
											"end": 11605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11487,
											"end": 11615,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11271,
											"end": 11622,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11271,
											"end": 11622,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11271,
											"end": 11622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11271,
											"end": 11622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11271,
											"end": 11622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11628,
											"end": 11806,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 11628,
											"end": 11806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11768,
											"end": 11798,
											"name": "PUSH",
											"source": 10,
											"value": "6D73672E73656E646572206973206E6F742065746620726F7574657200000000"
										},
										{
											"begin": 11764,
											"end": 11765,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11756,
											"end": 11762,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11752,
											"end": 11766,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11745,
											"end": 11799,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11628,
											"end": 11806,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11628,
											"end": 11806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 12178,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 11812,
											"end": 12178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11954,
											"end": 11957,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11975,
											"end": 12042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 12039,
											"end": 12041,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 12034,
											"end": 12037,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11975,
											"end": 12042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 11975,
											"end": 12042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11975,
											"end": 12042,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 11975,
											"end": 12042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11968,
											"end": 12042,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11968,
											"end": 12042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12051,
											"end": 12144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 12140,
											"end": 12143,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12051,
											"end": 12144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 12051,
											"end": 12144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12051,
											"end": 12144,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 12051,
											"end": 12144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12169,
											"end": 12171,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12164,
											"end": 12167,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12160,
											"end": 12172,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12153,
											"end": 12172,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12153,
											"end": 12172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 12178,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 12178,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 12178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 12178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12184,
											"end": 12603,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 12184,
											"end": 12603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12350,
											"end": 12354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12388,
											"end": 12390,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12377,
											"end": 12386,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12373,
											"end": 12391,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12365,
											"end": 12391,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12365,
											"end": 12391,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12437,
											"end": 12446,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12431,
											"end": 12435,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12427,
											"end": 12447,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12423,
											"end": 12424,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12412,
											"end": 12421,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12408,
											"end": 12425,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12401,
											"end": 12448,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12465,
											"end": 12596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 12591,
											"end": 12595,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12465,
											"end": 12596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 12465,
											"end": 12596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12465,
											"end": 12596,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 12465,
											"end": 12596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12457,
											"end": 12596,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12457,
											"end": 12596,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12184,
											"end": 12603,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12184,
											"end": 12603,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12184,
											"end": 12603,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12184,
											"end": 12603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12609,
											"end": 12694,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 12609,
											"end": 12694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12654,
											"end": 12661,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12683,
											"end": 12688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12672,
											"end": 12688,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12672,
											"end": 12688,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12609,
											"end": 12694,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12609,
											"end": 12694,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12609,
											"end": 12694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12609,
											"end": 12694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12700,
											"end": 12801,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 12700,
											"end": 12801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12736,
											"end": 12743,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12776,
											"end": 12794,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12769,
											"end": 12774,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12765,
											"end": 12795,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12754,
											"end": 12795,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12754,
											"end": 12795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12700,
											"end": 12801,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12700,
											"end": 12801,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12700,
											"end": 12801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12700,
											"end": 12801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12807,
											"end": 12963,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 12807,
											"end": 12963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12864,
											"end": 12873,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12897,
											"end": 12957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 12914,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 12923,
											"end": 12955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 12949,
											"end": 12954,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12923,
											"end": 12955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 12923,
											"end": 12955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12923,
											"end": 12955,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 12923,
											"end": 12955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12914,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 12914,
											"end": 12956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12914,
											"end": 12956,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 12914,
											"end": 12956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12897,
											"end": 12957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 12897,
											"end": 12957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12897,
											"end": 12957,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 12897,
											"end": 12957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12884,
											"end": 12957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12884,
											"end": 12957,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12807,
											"end": 12963,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12807,
											"end": 12963,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12807,
											"end": 12963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12807,
											"end": 12963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12969,
											"end": 13114,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 12969,
											"end": 13114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13063,
											"end": 13107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 13101,
											"end": 13106,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13063,
											"end": 13107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 13063,
											"end": 13107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13063,
											"end": 13107,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 13063,
											"end": 13107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13058,
											"end": 13061,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13051,
											"end": 13108,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12969,
											"end": 13114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12969,
											"end": 13114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12969,
											"end": 13114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13120,
											"end": 13356,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 13120,
											"end": 13356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13224,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13258,
											"end": 13260,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13247,
											"end": 13256,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13243,
											"end": 13261,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13235,
											"end": 13261,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13235,
											"end": 13261,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13271,
											"end": 13349,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 13346,
											"end": 13347,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13335,
											"end": 13344,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13331,
											"end": 13348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13322,
											"end": 13328,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13271,
											"end": 13349,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 13271,
											"end": 13349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13271,
											"end": 13349,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 13271,
											"end": 13349,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13120,
											"end": 13356,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13120,
											"end": 13356,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13120,
											"end": 13356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13120,
											"end": 13356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13120,
											"end": 13356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13362,
											"end": 13535,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 13362,
											"end": 13535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13502,
											"end": 13527,
											"name": "PUSH",
											"source": 10,
											"value": "43616C6C6572206973206E6F7420746865206F776E6572000000000000000000"
										},
										{
											"begin": 13498,
											"end": 13499,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13490,
											"end": 13496,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13479,
											"end": 13528,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13362,
											"end": 13535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13362,
											"end": 13535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13541,
											"end": 13907,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 13541,
											"end": 13907,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13683,
											"end": 13686,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13704,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 13768,
											"end": 13770,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 13763,
											"end": 13766,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13704,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 13704,
											"end": 13771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13704,
											"end": 13771,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 13704,
											"end": 13771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13697,
											"end": 13771,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13697,
											"end": 13771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13780,
											"end": 13873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 13869,
											"end": 13872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13780,
											"end": 13873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 13780,
											"end": 13873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13780,
											"end": 13873,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 13780,
											"end": 13873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13898,
											"end": 13900,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13893,
											"end": 13896,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13889,
											"end": 13901,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13882,
											"end": 13901,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13882,
											"end": 13901,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13541,
											"end": 13907,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13541,
											"end": 13907,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13541,
											"end": 13907,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13541,
											"end": 13907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13913,
											"end": 14332,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 13913,
											"end": 14332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14079,
											"end": 14083,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14117,
											"end": 14119,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14106,
											"end": 14115,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14102,
											"end": 14120,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14094,
											"end": 14120,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14094,
											"end": 14120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14166,
											"end": 14175,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14160,
											"end": 14164,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14156,
											"end": 14176,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14152,
											"end": 14153,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14141,
											"end": 14150,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14137,
											"end": 14154,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14130,
											"end": 14177,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14325,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 14320,
											"end": 14324,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14325,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 14194,
											"end": 14325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14325,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 14194,
											"end": 14325,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14186,
											"end": 14325,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14186,
											"end": 14325,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13913,
											"end": 14332,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13913,
											"end": 14332,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13913,
											"end": 14332,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13913,
											"end": 14332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14338,
											"end": 14780,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 14338,
											"end": 14780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14487,
											"end": 14491,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14525,
											"end": 14527,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 14514,
											"end": 14523,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14502,
											"end": 14528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14502,
											"end": 14528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14538,
											"end": 14609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 14606,
											"end": 14607,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14595,
											"end": 14604,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14591,
											"end": 14608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14582,
											"end": 14588,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14538,
											"end": 14609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 14538,
											"end": 14609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14538,
											"end": 14609,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 14538,
											"end": 14609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14619,
											"end": 14691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 14687,
											"end": 14689,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14676,
											"end": 14685,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14672,
											"end": 14690,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14663,
											"end": 14669,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14619,
											"end": 14691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 14619,
											"end": 14691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14619,
											"end": 14691,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 14619,
											"end": 14691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14701,
											"end": 14773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 14769,
											"end": 14771,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14758,
											"end": 14767,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14745,
											"end": 14751,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14701,
											"end": 14773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 14701,
											"end": 14773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14701,
											"end": 14773,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 14701,
											"end": 14773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14338,
											"end": 14780,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 14338,
											"end": 14780,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14338,
											"end": 14780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14338,
											"end": 14780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14338,
											"end": 14780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14338,
											"end": 14780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14338,
											"end": 14780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14786,
											"end": 14968,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 14786,
											"end": 14968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14926,
											"end": 14960,
											"name": "PUSH",
											"source": 10,
											"value": "4469726563746F72792063616E6E6F74206265207A65726F2061646472657373"
										},
										{
											"begin": 14922,
											"end": 14923,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14914,
											"end": 14920,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14910,
											"end": 14924,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14903,
											"end": 14961,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14786,
											"end": 14968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14786,
											"end": 14968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14974,
											"end": 15340,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 14974,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15116,
											"end": 15119,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15137,
											"end": 15204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 15201,
											"end": 15203,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15196,
											"end": 15199,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15137,
											"end": 15204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 15137,
											"end": 15204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15137,
											"end": 15204,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 15137,
											"end": 15204,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15130,
											"end": 15204,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15130,
											"end": 15204,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15213,
											"end": 15306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 15302,
											"end": 15305,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15213,
											"end": 15306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 15213,
											"end": 15306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15213,
											"end": 15306,
											"name": "tag",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 15213,
											"end": 15306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15331,
											"end": 15333,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15326,
											"end": 15329,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15322,
											"end": 15334,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15315,
											"end": 15334,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15315,
											"end": 15334,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14974,
											"end": 15340,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14974,
											"end": 15340,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14974,
											"end": 15340,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14974,
											"end": 15340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15346,
											"end": 15765,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 15346,
											"end": 15765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15512,
											"end": 15516,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15550,
											"end": 15552,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15539,
											"end": 15548,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15535,
											"end": 15553,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15527,
											"end": 15553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15527,
											"end": 15553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15599,
											"end": 15608,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15593,
											"end": 15597,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15589,
											"end": 15609,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15585,
											"end": 15586,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15574,
											"end": 15583,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15570,
											"end": 15587,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15563,
											"end": 15610,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15627,
											"end": 15758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 15753,
											"end": 15757,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15627,
											"end": 15758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 15627,
											"end": 15758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15627,
											"end": 15758,
											"name": "tag",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 15627,
											"end": 15758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15619,
											"end": 15758,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15619,
											"end": 15758,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15346,
											"end": 15765,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15346,
											"end": 15765,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15346,
											"end": 15765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15346,
											"end": 15765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15771,
											"end": 15949,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 15771,
											"end": 15949,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15911,
											"end": 15941,
											"name": "PUSH",
											"source": 10,
											"value": "4469726563746F7279206D757374206265206120636F6E747261637400000000"
										},
										{
											"begin": 15907,
											"end": 15908,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15899,
											"end": 15905,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15895,
											"end": 15909,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15888,
											"end": 15942,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15771,
											"end": 15949,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15771,
											"end": 15949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15955,
											"end": 16321,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 15955,
											"end": 16321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16097,
											"end": 16100,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16118,
											"end": 16185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 16182,
											"end": 16184,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 16177,
											"end": 16180,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16118,
											"end": 16185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 16118,
											"end": 16185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16118,
											"end": 16185,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 16118,
											"end": 16185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16111,
											"end": 16185,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16111,
											"end": 16185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16194,
											"end": 16287,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 16283,
											"end": 16286,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16194,
											"end": 16287,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 16194,
											"end": 16287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16194,
											"end": 16287,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 16194,
											"end": 16287,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16312,
											"end": 16314,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16307,
											"end": 16310,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16303,
											"end": 16315,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16296,
											"end": 16315,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16296,
											"end": 16315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15955,
											"end": 16321,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15955,
											"end": 16321,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15955,
											"end": 16321,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15955,
											"end": 16321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16327,
											"end": 16746,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 16327,
											"end": 16746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16493,
											"end": 16497,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16531,
											"end": 16533,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16520,
											"end": 16529,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16516,
											"end": 16534,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16508,
											"end": 16534,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16508,
											"end": 16534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16580,
											"end": 16589,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16574,
											"end": 16578,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16570,
											"end": 16590,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16566,
											"end": 16567,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16555,
											"end": 16564,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16551,
											"end": 16568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16544,
											"end": 16591,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16608,
											"end": 16739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 16734,
											"end": 16738,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16608,
											"end": 16739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 16608,
											"end": 16739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16608,
											"end": 16739,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 16608,
											"end": 16739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16600,
											"end": 16739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16600,
											"end": 16739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16327,
											"end": 16746,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16327,
											"end": 16746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16327,
											"end": 16746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16327,
											"end": 16746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16752,
											"end": 16983,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 16752,
											"end": 16983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16892,
											"end": 16926,
											"name": "PUSH",
											"source": 10,
											"value": "4469726563746F7279206164647265737320646F6573206E6F7420696D706C65"
										},
										{
											"begin": 16888,
											"end": 16889,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16880,
											"end": 16886,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16876,
											"end": 16890,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16869,
											"end": 16927,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16961,
											"end": 16975,
											"name": "PUSH",
											"source": 10,
											"value": "6D656E74206F776E657228290000000000000000000000000000000000000000"
										},
										{
											"begin": 16956,
											"end": 16958,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16948,
											"end": 16954,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16944,
											"end": 16959,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16937,
											"end": 16976,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16752,
											"end": 16983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16752,
											"end": 16983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16989,
											"end": 17355,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 16989,
											"end": 17355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17131,
											"end": 17134,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17152,
											"end": 17219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 17216,
											"end": 17218,
											"name": "PUSH",
											"source": 10,
											"value": "2C"
										},
										{
											"begin": 17211,
											"end": 17214,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17152,
											"end": 17219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 17152,
											"end": 17219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17152,
											"end": 17219,
											"name": "tag",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 17152,
											"end": 17219,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17145,
											"end": 17219,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17145,
											"end": 17219,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17228,
											"end": 17321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 17317,
											"end": 17320,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17228,
											"end": 17321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 17228,
											"end": 17321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17228,
											"end": 17321,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 17228,
											"end": 17321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17346,
											"end": 17348,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17341,
											"end": 17344,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17337,
											"end": 17349,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17330,
											"end": 17349,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17330,
											"end": 17349,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16989,
											"end": 17355,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16989,
											"end": 17355,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16989,
											"end": 17355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16989,
											"end": 17355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17361,
											"end": 17780,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 17361,
											"end": 17780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17527,
											"end": 17531,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17565,
											"end": 17567,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17554,
											"end": 17563,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17550,
											"end": 17568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17542,
											"end": 17568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17542,
											"end": 17568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17614,
											"end": 17623,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17608,
											"end": 17612,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17604,
											"end": 17624,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17600,
											"end": 17601,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17589,
											"end": 17598,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17585,
											"end": 17602,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17578,
											"end": 17625,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17642,
											"end": 17773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 17768,
											"end": 17772,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17642,
											"end": 17773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 17642,
											"end": 17773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17642,
											"end": 17773,
											"name": "tag",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 17642,
											"end": 17773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17634,
											"end": 17773,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17634,
											"end": 17773,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17361,
											"end": 17780,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17361,
											"end": 17780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17361,
											"end": 17780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17361,
											"end": 17780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17786,
											"end": 18006,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 17786,
											"end": 18006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17926,
											"end": 17960,
											"name": "PUSH",
											"source": 10,
											"value": "457466546F6B656E3A206576656E747320636F6E7472616374206E6F74207365"
										},
										{
											"begin": 17922,
											"end": 17923,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17914,
											"end": 17920,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17910,
											"end": 17924,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17903,
											"end": 17961,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17995,
											"end": 17998,
											"name": "PUSH",
											"source": 10,
											"value": "7400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17990,
											"end": 17992,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17982,
											"end": 17988,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17978,
											"end": 17993,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17971,
											"end": 17999,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17786,
											"end": 18006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17786,
											"end": 18006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18012,
											"end": 18378,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 18012,
											"end": 18378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18154,
											"end": 18157,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18175,
											"end": 18242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 18239,
											"end": 18241,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 18234,
											"end": 18237,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18175,
											"end": 18242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 18175,
											"end": 18242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18175,
											"end": 18242,
											"name": "tag",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 18175,
											"end": 18242,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18168,
											"end": 18242,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18168,
											"end": 18242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18251,
											"end": 18344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 18340,
											"end": 18343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18251,
											"end": 18344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 18251,
											"end": 18344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18251,
											"end": 18344,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 18251,
											"end": 18344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18369,
											"end": 18371,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18364,
											"end": 18367,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18360,
											"end": 18372,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18353,
											"end": 18372,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18353,
											"end": 18372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18012,
											"end": 18378,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18012,
											"end": 18378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18012,
											"end": 18378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18012,
											"end": 18378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18384,
											"end": 18803,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 18384,
											"end": 18803,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18550,
											"end": 18554,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18588,
											"end": 18590,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18577,
											"end": 18586,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18573,
											"end": 18591,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18565,
											"end": 18591,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18565,
											"end": 18591,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18637,
											"end": 18646,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18631,
											"end": 18635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18627,
											"end": 18647,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18623,
											"end": 18624,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18612,
											"end": 18621,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18608,
											"end": 18625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18601,
											"end": 18648,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18665,
											"end": 18796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 18791,
											"end": 18795,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18665,
											"end": 18796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 18665,
											"end": 18796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18665,
											"end": 18796,
											"name": "tag",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 18665,
											"end": 18796,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18657,
											"end": 18796,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18657,
											"end": 18796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18384,
											"end": 18803,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18384,
											"end": 18803,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18384,
											"end": 18803,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18384,
											"end": 18803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18809,
											"end": 19362,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 18809,
											"end": 19362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18986,
											"end": 18990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19024,
											"end": 19027,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 19013,
											"end": 19022,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19009,
											"end": 19028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19001,
											"end": 19028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19001,
											"end": 19028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19038,
											"end": 19109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 19106,
											"end": 19107,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19095,
											"end": 19104,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19091,
											"end": 19108,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19082,
											"end": 19088,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 19038,
											"end": 19109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 19038,
											"end": 19109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19038,
											"end": 19109,
											"name": "tag",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 19038,
											"end": 19109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19119,
											"end": 19191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 19187,
											"end": 19189,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19176,
											"end": 19185,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19172,
											"end": 19190,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19163,
											"end": 19169,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 19119,
											"end": 19191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 19119,
											"end": 19191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19119,
											"end": 19191,
											"name": "tag",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 19119,
											"end": 19191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19201,
											"end": 19273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 19269,
											"end": 19271,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19258,
											"end": 19267,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19254,
											"end": 19272,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19245,
											"end": 19251,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 19201,
											"end": 19273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 19201,
											"end": 19273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19201,
											"end": 19273,
											"name": "tag",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 19201,
											"end": 19273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19283,
											"end": 19355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 19351,
											"end": 19353,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 19340,
											"end": 19349,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19336,
											"end": 19354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19327,
											"end": 19333,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19283,
											"end": 19355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 19283,
											"end": 19355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19283,
											"end": 19355,
											"name": "tag",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 19283,
											"end": 19355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18809,
											"end": 19362,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 18809,
											"end": 19362,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 18809,
											"end": 19362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18809,
											"end": 19362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18809,
											"end": 19362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18809,
											"end": 19362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18809,
											"end": 19362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18809,
											"end": 19362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19368,
											"end": 19509,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 19368,
											"end": 19509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19417,
											"end": 19421,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19440,
											"end": 19443,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19432,
											"end": 19443,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19432,
											"end": 19443,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19463,
											"end": 19466,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19460,
											"end": 19461,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19453,
											"end": 19467,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19497,
											"end": 19501,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19494,
											"end": 19495,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19484,
											"end": 19502,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 19476,
											"end": 19502,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19476,
											"end": 19502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19368,
											"end": 19509,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19368,
											"end": 19509,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19368,
											"end": 19509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19368,
											"end": 19509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19515,
											"end": 19608,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 19515,
											"end": 19608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19552,
											"end": 19558,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19599,
											"end": 19601,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19594,
											"end": 19596,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 19587,
											"end": 19592,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19583,
											"end": 19597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19579,
											"end": 19602,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 19569,
											"end": 19602,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19569,
											"end": 19602,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19515,
											"end": 19608,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19515,
											"end": 19608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19515,
											"end": 19608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19515,
											"end": 19608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19614,
											"end": 19721,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 19614,
											"end": 19721,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19658,
											"end": 19666,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19708,
											"end": 19713,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19702,
											"end": 19706,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19698,
											"end": 19714,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 19677,
											"end": 19714,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19677,
											"end": 19714,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19614,
											"end": 19721,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19614,
											"end": 19721,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19614,
											"end": 19721,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19614,
											"end": 19721,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19614,
											"end": 19721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19727,
											"end": 20120,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 19727,
											"end": 20120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19796,
											"end": 19802,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19846,
											"end": 19847,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 19834,
											"end": 19844,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19830,
											"end": 19848,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 19869,
											"end": 19966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 19899,
											"end": 19965,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19888,
											"end": 19897,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19869,
											"end": 19966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 19869,
											"end": 19966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19869,
											"end": 19966,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 19869,
											"end": 19966,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19987,
											"end": 20026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 20017,
											"end": 20025,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 20006,
											"end": 20015,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19987,
											"end": 20026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 19987,
											"end": 20026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19987,
											"end": 20026,
											"name": "tag",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 19987,
											"end": 20026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19975,
											"end": 20026,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 19975,
											"end": 20026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20059,
											"end": 20063,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 20055,
											"end": 20064,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 20048,
											"end": 20053,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20044,
											"end": 20065,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 20035,
											"end": 20065,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 20035,
											"end": 20065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20108,
											"end": 20112,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 20098,
											"end": 20106,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 20094,
											"end": 20113,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 20087,
											"end": 20092,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20084,
											"end": 20114,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 20074,
											"end": 20114,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20074,
											"end": 20114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19803,
											"end": 20120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19803,
											"end": 20120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19727,
											"end": 20120,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 19727,
											"end": 20120,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19727,
											"end": 20120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19727,
											"end": 20120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19727,
											"end": 20120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19727,
											"end": 20120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20126,
											"end": 20268,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 20126,
											"end": 20268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20176,
											"end": 20185,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20209,
											"end": 20262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 20227,
											"end": 20261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 20236,
											"end": 20260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 20254,
											"end": 20259,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20236,
											"end": 20260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 20236,
											"end": 20260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20236,
											"end": 20260,
											"name": "tag",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 20236,
											"end": 20260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20227,
											"end": 20261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 20227,
											"end": 20261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20227,
											"end": 20261,
											"name": "tag",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 20227,
											"end": 20261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20209,
											"end": 20262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 20209,
											"end": 20262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20209,
											"end": 20262,
											"name": "tag",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 20209,
											"end": 20262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20196,
											"end": 20262,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20196,
											"end": 20262,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20126,
											"end": 20268,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20126,
											"end": 20268,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20126,
											"end": 20268,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20126,
											"end": 20268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20274,
											"end": 20349,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 20274,
											"end": 20349,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20317,
											"end": 20320,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20338,
											"end": 20343,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20331,
											"end": 20343,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20331,
											"end": 20343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20274,
											"end": 20349,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20274,
											"end": 20349,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20274,
											"end": 20349,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20274,
											"end": 20349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20355,
											"end": 20624,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 20355,
											"end": 20624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20465,
											"end": 20504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 20496,
											"end": 20503,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20465,
											"end": 20504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 20465,
											"end": 20504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20465,
											"end": 20504,
											"name": "tag",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 20465,
											"end": 20504,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20526,
											"end": 20617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 20575,
											"end": 20616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 20599,
											"end": 20615,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20575,
											"end": 20616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 20575,
											"end": 20616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20575,
											"end": 20616,
											"name": "tag",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 20575,
											"end": 20616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20567,
											"end": 20573,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20560,
											"end": 20564,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20554,
											"end": 20565,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 20526,
											"end": 20617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 20526,
											"end": 20617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20526,
											"end": 20617,
											"name": "tag",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 20526,
											"end": 20617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20520,
											"end": 20524,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20513,
											"end": 20618,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 20431,
											"end": 20624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20355,
											"end": 20624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20355,
											"end": 20624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20355,
											"end": 20624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20355,
											"end": 20624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20630,
											"end": 20703,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 20630,
											"end": 20703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20675,
											"end": 20678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20696,
											"end": 20697,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20689,
											"end": 20697,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20689,
											"end": 20697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20630,
											"end": 20703,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20630,
											"end": 20703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20709,
											"end": 20898,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 20709,
											"end": 20898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20786,
											"end": 20818,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 20786,
											"end": 20818,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 20786,
											"end": 20818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20786,
											"end": 20818,
											"name": "tag",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 20786,
											"end": 20818,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20827,
											"end": 20892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 20885,
											"end": 20891,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20877,
											"end": 20883,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20871,
											"end": 20875,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20827,
											"end": 20892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 20827,
											"end": 20892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20827,
											"end": 20892,
											"name": "tag",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 20827,
											"end": 20892,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20762,
											"end": 20898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20709,
											"end": 20898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20709,
											"end": 20898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20709,
											"end": 20898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20904,
											"end": 21090,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 20904,
											"end": 21090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20964,
											"end": 21084,
											"name": "tag",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 20964,
											"end": 21084,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20981,
											"end": 20984,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20974,
											"end": 20979,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20971,
											"end": 20985,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 20964,
											"end": 21084,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20964,
											"end": 21084,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 20964,
											"end": 21084,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21035,
											"end": 21074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 21072,
											"end": 21073,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21065,
											"end": 21070,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21035,
											"end": 21074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 21035,
											"end": 21074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21035,
											"end": 21074,
											"name": "tag",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 21035,
											"end": 21074,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21008,
											"end": 21009,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 21001,
											"end": 21006,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20997,
											"end": 21010,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20988,
											"end": 21010,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20988,
											"end": 21010,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20964,
											"end": 21084,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 20964,
											"end": 21084,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20964,
											"end": 21084,
											"name": "tag",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 20964,
											"end": 21084,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20904,
											"end": 21090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20904,
											"end": 21090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20904,
											"end": 21090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21096,
											"end": 21639,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 21096,
											"end": 21639,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21197,
											"end": 21199,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 21192,
											"end": 21195,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21189,
											"end": 21200,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 21186,
											"end": 21632,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 21186,
											"end": 21632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 21186,
											"end": 21632,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21231,
											"end": 21269,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 21263,
											"end": 21268,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21231,
											"end": 21269,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 21231,
											"end": 21269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21231,
											"end": 21269,
											"name": "tag",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 21231,
											"end": 21269,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21315,
											"end": 21344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 21333,
											"end": 21343,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21315,
											"end": 21344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 21315,
											"end": 21344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21315,
											"end": 21344,
											"name": "tag",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 21315,
											"end": 21344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21305,
											"end": 21313,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21301,
											"end": 21345,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21498,
											"end": 21500,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21486,
											"end": 21496,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21483,
											"end": 21501,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 21480,
											"end": 21529,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 21480,
											"end": 21529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 21480,
											"end": 21529,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21519,
											"end": 21527,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21504,
											"end": 21527,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21504,
											"end": 21527,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21480,
											"end": 21529,
											"name": "tag",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 21480,
											"end": 21529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21542,
											"end": 21622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 21598,
											"end": 21620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 21616,
											"end": 21619,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21598,
											"end": 21620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 21598,
											"end": 21620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21598,
											"end": 21620,
											"name": "tag",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 21598,
											"end": 21620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21588,
											"end": 21596,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21584,
											"end": 21621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21571,
											"end": 21582,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21542,
											"end": 21622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 21542,
											"end": 21622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21542,
											"end": 21622,
											"name": "tag",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 21542,
											"end": 21622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21201,
											"end": 21632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21201,
											"end": 21632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21186,
											"end": 21632,
											"name": "tag",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 21186,
											"end": 21632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21096,
											"end": 21639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21096,
											"end": 21639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21096,
											"end": 21639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21096,
											"end": 21639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21645,
											"end": 21762,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 21645,
											"end": 21762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21699,
											"end": 21707,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21749,
											"end": 21754,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21743,
											"end": 21747,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21739,
											"end": 21755,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 21718,
											"end": 21755,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21718,
											"end": 21755,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21645,
											"end": 21762,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21645,
											"end": 21762,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21645,
											"end": 21762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21645,
											"end": 21762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21645,
											"end": 21762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21768,
											"end": 21937,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 21768,
											"end": 21937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21812,
											"end": 21818,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21845,
											"end": 21896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 21893,
											"end": 21894,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21889,
											"end": 21895,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 21881,
											"end": 21886,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21878,
											"end": 21879,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 21874,
											"end": 21887,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 21845,
											"end": 21896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 21845,
											"end": 21896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21845,
											"end": 21896,
											"name": "tag",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 21845,
											"end": 21896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21841,
											"end": 21897,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 21926,
											"end": 21930,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 21920,
											"end": 21924,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21916,
											"end": 21931,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 21906,
											"end": 21931,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21906,
											"end": 21931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21819,
											"end": 21937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21768,
											"end": 21937,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21768,
											"end": 21937,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21768,
											"end": 21937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21768,
											"end": 21937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21768,
											"end": 21937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21942,
											"end": 22237,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 21942,
											"end": 22237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22018,
											"end": 22022,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22164,
											"end": 22193,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 22189,
											"end": 22192,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22183,
											"end": 22187,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22164,
											"end": 22193,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 22164,
											"end": 22193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22164,
											"end": 22193,
											"name": "tag",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 22164,
											"end": 22193,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22156,
											"end": 22193,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22156,
											"end": 22193,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22226,
											"end": 22229,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22223,
											"end": 22224,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 22219,
											"end": 22230,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 22213,
											"end": 22217,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22210,
											"end": 22231,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 22202,
											"end": 22231,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22202,
											"end": 22231,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21942,
											"end": 22237,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21942,
											"end": 22237,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21942,
											"end": 22237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21942,
											"end": 22237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21942,
											"end": 22237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22242,
											"end": 23637,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 22242,
											"end": 23637,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22359,
											"end": 22396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 22392,
											"end": 22395,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22359,
											"end": 22396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 22359,
											"end": 22396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22359,
											"end": 22396,
											"name": "tag",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 22359,
											"end": 22396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22461,
											"end": 22479,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22453,
											"end": 22459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22450,
											"end": 22480,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 22447,
											"end": 22503,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 22447,
											"end": 22503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 22447,
											"end": 22503,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22483,
											"end": 22501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 22483,
											"end": 22501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 22483,
											"end": 22501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22483,
											"end": 22501,
											"name": "tag",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 22483,
											"end": 22501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22447,
											"end": 22503,
											"name": "tag",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 22447,
											"end": 22503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22527,
											"end": 22565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 22559,
											"end": 22563,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22553,
											"end": 22564,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 22527,
											"end": 22565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 22527,
											"end": 22565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22527,
											"end": 22565,
											"name": "tag",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 22527,
											"end": 22565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22612,
											"end": 22679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 22672,
											"end": 22678,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22664,
											"end": 22670,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22658,
											"end": 22662,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 22612,
											"end": 22679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 22612,
											"end": 22679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22612,
											"end": 22679,
											"name": "tag",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 22612,
											"end": 22679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22706,
											"end": 22707,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22730,
											"end": 22734,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22717,
											"end": 22734,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22717,
											"end": 22734,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22762,
											"end": 22764,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 22754,
											"end": 22760,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22751,
											"end": 22765,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 22779,
											"end": 22780,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 22774,
											"end": 23392,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22774,
											"end": 23392,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 22774,
											"end": 23392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 22774,
											"end": 23392,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 23436,
											"end": 23437,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23453,
											"end": 23459,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23450,
											"end": 23527,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 23450,
											"end": 23527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 23450,
											"end": 23527,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 23502,
											"end": 23511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23497,
											"end": 23500,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 23493,
											"end": 23512,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23487,
											"end": 23513,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 23478,
											"end": 23513,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23478,
											"end": 23513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23450,
											"end": 23527,
											"name": "tag",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 23450,
											"end": 23527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23553,
											"end": 23620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 23613,
											"end": 23619,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 23606,
											"end": 23611,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23553,
											"end": 23620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 23553,
											"end": 23620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23553,
											"end": 23620,
											"name": "tag",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 23553,
											"end": 23620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23547,
											"end": 23551,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 23540,
											"end": 23621,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 23409,
											"end": 23631,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22744,
											"end": 23631,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 22744,
											"end": 23631,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22774,
											"end": 23392,
											"name": "tag",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 22774,
											"end": 23392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22826,
											"end": 22830,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 22822,
											"end": 22831,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 22814,
											"end": 22820,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22810,
											"end": 22832,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 22860,
											"end": 22897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 22892,
											"end": 22896,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 22860,
											"end": 22897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 22860,
											"end": 22897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22860,
											"end": 22897,
											"name": "tag",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 22860,
											"end": 22897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22919,
											"end": 22920,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22933,
											"end": 23141,
											"name": "tag",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 22933,
											"end": 23141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22947,
											"end": 22954,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22944,
											"end": 22945,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22941,
											"end": 22955,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 22933,
											"end": 23141,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 22933,
											"end": 23141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 22933,
											"end": 23141,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 23026,
											"end": 23035,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23021,
											"end": 23024,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 23017,
											"end": 23036,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23011,
											"end": 23037,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 23003,
											"end": 23009,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22996,
											"end": 23038,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 23077,
											"end": 23078,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 23069,
											"end": 23075,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23065,
											"end": 23079,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23055,
											"end": 23079,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23055,
											"end": 23079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23124,
											"end": 23126,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23113,
											"end": 23122,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 23109,
											"end": 23127,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23096,
											"end": 23127,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 23096,
											"end": 23127,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22970,
											"end": 22974,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22967,
											"end": 22968,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22963,
											"end": 22975,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22958,
											"end": 22975,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22958,
											"end": 22975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22933,
											"end": 23141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 22933,
											"end": 23141,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22933,
											"end": 23141,
											"name": "tag",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 22933,
											"end": 23141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23169,
											"end": 23175,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 23160,
											"end": 23167,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23157,
											"end": 23176,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 23154,
											"end": 23333,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 23154,
											"end": 23333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 23154,
											"end": 23333,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 23227,
											"end": 23236,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23222,
											"end": 23225,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 23218,
											"end": 23237,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23212,
											"end": 23238,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 23270,
											"end": 23318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 23312,
											"end": 23316,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 23304,
											"end": 23310,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 23300,
											"end": 23317,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 23289,
											"end": 23298,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23270,
											"end": 23318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 23270,
											"end": 23318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23270,
											"end": 23318,
											"name": "tag",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 23270,
											"end": 23318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23262,
											"end": 23268,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23255,
											"end": 23319,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 23177,
											"end": 23333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23154,
											"end": 23333,
											"name": "tag",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 23154,
											"end": 23333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23379,
											"end": 23380,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 23375,
											"end": 23376,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 23367,
											"end": 23373,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 23363,
											"end": 23377,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 23359,
											"end": 23381,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23353,
											"end": 23357,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 23346,
											"end": 23382,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 22781,
											"end": 23392,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22781,
											"end": 23392,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22781,
											"end": 23392,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22744,
											"end": 23631,
											"name": "tag",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 22744,
											"end": 23631,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22744,
											"end": 23631,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22334,
											"end": 23637,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22334,
											"end": 23637,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22334,
											"end": 23637,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22242,
											"end": 23637,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22242,
											"end": 23637,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22242,
											"end": 23637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23643,
											"end": 23823,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 23643,
											"end": 23823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23691,
											"end": 23768,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23688,
											"end": 23689,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23681,
											"end": 23769,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23788,
											"end": 23792,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 23785,
											"end": 23786,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 23778,
											"end": 23793,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23812,
											"end": 23816,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 23809,
											"end": 23810,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23802,
											"end": 23817,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 23829,
											"end": 24020,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 23829,
											"end": 24020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23869,
											"end": 23872,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23888,
											"end": 23908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 23906,
											"end": 23907,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23888,
											"end": 23908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 23888,
											"end": 23908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23888,
											"end": 23908,
											"name": "tag",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 23888,
											"end": 23908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23883,
											"end": 23908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23883,
											"end": 23908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23922,
											"end": 23942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 23940,
											"end": 23941,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23922,
											"end": 23942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 23922,
											"end": 23942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23922,
											"end": 23942,
											"name": "tag",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 23922,
											"end": 23942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23917,
											"end": 23942,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 23917,
											"end": 23942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23965,
											"end": 23966,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23962,
											"end": 23963,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23958,
											"end": 23967,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23951,
											"end": 23967,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23951,
											"end": 23967,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23986,
											"end": 23989,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 23983,
											"end": 23984,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23980,
											"end": 23990,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 23977,
											"end": 24013,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 23977,
											"end": 24013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 23977,
											"end": 24013,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 23993,
											"end": 24011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 23993,
											"end": 24011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 23993,
											"end": 24011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23993,
											"end": 24011,
											"name": "tag",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 23993,
											"end": 24011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23977,
											"end": 24013,
											"name": "tag",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 23977,
											"end": 24013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23829,
											"end": 24020,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 23829,
											"end": 24020,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23829,
											"end": 24020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23829,
											"end": 24020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23829,
											"end": 24020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"hopium/common/interface/imDirectory.sol",
								"hopium/etf/interface/imEtfRouter.sol",
								"hopium/etf/interface/imEtfTokenEvents.sol",
								"hopium/etf/main/etf-token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Directory()": "658a847a",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"changeDirectoryAddress(address)": "ba4c7be1",
							"decimals()": "313ce567",
							"etfId()": "cfa36f3d",
							"fetchFromDirectory(string)": "27262618",
							"initialize(uint256,string,string,address)": "6ebd362c",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_directory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Directory\",\"outputs\":[{\"internalType\":\"contract IDirectory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_directory\",\"type\":\"address\"}],\"name\":\"changeDirectoryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"etfId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"fetchFromDirectory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"etfId_\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"directory_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Uses OZ *Upgradeable* ERC20 so name/symbol can be set at runtime.      Access control (onlyEtfRouter/onlyOwner) resolves via ImDirectory.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"The logic/implementation constructor runs once when you deploy the master.      Clones DO NOT run constructors, they use initialize().\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address,uint256)\":{\"notice\":\"Router-controlled burn\"},\"initialize(uint256,string,string,address)\":{\"notice\":\"One-time initializer for clones (constructors don't run for proxies)\"},\"mint(address,uint256)\":{\"notice\":\"Router-controlled mint\"}},\"notice\":\"Cloneable ETF ERC20 with per-clone name/symbol via initialize()\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/etf/main/etf-token.sol\":\"EtfToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xfcd09c2aa8cc3f93e12545454359f901965db312bc03833daf84de0c03e05022\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07701188648d2ab83dab1037808298585264559bddf243bd8929037adcb984b0\",\"dweb:/ipfs/QmavmG5REdHCAWsZ8Cag26BCxAq27DRKGxr3uBg5ZYxQ51\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]},\"hopium/etf/interface/imEtfRouter.sol\":{\"keccak256\":\"0x9ef2dafe8d3bf78ea2372470cd04070489e0d2324d91a8fbc7c3867a8eabc9f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a558b98b69ec2677eb516606b18553fb1ea77376d5db15cef8ef4283c7b7ad95\",\"dweb:/ipfs/Qmdey7B1K99bf8XbQ3NAS1RMntRkziFFitrBQQpzM2hqiz\"]},\"hopium/etf/interface/imEtfTokenEvents.sol\":{\"keccak256\":\"0x4e2b9c193cccc609fe1736ec8c10d9fe1c5913a734a2e72134f23f8125cc979d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72ff8a846020a7276c16846085a86ebfd8a075568d6c6f55366af086dc49f89c\",\"dweb:/ipfs/QmRsg6jgCp4MpHCGCGYYVh638U7C9mSYJidjHKryLgZswF\"]},\"hopium/etf/main/etf-token.sol\":{\"keccak256\":\"0x0fecdd1cb89b2ed08ae3bf1c86c49c7e1fed55e1a1e00af8a5a01550961f3a20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d434dbaede9c5f5e7c64054d3d0dc1be18890274e9bb784443e4472ee5f3e93\",\"dweb:/ipfs/QmRj7N2h8AdPBsgbFFhH74xqmqFo2rUvWDC4c2q7HQdhF1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1190,
								"contract": "hopium/etf/main/etf-token.sol:EtfToken",
								"label": "Directory",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDirectory)1187"
							},
							{
								"astId": 1383,
								"contract": "hopium/etf/main/etf-token.sol:EtfToken",
								"label": "_initialized",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1385,
								"contract": "hopium/etf/main/etf-token.sol:EtfToken",
								"label": "etfId",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IDirectory)1187": {
								"encoding": "inplace",
								"label": "contract IDirectory",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(address,uint256)": {
								"notice": "Router-controlled burn"
							},
							"initialize(uint256,string,string,address)": {
								"notice": "One-time initializer for clones (constructors don't run for proxies)"
							},
							"mint(address,uint256)": {
								"notice": "Router-controlled mint"
							}
						},
						"notice": "Cloneable ETF ERC20 with per-clone name/symbol via initialize()",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							267
						]
					},
					"id": 268,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 267,
							"linearizedBaseContracts": [
								267
							],
							"name": "Initializable",
							"nameLocation": "2367:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:0",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2813:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 5,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2950:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 8,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:0",
									"nodeType": "StructDefinition",
									"scope": 267,
									"src": "2685:290:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 13,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 267,
									"src": "3098:115:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 11,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:0",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 16,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:0"
									},
									"src": "3285:30:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:0",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 19,
									"name": "NotInitializing",
									"nameLocation": "3389:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:0"
									},
									"src": "3383:24:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 24,
									"name": "Initialized",
									"nameLocation": "3514:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "3526:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 21,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:0"
									},
									"src": "3508:34:0"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4092:1079:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4158:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 28,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 27,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "4158:20:0"
															},
															"referencedDeclaration": 10,
															"src": "4158:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 32,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 30,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "4191:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:0"
											},
											{
												"assignments": [
													34
												],
												"declarations": [
													{
														"constant": false,
														"id": 34,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4279:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 33,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 38,
												"initialValue": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:0",
													"subExpression": {
														"expression": {
															"id": 35,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4302:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "4302:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:0"
											},
											{
												"assignments": [
													40
												],
												"declarations": [
													{
														"constant": false,
														"id": 40,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4327:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 39,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": {
													"expression": {
														"id": 41,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "4348:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "4348:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:0"
											},
											{
												"assignments": [
													45
												],
												"declarations": [
													{
														"constant": false,
														"id": 45,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4709:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4704:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 44,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4704:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 51,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 46,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4724:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4724:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 49,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "4744:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4724:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4704:54:0"
											},
											{
												"assignments": [
													53
												],
												"declarations": [
													{
														"constant": false,
														"id": 53,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4773:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4768:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 52,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4768:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 66,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 54,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4788:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4803:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4788:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 59,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4816:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$267",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$267",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4808:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 57,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4808:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4808:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4822:4:0",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4808:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4808:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4808:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4788:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4768:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4853:13:0",
														"subExpression": {
															"id": 67,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4854:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4870:13:0",
														"subExpression": {
															"id": 69,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "4871:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4853:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "IfStatement",
												"src": "4849:91:0",
												"trueBody": {
													"id": 75,
													"nodeType": "Block",
													"src": "4885:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 72,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "4906:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4906:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 74,
															"nodeType": "RevertStatement",
															"src": "4899:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 77,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4949:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4951:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "4949:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4949:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "4949:18:0"
											},
											{
												"condition": {
													"id": 83,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "4981:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 91,
												"nodeType": "IfStatement",
												"src": "4977:67:0",
												"trueBody": {
													"id": 90,
													"nodeType": "Block",
													"src": "4997:47:0",
													"statements": [
														{
															"expression": {
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 84,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5011:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 86,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5013:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5011:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5029:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5011:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 89,
															"nodeType": "ExpressionStatement",
															"src": "5011:22:0"
														}
													]
												}
											},
											{
												"id": 92,
												"nodeType": "PlaceholderStatement",
												"src": "5053:1:0"
											},
											{
												"condition": {
													"id": 93,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "5068:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 105,
												"nodeType": "IfStatement",
												"src": "5064:101:0",
												"trueBody": {
													"id": 104,
													"nodeType": "Block",
													"src": "5084:81:0",
													"statements": [
														{
															"expression": {
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 94,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5098:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 96,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5100:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5098:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5116:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5098:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 99,
															"nodeType": "ExpressionStatement",
															"src": "5098:23:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 100,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "5140:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5140:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 103,
															"nodeType": "EmitStatement",
															"src": "5135:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 107,
									"name": "initializer",
									"nameLocation": "4078:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:0"
									},
									"src": "4069:1102:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "6289:392:0",
										"statements": [
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6384:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "6355:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 113,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 112,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6355:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "6355:20:0"
															},
															"referencedDeclaration": 10,
															"src": "6355:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 117,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "6388:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 118,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6429:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6431:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6429:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 120,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "6448:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:12:0",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 6,
															"src": "6448:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 122,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6466:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6448:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6429:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "6425:105:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "6475:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 125,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "6496:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "6489:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 130,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6539:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6541:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "6539:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 133,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "6556:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6539:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "6539:24:0"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 136,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6573:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6575:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6573:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6591:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6573:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "6573:22:0"
											},
											{
												"id": 142,
												"nodeType": "PlaceholderStatement",
												"src": "6605:1:0"
											},
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 143,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6616:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6618:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6616:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6634:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6616:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "6616:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 150,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6666:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 149,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "6654:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "EmitStatement",
												"src": "6649:25:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "5177:1068:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 154,
									"name": "reinitializer",
									"nameLocation": "6259:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6280:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "6273:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 109,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:16:0"
									},
									"src": "6250:431:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "6919:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 157,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "6929:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6929:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "6929:20:0"
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "6959:1:0"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "6687:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 162,
									"name": "onlyInitializing",
									"nameLocation": "6900:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:2:0"
									},
									"src": "6891:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "7134:89:0",
										"statements": [
											{
												"condition": {
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7148:18:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 166,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "7149:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 173,
												"nodeType": "IfStatement",
												"src": "7144:73:0",
												"trueBody": {
													"id": 172,
													"nodeType": "Block",
													"src": "7168:49:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "7189:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7189:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 171,
															"nodeType": "RevertStatement",
															"src": "7182:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "6973:104:0",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7091:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7109:2:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:0"
									},
									"scope": 267,
									"src": "7082:141:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "7758:373:0",
										"statements": [
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7853:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "7824:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 180,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 179,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7824:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "7824:20:0"
															},
															"referencedDeclaration": 10,
															"src": "7824:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 182,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "7857:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7857:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7824:59:0"
											},
											{
												"condition": {
													"expression": {
														"id": 185,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "7898:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7900:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "7898:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "IfStatement",
												"src": "7894:76:0",
												"trueBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "7915:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 187,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "7936:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7936:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 189,
															"nodeType": "RevertStatement",
															"src": "7929:30:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 192,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "7983:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7985:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "7983:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8006:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 195,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8006:6:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 194,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8001:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8001:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8014:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8001:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7983:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 219,
												"nodeType": "IfStatement",
												"src": "7979:146:0",
												"trueBody": {
													"id": 218,
													"nodeType": "Block",
													"src": "8019:106:0",
													"statements": [
														{
															"expression": {
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 200,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "8033:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8035:12:0",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6,
																	"src": "8033:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8055:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 204,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8055:6:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 203,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8050:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8050:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8063:3:0",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8050:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8033:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 209,
															"nodeType": "ExpressionStatement",
															"src": "8033:33:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 213,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8102:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 212,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8102:6:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 211,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8097:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8097:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8110:3:0",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8097:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 210,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "8085:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8085:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 217,
															"nodeType": "EmitStatement",
															"src": "8080:34:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "7229:475:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7718:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7758:0:0"
									},
									"scope": 267,
									"src": "7709:422:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "8306:63:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 227,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "8323:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8323:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8350:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "8323:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 226,
												"id": 230,
												"nodeType": "Return",
												"src": "8316:46:0"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "8137:99:0",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8250:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8272:2:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "8298:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 224,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8298:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:8:0"
									},
									"scope": 267,
									"src": "8241:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "8541:64:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 238,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "8558:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8558:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8585:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "8558:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 237,
												"id": 241,
												"nodeType": "Return",
												"src": "8551:47:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "8375:105:0",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8494:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8509:2:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "8535:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8535:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:6:0"
									},
									"scope": 267,
									"src": "8485:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "8896:45:0",
										"statements": [
											{
												"expression": {
													"id": 249,
													"name": "INITIALIZABLE_STORAGE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 13,
													"src": "8913:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 248,
												"id": 250,
												"nodeType": "Return",
												"src": "8906:28:0"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "8611:203:0",
										"text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializableStorageSlot",
									"nameLocation": "8828:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8853:2:0"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "8887:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 246,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8886:9:0"
									},
									"scope": 267,
									"src": "8819:122:0",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "9161:115:0",
										"statements": [
											{
												"assignments": [
													260
												],
												"declarations": [
													{
														"constant": false,
														"id": 260,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "9179:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 265,
														"src": "9171:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 259,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9171:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 263,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 261,
														"name": "_initializableStorageSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "9186:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:42:0"
											},
											{
												"AST": {
													"nativeSrc": "9232:38:0",
													"nodeType": "YulBlock",
													"src": "9232:38:0",
													"statements": [
														{
															"nativeSrc": "9246:14:0",
															"nodeType": "YulAssignment",
															"src": "9246:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "9256:4:0",
																"nodeType": "YulIdentifier",
																"src": "9256:4:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "9246:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "9246:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 257,
														"isOffset": false,
														"isSlot": true,
														"src": "9246:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 260,
														"isOffset": false,
														"isSlot": false,
														"src": "9256:4:0",
														"valueSize": 1
													}
												],
												"id": 264,
												"nodeType": "InlineAssembly",
												"src": "9223:47:0"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "8947:67:0",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "9080:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9104:2:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "9158:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "9129:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 256,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 255,
														"name": "InitializableStorage",
														"nameLocations": [
															"9129:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "9129:20:0"
													},
													"referencedDeclaration": 10,
													"src": "9129:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9128:32:0"
									},
									"scope": 267,
									"src": "9071:205:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 268,
							"src": "2349:6929:0",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "113:9166:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							930
						],
						"ERC20Upgradeable": [
							884
						],
						"IERC20": [
							1145
						],
						"IERC20Errors": [
							972
						],
						"IERC20Metadata": [
							1171
						],
						"Initializable": [
							267
						]
					},
					"id": 885,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 269,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 271,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 885,
							"sourceUnit": 1146,
							"src": "131:70:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 270,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1145,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 273,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 885,
							"sourceUnit": 1172,
							"src": "202:97:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 272,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1171,
										"src": "210:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 275,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 885,
							"sourceUnit": 931,
							"src": "300:70:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 274,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 930,
										"src": "308:18:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 277,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 885,
							"sourceUnit": 1068,
							"src": "371:83:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 276,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 972,
										"src": "379:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 279,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 885,
							"sourceUnit": 268,
							"src": "455:66:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 278,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 267,
										"src": "463:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 281,
										"name": "Initializable",
										"nameLocations": [
											"1319:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 267,
										"src": "1319:13:1"
									},
									"id": 282,
									"nodeType": "InheritanceSpecifier",
									"src": "1319:13:1"
								},
								{
									"baseName": {
										"id": 283,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1334:18:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 930,
										"src": "1334:18:1"
									},
									"id": 284,
									"nodeType": "InheritanceSpecifier",
									"src": "1334:18:1"
								},
								{
									"baseName": {
										"id": 285,
										"name": "IERC20",
										"nameLocations": [
											"1354:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1145,
										"src": "1354:6:1"
									},
									"id": 286,
									"nodeType": "InheritanceSpecifier",
									"src": "1354:6:1"
								},
								{
									"baseName": {
										"id": 287,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1362:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1171,
										"src": "1362:14:1"
									},
									"id": 288,
									"nodeType": "InheritanceSpecifier",
									"src": "1362:14:1"
								},
								{
									"baseName": {
										"id": 289,
										"name": "IERC20Errors",
										"nameLocations": [
											"1378:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 972,
										"src": "1378:12:1"
									},
									"id": 290,
									"nodeType": "InheritanceSpecifier",
									"src": "1378:12:1"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 280,
								"nodeType": "StructuredDocumentation",
								"src": "523:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 884,
							"linearizedBaseContracts": [
								884,
								972,
								1171,
								1145,
								930,
								267
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1299:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "1397:63:1",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 308,
									"members": [
										{
											"constant": false,
											"id": 295,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1531:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 308,
											"src": "1495:45:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 294,
												"keyName": "account",
												"keyNameLocation": "1511:7:1",
												"keyType": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1495:35:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 301,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "1615:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 308,
											"src": "1551:75:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 300,
												"keyName": "account",
												"keyNameLocation": "1567:7:1",
												"keyType": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1551:63:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 299,
													"keyName": "spender",
													"keyNameLocation": "1594:7:1",
													"keyType": {
														"id": 297,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1586:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1578:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 298,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1605:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 303,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "1645:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 308,
											"src": "1637:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 302,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 305,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1675:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 308,
											"src": "1668:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 304,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1668:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 307,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1697:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 308,
											"src": "1690:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 306,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1690:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "1472:12:1",
									"nodeType": "StructDefinition",
									"scope": 884,
									"src": "1465:246:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 311,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "1851:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 884,
									"src": "1826:114:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 309,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1826:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 310,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1874:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "2021:79:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2040:54:1",
													"nodeType": "YulBlock",
													"src": "2040:54:1",
													"statements": [
														{
															"nativeSrc": "2054:30:1",
															"nodeType": "YulAssignment",
															"src": "2054:30:1",
															"value": {
																"name": "ERC20StorageLocation",
																"nativeSrc": "2064:20:1",
																"nodeType": "YulIdentifier",
																"src": "2064:20:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2054:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 315,
														"isOffset": false,
														"isSlot": true,
														"src": "2054:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 311,
														"isOffset": false,
														"isSlot": false,
														"src": "2064:20:1",
														"valueSize": 1
													}
												],
												"id": 317,
												"nodeType": "InlineAssembly",
												"src": "2031:63:1"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "1956:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1972:2:1"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2018:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1997:22:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "ERC20Storage",
														"nameLocations": [
															"1997:12:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 308,
														"src": "1997:12:1"
													},
													"referencedDeclaration": 308,
													"src": "1997:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:24:1"
									},
									"scope": 884,
									"src": "1947:153:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "2355:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "2388:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 331,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "2395:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 329,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "2365:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2365:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "2365:38:1"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "2106:152:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 327,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 326,
												"name": "onlyInitializing",
												"nameLocations": [
													"2338:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "2338:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2338:16:1"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2272:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2299:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "2285:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2285:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2320:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "2306:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2306:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:44:1"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:0:1"
									},
									"scope": 884,
									"src": "2263:147:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2518:114:1",
										"statements": [
											{
												"assignments": [
													346
												],
												"declarations": [
													{
														"constant": false,
														"id": 346,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2549:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 362,
														"src": "2528:22:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 345,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 344,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2528:12:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 308,
																"src": "2528:12:1"
															},
															"referencedDeclaration": 308,
															"src": "2528:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 349,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 347,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "2553:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$308_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2553:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2528:43:1"
											},
											{
												"expression": {
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 350,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "2581:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2583:5:1",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 305,
														"src": "2581:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 353,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2591:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2581:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "2581:15:1"
											},
											{
												"expression": {
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 356,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "2606:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 358,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2608:7:1",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 307,
														"src": "2606:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 359,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "2618:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2606:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "2606:19:1"
											}
										]
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 342,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 341,
												"name": "onlyInitializing",
												"nameLocations": [
													"2501:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "2501:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2501:16:1"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2425:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2462:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2448:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2448:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2483:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2469:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 338,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2469:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:44:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2518:0:1"
									},
									"scope": 884,
									"src": "2416:216:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1158
									],
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "2757:84:1",
										"statements": [
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2788:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 378,
														"src": "2767:22:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 370,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 369,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2767:12:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 308,
																"src": "2767:12:1"
															},
															"referencedDeclaration": 308,
															"src": "2767:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 374,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 372,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "2792:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$308_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2792:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:43:1"
											},
											{
												"expression": {
													"expression": {
														"id": 375,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "2827:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2829:5:1",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 305,
													"src": "2827:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 368,
												"id": 377,
												"nodeType": "Return",
												"src": "2820:14:1"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2638:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2706:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2710:2:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2742:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 366,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2742:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2741:15:1"
									},
									"scope": 884,
									"src": "2697:144:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1164
									],
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "3016:86:1",
										"statements": [
											{
												"assignments": [
													387
												],
												"declarations": [
													{
														"constant": false,
														"id": 387,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3047:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "3026:22:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 386,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 385,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3026:12:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 308,
																"src": "3026:12:1"
															},
															"referencedDeclaration": 308,
															"src": "3026:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 390,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 388,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "3051:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$308_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3051:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3026:43:1"
											},
											{
												"expression": {
													"expression": {
														"id": 391,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "3086:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3088:7:1",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 307,
													"src": "3086:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 384,
												"id": 393,
												"nodeType": "Return",
												"src": "3079:16:1"
											}
										]
									},
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "2847:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2963:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2969:2:1"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "3001:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 382,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3001:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3000:15:1"
									},
									"scope": 884,
									"src": "2954:148:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1170
									],
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "3791:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3808:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 400,
												"id": 402,
												"nodeType": "Return",
												"src": "3801:9:1"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "3108:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3744:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3752:2:1"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "3784:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 398,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3784:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3783:7:1"
									},
									"scope": 884,
									"src": "3735:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1094
									],
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "3911:91:1",
										"statements": [
											{
												"assignments": [
													412
												],
												"declarations": [
													{
														"constant": false,
														"id": 412,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3942:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 419,
														"src": "3921:22:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 411,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 410,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3921:12:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 308,
																"src": "3921:12:1"
															},
															"referencedDeclaration": 308,
															"src": "3921:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 415,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 413,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "3946:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$308_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3946:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3921:43:1"
											},
											{
												"expression": {
													"expression": {
														"id": 416,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "3981:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3983:12:1",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 303,
													"src": "3981:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 409,
												"id": 418,
												"nodeType": "Return",
												"src": "3974:21:1"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "3823:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3859:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3870:2:1"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "3902:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3902:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3901:9:1"
									},
									"scope": 884,
									"src": "3850:152:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1102
									],
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "4109:97:1",
										"statements": [
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4140:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 439,
														"src": "4119:22:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 429,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 428,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4119:12:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 308,
																"src": "4119:12:1"
															},
															"referencedDeclaration": 308,
															"src": "4119:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 433,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 431,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "4144:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$308_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4144:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4119:43:1"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 434,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "4179:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4181:9:1",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 295,
														"src": "4179:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 437,
													"indexExpression": {
														"id": 436,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "4191:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4179:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 427,
												"id": 438,
												"nodeType": "Return",
												"src": "4172:27:1"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "4008:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4044:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4062:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "4054:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4053:17:1"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "4100:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4099:9:1"
									},
									"scope": 884,
									"src": "4035:171:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1112
									],
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "4476:103:1",
										"statements": [
											{
												"assignments": [
													451
												],
												"declarations": [
													{
														"constant": false,
														"id": 451,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4494:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 463,
														"src": "4486:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 450,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4486:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 454,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 452,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "4502:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4502:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4486:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 456,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "4534:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 457,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "4541:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 458,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "4545:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 455,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "4524:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4524:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "4524:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4568:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 449,
												"id": 462,
												"nodeType": "Return",
												"src": "4561:11:1"
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "4212:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4410:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4427:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "4419:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4419:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4439:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "4431:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4418:27:1"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "4470:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4470:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4469:6:1"
									},
									"scope": 884,
									"src": "4401:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1122
									],
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "4701:106:1",
										"statements": [
											{
												"assignments": [
													476
												],
												"declarations": [
													{
														"constant": false,
														"id": 476,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4732:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 487,
														"src": "4711:22:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 475,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 474,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4711:12:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 308,
																"src": "4711:12:1"
															},
															"referencedDeclaration": 308,
															"src": "4711:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 479,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 477,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "4736:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$308_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4736:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4711:43:1"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 480,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "4771:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 481,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4773:11:1",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 301,
															"src": "4771:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 483,
														"indexExpression": {
															"id": 482,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "4785:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4771:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 485,
													"indexExpression": {
														"id": 484,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "4792:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4771:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 473,
												"id": 486,
												"nodeType": "Return",
												"src": "4764:36:1"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "4585:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4621:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4639:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "4631:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4654:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "4646:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4646:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:32:1"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "4692:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4691:9:1"
									},
									"scope": 884,
									"src": "4612:195:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1132
									],
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "5193:107:1",
										"statements": [
											{
												"assignments": [
													499
												],
												"declarations": [
													{
														"constant": false,
														"id": 499,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5211:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "5203:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 498,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5203:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 502,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 500,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "5219:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5219:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5203:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 504,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "5250:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 505,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "5257:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "5266:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 503,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															767,
															835
														],
														"referencedDeclaration": 767,
														"src": "5241:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5241:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "5241:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5289:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 497,
												"id": 510,
												"nodeType": "Return",
												"src": "5282:11:1"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "4813:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5123:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5139:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "5131:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5131:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5156:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "5148:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5148:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5130:32:1"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "5187:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 495,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5187:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5186:6:1"
									},
									"scope": 884,
									"src": "5114:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1144
									],
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "5985:151:1",
										"statements": [
											{
												"assignments": [
													525
												],
												"declarations": [
													{
														"constant": false,
														"id": 525,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6003:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 543,
														"src": "5995:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 524,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5995:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 528,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 526,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "6013:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6013:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5995:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "6051:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "6057:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 532,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "6066:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "6035:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6035:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "6035:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 536,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "6092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "6098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 538,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "6102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 535,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "6082:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6082:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "6082:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6125:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 523,
												"id": 542,
												"nodeType": "Return",
												"src": "6118:11:1"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "5306:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5901:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5922:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "5914:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5914:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5936:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "5928:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5928:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5948:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "5940:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5940:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5913:41:1"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "5979:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5979:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5978:6:1"
									},
									"scope": 884,
									"src": "5892:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "6578:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "6592:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6608:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6600:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6600:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6600:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6592:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "6588:86:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "6612:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6660:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6652:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6652:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6652:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "6633:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6633:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "6626:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "6687:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6701:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6693:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6693:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6693:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6687:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "6683:86:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "6705:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6755:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6747:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6747:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6747:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "6726:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6726:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "6719:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 585,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "6786:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 586,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "6792:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 587,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "6796:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 584,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "6778:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6778:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "6778:24:1"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "6142:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6518:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6536:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6528:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6528:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6550:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6542:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6542:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6562:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6554:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6554:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6527:41:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6578:0:1"
									},
									"scope": 884,
									"src": "6509:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "7199:1095:1",
										"statements": [
											{
												"assignments": [
													603
												],
												"declarations": [
													{
														"constant": false,
														"id": 603,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7230:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 682,
														"src": "7209:22:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 602,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 601,
																"name": "ERC20Storage",
																"nameLocations": [
																	"7209:12:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 308,
																"src": "7209:12:1"
															},
															"referencedDeclaration": 308,
															"src": "7209:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 606,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 604,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "7234:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$308_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7234:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7209:43:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 607,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "7266:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7282:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7274:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 608,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7274:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7274:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7266:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 649,
													"nodeType": "Block",
													"src": "7442:366:1",
													"statements": [
														{
															"assignments": [
																621
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 621,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7464:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 649,
																	"src": "7456:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 620,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7456:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 626,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 622,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 603,
																		"src": "7478:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 623,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7480:9:1",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 295,
																	"src": "7478:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 625,
																"indexExpression": {
																	"id": 624,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "7490:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7478:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7456:39:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 627,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 621,
																	"src": "7513:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 628,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "7527:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7513:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 637,
															"nodeType": "IfStatement",
															"src": "7509:115:1",
															"trueBody": {
																"id": 636,
																"nodeType": "Block",
																"src": "7534:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 631,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 594,
																					"src": "7584:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 632,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 621,
																					"src": "7590:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 633,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 598,
																					"src": "7603:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 630,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 942,
																				"src": "7559:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7559:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 635,
																		"nodeType": "RevertStatement",
																		"src": "7552:57:1"
																	}
																]
															}
														},
														{
															"id": 648,
															"nodeType": "UncheckedBlock",
															"src": "7637:161:1",
															"statements": [
																{
																	"expression": {
																		"id": 646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 638,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 603,
																					"src": "7744:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 641,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7746:9:1",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 295,
																				"src": "7744:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 642,
																			"indexExpression": {
																				"id": 640,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 594,
																				"src": "7756:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7744:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 643,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 621,
																				"src": "7764:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 644,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 598,
																				"src": "7778:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7764:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7744:39:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 647,
																	"nodeType": "ExpressionStatement",
																	"src": "7744:39:1"
																}
															]
														}
													]
												},
												"id": 650,
												"nodeType": "IfStatement",
												"src": "7262:546:1",
												"trueBody": {
													"id": 619,
													"nodeType": "Block",
													"src": "7286:150:1",
													"statements": [
														{
															"expression": {
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 613,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 603,
																		"src": "7402:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 615,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7404:12:1",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 303,
																	"src": "7402:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 616,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "7420:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7402:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 618,
															"nodeType": "ExpressionStatement",
															"src": "7402:23:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 651,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "7822:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7836:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7828:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 652,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7828:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7828:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7822:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 674,
													"nodeType": "Block",
													"src": "8039:208:1",
													"statements": [
														{
															"id": 673,
															"nodeType": "UncheckedBlock",
															"src": "8053:184:1",
															"statements": [
																{
																	"expression": {
																		"id": 671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 665,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 603,
																					"src": "8198:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 668,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8200:9:1",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 295,
																				"src": "8198:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 669,
																			"indexExpression": {
																				"id": 667,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 596,
																				"src": "8210:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8198:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 670,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "8217:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8198:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 672,
																	"nodeType": "ExpressionStatement",
																	"src": "8198:24:1"
																}
															]
														}
													]
												},
												"id": 675,
												"nodeType": "IfStatement",
												"src": "7818:429:1",
												"trueBody": {
													"id": 664,
													"nodeType": "Block",
													"src": "7840:193:1",
													"statements": [
														{
															"id": 663,
															"nodeType": "UncheckedBlock",
															"src": "7854:169:1",
															"statements": [
																{
																	"expression": {
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 657,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 603,
																				"src": "7985:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 659,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "7987:12:1",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 303,
																			"src": "7985:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 660,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "8003:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7985:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 662,
																	"nodeType": "ExpressionStatement",
																	"src": "7985:23:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 677,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "8271:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 678,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "8277:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 679,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "8281:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 676,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "8262:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8262:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "EmitStatement",
												"src": "8257:30:1"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "6815:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7133:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7149:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "7141:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7141:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7163:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "7155:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7155:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7175:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "7167:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7167:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7140:41:1"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7199:0:1"
									},
									"scope": 884,
									"src": "7124:1170:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "8693:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 691,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "8707:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8726:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8718:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 692,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8718:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8718:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8707:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 705,
												"nodeType": "IfStatement",
												"src": "8703:91:1",
												"trueBody": {
													"id": 704,
													"nodeType": "Block",
													"src": "8730:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 700,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8780:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8772:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 698,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8772:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8772:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 697,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "8751:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8751:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 703,
															"nodeType": "RevertStatement",
															"src": "8744:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8819:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8811:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 707,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8811:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8811:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 711,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "8823:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "8832:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 706,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "8803:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8803:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "8803:35:1"
											}
										]
									},
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "8300:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8646:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "8652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "8669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8669:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8651:32:1"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8693:0:1"
									},
									"scope": 884,
									"src": "8637:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "9219:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 724,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "9233:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9252:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9244:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 725,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9244:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9244:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9233:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 738,
												"nodeType": "IfStatement",
												"src": "9229:89:1",
												"trueBody": {
													"id": 737,
													"nodeType": "Block",
													"src": "9256:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 733,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9304:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9296:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 731,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9296:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9296:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 730,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "9277:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 736,
															"nodeType": "RevertStatement",
															"src": "9270:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 740,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "9335:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9352:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9344:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 741,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9344:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9344:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 745,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "9356:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 739,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "9327:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9327:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "9327:35:1"
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "8851:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9172:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9186:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "9178:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9178:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9203:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "9195:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9195:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9177:32:1"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9219:0:1"
									},
									"scope": 884,
									"src": "9163:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "9979:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 760,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "9998:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 761,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "10005:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 762,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "10014:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10021:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 759,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															767,
															835
														],
														"referencedDeclaration": 835,
														"src": "9989:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9989:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "9989:37:1"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "9375:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9914:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9931:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9923:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9923:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9946:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9938:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9938:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9963:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9955:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9955:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9922:47:1"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9979:0:1"
									},
									"scope": 884,
									"src": "9905:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "10978:389:1",
										"statements": [
											{
												"assignments": [
													781
												],
												"declarations": [
													{
														"constant": false,
														"id": 781,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11009:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 834,
														"src": "10988:22:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 780,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 779,
																"name": "ERC20Storage",
																"nameLocations": [
																	"10988:12:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 308,
																"src": "10988:12:1"
															},
															"referencedDeclaration": 308,
															"src": "10988:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 784,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 782,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "11013:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$308_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11013:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10988:43:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 785,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "11045:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11062:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11054:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 786,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11054:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11054:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11045:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 799,
												"nodeType": "IfStatement",
												"src": "11041:89:1",
												"trueBody": {
													"id": 798,
													"nodeType": "Block",
													"src": "11066:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 794,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11116:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11108:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 792,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11108:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11108:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 791,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "11087:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11087:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 797,
															"nodeType": "RevertStatement",
															"src": "11080:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 800,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "11143:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11162:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11154:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 801,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11154:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11154:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11143:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 814,
												"nodeType": "IfStatement",
												"src": "11139:90:1",
												"trueBody": {
													"id": 813,
													"nodeType": "Block",
													"src": "11166:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 809,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11215:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11207:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 807,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11207:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11207:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 806,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "11187:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11187:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 812,
															"nodeType": "RevertStatement",
															"src": "11180:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 815,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 781,
																	"src": "11238:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$308_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 819,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11240:11:1",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 301,
																"src": "11238:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 820,
															"indexExpression": {
																"id": 817,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "11252:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11238:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 821,
														"indexExpression": {
															"id": 818,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11259:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11238:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 822,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "11270:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11238:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "11238:37:1"
											},
											{
												"condition": {
													"id": 825,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 776,
													"src": "11289:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 833,
												"nodeType": "IfStatement",
												"src": "11285:76:1",
												"trueBody": {
													"id": 832,
													"nodeType": "Block",
													"src": "11300:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 827,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "11328:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 828,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 772,
																		"src": "11335:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 829,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "11344:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 826,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1088,
																	"src": "11319:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11319:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 831,
															"nodeType": "EmitStatement",
															"src": "11314:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "10039:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10889:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10906:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "10898:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10921:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "10913:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10913:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10938:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "10930:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10930:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10950:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "10945:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 775,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10945:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10897:63:1"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10978:0:1"
									},
									"scope": 884,
									"src": "10880:487:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "11738:387:1",
										"statements": [
											{
												"assignments": [
													846
												],
												"declarations": [
													{
														"constant": false,
														"id": 846,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11756:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 882,
														"src": "11748:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 845,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11748:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 851,
												"initialValue": {
													"arguments": [
														{
															"id": 848,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "11785:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "11792:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 847,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "11775:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11775:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11748:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 852,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "11814:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11838:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 854,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11838:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 853,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11833:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11833:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11847:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11833:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11814:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 881,
												"nodeType": "IfStatement",
												"src": "11810:309:1",
												"trueBody": {
													"id": 880,
													"nodeType": "Block",
													"src": "11852:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 859,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "11870:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 860,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "11889:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11870:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 869,
															"nodeType": "IfStatement",
															"src": "11866:130:1",
															"trueBody": {
																"id": 868,
																"nodeType": "Block",
																"src": "11896:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 863,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 840,
																					"src": "11948:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 864,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 846,
																					"src": "11957:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 865,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 842,
																					"src": "11975:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 862,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 961,
																				"src": "11921:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11921:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 867,
																		"nodeType": "RevertStatement",
																		"src": "11914:67:1"
																	}
																]
															}
														},
														{
															"id": 879,
															"nodeType": "UncheckedBlock",
															"src": "12009:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 871,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 838,
																				"src": "12046:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 872,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 840,
																				"src": "12053:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 875,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 873,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 846,
																					"src": "12062:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 874,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 842,
																					"src": "12081:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12062:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 876,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12088:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 870,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				767,
																				835
																			],
																			"referencedDeclaration": 835,
																			"src": "12037:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12037:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 878,
																	"nodeType": "ExpressionStatement",
																	"src": "12037:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "11373:271:1",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11658:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11682:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "11674:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11674:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11697:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "11689:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11714:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "11706:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11706:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11673:47:1"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11738:0:1"
									},
									"scope": 884,
									"src": "11649:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 885,
							"src": "1281:10846:1",
							"usedErrors": [
								16,
								19,
								942,
								947,
								952,
								961,
								966,
								971
							],
							"usedEvents": [
								24,
								1079,
								1088
							]
						}
					],
					"src": "105:12023:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							930
						],
						"Initializable": [
							267
						]
					},
					"id": 931,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 886,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 888,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 931,
							"sourceUnit": 268,
							"src": "126:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 887,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 267,
										"src": "134:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 890,
										"name": "Initializable",
										"nameLocations": [
											"728:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 267,
										"src": "728:13:2"
									},
									"id": 891,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:2"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 889,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 930,
							"linearizedBaseContracts": [
								930,
								267
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "800:7:2",
										"statements": []
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 894,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 893,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "783:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:2"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:2"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:2"
									},
									"scope": 930,
									"src": "748:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "875:7:2",
										"statements": []
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 900,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 899,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "858:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:2"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:2"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:2"
									},
									"scope": 930,
									"src": "813:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "949:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 908,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 907,
												"id": 910,
												"nodeType": "Return",
												"src": "959:17:2"
											}
										]
									},
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:2"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "940:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:2"
									},
									"scope": 930,
									"src": "887:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "1056:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 917,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 916,
												"id": 919,
												"nodeType": "Return",
												"src": "1066:15:2"
											}
										]
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:2"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "1040:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 914,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:2"
									},
									"scope": 930,
									"src": "989:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "1166:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 925,
												"id": 927,
												"nodeType": "Return",
												"src": "1176:8:2"
											}
										]
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:2"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "1157:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:2"
									},
									"scope": 930,
									"src": "1094:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 931,
							"src": "688:505:2",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "101:1093:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							1067
						],
						"IERC20Errors": [
							972
						],
						"IERC721Errors": [
							1020
						]
					},
					"id": 1068,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 932,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 933,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:3",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 972,
							"linearizedBaseContracts": [
								972
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 942,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "654:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "670:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "687:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:3"
									},
									"src": "623:80:3"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 947,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "891:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:3"
									},
									"src": "866:41:3"
								},
								{
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 952,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1104:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:3"
									},
									"src": "1077:45:3"
								},
								{
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 961,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1511:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1528:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1547:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:3"
									},
									"src": "1478:85:3"
								},
								{
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 966,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "1775:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:3"
									},
									"src": "1748:45:3"
								},
								{
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 971,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "2025:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:3"
									},
									"src": "1999:43:3"
								}
							],
							"scope": 1068,
							"src": "280:1764:3",
							"usedErrors": [
								942,
								947,
								952,
								961,
								966,
								971
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 973,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:3",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 1020,
							"linearizedBaseContracts": [
								1020
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 978,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "2469:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:3"
									},
									"src": "2444:40:3"
								},
								{
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 983,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "2656:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:3"
									},
									"src": "2627:46:3"
								},
								{
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 992,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "3000:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "3016:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "3033:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:3"
									},
									"src": "2973:75:3"
								},
								{
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 997,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "3237:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:3"
									},
									"src": "3211:42:3"
								},
								{
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1002,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "3451:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:3"
									},
									"src": "3423:46:3"
								},
								{
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1009,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "3760:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "3778:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:3"
									},
									"src": "3727:68:3"
								},
								{
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1014,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "4008:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:3"
									},
									"src": "3980:46:3"
								},
								{
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1019,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "4262:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:3"
									},
									"src": "4234:46:3"
								}
							],
							"scope": 1068,
							"src": "2190:2092:3",
							"usedErrors": [
								978,
								983,
								992,
								997,
								1002,
								1009,
								1014,
								1019
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1021,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:3",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1067,
							"linearizedBaseContracts": [
								1067
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1032,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4860:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4876:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4893:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4909:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:3"
									},
									"src": "4827:99:3"
								},
								{
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1037,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "5116:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:3"
									},
									"src": "5089:43:3"
								},
								{
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1042,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "5331:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:3"
									},
									"src": "5302:47:3"
								},
								{
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1049,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "5651:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "5669:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:3"
									},
									"src": "5616:68:3"
								},
								{
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1054,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "5898:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:3"
									},
									"src": "5869:47:3"
								},
								{
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1059,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "6153:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:3"
									},
									"src": "6124:47:3"
								},
								{
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1066,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "6494:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "6513:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:3"
									},
									"src": "6462:73:3"
								}
							],
							"scope": 1068,
							"src": "4430:2107:3",
							"usedErrors": [
								1032,
								1037,
								1042,
								1049,
								1054,
								1059,
								1066
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1145
						]
					},
					"id": 1146,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1069,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1070,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1145,
							"linearizedBaseContracts": [
								1145
							],
							"name": "IERC20",
							"nameLocation": "215:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1079,
									"name": "Transfer",
									"nameLocation": "397:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "406:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "428:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "448:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:4"
									},
									"src": "391:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1088,
									"name": "Approval",
									"nameLocation": "628:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "637:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "660:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "685:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:4"
									},
									"src": "622:78:4"
								},
								{
									"documentation": {
										"id": 1089,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:4"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "822:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:4"
									},
									"scope": 1145,
									"src": "776:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "932:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:4"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "972:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:4"
									},
									"scope": 1145,
									"src": "913:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1103,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1223:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1235:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:4"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:4"
									},
									"scope": 1145,
									"src": "1205:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1568:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1583:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:4"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:4"
									},
									"scope": 1145,
									"src": "1549:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "2327:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "2344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:4"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:4"
									},
									"scope": 1145,
									"src": "2310:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "2713:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "2727:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "2739:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:4"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "2772:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1141,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:4"
									},
									"scope": 1145,
									"src": "2691:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1146,
							"src": "205:2575:4",
							"usedErrors": [],
							"usedEvents": [
								1079,
								1088
							]
						}
					],
					"src": "106:2675:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1145
						],
						"IERC20Metadata": [
							1171
						]
					},
					"id": 1172,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1147,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1172,
							"sourceUnit": 1146,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1148,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1145,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1151,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1145,
										"src": "306:6:5"
									},
									"id": 1152,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1150,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1171,
							"linearizedBaseContracts": [
								1171,
								1145
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1155,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 1171,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1164,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1161,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 1171,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1165,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1167,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 1171,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1172,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								1079,
								1088
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"hopium/common/interface/imDirectory.sol": {
				"ast": {
					"absolutePath": "hopium/common/interface/imDirectory.sol",
					"exportedSymbols": {
						"IDirectory": [
							1187
						],
						"ImDirectory": [
							1298
						]
					},
					"id": 1299,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1173,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDirectory",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1174,
								"nodeType": "StructuredDocumentation",
								"src": "57:78:6",
								"text": "@notice Interface used by the registry to talk to the external directory."
							},
							"fullyImplemented": false,
							"id": 1187,
							"linearizedBaseContracts": [
								1187
							],
							"name": "IDirectory",
							"nameLocation": "145:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8da5cb5b",
									"id": 1179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "171:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "176:2:6"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "202:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "201:9:6"
									},
									"scope": 1187,
									"src": "162:49:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "27262618",
									"id": 1186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fetchFromDirectory",
									"nameLocation": "225:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "258:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "244:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1180,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "244:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "243:20:6"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "287:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "286:9:6"
									},
									"scope": 1187,
									"src": "216:80:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1299,
							"src": "135:163:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ImDirectory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1298,
							"linearizedBaseContracts": [
								1298
							],
							"name": "ImDirectory",
							"nameLocation": "318:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "658a847a",
									"id": 1190,
									"mutability": "mutable",
									"name": "Directory",
									"nameLocation": "354:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1298,
									"src": "336:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDirectory_$1187",
										"typeString": "contract IDirectory"
									},
									"typeName": {
										"id": 1189,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1188,
											"name": "IDirectory",
											"nameLocations": [
												"336:10:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1187,
											"src": "336:10:6"
										},
										"referencedDeclaration": 1187,
										"src": "336:10:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDirectory_$1187",
											"typeString": "contract IDirectory"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "402:62:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1196,
															"name": "_directory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "426:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1195,
														"name": "_setDirectory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "412:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "412:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "412:25:6"
											}
										]
									},
									"id": 1200,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "_directory",
												"nameLocation": "390:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "382:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "382:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "381:20:6"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "402:0:6"
									},
									"scope": 1298,
									"src": "370:94:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "541:42:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1208,
															"name": "_directory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "565:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1207,
														"name": "_setDirectory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "551:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "551:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "551:25:6"
											}
										]
									},
									"functionSelector": "ba4c7be1",
									"id": 1212,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1205,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1204,
												"name": "onlyOwner",
												"nameLocations": [
													"531:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1274,
												"src": "531:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "531:9:6"
										}
									],
									"name": "changeDirectoryAddress",
									"nameLocation": "479:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "_directory",
												"nameLocation": "510:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "502:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "501:20:6"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "541:0:6"
									},
									"scope": 1298,
									"src": "470:113:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "641:409:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1218,
																"name": "_directory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1214,
																"src": "659:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "681:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "673:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1219,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "673:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "673:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "659:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4469726563746f72792063616e6e6f74206265207a65726f2061646472657373",
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "685:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
																"typeString": "literal_string \"Directory cannot be zero address\""
															},
															"value": "Directory cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
																"typeString": "literal_string \"Directory cannot be zero address\""
															}
														],
														"id": 1217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "651:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "651:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "651:69:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1228,
																		"name": "_directory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1214,
																		"src": "738:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "749:4:6",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "738:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "754:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "738:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "763:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "738:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4469726563746f7279206d757374206265206120636f6e7472616374",
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "766:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
																"typeString": "literal_string \"Directory must be a contract\""
															},
															"value": "Directory must be a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
																"typeString": "literal_string \"Directory must be a contract\""
															}
														],
														"id": 1227,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "730:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "730:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "730:67:6"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 1250,
															"nodeType": "Block",
															"src": "899:59:6",
															"statements": [
																{
																	"expression": {
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1244,
																			"name": "Directory",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1190,
																			"src": "913:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IDirectory_$1187",
																				"typeString": "contract IDirectory"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 1246,
																					"name": "_directory",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1214,
																					"src": "936:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1245,
																				"name": "IDirectory",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "925:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IDirectory_$1187_$",
																					"typeString": "type(contract IDirectory)"
																				}
																			},
																			"id": 1247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "925:22:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IDirectory_$1187",
																				"typeString": "contract IDirectory"
																			}
																		},
																		"src": "913:34:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IDirectory_$1187",
																			"typeString": "contract IDirectory"
																		}
																	},
																	"id": 1249,
																	"nodeType": "ExpressionStatement",
																	"src": "913:34:6"
																}
															]
														},
														"errorName": "",
														"id": 1251,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1243,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1242,
																	"mutability": "mutable",
																	"name": "",
																	"nameLocation": "-1:-1:-1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1251,
																	"src": "890:7:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1241,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "890:7:6",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "889:9:6"
														},
														"src": "881:77:6"
													},
													{
														"block": {
															"id": 1256,
															"nodeType": "Block",
															"src": "965:79:6",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "4469726563746f7279206164647265737320646f6573206e6f7420696d706c656d656e74206f776e65722829",
																				"id": 1253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "986:46:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
																					"typeString": "literal_string \"Directory address does not implement owner()\""
																				},
																				"value": "Directory address does not implement owner()"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
																					"typeString": "literal_string \"Directory address does not implement owner()\""
																				}
																			],
																			"id": 1252,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "979:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "979:54:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1255,
																	"nodeType": "ExpressionStatement",
																	"src": "979:54:6"
																}
															]
														},
														"errorName": "",
														"id": 1257,
														"nodeType": "TryCatchClause",
														"src": "959:85:6"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1237,
																	"name": "_directory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "861:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1236,
																"name": "IDirectory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "850:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDirectory_$1187_$",
																	"typeString": "type(contract IDirectory)"
																}
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "850:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDirectory_$1187",
																"typeString": "contract IDirectory"
															}
														},
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "873:5:6",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1179,
														"src": "850:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "850:30:6",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1258,
												"nodeType": "TryStatement",
												"src": "846:198:6"
											}
										]
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setDirectory",
									"nameLocation": "598:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "_directory",
												"nameLocation": "620:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "612:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:20:6"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "641:0:6"
									},
									"scope": 1298,
									"src": "589:461:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1273,
										"nodeType": "Block",
										"src": "1077:95:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1263,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1095:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1099:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1095:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1265,
																		"name": "Directory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1190,
																		"src": "1109:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IDirectory_$1187",
																			"typeString": "contract IDirectory"
																		}
																	},
																	"id": 1266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1119:5:6",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1179,
																	"src": "1109:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1109:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1095:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1128:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
																"typeString": "literal_string \"Caller is not the owner\""
															},
															"value": "Caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
																"typeString": "literal_string \"Caller is not the owner\""
															}
														],
														"id": 1262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1087:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1087:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "1087:67:6"
											},
											{
												"id": 1272,
												"nodeType": "PlaceholderStatement",
												"src": "1164:1:6"
											}
										]
									},
									"id": 1274,
									"name": "onlyOwner",
									"nameLocation": "1065:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1074:2:6"
									},
									"src": "1056:116:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "1225:41:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1279,
															"name": "Directory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "1242:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDirectory_$1187",
																"typeString": "contract IDirectory"
															}
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1252:5:6",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1179,
														"src": "1242:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1242:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1278,
												"id": 1282,
												"nodeType": "Return",
												"src": "1235:24:6"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1187:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1192:2:6"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "1216:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1215:9:6"
									},
									"scope": 1298,
									"src": "1178:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "1350:58:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1293,
															"name": "_key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "1396:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1291,
															"name": "Directory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "1367:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDirectory_$1187",
																"typeString": "contract IDirectory"
															}
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1377:18:6",
														"memberName": "fetchFromDirectory",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1186,
														"src": "1367:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
															"typeString": "function (string memory) view external returns (address)"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1367:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1290,
												"id": 1295,
												"nodeType": "Return",
												"src": "1360:41:6"
											}
										]
									},
									"functionSelector": "27262618",
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchFromDirectory",
									"nameLocation": "1281:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "1314:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "1300:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1285,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1300:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1299:20:6"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "1341:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:9:6"
									},
									"scope": 1298,
									"src": "1272:136:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1299,
							"src": "300:1110:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1379:6"
				},
				"id": 6
			},
			"hopium/etf/interface/imEtfRouter.sol": {
				"ast": {
					"absolutePath": "hopium/etf/interface/imEtfRouter.sol",
					"exportedSymbols": {
						"IDirectory": [
							1187
						],
						"IEtfRouter": [
							1302
						],
						"ImDirectory": [
							1298
						],
						"ImEtfRouter": [
							1332
						]
					},
					"id": 1333,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1300,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"absolutePath": "hopium/common/interface/imDirectory.sol",
							"file": "hopium/common/interface/imDirectory.sol",
							"id": 1301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1333,
							"sourceUnit": 1299,
							"src": "57:49:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IEtfRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 1302,
							"linearizedBaseContracts": [
								1302
							],
							"name": "IEtfRouter",
							"nameLocation": "118:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1333,
							"src": "108:29:7",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1303,
										"name": "ImDirectory",
										"nameLocations": [
											"172:11:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1298,
										"src": "172:11:7"
									},
									"id": 1304,
									"nodeType": "InheritanceSpecifier",
									"src": "172:11:7"
								}
							],
							"canonicalName": "ImEtfRouter",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1332,
							"linearizedBaseContracts": [
								1332,
								1298
							],
							"name": "ImEtfRouter",
							"nameLocation": "157:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "258:68:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "6574662d726f75746572",
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "305:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f88d96806ae6e0ffb90f33067f9d810b2e6d69273e5977263af7566ab4b3aa6a",
																		"typeString": "literal_string \"etf-router\""
																	},
																	"value": "etf-router"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_f88d96806ae6e0ffb90f33067f9d810b2e6d69273e5977263af7566ab4b3aa6a",
																		"typeString": "literal_string \"etf-router\""
																	}
																],
																"id": 1311,
																"name": "fetchFromDirectory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "286:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$",
																	"typeString": "function (string memory) view returns (address)"
																}
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "286:32:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1310,
														"name": "IEtfRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1302,
														"src": "275:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IEtfRouter_$1302_$",
															"typeString": "type(contract IEtfRouter)"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "275:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEtfRouter_$1302",
														"typeString": "contract IEtfRouter"
													}
												},
												"functionReturnParameters": 1309,
												"id": 1315,
												"nodeType": "Return",
												"src": "268:51:7"
											}
										]
									},
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEtfRouter",
									"nameLocation": "200:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "212:2:7"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "246:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IEtfRouter_$1302",
													"typeString": "contract IEtfRouter"
												},
												"typeName": {
													"id": 1307,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1306,
														"name": "IEtfRouter",
														"nameLocations": [
															"246:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1302,
														"src": "246:10:7"
													},
													"referencedDeclaration": 1302,
													"src": "246:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEtfRouter_$1302",
														"typeString": "contract IEtfRouter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "245:12:7"
									},
									"scope": 1332,
									"src": "191:135:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "357:115:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1320,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "375:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "379:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "375:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "6574662d726f75746572",
																		"id": 1323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "408:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f88d96806ae6e0ffb90f33067f9d810b2e6d69273e5977263af7566ab4b3aa6a",
																			"typeString": "literal_string \"etf-router\""
																		},
																		"value": "etf-router"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_f88d96806ae6e0ffb90f33067f9d810b2e6d69273e5977263af7566ab4b3aa6a",
																			"typeString": "literal_string \"etf-router\""
																		}
																	],
																	"id": 1322,
																	"name": "fetchFromDirectory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1297,
																	"src": "389:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$",
																		"typeString": "function (string memory) view returns (address)"
																	}
																},
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "389:32:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "375:46:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d73672e73656e646572206973206e6f742065746620726f75746572",
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "423:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9",
																"typeString": "literal_string \"msg.sender is not etf router\""
															},
															"value": "msg.sender is not etf router"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bdbe95abee222508051e369adf0d08d9049b95fb3476e24567294273e8b990a9",
																"typeString": "literal_string \"msg.sender is not etf router\""
															}
														],
														"id": 1319,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "367:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "367:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1328,
												"nodeType": "ExpressionStatement",
												"src": "367:87:7"
											},
											{
												"id": 1329,
												"nodeType": "PlaceholderStatement",
												"src": "464:1:7"
											}
										]
									},
									"id": 1331,
									"name": "onlyEtfRouter",
									"nameLocation": "341:13:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "354:2:7"
									},
									"src": "332:140:7",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1333,
							"src": "139:335:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:442:7"
				},
				"id": 7
			},
			"hopium/etf/interface/imEtfTokenEvents.sol": {
				"ast": {
					"absolutePath": "hopium/etf/interface/imEtfTokenEvents.sol",
					"exportedSymbols": {
						"IDirectory": [
							1187
						],
						"IEtfTokenEvents": [
							1347
						],
						"ImDirectory": [
							1298
						],
						"ImEtfTokenEvents": [
							1363
						]
					},
					"id": 1364,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1334,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"absolutePath": "hopium/common/interface/imDirectory.sol",
							"file": "hopium/common/interface/imDirectory.sol",
							"id": 1335,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1364,
							"sourceUnit": 1299,
							"src": "57:49:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IEtfTokenEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1347,
							"linearizedBaseContracts": [
								1347
							],
							"name": "IEtfTokenEvents",
							"nameLocation": "118:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c082f03f",
									"id": 1346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "emitTransferEvent",
									"nameLocation": "149:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "etfId",
												"nameLocation": "175:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "167:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "167:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "fromAddress",
												"nameLocation": "190:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "182:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "182:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "toAddress",
												"nameLocation": "211:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "203:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "203:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "transferAmount",
												"nameLocation": "230:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "222:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "166:79:8"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "254:0:8"
									},
									"scope": 1347,
									"src": "140:115:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1364,
							"src": "108:149:8",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1348,
										"name": "ImDirectory",
										"nameLocations": [
											"297:11:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1298,
										"src": "297:11:8"
									},
									"id": 1349,
									"nodeType": "InheritanceSpecifier",
									"src": "297:11:8"
								}
							],
							"canonicalName": "ImEtfTokenEvents",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1363,
							"linearizedBaseContracts": [
								1363,
								1298
							],
							"name": "ImEtfTokenEvents",
							"nameLocation": "277:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "393:79:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "6574662d746f6b656e2d6576656e7473",
																	"id": 1357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "445:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_643eb6203be3ce5b9c248e107118a331775c648ee915ae8faab3ff888f949b19",
																		"typeString": "literal_string \"etf-token-events\""
																	},
																	"value": "etf-token-events"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_643eb6203be3ce5b9c248e107118a331775c648ee915ae8faab3ff888f949b19",
																		"typeString": "literal_string \"etf-token-events\""
																	}
																],
																"id": 1356,
																"name": "fetchFromDirectory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "426:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$",
																	"typeString": "function (string memory) view returns (address)"
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "426:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1355,
														"name": "IEtfTokenEvents",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1347,
														"src": "410:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IEtfTokenEvents_$1347_$",
															"typeString": "type(contract IEtfTokenEvents)"
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "410:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEtfTokenEvents_$1347",
														"typeString": "contract IEtfTokenEvents"
													}
												},
												"functionReturnParameters": 1354,
												"id": 1360,
												"nodeType": "Return",
												"src": "403:62:8"
											}
										]
									},
									"id": 1362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEtfTokenEvents",
									"nameLocation": "325:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "342:2:8"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "376:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IEtfTokenEvents_$1347",
													"typeString": "contract IEtfTokenEvents"
												},
												"typeName": {
													"id": 1352,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1351,
														"name": "IEtfTokenEvents",
														"nameLocations": [
															"376:15:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1347,
														"src": "376:15:8"
													},
													"referencedDeclaration": 1347,
													"src": "376:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEtfTokenEvents_$1347",
														"typeString": "contract IEtfTokenEvents"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "375:17:8"
									},
									"scope": 1363,
									"src": "316:156:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1364,
							"src": "259:220:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:447:8"
				},
				"id": 8
			},
			"hopium/etf/main/etf-token.sol": {
				"ast": {
					"absolutePath": "hopium/etf/main/etf-token.sol",
					"exportedSymbols": {
						"ERC20Upgradeable": [
							884
						],
						"EtfToken": [
							1515
						],
						"IDirectory": [
							1187
						],
						"IEtfRouter": [
							1302
						],
						"IEtfTokenEvents": [
							1347
						],
						"ImDirectory": [
							1298
						],
						"ImEtfRouter": [
							1332
						],
						"ImEtfTokenEvents": [
							1363
						],
						"Initializable": [
							267
						]
					},
					"id": 1516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1365,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1367,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1516,
							"sourceUnit": 268,
							"src": "57:96:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1366,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 267,
										"src": "65:13:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 1369,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1516,
							"sourceUnit": 885,
							"src": "154:102:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1368,
										"name": "ERC20Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 884,
										"src": "162:16:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "hopium/common/interface/imDirectory.sol",
							"file": "hopium/common/interface/imDirectory.sol",
							"id": 1370,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1516,
							"sourceUnit": 1299,
							"src": "258:49:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "hopium/etf/interface/imEtfRouter.sol",
							"file": "hopium/etf/interface/imEtfRouter.sol",
							"id": 1371,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1516,
							"sourceUnit": 1333,
							"src": "308:46:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "hopium/etf/interface/imEtfTokenEvents.sol",
							"file": "hopium/etf/interface/imEtfTokenEvents.sol",
							"id": 1372,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1516,
							"sourceUnit": 1364,
							"src": "355:51:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1374,
										"name": "Initializable",
										"nameLocations": [
											"656:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 267,
										"src": "656:13:9"
									},
									"id": 1375,
									"nodeType": "InheritanceSpecifier",
									"src": "656:13:9"
								},
								{
									"baseName": {
										"id": 1376,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"671:16:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 884,
										"src": "671:16:9"
									},
									"id": 1377,
									"nodeType": "InheritanceSpecifier",
									"src": "671:16:9"
								},
								{
									"baseName": {
										"id": 1378,
										"name": "ImEtfRouter",
										"nameLocations": [
											"689:11:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1332,
										"src": "689:11:9"
									},
									"id": 1379,
									"nodeType": "InheritanceSpecifier",
									"src": "689:11:9"
								},
								{
									"baseName": {
										"id": 1380,
										"name": "ImEtfTokenEvents",
										"nameLocations": [
											"702:16:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1363,
										"src": "702:16:9"
									},
									"id": 1381,
									"nodeType": "InheritanceSpecifier",
									"src": "702:16:9"
								}
							],
							"canonicalName": "EtfToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1373,
								"nodeType": "StructuredDocumentation",
								"src": "408:227:9",
								"text": "@notice Cloneable ETF ERC20 with per-clone name/symbol via initialize()\n @dev Uses OZ *Upgradeable* ERC20 so name/symbol can be set at runtime.\n      Access control (onlyEtfRouter/onlyOwner) resolves via ImDirectory."
							},
							"fullyImplemented": true,
							"id": 1515,
							"linearizedBaseContracts": [
								1515,
								1363,
								1332,
								1298,
								884,
								972,
								1171,
								1145,
								930,
								267
							],
							"name": "EtfToken",
							"nameLocation": "644:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1383,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "738:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1515,
									"src": "725:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1382,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "725:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "cfa36f3d",
									"id": 1385,
									"mutability": "mutable",
									"name": "etfId",
									"nameLocation": "771:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1515,
									"src": "756:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1384,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "756:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1394,
										"nodeType": "Block",
										"src": "995:159:9",
										"statements": []
									},
									"documentation": {
										"id": 1386,
										"nodeType": "StructuredDocumentation",
										"src": "783:151:9",
										"text": "@dev The logic/implementation constructor runs once when you deploy the master.\n      Clones DO NOT run constructors, they use initialize()."
									},
									"id": 1395,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1391,
													"name": "_directory",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1388,
													"src": "983:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1392,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1390,
												"name": "ImDirectory",
												"nameLocations": [
													"971:11:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1298,
												"src": "971:11:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "971:23:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "_directory",
												"nameLocation": "959:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "951:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:20:9"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "995:0:9"
									},
									"scope": 1515,
									"src": "939:215:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"errorSelector": "0dc149f0",
									"id": 1397,
									"name": "AlreadyInitialized",
									"nameLocation": "1166:18:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1184:2:9"
									},
									"src": "1160:27:9"
								},
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "1398:308:9",
										"statements": [
											{
												"condition": {
													"id": 1411,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1383,
													"src": "1412:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1415,
												"nodeType": "IfStatement",
												"src": "1408:45:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1412,
															"name": "AlreadyInitialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "1433:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1433:20:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1414,
													"nodeType": "RevertStatement",
													"src": "1426:27:9"
												}
											},
											{
												"expression": {
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1416,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1383,
														"src": "1463:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1478:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1463:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "1463:19:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1421,
															"name": "directory_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "1574:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1420,
														"name": "_setDirectory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "1560:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1560:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "1560:25:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1425,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "1659:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1426,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "1666:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1424,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "1646:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1646:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "1646:28:9"
											},
											{
												"expression": {
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1429,
														"name": "etfId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1385,
														"src": "1685:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1430,
														"name": "etfId_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1400,
														"src": "1693:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1685:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1432,
												"nodeType": "ExpressionStatement",
												"src": "1685:14:9"
											}
										]
									},
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "1192:80:9",
										"text": "@notice One-time initializer for clones (constructors don't run for proxies)"
									},
									"functionSelector": "6ebd362c",
									"id": 1434,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1409,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1408,
												"name": "initializer",
												"nameLocations": [
													"1386:11:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 107,
												"src": "1386:11:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1386:11:9"
										}
									],
									"name": "initialize",
									"nameLocation": "1286:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "etfId_",
												"nameLocation": "1305:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "1297:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1327:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "1313:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1401,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1313:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1348:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "1334:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1403,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1334:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "directory_",
												"nameLocation": "1365:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "1357:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1357:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:80:9"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1398:0:9"
									},
									"scope": 1515,
									"src": "1277:429:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1449,
										"nodeType": "Block",
										"src": "1816:34:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1445,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "1832:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1446,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "1836:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1444,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "1826:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1448,
												"nodeType": "ExpressionStatement",
												"src": "1826:17:9"
											}
										]
									},
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "1712:34:9",
										"text": "@notice Router-controlled mint"
									},
									"functionSelector": "40c10f19",
									"id": 1450,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1442,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1441,
												"name": "onlyEtfRouter",
												"nameLocations": [
													"1802:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1331,
												"src": "1802:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1802:13:9"
										}
									],
									"name": "mint",
									"nameLocation": "1760:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1773:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "1765:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1765:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1785:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "1777:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1777:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1764:28:9"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:0:9"
									},
									"scope": 1515,
									"src": "1751:99:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "1962:36:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1461,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "1978:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1462,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "1984:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1460,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "1972:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1972:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1464,
												"nodeType": "ExpressionStatement",
												"src": "1972:19:9"
											}
										]
									},
									"documentation": {
										"id": 1451,
										"nodeType": "StructuredDocumentation",
										"src": "1856:34:9",
										"text": "@notice Router-controlled burn"
									},
									"functionSelector": "9dc29fac",
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1458,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1457,
												"name": "onlyEtfRouter",
												"nameLocations": [
													"1948:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1331,
												"src": "1948:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1948:13:9"
										}
									],
									"name": "burn",
									"nameLocation": "1904:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1917:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "1909:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1909:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1931:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "1923:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1908:30:9"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1962:0:9"
									},
									"scope": 1515,
									"src": "1895:103:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										683
									],
									"body": {
										"id": 1513,
										"nodeType": "Block",
										"src": "2168:304:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1480,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "2192:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1481,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "2198:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1482,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "2202:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1477,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2178:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_EtfToken_$1515_$",
																"typeString": "type(contract super EtfToken)"
															}
														},
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2184:7:9",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 683,
														"src": "2178:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2178:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1484,
												"nodeType": "ExpressionStatement",
												"src": "2178:30:9"
											},
											{
												"assignments": [
													1487
												],
												"declarations": [
													{
														"constant": false,
														"id": 1487,
														"mutability": "mutable",
														"name": "etfTokenEvents",
														"nameLocation": "2270:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 1513,
														"src": "2254:30:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IEtfTokenEvents_$1347",
															"typeString": "contract IEtfTokenEvents"
														},
														"typeName": {
															"id": 1486,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1485,
																"name": "IEtfTokenEvents",
																"nameLocations": [
																	"2254:15:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1347,
																"src": "2254:15:9"
															},
															"referencedDeclaration": 1347,
															"src": "2254:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEtfTokenEvents_$1347",
																"typeString": "contract IEtfTokenEvents"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1490,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1488,
														"name": "getEtfTokenEvents",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "2287:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEtfTokenEvents_$1347_$",
															"typeString": "function () view returns (contract IEtfTokenEvents)"
														}
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2287:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEtfTokenEvents_$1347",
														"typeString": "contract IEtfTokenEvents"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2254:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1494,
																		"name": "etfTokenEvents",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1487,
																		"src": "2332:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IEtfTokenEvents_$1347",
																			"typeString": "contract IEtfTokenEvents"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IEtfTokenEvents_$1347",
																			"typeString": "contract IEtfTokenEvents"
																		}
																	],
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2324:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1492,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2324:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2324:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2359:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2351:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1496,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2351:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2351:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2324:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "457466546f6b656e3a206576656e747320636f6e7472616374206e6f7420736574",
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2363:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4",
																"typeString": "literal_string \"EtfToken: events contract not set\""
															},
															"value": "EtfToken: events contract not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c3e75038c5a463ae86ae14136b2beabd12740e1719860865bd48343fb03bccf4",
																"typeString": "literal_string \"EtfToken: events contract not set\""
															}
														],
														"id": 1491,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2316:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:83:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1503,
												"nodeType": "ExpressionStatement",
												"src": "2316:83:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1507,
															"name": "etfId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1385,
															"src": "2442:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1508,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "2449:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1509,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "2455:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1510,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "2459:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1504,
															"name": "etfTokenEvents",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "2409:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEtfTokenEvents_$1347",
																"typeString": "contract IEtfTokenEvents"
															}
														},
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2424:17:9",
														"memberName": "emitTransferEvent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1346,
														"src": "2409:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,address,uint256) external"
														}
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2409:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1512,
												"nodeType": "ExpressionStatement",
												"src": "2409:56:9"
											}
										]
									},
									"documentation": {
										"id": 1467,
										"nodeType": "StructuredDocumentation",
										"src": "2004:83:9",
										"text": "@dev OZ v5 central hook for transfer/mint/burn; forward event to EtfTokenEvents"
									},
									"id": 1514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "2101:7:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1475,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2159:8:9"
									},
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2117:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "2109:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2131:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "2123:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2143:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "2135:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2135:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2108:41:9"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2168:0:9"
									},
									"scope": 1515,
									"src": "2092:380:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1516,
							"src": "635:1839:9",
							"usedErrors": [
								16,
								19,
								942,
								947,
								952,
								961,
								966,
								971,
								1397
							],
							"usedEvents": [
								24,
								1079,
								1088
							]
						}
					],
					"src": "32:2443:9"
				},
				"id": 9
			}
		}
	}
}