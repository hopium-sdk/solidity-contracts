{
	"id": "fb3dc3450fd5fd8891b74c6d6937be16",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"hopium/standalone/quoter.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.30;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\n\ninterface IUniswapV2Pair {\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n}\n\ncontract Helpers {\n    /// @dev Returns reserves and decimals ordered so that the first tuple corresponds to `baseToken`.\n    function _getOrderedReserves(address pairAddress, address baseToken)\n        internal\n        view\n        returns (\n            uint256 reserveBase,\n            uint8 decBase,\n            uint256 reserveQuote,\n            uint8 decQuote,\n            address quoteToken\n        )\n    {\n        IUniswapV2Pair pair = IUniswapV2Pair(pairAddress);\n        (uint112 r0, uint112 r1, ) = pair.getReserves();\n        address t0 = pair.token0();\n        address t1 = pair.token1();\n\n        bool baseIsToken0;\n        if (t0 == baseToken) {\n            baseIsToken0 = true;\n        } else if (t1 == baseToken) {\n            baseIsToken0 = false;\n        } else {\n            revert(\"Pair does not contain base token\");\n        }\n\n        reserveBase  = baseIsToken0 ? uint256(r0) : uint256(r1);\n        reserveQuote = baseIsToken0 ? uint256(r1) : uint256(r0);\n        quoteToken   = baseIsToken0 ? t1 : t0;\n\n        // Use metadata for decimals so helpers are reusable (WETH is typically 18, but don't assume).\n        decBase  = IERC20Metadata(baseToken).decimals();\n        decQuote = IERC20Metadata(quoteToken).decimals();\n    }\n\n    /// @dev Compute price as \"amountA per 1 unit of B\", scaled to 1e18.\n    /// price18 = (reserveA * 10^(18 + decB - decA)) / reserveB\n    function _computePrice18(\n        uint256 reserveA,\n        uint8 decA,\n        uint256 reserveB,\n        uint8 decB\n    ) internal pure returns (uint256 price18) {\n        uint256 num = reserveA * 1e18;\n        if (decB > decA) {\n            num *= 10 ** uint256(decB - decA);\n        } else if (decA > decB) {\n            num /= 10 ** uint256(decA - decB);\n        }\n        price18 = num / reserveB;\n    }\n}\n\ncontract Quoter is Helpers {\n    address public WETH_ADDRESS;\n    address public WETH_USD_PAIR_ADDRESS;\n\n    constructor(address _wethAddress, address _wethUsdPairAddress) {\n        WETH_ADDRESS = _wethAddress;\n        WETH_USD_PAIR_ADDRESS = _wethUsdPairAddress;\n    }\n\n    /// @notice Returns WETH per 1 QUOTE (scaled 1e18) for an arbitrary WETH-QUOTE pair.\n    function getTokenWethPrice(address pairAddress) public view returns (uint256 price18) {\n        (\n            uint256 reserveWeth,\n            uint8 decW,\n            uint256 reserveQuote,\n            uint8 decQ,\n\n        ) = _getOrderedReserves(pairAddress, WETH_ADDRESS);\n\n        // WETH per 1 QUOTE\n        price18 = _computePrice18(reserveWeth, decW, reserveQuote, decQ);\n    }\n\n    /// @notice Returns USD price of 1 TOKEN (scaled to 1e18)\n    function getTokenUsdPrice(address pairAddress) public view returns (uint256 price18) {\n        uint256 tokenWeth = getTokenWethPrice(pairAddress); // WETH per 1 TOKEN\n        uint256 wethUsd   = getWethUsdPrice();              // USD per 1 WETH\n\n        // tokenUsd = (WETH per TOKEN) * (USD per WETH)\n        price18 = (tokenWeth * wethUsd) / 1e18;\n    }\n\n    /// @notice Returns USD per 1 WETH (scaled 1e18) using the stored WETH/USD pair.\n    function getWethUsdPrice() public view returns (uint256 price18) {\n        (\n            uint256 reserveWeth,\n            uint8 decW,\n            uint256 reserveUsd,\n            uint8 decU,\n\n        ) = _getOrderedReserves(WETH_USD_PAIR_ADDRESS, WETH_ADDRESS);\n\n        // USD per 1 WETH\n        price18 = _computePrice18(reserveUsd, decU, reserveWeth, decW);\n    }\n\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hopium/standalone/quoter.sol": {
				"Helpers": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"hopium/standalone/quoter.sol\":445:2247  contract Helpers {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"hopium/standalone/quoter.sol\":445:2247  contract Helpers {... */\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122025b11b831b6f47506fac75aa71b6775b0c8333bb76de6cf967e054d127900e8d64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50603e80601a5f395ff3fe60806040525f5ffdfea264697066735822122025b11b831b6f47506fac75aa71b6775b0c8333bb76de6cf967e054d127900e8d64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xB1 SHL DUP4 SHL PUSH16 0x47506FAC75AA71B6775B0C8333BB76DE PUSH13 0xF967E054D127900E8D64736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "445:1802:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f5ffdfea264697066735822122025b11b831b6f47506fac75aa71b6775b0c8333bb76de6cf967e054d127900e8d64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xB1 SHL DUP4 SHL PUSH16 0x47506FAC75AA71B6775B0C8333BB76DE PUSH13 0xF967E054D127900E8D64736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "445:1802:2:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							},
							"internal": {
								"_computePrice18(uint256,uint8,uint256,uint8)": "infinite",
								"_getOrderedReserves(address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 445,
									"end": 2247,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 445,
									"end": 2247,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 445,
									"end": 2247,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 445,
									"end": 2247,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 445,
									"end": 2247,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 445,
									"end": 2247,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 445,
									"end": 2247,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 445,
									"end": 2247,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 445,
									"end": 2247,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 2247,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 2247,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 445,
									"end": 2247,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 445,
									"end": 2247,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 445,
									"end": 2247,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 445,
									"end": 2247,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 445,
									"end": 2247,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 445,
									"end": 2247,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 445,
									"end": 2247,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 2247,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 445,
									"end": 2247,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 2247,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122025b11b831b6f47506fac75aa71b6775b0c8333bb76de6cf967e054d127900e8d64736f6c634300081e0033",
									".code": [
										{
											"begin": 445,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 445,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 2247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 2247,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"hopium/standalone/quoter.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/standalone/quoter.sol\":\"Helpers\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"hopium/standalone/quoter.sol\":{\"keccak256\":\"0x2df01ecebbafe79cabab0e9c6738ac341ea5db0b63794ed4418ece65db58078f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb9bf2ec37bdb834bf1593fab5f36d22c503afeb2d2dc9f8093459a9fbfc433a\",\"dweb:/ipfs/QmVkVsgPd6KRhKQDnMuSNgS4V71dfJhvZXyayHoDfz1VMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV2Pair": {
					"abi": [
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getReserves()": "0902f1ac",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/standalone/quoter.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"hopium/standalone/quoter.sol\":{\"keccak256\":\"0x2df01ecebbafe79cabab0e9c6738ac341ea5db0b63794ed4418ece65db58078f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb9bf2ec37bdb834bf1593fab5f36d22c503afeb2d2dc9f8093459a9fbfc433a\",\"dweb:/ipfs/QmVkVsgPd6KRhKQDnMuSNgS4V71dfJhvZXyayHoDfz1VMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Quoter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_wethAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_wethUsdPairAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "WETH_ADDRESS",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETH_USD_PAIR_ADDRESS",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pairAddress",
									"type": "address"
								}
							],
							"name": "getTokenUsdPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price18",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pairAddress",
									"type": "address"
								}
							],
							"name": "getTokenWethPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price18",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getWethUsdPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price18",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"hopium/standalone/quoter.sol\":2249:3877  contract Quoter is Helpers {... */\n  mstore(0x40, 0x80)\n    /* \"hopium/standalone/quoter.sol\":2358:2518  constructor(address _wethAddress, address _wethUsdPairAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"hopium/standalone/quoter.sol\":2446:2458  _wethAddress */\n  dup2\n    /* \"hopium/standalone/quoter.sol\":2431:2443  WETH_ADDRESS */\n  0x00\n  0x00\n    /* \"hopium/standalone/quoter.sol\":2431:2458  WETH_ADDRESS = _wethAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"hopium/standalone/quoter.sol\":2492:2511  _wethUsdPairAddress */\n  dup1\n    /* \"hopium/standalone/quoter.sol\":2468:2489  WETH_USD_PAIR_ADDRESS */\n  0x01\n  0x00\n    /* \"hopium/standalone/quoter.sol\":2468:2511  WETH_USD_PAIR_ADDRESS = _wethUsdPairAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"hopium/standalone/quoter.sol\":2358:2518  constructor(address _wethAddress, address _wethUsdPairAddress) {... */\n  pop\n  pop\n    /* \"hopium/standalone/quoter.sol\":2249:3877  contract Quoter is Helpers {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  0x00\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":949:1068   */\ntag_27:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_29\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_30\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"hopium/standalone/quoter.sol\":2249:3877  contract Quoter is Helpers {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"hopium/standalone/quoter.sol\":2249:3877  contract Quoter is Helpers {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x593bcf\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x040141e5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0b017603\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6855e939\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7b49b49d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"hopium/standalone/quoter.sol\":3063:3418  function getTokenUsdPrice(address pairAddress) public view returns (uint256 price18) {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/standalone/quoter.sol\":2282:2309  address public WETH_ADDRESS */\n    tag_4:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/standalone/quoter.sol\":2315:2351  address public WETH_USD_PAIR_ADDRESS */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/standalone/quoter.sol\":3509:3874  function getWethUsdPrice() public view returns (uint256 price18) {... */\n    tag_6:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/standalone/quoter.sol\":2613:2995  function getTokenWethPrice(address pairAddress) public view returns (uint256 price18) {... */\n    tag_7:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/standalone/quoter.sol\":3063:3418  function getTokenUsdPrice(address pairAddress) public view returns (uint256 price18) {... */\n    tag_11:\n        /* \"hopium/standalone/quoter.sol\":3131:3146  uint256 price18 */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":3158:3175  uint256 tokenWeth */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":3178:3208  getTokenWethPrice(pairAddress) */\n      tag_29\n        /* \"hopium/standalone/quoter.sol\":3196:3207  pairAddress */\n      dup4\n        /* \"hopium/standalone/quoter.sol\":3178:3195  getTokenWethPrice */\n      tag_26\n        /* \"hopium/standalone/quoter.sol\":3178:3208  getTokenWethPrice(pairAddress) */\n      jump\t// in\n    tag_29:\n        /* \"hopium/standalone/quoter.sol\":3158:3208  uint256 tokenWeth = getTokenWethPrice(pairAddress) */\n      swap1\n      pop\n        /* \"hopium/standalone/quoter.sol\":3238:3253  uint256 wethUsd */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":3258:3275  getWethUsdPrice() */\n      tag_30\n        /* \"hopium/standalone/quoter.sol\":3258:3273  getWethUsdPrice */\n      tag_22\n        /* \"hopium/standalone/quoter.sol\":3258:3275  getWethUsdPrice() */\n      jump\t// in\n    tag_30:\n        /* \"hopium/standalone/quoter.sol\":3238:3275  uint256 wethUsd   = getWethUsdPrice() */\n      swap1\n      pop\n        /* \"hopium/standalone/quoter.sol\":3407:3411  1e18 */\n      0x0de0b6b3a7640000\n        /* \"hopium/standalone/quoter.sol\":3396:3403  wethUsd */\n      dup2\n        /* \"hopium/standalone/quoter.sol\":3384:3393  tokenWeth */\n      dup4\n        /* \"hopium/standalone/quoter.sol\":3384:3403  tokenWeth * wethUsd */\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"hopium/standalone/quoter.sol\":3383:3411  (tokenWeth * wethUsd) / 1e18 */\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"hopium/standalone/quoter.sol\":3373:3411  price18 = (tokenWeth * wethUsd) / 1e18 */\n      swap3\n      pop\n        /* \"hopium/standalone/quoter.sol\":3148:3418  {... */\n      pop\n      pop\n        /* \"hopium/standalone/quoter.sol\":3063:3418  function getTokenUsdPrice(address pairAddress) public view returns (uint256 price18) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"hopium/standalone/quoter.sol\":2282:2309  address public WETH_ADDRESS */\n    tag_15:\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"hopium/standalone/quoter.sol\":2315:2351  address public WETH_USD_PAIR_ADDRESS */\n    tag_19:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"hopium/standalone/quoter.sol\":3509:3874  function getWethUsdPrice() public view returns (uint256 price18) {... */\n    tag_22:\n        /* \"hopium/standalone/quoter.sol\":3557:3572  uint256 price18 */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":3598:3617  uint256 reserveWeth */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":3631:3641  uint8 decW */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":3655:3673  uint256 reserveUsd */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":3687:3697  uint8 decU */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":3712:3768  _getOrderedReserves(WETH_USD_PAIR_ADDRESS, WETH_ADDRESS) */\n      tag_36\n        /* \"hopium/standalone/quoter.sol\":3732:3753  WETH_USD_PAIR_ADDRESS */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/standalone/quoter.sol\":3755:3767  WETH_ADDRESS */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/standalone/quoter.sol\":3712:3731  _getOrderedReserves */\n      tag_37\n        /* \"hopium/standalone/quoter.sol\":3712:3768  _getOrderedReserves(WETH_USD_PAIR_ADDRESS, WETH_ADDRESS) */\n      jump\t// in\n    tag_36:\n        /* \"hopium/standalone/quoter.sol\":3584:3768  (... */\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \"hopium/standalone/quoter.sol\":3815:3867  _computePrice18(reserveUsd, decU, reserveWeth, decW) */\n      tag_38\n        /* \"hopium/standalone/quoter.sol\":3831:3841  reserveUsd */\n      dup3\n        /* \"hopium/standalone/quoter.sol\":3843:3847  decU */\n      dup3\n        /* \"hopium/standalone/quoter.sol\":3849:3860  reserveWeth */\n      dup7\n        /* \"hopium/standalone/quoter.sol\":3862:3866  decW */\n      dup7\n        /* \"hopium/standalone/quoter.sol\":3815:3830  _computePrice18 */\n      tag_39\n        /* \"hopium/standalone/quoter.sol\":3815:3867  _computePrice18(reserveUsd, decU, reserveWeth, decW) */\n      jump\t// in\n    tag_38:\n        /* \"hopium/standalone/quoter.sol\":3805:3867  price18 = _computePrice18(reserveUsd, decU, reserveWeth, decW) */\n      swap5\n      pop\n        /* \"hopium/standalone/quoter.sol\":3574:3874  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"hopium/standalone/quoter.sol\":3509:3874  function getWethUsdPrice() public view returns (uint256 price18) {... */\n      swap1\n      jump\t// out\n        /* \"hopium/standalone/quoter.sol\":2613:2995  function getTokenWethPrice(address pairAddress) public view returns (uint256 price18) {... */\n    tag_26:\n        /* \"hopium/standalone/quoter.sol\":2682:2697  uint256 price18 */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":2723:2742  uint256 reserveWeth */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":2756:2766  uint8 decW */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":2780:2800  uint256 reserveQuote */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":2814:2824  uint8 decQ */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":2839:2885  _getOrderedReserves(pairAddress, WETH_ADDRESS) */\n      tag_41\n        /* \"hopium/standalone/quoter.sol\":2859:2870  pairAddress */\n      dup7\n        /* \"hopium/standalone/quoter.sol\":2872:2884  WETH_ADDRESS */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/standalone/quoter.sol\":2839:2858  _getOrderedReserves */\n      tag_37\n        /* \"hopium/standalone/quoter.sol\":2839:2885  _getOrderedReserves(pairAddress, WETH_ADDRESS) */\n      jump\t// in\n    tag_41:\n        /* \"hopium/standalone/quoter.sol\":2709:2885  (... */\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \"hopium/standalone/quoter.sol\":2934:2988  _computePrice18(reserveWeth, decW, reserveQuote, decQ) */\n      tag_42\n        /* \"hopium/standalone/quoter.sol\":2950:2961  reserveWeth */\n      dup5\n        /* \"hopium/standalone/quoter.sol\":2963:2967  decW */\n      dup5\n        /* \"hopium/standalone/quoter.sol\":2969:2981  reserveQuote */\n      dup5\n        /* \"hopium/standalone/quoter.sol\":2983:2987  decQ */\n      dup5\n        /* \"hopium/standalone/quoter.sol\":2934:2949  _computePrice18 */\n      tag_39\n        /* \"hopium/standalone/quoter.sol\":2934:2988  _computePrice18(reserveWeth, decW, reserveQuote, decQ) */\n      jump\t// in\n    tag_42:\n        /* \"hopium/standalone/quoter.sol\":2924:2988  price18 = _computePrice18(reserveWeth, decW, reserveQuote, decQ) */\n      swap5\n      pop\n        /* \"hopium/standalone/quoter.sol\":2699:2995  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"hopium/standalone/quoter.sol\":2613:2995  function getTokenWethPrice(address pairAddress) public view returns (uint256 price18) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"hopium/standalone/quoter.sol\":571:1694  function _getOrderedReserves(address pairAddress, address baseToken)... */\n    tag_37:\n        /* \"hopium/standalone/quoter.sol\":700:719  uint256 reserveBase */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":733:746  uint8 decBase */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":760:780  uint256 reserveQuote */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":794:808  uint8 decQuote */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":822:840  address quoteToken */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":865:884  IUniswapV2Pair pair */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":902:913  pairAddress */\n      dup8\n        /* \"hopium/standalone/quoter.sol\":865:914  IUniswapV2Pair pair = IUniswapV2Pair(pairAddress) */\n      swap1\n      pop\n        /* \"hopium/standalone/quoter.sol\":925:935  uint112 r0 */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":937:947  uint112 r1 */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":953:957  pair */\n      dup3\n        /* \"hopium/standalone/quoter.sol\":953:969  pair.getReserves */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0902f1ac\n        /* \"hopium/standalone/quoter.sol\":953:971  pair.getReserves() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_45\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_45:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"hopium/standalone/quoter.sol\":924:971  (uint112 r0, uint112 r1, ) = pair.getReserves() */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"hopium/standalone/quoter.sol\":981:991  address t0 */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":994:998  pair */\n      dup4\n        /* \"hopium/standalone/quoter.sol\":994:1005  pair.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"hopium/standalone/quoter.sol\":994:1007  pair.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"hopium/standalone/quoter.sol\":981:1007  address t0 = pair.token0() */\n      swap1\n      pop\n        /* \"hopium/standalone/quoter.sol\":1017:1027  address t1 */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":1030:1034  pair */\n      dup5\n        /* \"hopium/standalone/quoter.sol\":1030:1041  pair.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"hopium/standalone/quoter.sol\":1030:1043  pair.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_54:\n        /* \"hopium/standalone/quoter.sol\":1017:1043  address t1 = pair.token1() */\n      swap1\n      pop\n        /* \"hopium/standalone/quoter.sol\":1054:1071  bool baseIsToken0 */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":1091:1100  baseToken */\n      dup12\n        /* \"hopium/standalone/quoter.sol\":1085:1100  t0 == baseToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/standalone/quoter.sol\":1085:1087  t0 */\n      dup4\n        /* \"hopium/standalone/quoter.sol\":1085:1100  t0 == baseToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"hopium/standalone/quoter.sol\":1081:1291  if (t0 == baseToken) {... */\n      tag_55\n      jumpi\n        /* \"hopium/standalone/quoter.sol\":1131:1135  true */\n      0x01\n        /* \"hopium/standalone/quoter.sol\":1116:1135  baseIsToken0 = true */\n      swap1\n      pop\n        /* \"hopium/standalone/quoter.sol\":1081:1291  if (t0 == baseToken) {... */\n      jump(tag_56)\n    tag_55:\n        /* \"hopium/standalone/quoter.sol\":1162:1171  baseToken */\n      dup12\n        /* \"hopium/standalone/quoter.sol\":1156:1171  t1 == baseToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/standalone/quoter.sol\":1156:1158  t1 */\n      dup3\n        /* \"hopium/standalone/quoter.sol\":1156:1171  t1 == baseToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"hopium/standalone/quoter.sol\":1152:1291  if (t1 == baseToken) {... */\n      tag_57\n      jumpi\n        /* \"hopium/standalone/quoter.sol\":1202:1207  false */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":1187:1207  baseIsToken0 = false */\n      swap1\n      pop\n        /* \"hopium/standalone/quoter.sol\":1152:1291  if (t1 == baseToken) {... */\n      jump(tag_58)\n    tag_57:\n        /* \"hopium/standalone/quoter.sol\":1238:1280  revert(\"Pair does not contain base token\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hopium/standalone/quoter.sol\":1152:1291  if (t1 == baseToken) {... */\n    tag_58:\n        /* \"hopium/standalone/quoter.sol\":1081:1291  if (t0 == baseToken) {... */\n    tag_56:\n        /* \"hopium/standalone/quoter.sol\":1316:1328  baseIsToken0 */\n      dup1\n        /* \"hopium/standalone/quoter.sol\":1316:1356  baseIsToken0 ? uint256(r0) : uint256(r1) */\n      tag_61\n      jumpi\n        /* \"hopium/standalone/quoter.sol\":1353:1355  r1 */\n      dup4\n        /* \"hopium/standalone/quoter.sol\":1345:1356  uint256(r1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"hopium/standalone/quoter.sol\":1316:1356  baseIsToken0 ? uint256(r0) : uint256(r1) */\n      jump(tag_62)\n    tag_61:\n        /* \"hopium/standalone/quoter.sol\":1339:1341  r0 */\n      dup5\n        /* \"hopium/standalone/quoter.sol\":1331:1342  uint256(r0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"hopium/standalone/quoter.sol\":1316:1356  baseIsToken0 ? uint256(r0) : uint256(r1) */\n    tag_62:\n        /* \"hopium/standalone/quoter.sol\":1301:1356  reserveBase  = baseIsToken0 ? uint256(r0) : uint256(r1) */\n      swap11\n      pop\n        /* \"hopium/standalone/quoter.sol\":1381:1393  baseIsToken0 */\n      dup1\n        /* \"hopium/standalone/quoter.sol\":1381:1421  baseIsToken0 ? uint256(r1) : uint256(r0) */\n      tag_63\n      jumpi\n        /* \"hopium/standalone/quoter.sol\":1418:1420  r0 */\n      dup5\n        /* \"hopium/standalone/quoter.sol\":1410:1421  uint256(r0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"hopium/standalone/quoter.sol\":1381:1421  baseIsToken0 ? uint256(r1) : uint256(r0) */\n      jump(tag_64)\n    tag_63:\n        /* \"hopium/standalone/quoter.sol\":1404:1406  r1 */\n      dup4\n        /* \"hopium/standalone/quoter.sol\":1396:1407  uint256(r1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"hopium/standalone/quoter.sol\":1381:1421  baseIsToken0 ? uint256(r1) : uint256(r0) */\n    tag_64:\n        /* \"hopium/standalone/quoter.sol\":1366:1421  reserveQuote = baseIsToken0 ? uint256(r1) : uint256(r0) */\n      swap9\n      pop\n        /* \"hopium/standalone/quoter.sol\":1446:1458  baseIsToken0 */\n      dup1\n        /* \"hopium/standalone/quoter.sol\":1446:1468  baseIsToken0 ? t1 : t0 */\n      tag_65\n      jumpi\n        /* \"hopium/standalone/quoter.sol\":1466:1468  t0 */\n      dup3\n        /* \"hopium/standalone/quoter.sol\":1446:1468  baseIsToken0 ? t1 : t0 */\n      jump(tag_66)\n    tag_65:\n        /* \"hopium/standalone/quoter.sol\":1461:1463  t1 */\n      dup2\n        /* \"hopium/standalone/quoter.sol\":1446:1468  baseIsToken0 ? t1 : t0 */\n    tag_66:\n        /* \"hopium/standalone/quoter.sol\":1431:1468  quoteToken   = baseIsToken0 ? t1 : t0 */\n      swap7\n      pop\n        /* \"hopium/standalone/quoter.sol\":1608:1617  baseToken */\n      dup12\n        /* \"hopium/standalone/quoter.sol\":1593:1627  IERC20Metadata(baseToken).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"hopium/standalone/quoter.sol\":1593:1629  IERC20Metadata(baseToken).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"hopium/standalone/quoter.sol\":1582:1629  decBase  = IERC20Metadata(baseToken).decimals() */\n      swap10\n      pop\n        /* \"hopium/standalone/quoter.sol\":1665:1675  quoteToken */\n      dup7\n        /* \"hopium/standalone/quoter.sol\":1650:1685  IERC20Metadata(quoteToken).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"hopium/standalone/quoter.sol\":1650:1687  IERC20Metadata(quoteToken).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_72\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_73:\n        /* \"hopium/standalone/quoter.sol\":1639:1687  decQuote = IERC20Metadata(quoteToken).decimals() */\n      swap8\n      pop\n        /* \"hopium/standalone/quoter.sol\":855:1694  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"hopium/standalone/quoter.sol\":571:1694  function _getOrderedReserves(address pairAddress, address baseToken)... */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"hopium/standalone/quoter.sol\":1837:2245  function _computePrice18(... */\n    tag_39:\n        /* \"hopium/standalone/quoter.sol\":1983:1998  uint256 price18 */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":2010:2021  uint256 num */\n      0x00\n        /* \"hopium/standalone/quoter.sol\":2035:2039  1e18 */\n      0x0de0b6b3a7640000\n        /* \"hopium/standalone/quoter.sol\":2024:2032  reserveA */\n      dup7\n        /* \"hopium/standalone/quoter.sol\":2024:2039  reserveA * 1e18 */\n      tag_75\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_75:\n        /* \"hopium/standalone/quoter.sol\":2010:2039  uint256 num = reserveA * 1e18 */\n      swap1\n      pop\n        /* \"hopium/standalone/quoter.sol\":2060:2064  decA */\n      dup5\n        /* \"hopium/standalone/quoter.sol\":2053:2064  decB > decA */\n      0xff\n      and\n        /* \"hopium/standalone/quoter.sol\":2053:2057  decB */\n      dup4\n        /* \"hopium/standalone/quoter.sol\":2053:2064  decB > decA */\n      0xff\n      and\n      gt\n        /* \"hopium/standalone/quoter.sol\":2049:2205  if (decB > decA) {... */\n      iszero\n      tag_76\n      jumpi\n        /* \"hopium/standalone/quoter.sol\":2108:2112  decA */\n      dup5\n        /* \"hopium/standalone/quoter.sol\":2101:2105  decB */\n      dup4\n        /* \"hopium/standalone/quoter.sol\":2101:2112  decB - decA */\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"hopium/standalone/quoter.sol\":2093:2113  uint256(decB - decA) */\n      0xff\n      and\n        /* \"hopium/standalone/quoter.sol\":2087:2089  10 */\n      0x0a\n        /* \"hopium/standalone/quoter.sol\":2087:2113  10 ** uint256(decB - decA) */\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"hopium/standalone/quoter.sol\":2080:2113  num *= 10 ** uint256(decB - decA) */\n      dup2\n      tag_81\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_81:\n      swap1\n      pop\n        /* \"hopium/standalone/quoter.sol\":2049:2205  if (decB > decA) {... */\n      jump(tag_82)\n    tag_76:\n        /* \"hopium/standalone/quoter.sol\":2141:2145  decB */\n      dup3\n        /* \"hopium/standalone/quoter.sol\":2134:2145  decA > decB */\n      0xff\n      and\n        /* \"hopium/standalone/quoter.sol\":2134:2138  decA */\n      dup6\n        /* \"hopium/standalone/quoter.sol\":2134:2145  decA > decB */\n      0xff\n      and\n      gt\n        /* \"hopium/standalone/quoter.sol\":2130:2205  if (decA > decB) {... */\n      iszero\n      tag_83\n      jumpi\n        /* \"hopium/standalone/quoter.sol\":2189:2193  decB */\n      dup3\n        /* \"hopium/standalone/quoter.sol\":2182:2186  decA */\n      dup6\n        /* \"hopium/standalone/quoter.sol\":2182:2193  decA - decB */\n      tag_84\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_84:\n        /* \"hopium/standalone/quoter.sol\":2174:2194  uint256(decA - decB) */\n      0xff\n      and\n        /* \"hopium/standalone/quoter.sol\":2168:2170  10 */\n      0x0a\n        /* \"hopium/standalone/quoter.sol\":2168:2194  10 ** uint256(decA - decB) */\n      tag_85\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_85:\n        /* \"hopium/standalone/quoter.sol\":2161:2194  num /= 10 ** uint256(decA - decB) */\n      dup2\n      tag_86\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_86:\n      swap1\n      pop\n        /* \"hopium/standalone/quoter.sol\":2130:2205  if (decA > decB) {... */\n    tag_83:\n        /* \"hopium/standalone/quoter.sol\":2049:2205  if (decB > decA) {... */\n    tag_82:\n        /* \"hopium/standalone/quoter.sol\":2230:2238  reserveB */\n      dup4\n        /* \"hopium/standalone/quoter.sol\":2224:2227  num */\n      dup2\n        /* \"hopium/standalone/quoter.sol\":2224:2238  num / reserveB */\n      tag_87\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_87:\n        /* \"hopium/standalone/quoter.sol\":2214:2238  price18 = num / reserveB */\n      swap2\n      pop\n        /* \"hopium/standalone/quoter.sol\":2000:2245  {... */\n      pop\n        /* \"hopium/standalone/quoter.sol\":1837:2245  function _computePrice18(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_89:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_91:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_92:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_122\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_91\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_93:\n        /* \"#utility.yul\":641:665   */\n      tag_124\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_92\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_125\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_125:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_94:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_127\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_93\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_10:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_130\n      tag_89\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":917:1036   */\n    tag_129:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_131\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_94\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_95:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_96:\n        /* \"#utility.yul\":1346:1370   */\n      tag_134\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_95\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_13:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_136\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_96\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_97:\n        /* \"#utility.yul\":1698:1722   */\n      tag_138\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_92\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_17:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_140\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_97\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2143   */\n    tag_98:\n        /* \"#utility.yul\":2011:2088   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2008:2009   */\n      0x00\n        /* \"#utility.yul\":2001:2089   */\n      mstore\n        /* \"#utility.yul\":2108:2112   */\n      0x11\n        /* \"#utility.yul\":2105:2106   */\n      0x04\n        /* \"#utility.yul\":2098:2113   */\n      mstore\n        /* \"#utility.yul\":2132:2136   */\n      0x24\n        /* \"#utility.yul\":2129:2130   */\n      0x00\n        /* \"#utility.yul\":2122:2137   */\n      revert\n        /* \"#utility.yul\":2149:2559   */\n    tag_32:\n        /* \"#utility.yul\":2189:2196   */\n      0x00\n        /* \"#utility.yul\":2212:2232   */\n      tag_143\n        /* \"#utility.yul\":2230:2231   */\n      dup3\n        /* \"#utility.yul\":2212:2232   */\n      tag_95\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2207:2232   */\n      swap2\n      pop\n        /* \"#utility.yul\":2246:2266   */\n      tag_144\n        /* \"#utility.yul\":2264:2265   */\n      dup4\n        /* \"#utility.yul\":2246:2266   */\n      tag_95\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":2241:2266   */\n      swap3\n      pop\n        /* \"#utility.yul\":2301:2302   */\n      dup3\n        /* \"#utility.yul\":2298:2299   */\n      dup3\n        /* \"#utility.yul\":2294:2303   */\n      mul\n        /* \"#utility.yul\":2323:2353   */\n      tag_145\n        /* \"#utility.yul\":2341:2352   */\n      dup2\n        /* \"#utility.yul\":2323:2353   */\n      tag_95\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":2312:2353   */\n      swap2\n      pop\n        /* \"#utility.yul\":2502:2503   */\n      dup3\n        /* \"#utility.yul\":2493:2500   */\n      dup3\n        /* \"#utility.yul\":2489:2504   */\n      div\n        /* \"#utility.yul\":2486:2487   */\n      dup5\n        /* \"#utility.yul\":2483:2505   */\n      eq\n        /* \"#utility.yul\":2463:2464   */\n      dup4\n        /* \"#utility.yul\":2456:2465   */\n      iszero\n        /* \"#utility.yul\":2436:2519   */\n      or\n        /* \"#utility.yul\":2413:2552   */\n      tag_146\n      jumpi\n        /* \"#utility.yul\":2532:2550   */\n      tag_147\n      tag_98\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2413:2552   */\n    tag_146:\n        /* \"#utility.yul\":2197:2559   */\n      pop\n        /* \"#utility.yul\":2149:2559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2565:2745   */\n    tag_99:\n        /* \"#utility.yul\":2613:2690   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2610:2611   */\n      0x00\n        /* \"#utility.yul\":2603:2691   */\n      mstore\n        /* \"#utility.yul\":2710:2714   */\n      0x12\n        /* \"#utility.yul\":2707:2708   */\n      0x04\n        /* \"#utility.yul\":2700:2715   */\n      mstore\n        /* \"#utility.yul\":2734:2738   */\n      0x24\n        /* \"#utility.yul\":2731:2732   */\n      0x00\n        /* \"#utility.yul\":2724:2739   */\n      revert\n        /* \"#utility.yul\":2751:2936   */\n    tag_34:\n        /* \"#utility.yul\":2791:2792   */\n      0x00\n        /* \"#utility.yul\":2808:2828   */\n      tag_150\n        /* \"#utility.yul\":2826:2827   */\n      dup3\n        /* \"#utility.yul\":2808:2828   */\n      tag_95\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":2803:2828   */\n      swap2\n      pop\n        /* \"#utility.yul\":2842:2862   */\n      tag_151\n        /* \"#utility.yul\":2860:2861   */\n      dup4\n        /* \"#utility.yul\":2842:2862   */\n      tag_95\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2837:2862   */\n      swap3\n      pop\n        /* \"#utility.yul\":2881:2882   */\n      dup3\n        /* \"#utility.yul\":2871:2906   */\n      tag_152\n      jumpi\n        /* \"#utility.yul\":2886:2904   */\n      tag_153\n      tag_99\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2871:2906   */\n    tag_152:\n        /* \"#utility.yul\":2928:2929   */\n      dup3\n        /* \"#utility.yul\":2925:2926   */\n      dup3\n        /* \"#utility.yul\":2921:2930   */\n      div\n        /* \"#utility.yul\":2916:2930   */\n      swap1\n      pop\n        /* \"#utility.yul\":2751:2936   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2942:3056   */\n    tag_100:\n        /* \"#utility.yul\":2979:2986   */\n      0x00\n        /* \"#utility.yul\":3019:3049   */\n      0xffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3012:3017   */\n      dup3\n        /* \"#utility.yul\":3008:3050   */\n      and\n        /* \"#utility.yul\":2997:3050   */\n      swap1\n      pop\n        /* \"#utility.yul\":2942:3056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3062:3184   */\n    tag_101:\n        /* \"#utility.yul\":3135:3159   */\n      tag_156\n        /* \"#utility.yul\":3153:3158   */\n      dup2\n        /* \"#utility.yul\":3135:3159   */\n      tag_100\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":3128:3133   */\n      dup2\n        /* \"#utility.yul\":3125:3160   */\n      eq\n        /* \"#utility.yul\":3115:3178   */\n      tag_157\n      jumpi\n        /* \"#utility.yul\":3174:3175   */\n      0x00\n        /* \"#utility.yul\":3171:3172   */\n      0x00\n        /* \"#utility.yul\":3164:3176   */\n      revert\n        /* \"#utility.yul\":3115:3178   */\n    tag_157:\n        /* \"#utility.yul\":3062:3184   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3190:3333   */\n    tag_102:\n        /* \"#utility.yul\":3247:3252   */\n      0x00\n        /* \"#utility.yul\":3278:3284   */\n      dup2\n        /* \"#utility.yul\":3272:3285   */\n      mload\n        /* \"#utility.yul\":3263:3285   */\n      swap1\n      pop\n        /* \"#utility.yul\":3294:3327   */\n      tag_159\n        /* \"#utility.yul\":3321:3326   */\n      dup2\n        /* \"#utility.yul\":3294:3327   */\n      tag_101\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":3190:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3432   */\n    tag_103:\n        /* \"#utility.yul\":3375:3382   */\n      0x00\n        /* \"#utility.yul\":3415:3425   */\n      0xffffffff\n        /* \"#utility.yul\":3408:3413   */\n      dup3\n        /* \"#utility.yul\":3404:3426   */\n      and\n        /* \"#utility.yul\":3393:3426   */\n      swap1\n      pop\n        /* \"#utility.yul\":3339:3432   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3438:3558   */\n    tag_104:\n        /* \"#utility.yul\":3510:3533   */\n      tag_162\n        /* \"#utility.yul\":3527:3532   */\n      dup2\n        /* \"#utility.yul\":3510:3533   */\n      tag_103\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":3503:3508   */\n      dup2\n        /* \"#utility.yul\":3500:3534   */\n      eq\n        /* \"#utility.yul\":3490:3552   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":3548:3549   */\n      0x00\n        /* \"#utility.yul\":3545:3546   */\n      0x00\n        /* \"#utility.yul\":3538:3550   */\n      revert\n        /* \"#utility.yul\":3490:3552   */\n    tag_163:\n        /* \"#utility.yul\":3438:3558   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3564:3705   */\n    tag_105:\n        /* \"#utility.yul\":3620:3625   */\n      0x00\n        /* \"#utility.yul\":3651:3657   */\n      dup2\n        /* \"#utility.yul\":3645:3658   */\n      mload\n        /* \"#utility.yul\":3636:3658   */\n      swap1\n      pop\n        /* \"#utility.yul\":3667:3699   */\n      tag_165\n        /* \"#utility.yul\":3693:3698   */\n      dup2\n        /* \"#utility.yul\":3667:3699   */\n      tag_104\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":3564:3705   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3711:4372   */\n    tag_47:\n        /* \"#utility.yul\":3798:3804   */\n      0x00\n        /* \"#utility.yul\":3806:3812   */\n      0x00\n        /* \"#utility.yul\":3814:3820   */\n      0x00\n        /* \"#utility.yul\":3863:3865   */\n      0x60\n        /* \"#utility.yul\":3851:3860   */\n      dup5\n        /* \"#utility.yul\":3842:3849   */\n      dup7\n        /* \"#utility.yul\":3838:3861   */\n      sub\n        /* \"#utility.yul\":3834:3866   */\n      slt\n        /* \"#utility.yul\":3831:3950   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":3869:3948   */\n      tag_168\n      tag_89\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":3831:3950   */\n    tag_167:\n        /* \"#utility.yul\":3989:3990   */\n      0x00\n        /* \"#utility.yul\":4014:4078   */\n      tag_169\n        /* \"#utility.yul\":4070:4077   */\n      dup7\n        /* \"#utility.yul\":4061:4067   */\n      dup3\n        /* \"#utility.yul\":4050:4059   */\n      dup8\n        /* \"#utility.yul\":4046:4068   */\n      add\n        /* \"#utility.yul\":4014:4078   */\n      tag_102\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":4004:4078   */\n      swap4\n      pop\n        /* \"#utility.yul\":3960:4088   */\n      pop\n        /* \"#utility.yul\":4127:4129   */\n      0x20\n        /* \"#utility.yul\":4153:4217   */\n      tag_170\n        /* \"#utility.yul\":4209:4216   */\n      dup7\n        /* \"#utility.yul\":4200:4206   */\n      dup3\n        /* \"#utility.yul\":4189:4198   */\n      dup8\n        /* \"#utility.yul\":4185:4207   */\n      add\n        /* \"#utility.yul\":4153:4217   */\n      tag_102\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":4143:4217   */\n      swap3\n      pop\n        /* \"#utility.yul\":4098:4227   */\n      pop\n        /* \"#utility.yul\":4266:4268   */\n      0x40\n        /* \"#utility.yul\":4292:4355   */\n      tag_171\n        /* \"#utility.yul\":4347:4354   */\n      dup7\n        /* \"#utility.yul\":4338:4344   */\n      dup3\n        /* \"#utility.yul\":4327:4336   */\n      dup8\n        /* \"#utility.yul\":4323:4345   */\n      add\n        /* \"#utility.yul\":4292:4355   */\n      tag_105\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":4282:4355   */\n      swap2\n      pop\n        /* \"#utility.yul\":4237:4365   */\n      pop\n        /* \"#utility.yul\":3711:4372   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4378:4521   */\n    tag_106:\n        /* \"#utility.yul\":4435:4440   */\n      0x00\n        /* \"#utility.yul\":4466:4472   */\n      dup2\n        /* \"#utility.yul\":4460:4473   */\n      mload\n        /* \"#utility.yul\":4451:4473   */\n      swap1\n      pop\n        /* \"#utility.yul\":4482:4515   */\n      tag_173\n        /* \"#utility.yul\":4509:4514   */\n      dup2\n        /* \"#utility.yul\":4482:4515   */\n      tag_93\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":4378:4521   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4527:4878   */\n    tag_51:\n        /* \"#utility.yul\":4597:4603   */\n      0x00\n        /* \"#utility.yul\":4646:4648   */\n      0x20\n        /* \"#utility.yul\":4634:4643   */\n      dup3\n        /* \"#utility.yul\":4625:4632   */\n      dup5\n        /* \"#utility.yul\":4621:4644   */\n      sub\n        /* \"#utility.yul\":4617:4649   */\n      slt\n        /* \"#utility.yul\":4614:4733   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":4652:4731   */\n      tag_176\n      tag_89\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":4614:4733   */\n    tag_175:\n        /* \"#utility.yul\":4772:4773   */\n      0x00\n        /* \"#utility.yul\":4797:4861   */\n      tag_177\n        /* \"#utility.yul\":4853:4860   */\n      dup5\n        /* \"#utility.yul\":4844:4850   */\n      dup3\n        /* \"#utility.yul\":4833:4842   */\n      dup6\n        /* \"#utility.yul\":4829:4851   */\n      add\n        /* \"#utility.yul\":4797:4861   */\n      tag_106\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":4787:4861   */\n      swap2\n      pop\n        /* \"#utility.yul\":4743:4871   */\n      pop\n        /* \"#utility.yul\":4527:4878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4884:5053   */\n    tag_107:\n        /* \"#utility.yul\":4968:4979   */\n      0x00\n        /* \"#utility.yul\":5002:5008   */\n      dup3\n        /* \"#utility.yul\":4997:5000   */\n      dup3\n        /* \"#utility.yul\":4990:5009   */\n      mstore\n        /* \"#utility.yul\":5042:5046   */\n      0x20\n        /* \"#utility.yul\":5037:5040   */\n      dup3\n        /* \"#utility.yul\":5033:5047   */\n      add\n        /* \"#utility.yul\":5018:5047   */\n      swap1\n      pop\n        /* \"#utility.yul\":4884:5053   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5059:5241   */\n    tag_108:\n        /* \"#utility.yul\":5199:5233   */\n      0x5061697220646f6573206e6f7420636f6e7461696e206261736520746f6b656e\n        /* \"#utility.yul\":5195:5196   */\n      0x00\n        /* \"#utility.yul\":5187:5193   */\n      dup3\n        /* \"#utility.yul\":5183:5197   */\n      add\n        /* \"#utility.yul\":5176:5234   */\n      mstore\n        /* \"#utility.yul\":5059:5241   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5247:5613   */\n    tag_109:\n        /* \"#utility.yul\":5389:5392   */\n      0x00\n        /* \"#utility.yul\":5410:5477   */\n      tag_181\n        /* \"#utility.yul\":5474:5476   */\n      0x20\n        /* \"#utility.yul\":5469:5472   */\n      dup4\n        /* \"#utility.yul\":5410:5477   */\n      tag_107\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":5403:5477   */\n      swap2\n      pop\n        /* \"#utility.yul\":5486:5579   */\n      tag_182\n        /* \"#utility.yul\":5575:5578   */\n      dup3\n        /* \"#utility.yul\":5486:5579   */\n      tag_108\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":5604:5606   */\n      0x20\n        /* \"#utility.yul\":5599:5602   */\n      dup3\n        /* \"#utility.yul\":5595:5607   */\n      add\n        /* \"#utility.yul\":5588:5607   */\n      swap1\n      pop\n        /* \"#utility.yul\":5247:5613   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5619:6038   */\n    tag_60:\n        /* \"#utility.yul\":5785:5789   */\n      0x00\n        /* \"#utility.yul\":5823:5825   */\n      0x20\n        /* \"#utility.yul\":5812:5821   */\n      dup3\n        /* \"#utility.yul\":5808:5826   */\n      add\n        /* \"#utility.yul\":5800:5826   */\n      swap1\n      pop\n        /* \"#utility.yul\":5872:5881   */\n      dup2\n        /* \"#utility.yul\":5866:5870   */\n      dup2\n        /* \"#utility.yul\":5862:5882   */\n      sub\n        /* \"#utility.yul\":5858:5859   */\n      0x00\n        /* \"#utility.yul\":5847:5856   */\n      dup4\n        /* \"#utility.yul\":5843:5860   */\n      add\n        /* \"#utility.yul\":5836:5883   */\n      mstore\n        /* \"#utility.yul\":5900:6031   */\n      tag_184\n        /* \"#utility.yul\":6026:6030   */\n      dup2\n        /* \"#utility.yul\":5900:6031   */\n      tag_109\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":5892:6031   */\n      swap1\n      pop\n        /* \"#utility.yul\":5619:6038   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6044:6130   */\n    tag_110:\n        /* \"#utility.yul\":6079:6086   */\n      0x00\n        /* \"#utility.yul\":6119:6123   */\n      0xff\n        /* \"#utility.yul\":6112:6117   */\n      dup3\n        /* \"#utility.yul\":6108:6124   */\n      and\n        /* \"#utility.yul\":6097:6124   */\n      swap1\n      pop\n        /* \"#utility.yul\":6044:6130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6136:6254   */\n    tag_111:\n        /* \"#utility.yul\":6207:6229   */\n      tag_187\n        /* \"#utility.yul\":6223:6228   */\n      dup2\n        /* \"#utility.yul\":6207:6229   */\n      tag_110\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":6200:6205   */\n      dup2\n        /* \"#utility.yul\":6197:6230   */\n      eq\n        /* \"#utility.yul\":6187:6248   */\n      tag_188\n      jumpi\n        /* \"#utility.yul\":6244:6245   */\n      0x00\n        /* \"#utility.yul\":6241:6242   */\n      0x00\n        /* \"#utility.yul\":6234:6246   */\n      revert\n        /* \"#utility.yul\":6187:6248   */\n    tag_188:\n        /* \"#utility.yul\":6136:6254   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6260:6399   */\n    tag_112:\n        /* \"#utility.yul\":6315:6320   */\n      0x00\n        /* \"#utility.yul\":6346:6352   */\n      dup2\n        /* \"#utility.yul\":6340:6353   */\n      mload\n        /* \"#utility.yul\":6331:6353   */\n      swap1\n      pop\n        /* \"#utility.yul\":6362:6393   */\n      tag_190\n        /* \"#utility.yul\":6387:6392   */\n      dup2\n        /* \"#utility.yul\":6362:6393   */\n      tag_111\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":6260:6399   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6405:6752   */\n    tag_70:\n        /* \"#utility.yul\":6473:6479   */\n      0x00\n        /* \"#utility.yul\":6522:6524   */\n      0x20\n        /* \"#utility.yul\":6510:6519   */\n      dup3\n        /* \"#utility.yul\":6501:6508   */\n      dup5\n        /* \"#utility.yul\":6497:6520   */\n      sub\n        /* \"#utility.yul\":6493:6525   */\n      slt\n        /* \"#utility.yul\":6490:6609   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":6528:6607   */\n      tag_193\n      tag_89\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":6490:6609   */\n    tag_192:\n        /* \"#utility.yul\":6648:6649   */\n      0x00\n        /* \"#utility.yul\":6673:6735   */\n      tag_194\n        /* \"#utility.yul\":6727:6734   */\n      dup5\n        /* \"#utility.yul\":6718:6724   */\n      dup3\n        /* \"#utility.yul\":6707:6716   */\n      dup6\n        /* \"#utility.yul\":6703:6725   */\n      add\n        /* \"#utility.yul\":6673:6735   */\n      tag_112\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":6663:6735   */\n      swap2\n      pop\n        /* \"#utility.yul\":6619:6745   */\n      pop\n        /* \"#utility.yul\":6405:6752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6758:6949   */\n    tag_78:\n        /* \"#utility.yul\":6796:6800   */\n      0x00\n        /* \"#utility.yul\":6816:6834   */\n      tag_196\n        /* \"#utility.yul\":6832:6833   */\n      dup3\n        /* \"#utility.yul\":6816:6834   */\n      tag_110\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":6811:6834   */\n      swap2\n      pop\n        /* \"#utility.yul\":6848:6866   */\n      tag_197\n        /* \"#utility.yul\":6864:6865   */\n      dup4\n        /* \"#utility.yul\":6848:6866   */\n      tag_110\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":6843:6866   */\n      swap3\n      pop\n        /* \"#utility.yul\":6890:6891   */\n      dup3\n        /* \"#utility.yul\":6887:6888   */\n      dup3\n        /* \"#utility.yul\":6883:6892   */\n      sub\n        /* \"#utility.yul\":6875:6892   */\n      swap1\n      pop\n        /* \"#utility.yul\":6914:6918   */\n      0xff\n        /* \"#utility.yul\":6908:6912   */\n      dup2\n        /* \"#utility.yul\":6905:6919   */\n      gt\n        /* \"#utility.yul\":6902:6942   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":6922:6940   */\n      tag_199\n      tag_98\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":6902:6942   */\n    tag_198:\n        /* \"#utility.yul\":6758:6949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6955:7057   */\n    tag_113:\n        /* \"#utility.yul\":6997:7005   */\n      0x00\n        /* \"#utility.yul\":7044:7049   */\n      dup2\n        /* \"#utility.yul\":7041:7042   */\n      0x01\n        /* \"#utility.yul\":7037:7050   */\n      shr\n        /* \"#utility.yul\":7016:7050   */\n      swap1\n      pop\n        /* \"#utility.yul\":6955:7057   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7063:7911   */\n    tag_114:\n        /* \"#utility.yul\":7124:7129   */\n      0x00\n        /* \"#utility.yul\":7131:7135   */\n      0x00\n        /* \"#utility.yul\":7155:7161   */\n      dup3\n        /* \"#utility.yul\":7146:7161   */\n      swap2\n      pop\n        /* \"#utility.yul\":7179:7184   */\n      dup4\n        /* \"#utility.yul\":7170:7184   */\n      swap1\n      pop\n        /* \"#utility.yul\":7193:7905   */\n    tag_202:\n        /* \"#utility.yul\":7214:7215   */\n      0x01\n        /* \"#utility.yul\":7204:7212   */\n      dup6\n        /* \"#utility.yul\":7201:7216   */\n      gt\n        /* \"#utility.yul\":7193:7905   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":7309:7313   */\n      dup1\n        /* \"#utility.yul\":7304:7307   */\n      dup7\n        /* \"#utility.yul\":7300:7314   */\n      div\n        /* \"#utility.yul\":7294:7298   */\n      dup2\n        /* \"#utility.yul\":7291:7315   */\n      gt\n        /* \"#utility.yul\":7288:7338   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":7318:7336   */\n      tag_206\n      tag_98\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":7288:7338   */\n    tag_205:\n        /* \"#utility.yul\":7368:7369   */\n      0x01\n        /* \"#utility.yul\":7358:7366   */\n      dup6\n        /* \"#utility.yul\":7354:7370   */\n      and\n        /* \"#utility.yul\":7351:7802   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":7783:7787   */\n      dup1\n        /* \"#utility.yul\":7776:7781   */\n      dup3\n        /* \"#utility.yul\":7772:7788   */\n      mul\n        /* \"#utility.yul\":7763:7788   */\n      swap2\n      pop\n        /* \"#utility.yul\":7351:7802   */\n    tag_207:\n        /* \"#utility.yul\":7833:7837   */\n      dup1\n        /* \"#utility.yul\":7827:7831   */\n      dup2\n        /* \"#utility.yul\":7823:7838   */\n      mul\n        /* \"#utility.yul\":7815:7838   */\n      swap1\n      pop\n        /* \"#utility.yul\":7863:7895   */\n      tag_208\n        /* \"#utility.yul\":7886:7894   */\n      dup6\n        /* \"#utility.yul\":7863:7895   */\n      tag_113\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":7851:7895   */\n      swap5\n      pop\n        /* \"#utility.yul\":7193:7905   */\n      jump(tag_202)\n    tag_204:\n        /* \"#utility.yul\":7063:7911   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7917:8990   */\n    tag_115:\n        /* \"#utility.yul\":7971:7976   */\n      0x00\n        /* \"#utility.yul\":8162:8170   */\n      dup3\n        /* \"#utility.yul\":8152:8192   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":8183:8184   */\n      0x01\n        /* \"#utility.yul\":8174:8184   */\n      swap1\n      pop\n        /* \"#utility.yul\":8185:8190   */\n      jump(tag_209)\n        /* \"#utility.yul\":8152:8192   */\n    tag_210:\n        /* \"#utility.yul\":8211:8215   */\n      dup2\n        /* \"#utility.yul\":8201:8237   */\n      tag_211\n      jumpi\n        /* \"#utility.yul\":8228:8229   */\n      0x00\n        /* \"#utility.yul\":8219:8229   */\n      swap1\n      pop\n        /* \"#utility.yul\":8230:8235   */\n      jump(tag_209)\n        /* \"#utility.yul\":8201:8237   */\n    tag_211:\n        /* \"#utility.yul\":8297:8301   */\n      dup2\n        /* \"#utility.yul\":8345:8346   */\n      0x01\n        /* \"#utility.yul\":8340:8367   */\n      dup2\n      eq\n      tag_213\n      jumpi\n        /* \"#utility.yul\":8381:8382   */\n      0x02\n        /* \"#utility.yul\":8376:8567   */\n      dup2\n      eq\n      tag_214\n      jumpi\n        /* \"#utility.yul\":8290:8567   */\n      jump(tag_212)\n        /* \"#utility.yul\":8340:8367   */\n    tag_213:\n        /* \"#utility.yul\":8358:8359   */\n      0x01\n        /* \"#utility.yul\":8349:8359   */\n      swap2\n      pop\n        /* \"#utility.yul\":8360:8365   */\n      pop\n      jump(tag_209)\n        /* \"#utility.yul\":8376:8567   */\n    tag_214:\n        /* \"#utility.yul\":8421:8424   */\n      0xff\n        /* \"#utility.yul\":8411:8419   */\n      dup5\n        /* \"#utility.yul\":8408:8425   */\n      gt\n        /* \"#utility.yul\":8405:8448   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":8428:8446   */\n      tag_216\n      tag_98\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":8405:8448   */\n    tag_215:\n        /* \"#utility.yul\":8477:8485   */\n      dup4\n        /* \"#utility.yul\":8474:8475   */\n      0x02\n        /* \"#utility.yul\":8470:8486   */\n      exp\n        /* \"#utility.yul\":8461:8486   */\n      swap2\n      pop\n        /* \"#utility.yul\":8512:8515   */\n      dup5\n        /* \"#utility.yul\":8505:8510   */\n      dup3\n        /* \"#utility.yul\":8502:8516   */\n      gt\n        /* \"#utility.yul\":8499:8539   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":8519:8537   */\n      tag_218\n      tag_98\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":8499:8539   */\n    tag_217:\n        /* \"#utility.yul\":8552:8557   */\n      pop\n      jump(tag_209)\n        /* \"#utility.yul\":8290:8567   */\n    tag_212:\n      pop\n        /* \"#utility.yul\":8676:8678   */\n      0x20\n        /* \"#utility.yul\":8666:8674   */\n      dup4\n        /* \"#utility.yul\":8663:8679   */\n      lt\n        /* \"#utility.yul\":8657:8660   */\n      0x0133\n        /* \"#utility.yul\":8651:8655   */\n      dup4\n        /* \"#utility.yul\":8648:8661   */\n      lt\n        /* \"#utility.yul\":8644:8680   */\n      and\n        /* \"#utility.yul\":8626:8628   */\n      0x4e\n        /* \"#utility.yul\":8616:8624   */\n      dup5\n        /* \"#utility.yul\":8613:8629   */\n      lt\n        /* \"#utility.yul\":8608:8610   */\n      0x0b\n        /* \"#utility.yul\":8602:8606   */\n      dup5\n        /* \"#utility.yul\":8599:8611   */\n      lt\n        /* \"#utility.yul\":8595:8630   */\n      and\n        /* \"#utility.yul\":8579:8690   */\n      or\n        /* \"#utility.yul\":8576:8822   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":8732:8740   */\n      dup3\n        /* \"#utility.yul\":8726:8730   */\n      dup3\n        /* \"#utility.yul\":8722:8741   */\n      exp\n        /* \"#utility.yul\":8713:8741   */\n      swap1\n      pop\n        /* \"#utility.yul\":8767:8770   */\n      dup4\n        /* \"#utility.yul\":8760:8765   */\n      dup2\n        /* \"#utility.yul\":8757:8771   */\n      gt\n        /* \"#utility.yul\":8754:8794   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":8774:8792   */\n      tag_221\n      tag_98\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":8754:8794   */\n    tag_220:\n        /* \"#utility.yul\":8807:8812   */\n      jump(tag_209)\n        /* \"#utility.yul\":8576:8822   */\n    tag_219:\n        /* \"#utility.yul\":8847:8889   */\n      tag_222\n        /* \"#utility.yul\":8885:8888   */\n      dup5\n        /* \"#utility.yul\":8875:8883   */\n      dup5\n        /* \"#utility.yul\":8869:8873   */\n      dup5\n        /* \"#utility.yul\":8866:8867   */\n      0x01\n        /* \"#utility.yul\":8847:8889   */\n      tag_114\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":8832:8889   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":8921:8925   */\n      dup2\n        /* \"#utility.yul\":8916:8919   */\n      dup5\n        /* \"#utility.yul\":8912:8926   */\n      div\n        /* \"#utility.yul\":8905:8910   */\n      dup2\n        /* \"#utility.yul\":8902:8927   */\n      gt\n        /* \"#utility.yul\":8899:8950   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":8930:8948   */\n      tag_224\n      tag_98\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":8899:8950   */\n    tag_223:\n        /* \"#utility.yul\":8979:8983   */\n      dup2\n        /* \"#utility.yul\":8972:8977   */\n      dup2\n        /* \"#utility.yul\":8968:8984   */\n      mul\n        /* \"#utility.yul\":8959:8984   */\n      swap1\n      pop\n        /* \"#utility.yul\":7917:8990   */\n    tag_209:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8996:9281   */\n    tag_80:\n        /* \"#utility.yul\":9056:9061   */\n      0x00\n        /* \"#utility.yul\":9080:9103   */\n      tag_226\n        /* \"#utility.yul\":9098:9102   */\n      dup3\n        /* \"#utility.yul\":9080:9103   */\n      tag_95\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":9072:9103   */\n      swap2\n      pop\n        /* \"#utility.yul\":9124:9151   */\n      tag_227\n        /* \"#utility.yul\":9142:9150   */\n      dup4\n        /* \"#utility.yul\":9124:9151   */\n      tag_95\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":9112:9151   */\n      swap3\n      pop\n        /* \"#utility.yul\":9170:9274   */\n      tag_228\n        /* \"#utility.yul\":9207:9273   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9197:9205   */\n      dup5\n        /* \"#utility.yul\":9191:9195   */\n      dup5\n        /* \"#utility.yul\":9170:9274   */\n      tag_115\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":9161:9274   */\n      swap1\n      pop\n        /* \"#utility.yul\":8996:9281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d7a7a5f708f05aea04a2dd708102f50c247125ea221a3e13ec3a1546d8f4833f64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_330": {
									"entryPoint": null,
									"id": 330,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1355:3",
										"nodeType": "YulBlock",
										"src": "0:1355:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:81:3",
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nativeSrc": "389:65:3",
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:3",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nativeSrc": "400:54:3",
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nativeSrc": "511:51:3",
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nativeSrc": "521:35:3",
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nativeSrc": "532:24:3",
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:3",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:3",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nativeSrc": "611:79:3",
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:3",
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:3",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:3",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nativeSrc": "670:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nativeSrc": "670:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nativeSrc": "641:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nativeSrc": "631:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nativeSrc": "624:43:3",
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nativeSrc": "621:63:3",
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:3",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nativeSrc": "759:80:3",
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nativeSrc": "769:22:3",
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nativeSrc": "778:13:3",
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nativeSrc": "800:33:3",
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nativeSrc": "800:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:3",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:3",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:3",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nativeSrc": "939:413:3",
													"nodeType": "YulBlock",
													"src": "939:413:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:3",
																"nodeType": "YulBlock",
																"src": "985:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:3"
																			},
																			"nativeSrc": "987:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:3"
																		},
																		"nativeSrc": "987:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:3"
																		},
																		"nativeSrc": "956:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:3",
																		"nodeType": "YulLiteral",
																		"src": "981:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:3"
																},
																"nativeSrc": "952:32:3",
																"nodeType": "YulFunctionCall",
																"src": "952:32:3"
															},
															"nativeSrc": "949:119:3",
															"nodeType": "YulIf",
															"src": "949:119:3"
														},
														{
															"nativeSrc": "1078:128:3",
															"nodeType": "YulBlock",
															"src": "1078:128:3",
															"statements": [
																{
																	"nativeSrc": "1093:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:3",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:3"
																				},
																				"nativeSrc": "1164:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:3"
																		},
																		"nativeSrc": "1132:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:3",
															"nodeType": "YulBlock",
															"src": "1216:129:3",
															"statements": [
																{
																	"nativeSrc": "1231:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:3",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:3"
																				},
																				"nativeSrc": "1303:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:3"
																		},
																		"nativeSrc": "1271:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:3",
														"nodeType": "YulTypedName",
														"src": "901:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:3",
														"nodeType": "YulTypedName",
														"src": "912:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:3",
														"nodeType": "YulTypedName",
														"src": "924:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:3",
														"nodeType": "YulTypedName",
														"src": "932:6:3",
														"type": ""
													}
												],
												"src": "845:507:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051610d3a380380610d3a83398181016040528101906100319190610115565b815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610153565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100e4826100bb565b9050919050565b6100f4816100da565b81146100fe575f5ffd5b50565b5f8151905061010f816100eb565b92915050565b5f5f6040838503121561012b5761012a6100b7565b5b5f61013885828601610101565b925050602061014985828601610101565b9150509250929050565b610bda806101605f395ff3fe608060405234801561000f575f5ffd5b5060043610610054575f3560e01c8062593bcf14610058578063040141e5146100885780630b017603146100a65780636855e939146100c45780637b49b49d146100e2575b5f5ffd5b610072600480360381019061006d91906106c4565b610112565b60405161007f9190610707565b60405180910390f35b610090610152565b60405161009d919061072f565b60405180910390f35b6100ae610176565b6040516100bb919061072f565b60405180910390f35b6100cc61019b565b6040516100d99190610707565b60405180910390f35b6100fc60048036038101906100f791906106c4565b610209565b6040516101099190610707565b60405180910390f35b5f5f61011d83610209565b90505f61012861019b565b9050670de0b6b3a7640000818361013f9190610775565b61014991906107e3565b92505050919050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f5f5f5f6101eb60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610258565b509350935093509350610200828286866105c4565b94505050505090565b5f5f5f5f5f610238865f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610258565b50935093509350935061024d848484846105c4565b945050505050919050565b5f5f5f5f5f5f8790505f5f8273ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156102ac573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102d0919061088f565b50915091505f8373ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561031f573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061034391906108f3565b90505f8473ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561038f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103b391906108f3565b90505f8b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103f25760019050610469565b8b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361042d575f9050610468565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045f90610978565b60405180910390fd5b5b8061048457836dffffffffffffffffffffffffffff16610496565b846dffffffffffffffffffffffffffff165b9a50806104b357846dffffffffffffffffffffffffffff166104c5565b836dffffffffffffffffffffffffffff165b9850806104d257826104d4565b815b96508b73ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561051f573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061054391906109cc565b99508673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561058e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b291906109cc565b97505050505050509295509295909350565b5f5f670de0b6b3a7640000866105da9190610775565b90508460ff168360ff1611156106175784836105f691906109f7565b60ff16600a6106059190610b5a565b816106109190610775565b905061064f565b8260ff168560ff16111561064e57828561063191906109f7565b60ff16600a6106409190610b5a565b8161064b91906107e3565b90505b5b838161065b91906107e3565b915050949350505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106938261066a565b9050919050565b6106a381610689565b81146106ad575f5ffd5b50565b5f813590506106be8161069a565b92915050565b5f602082840312156106d9576106d8610666565b5b5f6106e6848285016106b0565b91505092915050565b5f819050919050565b610701816106ef565b82525050565b5f60208201905061071a5f8301846106f8565b92915050565b61072981610689565b82525050565b5f6020820190506107425f830184610720565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61077f826106ef565b915061078a836106ef565b9250828202610798816106ef565b915082820484148315176107af576107ae610748565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6107ed826106ef565b91506107f8836106ef565b925082610808576108076107b6565b5b828204905092915050565b5f6dffffffffffffffffffffffffffff82169050919050565b61083581610813565b811461083f575f5ffd5b50565b5f815190506108508161082c565b92915050565b5f63ffffffff82169050919050565b61086e81610856565b8114610878575f5ffd5b50565b5f8151905061088981610865565b92915050565b5f5f5f606084860312156108a6576108a5610666565b5b5f6108b386828701610842565b93505060206108c486828701610842565b92505060406108d58682870161087b565b9150509250925092565b5f815190506108ed8161069a565b92915050565b5f6020828403121561090857610907610666565b5b5f610915848285016108df565b91505092915050565b5f82825260208201905092915050565b7f5061697220646f6573206e6f7420636f6e7461696e206261736520746f6b656e5f82015250565b5f61096260208361091e565b915061096d8261092e565b602082019050919050565b5f6020820190508181035f83015261098f81610956565b9050919050565b5f60ff82169050919050565b6109ab81610996565b81146109b5575f5ffd5b50565b5f815190506109c6816109a2565b92915050565b5f602082840312156109e1576109e0610666565b5b5f6109ee848285016109b8565b91505092915050565b5f610a0182610996565b9150610a0c83610996565b9250828203905060ff811115610a2557610a24610748565b5b92915050565b5f8160011c9050919050565b5f5f8291508390505b6001851115610a8057808604811115610a5c57610a5b610748565b5b6001851615610a6b5780820291505b8081029050610a7985610a2b565b9450610a40565b94509492505050565b5f82610a985760019050610b53565b81610aa5575f9050610b53565b8160018114610abb5760028114610ac557610af4565b6001915050610b53565b60ff841115610ad757610ad6610748565b5b8360020a915084821115610aee57610aed610748565b5b50610b53565b5060208310610133831016604e8410600b8410161715610b295782820a905083811115610b2457610b23610748565b5b610b53565b610b368484846001610a37565b92509050818404811115610b4d57610b4c610748565b5b81810290505b9392505050565b5f610b64826106ef565b9150610b6f836106ef565b9250610b9c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610a89565b90509291505056fea2646970667358221220d7a7a5f708f05aea04a2dd708102f50c247125ea221a3e13ec3a1546d8f4833f64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xD3A CODESIZE SUB DUP1 PUSH2 0xD3A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x115 JUMP JUMPDEST DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x153 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE4 DUP3 PUSH2 0xBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF4 DUP2 PUSH2 0xDA JUMP JUMPDEST DUP2 EQ PUSH2 0xFE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x10F DUP2 PUSH2 0xEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B JUMPI PUSH2 0x12A PUSH2 0xB7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x138 DUP6 DUP3 DUP7 ADD PUSH2 0x101 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x149 DUP6 DUP3 DUP7 ADD PUSH2 0x101 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBDA DUP1 PUSH2 0x160 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x54 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x593BCF EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x40141E5 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xB017603 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x6855E939 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x7B49B49D EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH2 0x152 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x72F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH2 0x176 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x72F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0x209 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH2 0x11D DUP4 PUSH2 0x209 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x128 PUSH2 0x19B JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 DUP4 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x775 JUMP JUMPDEST PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x7E3 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x1EB PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x258 JUMP JUMPDEST POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x200 DUP3 DUP3 DUP7 DUP7 PUSH2 0x5C4 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x238 DUP7 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x258 JUMP JUMPDEST POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x24D DUP5 DUP5 DUP5 DUP5 PUSH2 0x5C4 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 DUP8 SWAP1 POP PUSH0 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AC JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x8F3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x38F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x8F3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3F2 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x469 JUMP JUMPDEST DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x42D JUMPI PUSH0 SWAP1 POP PUSH2 0x468 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP1 PUSH2 0x484 JUMPI DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x496 JUMP JUMPDEST DUP5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP11 POP DUP1 PUSH2 0x4B3 JUMPI DUP5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4C5 JUMP JUMPDEST DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP9 POP DUP1 PUSH2 0x4D2 JUMPI DUP3 PUSH2 0x4D4 JUMP JUMPDEST DUP2 JUMPDEST SWAP7 POP DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x51F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x543 SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST SWAP10 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST SWAP8 POP POP POP POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x5DA SWAP2 SWAP1 PUSH2 0x775 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND GT ISZERO PUSH2 0x617 JUMPI DUP5 DUP4 PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH2 0x605 SWAP2 SWAP1 PUSH2 0xB5A JUMP JUMPDEST DUP2 PUSH2 0x610 SWAP2 SWAP1 PUSH2 0x775 JUMP JUMPDEST SWAP1 POP PUSH2 0x64F JUMP JUMPDEST DUP3 PUSH1 0xFF AND DUP6 PUSH1 0xFF AND GT ISZERO PUSH2 0x64E JUMPI DUP3 DUP6 PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH2 0x640 SWAP2 SWAP1 PUSH2 0xB5A JUMP JUMPDEST DUP2 PUSH2 0x64B SWAP2 SWAP1 PUSH2 0x7E3 JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST DUP4 DUP2 PUSH2 0x65B SWAP2 SWAP1 PUSH2 0x7E3 JUMP JUMPDEST SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x693 DUP3 PUSH2 0x66A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A3 DUP2 PUSH2 0x689 JUMP JUMPDEST DUP2 EQ PUSH2 0x6AD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6BE DUP2 PUSH2 0x69A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6D9 JUMPI PUSH2 0x6D8 PUSH2 0x666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6E6 DUP5 DUP3 DUP6 ADD PUSH2 0x6B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x701 DUP2 PUSH2 0x6EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x71A PUSH0 DUP4 ADD DUP5 PUSH2 0x6F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x729 DUP2 PUSH2 0x689 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x742 PUSH0 DUP4 ADD DUP5 PUSH2 0x720 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x77F DUP3 PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP PUSH2 0x78A DUP4 PUSH2 0x6EF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x798 DUP2 PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x7AF JUMPI PUSH2 0x7AE PUSH2 0x748 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x7ED DUP3 PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP PUSH2 0x7F8 DUP4 PUSH2 0x6EF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x808 JUMPI PUSH2 0x807 PUSH2 0x7B6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x835 DUP2 PUSH2 0x813 JUMP JUMPDEST DUP2 EQ PUSH2 0x83F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x850 DUP2 PUSH2 0x82C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86E DUP2 PUSH2 0x856 JUMP JUMPDEST DUP2 EQ PUSH2 0x878 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x889 DUP2 PUSH2 0x865 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x8A5 PUSH2 0x666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8B3 DUP7 DUP3 DUP8 ADD PUSH2 0x842 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x8C4 DUP7 DUP3 DUP8 ADD PUSH2 0x842 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x8D5 DUP7 DUP3 DUP8 ADD PUSH2 0x87B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x8ED DUP2 PUSH2 0x69A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x908 JUMPI PUSH2 0x907 PUSH2 0x666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x915 DUP5 DUP3 DUP6 ADD PUSH2 0x8DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061697220646F6573206E6F7420636F6E7461696E206261736520746F6B656E PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x962 PUSH1 0x20 DUP4 PUSH2 0x91E JUMP JUMPDEST SWAP2 POP PUSH2 0x96D DUP3 PUSH2 0x92E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x98F DUP2 PUSH2 0x956 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9AB DUP2 PUSH2 0x996 JUMP JUMPDEST DUP2 EQ PUSH2 0x9B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x9C6 DUP2 PUSH2 0x9A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9E1 JUMPI PUSH2 0x9E0 PUSH2 0x666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9EE DUP5 DUP3 DUP6 ADD PUSH2 0x9B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA01 DUP3 PUSH2 0x996 JUMP JUMPDEST SWAP2 POP PUSH2 0xA0C DUP4 PUSH2 0x996 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0xA25 JUMPI PUSH2 0xA24 PUSH2 0x748 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xA80 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xA5C JUMPI PUSH2 0xA5B PUSH2 0x748 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xA6B JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xA79 DUP6 PUSH2 0xA2B JUMP JUMPDEST SWAP5 POP PUSH2 0xA40 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xA98 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xB53 JUMP JUMPDEST DUP2 PUSH2 0xAA5 JUMPI PUSH0 SWAP1 POP PUSH2 0xB53 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xABB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xAC5 JUMPI PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xB53 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xAD7 JUMPI PUSH2 0xAD6 PUSH2 0x748 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAED PUSH2 0x748 JUMP JUMPDEST JUMPDEST POP PUSH2 0xB53 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xB29 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xB24 JUMPI PUSH2 0xB23 PUSH2 0x748 JUMP JUMPDEST JUMPDEST PUSH2 0xB53 JUMP JUMPDEST PUSH2 0xB36 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xA37 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xB4D JUMPI PUSH2 0xB4C PUSH2 0x748 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB64 DUP3 PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP PUSH2 0xB6F DUP4 PUSH2 0x6EF JUMP JUMPDEST SWAP3 POP PUSH2 0xB9C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xA89 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0xA7 0xA5 0xF7 ADDMOD CREATE GAS 0xEA DIV LOG2 0xDD PUSH17 0x8102F50C247125EA221A3E13EC3A1546D8 DELEGATECALL DUP4 EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "2249:1628:2:-:0;;;2358:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2446:12;2431;;:27;;;;;;;;;;;;;;;;;;2492:19;2468:21;;:43;;;;;;;;;;;;;;;;;;2358:160;;2249:1628;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;2249:1628:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@WETH_ADDRESS_312": {
									"entryPoint": 338,
									"id": 312,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WETH_USD_PAIR_ADDRESS_314": {
									"entryPoint": 374,
									"id": 314,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_computePrice18_307": {
									"entryPoint": 1476,
									"id": 307,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_getOrderedReserves_248": {
									"entryPoint": 600,
									"id": 248,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"@getTokenUsdPrice_390": {
									"entryPoint": 274,
									"id": 390,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokenWethPrice_361": {
									"entryPoint": 521,
									"id": 361,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getWethUsdPrice_419": {
									"entryPoint": 411,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint112_fromMemory": {
									"entryPoint": 2114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32_fromMemory": {
									"entryPoint": 2171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 2488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory": {
									"entryPoint": 2191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 2508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_6e8a3ed432c0512d004ecad554fe366a5594ee75cdf27e9451e55f5b44628a94_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6e8a3ed432c0512d004ecad554fe366a5594ee75cdf27e9451e55f5b44628a94__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2615,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 2906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2697,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint8": {
									"entryPoint": 2551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint112": {
									"entryPoint": 2067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 2134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1864,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1974,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1638,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_6e8a3ed432c0512d004ecad554fe366a5594ee75cdf27e9451e55f5b44628a94": {
									"entryPoint": 2350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint112": {
									"entryPoint": 2092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 2149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 2466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9284:3",
										"nodeType": "YulBlock",
										"src": "0:9284:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:81:3",
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nativeSrc": "389:65:3",
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:3",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nativeSrc": "400:54:3",
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nativeSrc": "511:51:3",
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nativeSrc": "521:35:3",
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nativeSrc": "532:24:3",
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:3",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:3",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nativeSrc": "611:79:3",
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:3",
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:3",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:3",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nativeSrc": "670:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nativeSrc": "670:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nativeSrc": "641:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nativeSrc": "631:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nativeSrc": "624:43:3",
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nativeSrc": "621:63:3",
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:3",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nativeSrc": "748:87:3",
													"nodeType": "YulBlock",
													"src": "748:87:3",
													"statements": [
														{
															"nativeSrc": "758:29:3",
															"nodeType": "YulAssignment",
															"src": "758:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:3"
																},
																"nativeSrc": "767:20:3",
																"nodeType": "YulFunctionCall",
																"src": "767:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:3"
																},
																"nativeSrc": "796:33:3",
																"nodeType": "YulFunctionCall",
																"src": "796:33:3"
															},
															"nativeSrc": "796:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:3",
														"nodeType": "YulTypedName",
														"src": "726:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:3",
														"nodeType": "YulTypedName",
														"src": "734:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:3",
														"nodeType": "YulTypedName",
														"src": "742:5:3",
														"type": ""
													}
												],
												"src": "696:139:3"
											},
											{
												"body": {
													"nativeSrc": "907:263:3",
													"nodeType": "YulBlock",
													"src": "907:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:3",
																"nodeType": "YulBlock",
																"src": "953:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:3"
																			},
																			"nativeSrc": "955:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:3"
																		},
																		"nativeSrc": "955:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:3"
																		},
																		"nativeSrc": "924:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:3",
																		"nodeType": "YulLiteral",
																		"src": "949:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:3"
																},
																"nativeSrc": "920:32:3",
																"nodeType": "YulFunctionCall",
																"src": "920:32:3"
															},
															"nativeSrc": "917:119:3",
															"nodeType": "YulIf",
															"src": "917:119:3"
														},
														{
															"nativeSrc": "1046:117:3",
															"nodeType": "YulBlock",
															"src": "1046:117:3",
															"statements": [
																{
																	"nativeSrc": "1061:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:3"
																				},
																				"nativeSrc": "1121:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:3"
																		},
																		"nativeSrc": "1100:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:3",
														"nodeType": "YulTypedName",
														"src": "877:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:3",
														"nodeType": "YulTypedName",
														"src": "888:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:3",
														"nodeType": "YulTypedName",
														"src": "900:6:3",
														"type": ""
													}
												],
												"src": "841:329:3"
											},
											{
												"body": {
													"nativeSrc": "1221:32:3",
													"nodeType": "YulBlock",
													"src": "1221:32:3",
													"statements": [
														{
															"nativeSrc": "1231:16:3",
															"nodeType": "YulAssignment",
															"src": "1231:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:3",
																"nodeType": "YulIdentifier",
																"src": "1242:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:3",
														"nodeType": "YulTypedName",
														"src": "1203:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:3",
														"nodeType": "YulTypedName",
														"src": "1213:7:3",
														"type": ""
													}
												],
												"src": "1176:77:3"
											},
											{
												"body": {
													"nativeSrc": "1324:53:3",
													"nodeType": "YulBlock",
													"src": "1324:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:3"
																		},
																		"nativeSrc": "1346:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:3"
																},
																"nativeSrc": "1334:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:3"
															},
															"nativeSrc": "1334:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:3",
														"nodeType": "YulTypedName",
														"src": "1312:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:3",
														"nodeType": "YulTypedName",
														"src": "1319:3:3",
														"type": ""
													}
												],
												"src": "1259:118:3"
											},
											{
												"body": {
													"nativeSrc": "1481:124:3",
													"nodeType": "YulBlock",
													"src": "1481:124:3",
													"statements": [
														{
															"nativeSrc": "1491:26:3",
															"nodeType": "YulAssignment",
															"src": "1491:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:3"
																},
																"nativeSrc": "1499:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:3"
																		},
																		"nativeSrc": "1580:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:3"
																},
																"nativeSrc": "1527:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:3"
															},
															"nativeSrc": "1527:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:3",
														"nodeType": "YulTypedName",
														"src": "1453:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:3",
														"nodeType": "YulTypedName",
														"src": "1465:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:3",
														"nodeType": "YulTypedName",
														"src": "1476:4:3",
														"type": ""
													}
												],
												"src": "1383:222:3"
											},
											{
												"body": {
													"nativeSrc": "1676:53:3",
													"nodeType": "YulBlock",
													"src": "1676:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1693:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1716:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1698:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:3"
																		},
																		"nativeSrc": "1698:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1686:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:3"
																},
																"nativeSrc": "1686:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1686:37:3"
															},
															"nativeSrc": "1686:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1611:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1664:5:3",
														"nodeType": "YulTypedName",
														"src": "1664:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1671:3:3",
														"nodeType": "YulTypedName",
														"src": "1671:3:3",
														"type": ""
													}
												],
												"src": "1611:118:3"
											},
											{
												"body": {
													"nativeSrc": "1833:124:3",
													"nodeType": "YulBlock",
													"src": "1833:124:3",
													"statements": [
														{
															"nativeSrc": "1843:26:3",
															"nodeType": "YulAssignment",
															"src": "1843:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1855:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1866:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1851:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:3"
																},
																"nativeSrc": "1851:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1851:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1843:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1923:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1936:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1947:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1932:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:3"
																		},
																		"nativeSrc": "1932:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1879:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:3"
																},
																"nativeSrc": "1879:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1879:71:3"
															},
															"nativeSrc": "1879:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1735:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1805:9:3",
														"nodeType": "YulTypedName",
														"src": "1805:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1817:6:3",
														"nodeType": "YulTypedName",
														"src": "1817:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1828:4:3",
														"nodeType": "YulTypedName",
														"src": "1828:4:3",
														"type": ""
													}
												],
												"src": "1735:222:3"
											},
											{
												"body": {
													"nativeSrc": "1991:152:3",
													"nodeType": "YulBlock",
													"src": "1991:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2008:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2008:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2011:77:3",
																		"nodeType": "YulLiteral",
																		"src": "2011:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2001:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:3"
																},
																"nativeSrc": "2001:88:3",
																"nodeType": "YulFunctionCall",
																"src": "2001:88:3"
															},
															"nativeSrc": "2001:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "2001:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2105:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2105:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2108:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2108:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2098:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2098:6:3"
																},
																"nativeSrc": "2098:15:3",
																"nodeType": "YulFunctionCall",
																"src": "2098:15:3"
															},
															"nativeSrc": "2098:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "2098:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2129:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2129:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2132:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2132:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2122:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2122:6:3"
																},
																"nativeSrc": "2122:15:3",
																"nodeType": "YulFunctionCall",
																"src": "2122:15:3"
															},
															"nativeSrc": "2122:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "2122:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1963:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "1963:180:3"
											},
											{
												"body": {
													"nativeSrc": "2197:362:3",
													"nodeType": "YulBlock",
													"src": "2197:362:3",
													"statements": [
														{
															"nativeSrc": "2207:25:3",
															"nodeType": "YulAssignment",
															"src": "2207:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2230:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2230:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2212:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "2212:17:3"
																},
																"nativeSrc": "2212:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2212:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2207:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "2207:1:3"
																}
															]
														},
														{
															"nativeSrc": "2241:25:3",
															"nodeType": "YulAssignment",
															"src": "2241:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2264:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2264:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2246:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "2246:17:3"
																},
																"nativeSrc": "2246:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2246:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2241:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "2241:1:3"
																}
															]
														},
														{
															"nativeSrc": "2275:28:3",
															"nodeType": "YulVariableDeclaration",
															"src": "2275:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2298:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2298:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2301:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2301:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2294:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2294:3:3"
																},
																"nativeSrc": "2294:9:3",
																"nodeType": "YulFunctionCall",
																"src": "2294:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "2279:11:3",
																	"nodeType": "YulTypedName",
																	"src": "2279:11:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2312:41:3",
															"nodeType": "YulAssignment",
															"src": "2312:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "2341:11:3",
																		"nodeType": "YulIdentifier",
																		"src": "2341:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2323:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "2323:17:3"
																},
																"nativeSrc": "2323:30:3",
																"nodeType": "YulFunctionCall",
																"src": "2323:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2312:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "2312:7:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2530:22:3",
																"nodeType": "YulBlock",
																"src": "2530:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2532:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "2532:16:3"
																			},
																			"nativeSrc": "2532:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2532:18:3"
																		},
																		"nativeSrc": "2532:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2532:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "2463:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "2463:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2456:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "2456:6:3"
																				},
																				"nativeSrc": "2456:9:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2456:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "2486:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "2486:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "2493:7:3",
																								"nodeType": "YulIdentifier",
																								"src": "2493:7:3"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "2502:1:3",
																								"nodeType": "YulIdentifier",
																								"src": "2502:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2489:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "2489:3:3"
																						},
																						"nativeSrc": "2489:15:3",
																						"nodeType": "YulFunctionCall",
																						"src": "2489:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2483:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "2483:2:3"
																				},
																				"nativeSrc": "2483:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2483:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2436:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "2436:2:3"
																		},
																		"nativeSrc": "2436:83:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2436:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2416:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2416:6:3"
																},
																"nativeSrc": "2416:113:3",
																"nodeType": "YulFunctionCall",
																"src": "2416:113:3"
															},
															"nativeSrc": "2413:139:3",
															"nodeType": "YulIf",
															"src": "2413:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2149:410:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2180:1:3",
														"nodeType": "YulTypedName",
														"src": "2180:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2183:1:3",
														"nodeType": "YulTypedName",
														"src": "2183:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2189:7:3",
														"nodeType": "YulTypedName",
														"src": "2189:7:3",
														"type": ""
													}
												],
												"src": "2149:410:3"
											},
											{
												"body": {
													"nativeSrc": "2593:152:3",
													"nodeType": "YulBlock",
													"src": "2593:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2610:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2610:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2613:77:3",
																		"nodeType": "YulLiteral",
																		"src": "2613:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2603:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2603:6:3"
																},
																"nativeSrc": "2603:88:3",
																"nodeType": "YulFunctionCall",
																"src": "2603:88:3"
															},
															"nativeSrc": "2603:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "2603:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2707:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2707:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2710:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2710:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2700:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2700:6:3"
																},
																"nativeSrc": "2700:15:3",
																"nodeType": "YulFunctionCall",
																"src": "2700:15:3"
															},
															"nativeSrc": "2700:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "2700:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2731:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2731:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2734:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2734:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2724:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2724:6:3"
																},
																"nativeSrc": "2724:15:3",
																"nodeType": "YulFunctionCall",
																"src": "2724:15:3"
															},
															"nativeSrc": "2724:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "2724:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "2565:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "2565:180:3"
											},
											{
												"body": {
													"nativeSrc": "2793:143:3",
													"nodeType": "YulBlock",
													"src": "2793:143:3",
													"statements": [
														{
															"nativeSrc": "2803:25:3",
															"nodeType": "YulAssignment",
															"src": "2803:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2826:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2826:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2808:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "2808:17:3"
																},
																"nativeSrc": "2808:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2808:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2803:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "2803:1:3"
																}
															]
														},
														{
															"nativeSrc": "2837:25:3",
															"nodeType": "YulAssignment",
															"src": "2837:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2860:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2860:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2842:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "2842:17:3"
																},
																"nativeSrc": "2842:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2842:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2837:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "2837:1:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2884:22:3",
																"nodeType": "YulBlock",
																"src": "2884:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "2886:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "2886:16:3"
																			},
																			"nativeSrc": "2886:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2886:18:3"
																		},
																		"nativeSrc": "2886:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2886:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2881:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2881:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2874:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2874:6:3"
																},
																"nativeSrc": "2874:9:3",
																"nodeType": "YulFunctionCall",
																"src": "2874:9:3"
															},
															"nativeSrc": "2871:35:3",
															"nodeType": "YulIf",
															"src": "2871:35:3"
														},
														{
															"nativeSrc": "2916:14:3",
															"nodeType": "YulAssignment",
															"src": "2916:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2925:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2925:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2928:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2928:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2921:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2921:3:3"
																},
																"nativeSrc": "2921:9:3",
																"nodeType": "YulFunctionCall",
																"src": "2921:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2916:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "2916:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "2751:185:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2782:1:3",
														"nodeType": "YulTypedName",
														"src": "2782:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2785:1:3",
														"nodeType": "YulTypedName",
														"src": "2785:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "2791:1:3",
														"nodeType": "YulTypedName",
														"src": "2791:1:3",
														"type": ""
													}
												],
												"src": "2751:185:3"
											},
											{
												"body": {
													"nativeSrc": "2987:69:3",
													"nodeType": "YulBlock",
													"src": "2987:69:3",
													"statements": [
														{
															"nativeSrc": "2997:53:3",
															"nodeType": "YulAssignment",
															"src": "2997:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3012:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "3012:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3019:30:3",
																		"nodeType": "YulLiteral",
																		"src": "3019:30:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3008:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3008:3:3"
																},
																"nativeSrc": "3008:42:3",
																"nodeType": "YulFunctionCall",
																"src": "3008:42:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2997:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "2997:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint112",
												"nativeSrc": "2942:114:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2969:5:3",
														"nodeType": "YulTypedName",
														"src": "2969:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2979:7:3",
														"nodeType": "YulTypedName",
														"src": "2979:7:3",
														"type": ""
													}
												],
												"src": "2942:114:3"
											},
											{
												"body": {
													"nativeSrc": "3105:79:3",
													"nodeType": "YulBlock",
													"src": "3105:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "3162:16:3",
																"nodeType": "YulBlock",
																"src": "3162:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3171:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3171:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3174:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3174:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3164:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3164:6:3"
																			},
																			"nativeSrc": "3164:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3164:12:3"
																		},
																		"nativeSrc": "3164:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3164:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3128:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "3128:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3153:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "3153:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint112",
																					"nativeSrc": "3135:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "3135:17:3"
																				},
																				"nativeSrc": "3135:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3135:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3125:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "3125:2:3"
																		},
																		"nativeSrc": "3125:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3125:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3118:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3118:6:3"
																},
																"nativeSrc": "3118:43:3",
																"nodeType": "YulFunctionCall",
																"src": "3118:43:3"
															},
															"nativeSrc": "3115:63:3",
															"nodeType": "YulIf",
															"src": "3115:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint112",
												"nativeSrc": "3062:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3098:5:3",
														"nodeType": "YulTypedName",
														"src": "3098:5:3",
														"type": ""
													}
												],
												"src": "3062:122:3"
											},
											{
												"body": {
													"nativeSrc": "3253:80:3",
													"nodeType": "YulBlock",
													"src": "3253:80:3",
													"statements": [
														{
															"nativeSrc": "3263:22:3",
															"nodeType": "YulAssignment",
															"src": "3263:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3278:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3278:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3272:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "3272:5:3"
																},
																"nativeSrc": "3272:13:3",
																"nodeType": "YulFunctionCall",
																"src": "3272:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3263:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "3263:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3321:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "3321:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint112",
																	"nativeSrc": "3294:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "3294:26:3"
																},
																"nativeSrc": "3294:33:3",
																"nodeType": "YulFunctionCall",
																"src": "3294:33:3"
															},
															"nativeSrc": "3294:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "3294:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint112_fromMemory",
												"nativeSrc": "3190:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3231:6:3",
														"nodeType": "YulTypedName",
														"src": "3231:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3239:3:3",
														"nodeType": "YulTypedName",
														"src": "3239:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3247:5:3",
														"nodeType": "YulTypedName",
														"src": "3247:5:3",
														"type": ""
													}
												],
												"src": "3190:143:3"
											},
											{
												"body": {
													"nativeSrc": "3383:49:3",
													"nodeType": "YulBlock",
													"src": "3383:49:3",
													"statements": [
														{
															"nativeSrc": "3393:33:3",
															"nodeType": "YulAssignment",
															"src": "3393:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3408:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "3408:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3415:10:3",
																		"nodeType": "YulLiteral",
																		"src": "3415:10:3",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3404:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3404:3:3"
																},
																"nativeSrc": "3404:22:3",
																"nodeType": "YulFunctionCall",
																"src": "3404:22:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3393:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "3393:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nativeSrc": "3339:93:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3365:5:3",
														"nodeType": "YulTypedName",
														"src": "3365:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3375:7:3",
														"nodeType": "YulTypedName",
														"src": "3375:7:3",
														"type": ""
													}
												],
												"src": "3339:93:3"
											},
											{
												"body": {
													"nativeSrc": "3480:78:3",
													"nodeType": "YulBlock",
													"src": "3480:78:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "3536:16:3",
																"nodeType": "YulBlock",
																"src": "3536:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3545:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3545:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3548:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3548:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3538:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3538:6:3"
																			},
																			"nativeSrc": "3538:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3538:12:3"
																		},
																		"nativeSrc": "3538:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3538:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3503:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3527:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "3527:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nativeSrc": "3510:16:3",
																					"nodeType": "YulIdentifier",
																					"src": "3510:16:3"
																				},
																				"nativeSrc": "3510:23:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3510:23:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3500:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "3500:2:3"
																		},
																		"nativeSrc": "3500:34:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3500:34:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3493:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3493:6:3"
																},
																"nativeSrc": "3493:42:3",
																"nodeType": "YulFunctionCall",
																"src": "3493:42:3"
															},
															"nativeSrc": "3490:62:3",
															"nodeType": "YulIf",
															"src": "3490:62:3"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nativeSrc": "3438:120:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3473:5:3",
														"nodeType": "YulTypedName",
														"src": "3473:5:3",
														"type": ""
													}
												],
												"src": "3438:120:3"
											},
											{
												"body": {
													"nativeSrc": "3626:79:3",
													"nodeType": "YulBlock",
													"src": "3626:79:3",
													"statements": [
														{
															"nativeSrc": "3636:22:3",
															"nodeType": "YulAssignment",
															"src": "3636:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3651:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3645:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "3645:5:3"
																},
																"nativeSrc": "3645:13:3",
																"nodeType": "YulFunctionCall",
																"src": "3645:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3636:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "3636:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3693:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "3693:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nativeSrc": "3667:25:3",
																	"nodeType": "YulIdentifier",
																	"src": "3667:25:3"
																},
																"nativeSrc": "3667:32:3",
																"nodeType": "YulFunctionCall",
																"src": "3667:32:3"
															},
															"nativeSrc": "3667:32:3",
															"nodeType": "YulExpressionStatement",
															"src": "3667:32:3"
														}
													]
												},
												"name": "abi_decode_t_uint32_fromMemory",
												"nativeSrc": "3564:141:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3604:6:3",
														"nodeType": "YulTypedName",
														"src": "3604:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3612:3:3",
														"nodeType": "YulTypedName",
														"src": "3612:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3620:5:3",
														"nodeType": "YulTypedName",
														"src": "3620:5:3",
														"type": ""
													}
												],
												"src": "3564:141:3"
											},
											{
												"body": {
													"nativeSrc": "3821:551:3",
													"nodeType": "YulBlock",
													"src": "3821:551:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "3867:83:3",
																"nodeType": "YulBlock",
																"src": "3867:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3869:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "3869:77:3"
																			},
																			"nativeSrc": "3869:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3869:79:3"
																		},
																		"nativeSrc": "3869:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3869:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3842:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3842:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3851:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3851:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3838:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3838:3:3"
																		},
																		"nativeSrc": "3838:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3838:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3863:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3863:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3834:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3834:3:3"
																},
																"nativeSrc": "3834:32:3",
																"nodeType": "YulFunctionCall",
																"src": "3834:32:3"
															},
															"nativeSrc": "3831:119:3",
															"nodeType": "YulIf",
															"src": "3831:119:3"
														},
														{
															"nativeSrc": "3960:128:3",
															"nodeType": "YulBlock",
															"src": "3960:128:3",
															"statements": [
																{
																	"nativeSrc": "3975:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3975:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3989:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3989:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3979:6:3",
																			"nodeType": "YulTypedName",
																			"src": "3979:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4004:74:3",
																	"nodeType": "YulAssignment",
																	"src": "4004:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4050:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "4050:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4061:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "4061:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4046:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "4046:3:3"
																				},
																				"nativeSrc": "4046:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4046:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4070:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "4070:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint112_fromMemory",
																			"nativeSrc": "4014:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "4014:31:3"
																		},
																		"nativeSrc": "4014:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4014:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4004:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "4004:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4098:129:3",
															"nodeType": "YulBlock",
															"src": "4098:129:3",
															"statements": [
																{
																	"nativeSrc": "4113:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4113:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4127:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4127:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4117:6:3",
																			"nodeType": "YulTypedName",
																			"src": "4117:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4143:74:3",
																	"nodeType": "YulAssignment",
																	"src": "4143:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4189:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "4189:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4200:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "4200:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4185:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "4185:3:3"
																				},
																				"nativeSrc": "4185:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4185:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4209:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "4209:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint112_fromMemory",
																			"nativeSrc": "4153:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "4153:31:3"
																		},
																		"nativeSrc": "4153:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4153:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4143:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "4143:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4237:128:3",
															"nodeType": "YulBlock",
															"src": "4237:128:3",
															"statements": [
																{
																	"nativeSrc": "4252:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4252:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4266:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4266:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4256:6:3",
																			"nodeType": "YulTypedName",
																			"src": "4256:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4282:73:3",
																	"nodeType": "YulAssignment",
																	"src": "4282:73:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4327:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "4327:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4338:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "4338:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4323:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "4323:3:3"
																				},
																				"nativeSrc": "4323:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4323:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4347:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "4347:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32_fromMemory",
																			"nativeSrc": "4292:30:3",
																			"nodeType": "YulIdentifier",
																			"src": "4292:30:3"
																		},
																		"nativeSrc": "4292:63:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4292:63:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4282:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "4282:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory",
												"nativeSrc": "3711:661:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3775:9:3",
														"nodeType": "YulTypedName",
														"src": "3775:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3786:7:3",
														"nodeType": "YulTypedName",
														"src": "3786:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3798:6:3",
														"nodeType": "YulTypedName",
														"src": "3798:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3806:6:3",
														"nodeType": "YulTypedName",
														"src": "3806:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3814:6:3",
														"nodeType": "YulTypedName",
														"src": "3814:6:3",
														"type": ""
													}
												],
												"src": "3711:661:3"
											},
											{
												"body": {
													"nativeSrc": "4441:80:3",
													"nodeType": "YulBlock",
													"src": "4441:80:3",
													"statements": [
														{
															"nativeSrc": "4451:22:3",
															"nodeType": "YulAssignment",
															"src": "4451:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4466:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4466:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4460:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "4460:5:3"
																},
																"nativeSrc": "4460:13:3",
																"nodeType": "YulFunctionCall",
																"src": "4460:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4451:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "4451:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4509:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "4509:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4482:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "4482:26:3"
																},
																"nativeSrc": "4482:33:3",
																"nodeType": "YulFunctionCall",
																"src": "4482:33:3"
															},
															"nativeSrc": "4482:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "4482:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "4378:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4419:6:3",
														"nodeType": "YulTypedName",
														"src": "4419:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4427:3:3",
														"nodeType": "YulTypedName",
														"src": "4427:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4435:5:3",
														"nodeType": "YulTypedName",
														"src": "4435:5:3",
														"type": ""
													}
												],
												"src": "4378:143:3"
											},
											{
												"body": {
													"nativeSrc": "4604:274:3",
													"nodeType": "YulBlock",
													"src": "4604:274:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "4650:83:3",
																"nodeType": "YulBlock",
																"src": "4650:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4652:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "4652:77:3"
																			},
																			"nativeSrc": "4652:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4652:79:3"
																		},
																		"nativeSrc": "4652:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4652:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4625:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "4625:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4634:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4634:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4621:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4621:3:3"
																		},
																		"nativeSrc": "4621:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4621:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4646:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4646:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4617:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4617:3:3"
																},
																"nativeSrc": "4617:32:3",
																"nodeType": "YulFunctionCall",
																"src": "4617:32:3"
															},
															"nativeSrc": "4614:119:3",
															"nodeType": "YulIf",
															"src": "4614:119:3"
														},
														{
															"nativeSrc": "4743:128:3",
															"nodeType": "YulBlock",
															"src": "4743:128:3",
															"statements": [
																{
																	"nativeSrc": "4758:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4758:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4772:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4772:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4762:6:3",
																			"nodeType": "YulTypedName",
																			"src": "4762:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4787:74:3",
																	"nodeType": "YulAssignment",
																	"src": "4787:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4833:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "4833:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4844:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "4844:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4829:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "4829:3:3"
																				},
																				"nativeSrc": "4829:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4829:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4853:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "4853:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4797:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "4797:31:3"
																		},
																		"nativeSrc": "4797:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4797:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4787:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "4787:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "4527:351:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4574:9:3",
														"nodeType": "YulTypedName",
														"src": "4574:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4585:7:3",
														"nodeType": "YulTypedName",
														"src": "4585:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4597:6:3",
														"nodeType": "YulTypedName",
														"src": "4597:6:3",
														"type": ""
													}
												],
												"src": "4527:351:3"
											},
											{
												"body": {
													"nativeSrc": "4980:73:3",
													"nodeType": "YulBlock",
													"src": "4980:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4997:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4997:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5002:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5002:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4990:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4990:6:3"
																},
																"nativeSrc": "4990:19:3",
																"nodeType": "YulFunctionCall",
																"src": "4990:19:3"
															},
															"nativeSrc": "4990:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "4990:19:3"
														},
														{
															"nativeSrc": "5018:29:3",
															"nodeType": "YulAssignment",
															"src": "5018:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5037:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5037:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5042:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5042:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5033:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5033:3:3"
																},
																"nativeSrc": "5033:14:3",
																"nodeType": "YulFunctionCall",
																"src": "5033:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5018:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "5018:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4884:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4952:3:3",
														"nodeType": "YulTypedName",
														"src": "4952:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4957:6:3",
														"nodeType": "YulTypedName",
														"src": "4957:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4968:11:3",
														"nodeType": "YulTypedName",
														"src": "4968:11:3",
														"type": ""
													}
												],
												"src": "4884:169:3"
											},
											{
												"body": {
													"nativeSrc": "5165:76:3",
													"nodeType": "YulBlock",
													"src": "5165:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5187:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "5187:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5195:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5195:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5183:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5183:3:3"
																		},
																		"nativeSrc": "5183:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5183:14:3"
																	},
																	{
																		"hexValue": "5061697220646f6573206e6f7420636f6e7461696e206261736520746f6b656e",
																		"kind": "string",
																		"nativeSrc": "5199:34:3",
																		"nodeType": "YulLiteral",
																		"src": "5199:34:3",
																		"type": "",
																		"value": "Pair does not contain base token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5176:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5176:6:3"
																},
																"nativeSrc": "5176:58:3",
																"nodeType": "YulFunctionCall",
																"src": "5176:58:3"
															},
															"nativeSrc": "5176:58:3",
															"nodeType": "YulExpressionStatement",
															"src": "5176:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_6e8a3ed432c0512d004ecad554fe366a5594ee75cdf27e9451e55f5b44628a94",
												"nativeSrc": "5059:182:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5157:6:3",
														"nodeType": "YulTypedName",
														"src": "5157:6:3",
														"type": ""
													}
												],
												"src": "5059:182:3"
											},
											{
												"body": {
													"nativeSrc": "5393:220:3",
													"nodeType": "YulBlock",
													"src": "5393:220:3",
													"statements": [
														{
															"nativeSrc": "5403:74:3",
															"nodeType": "YulAssignment",
															"src": "5403:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5469:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5469:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5474:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5474:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5410:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "5410:58:3"
																},
																"nativeSrc": "5410:67:3",
																"nodeType": "YulFunctionCall",
																"src": "5410:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5403:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5403:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5575:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5575:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6e8a3ed432c0512d004ecad554fe366a5594ee75cdf27e9451e55f5b44628a94",
																	"nativeSrc": "5486:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "5486:88:3"
																},
																"nativeSrc": "5486:93:3",
																"nodeType": "YulFunctionCall",
																"src": "5486:93:3"
															},
															"nativeSrc": "5486:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "5486:93:3"
														},
														{
															"nativeSrc": "5588:19:3",
															"nodeType": "YulAssignment",
															"src": "5588:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5599:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5599:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5604:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5604:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5595:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5595:3:3"
																},
																"nativeSrc": "5595:12:3",
																"nodeType": "YulFunctionCall",
																"src": "5595:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5588:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5588:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6e8a3ed432c0512d004ecad554fe366a5594ee75cdf27e9451e55f5b44628a94_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5247:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5381:3:3",
														"nodeType": "YulTypedName",
														"src": "5381:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5389:3:3",
														"nodeType": "YulTypedName",
														"src": "5389:3:3",
														"type": ""
													}
												],
												"src": "5247:366:3"
											},
											{
												"body": {
													"nativeSrc": "5790:248:3",
													"nodeType": "YulBlock",
													"src": "5790:248:3",
													"statements": [
														{
															"nativeSrc": "5800:26:3",
															"nodeType": "YulAssignment",
															"src": "5800:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5812:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5812:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5823:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5823:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5808:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5808:3:3"
																},
																"nativeSrc": "5808:18:3",
																"nodeType": "YulFunctionCall",
																"src": "5808:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5800:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5800:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5847:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5847:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5858:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5858:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5843:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5843:3:3"
																		},
																		"nativeSrc": "5843:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5843:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5866:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "5866:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5872:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5872:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5862:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5862:3:3"
																		},
																		"nativeSrc": "5862:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5862:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5836:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5836:6:3"
																},
																"nativeSrc": "5836:47:3",
																"nodeType": "YulFunctionCall",
																"src": "5836:47:3"
															},
															"nativeSrc": "5836:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "5836:47:3"
														},
														{
															"nativeSrc": "5892:139:3",
															"nodeType": "YulAssignment",
															"src": "5892:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6026:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "6026:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6e8a3ed432c0512d004ecad554fe366a5594ee75cdf27e9451e55f5b44628a94_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5900:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "5900:124:3"
																},
																"nativeSrc": "5900:131:3",
																"nodeType": "YulFunctionCall",
																"src": "5900:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5892:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5892:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6e8a3ed432c0512d004ecad554fe366a5594ee75cdf27e9451e55f5b44628a94__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5619:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5770:9:3",
														"nodeType": "YulTypedName",
														"src": "5770:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5785:4:3",
														"nodeType": "YulTypedName",
														"src": "5785:4:3",
														"type": ""
													}
												],
												"src": "5619:419:3"
											},
											{
												"body": {
													"nativeSrc": "6087:43:3",
													"nodeType": "YulBlock",
													"src": "6087:43:3",
													"statements": [
														{
															"nativeSrc": "6097:27:3",
															"nodeType": "YulAssignment",
															"src": "6097:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6112:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "6112:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6119:4:3",
																		"nodeType": "YulLiteral",
																		"src": "6119:4:3",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6108:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6108:3:3"
																},
																"nativeSrc": "6108:16:3",
																"nodeType": "YulFunctionCall",
																"src": "6108:16:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6097:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "6097:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6044:86:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6069:5:3",
														"nodeType": "YulTypedName",
														"src": "6069:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6079:7:3",
														"nodeType": "YulTypedName",
														"src": "6079:7:3",
														"type": ""
													}
												],
												"src": "6044:86:3"
											},
											{
												"body": {
													"nativeSrc": "6177:77:3",
													"nodeType": "YulBlock",
													"src": "6177:77:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "6232:16:3",
																"nodeType": "YulBlock",
																"src": "6232:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6241:1:3",
																					"nodeType": "YulLiteral",
																					"src": "6241:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6244:1:3",
																					"nodeType": "YulLiteral",
																					"src": "6244:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6234:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6234:6:3"
																			},
																			"nativeSrc": "6234:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6234:12:3"
																		},
																		"nativeSrc": "6234:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6234:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6200:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "6200:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6223:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "6223:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "6207:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "6207:15:3"
																				},
																				"nativeSrc": "6207:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6207:22:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6197:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "6197:2:3"
																		},
																		"nativeSrc": "6197:33:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6197:33:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6190:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6190:6:3"
																},
																"nativeSrc": "6190:41:3",
																"nodeType": "YulFunctionCall",
																"src": "6190:41:3"
															},
															"nativeSrc": "6187:61:3",
															"nodeType": "YulIf",
															"src": "6187:61:3"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "6136:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6170:5:3",
														"nodeType": "YulTypedName",
														"src": "6170:5:3",
														"type": ""
													}
												],
												"src": "6136:118:3"
											},
											{
												"body": {
													"nativeSrc": "6321:78:3",
													"nodeType": "YulBlock",
													"src": "6321:78:3",
													"statements": [
														{
															"nativeSrc": "6331:22:3",
															"nodeType": "YulAssignment",
															"src": "6331:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6346:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "6346:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6340:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "6340:5:3"
																},
																"nativeSrc": "6340:13:3",
																"nodeType": "YulFunctionCall",
																"src": "6340:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6331:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "6331:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6387:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "6387:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "6362:24:3",
																	"nodeType": "YulIdentifier",
																	"src": "6362:24:3"
																},
																"nativeSrc": "6362:31:3",
																"nodeType": "YulFunctionCall",
																"src": "6362:31:3"
															},
															"nativeSrc": "6362:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "6362:31:3"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "6260:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6299:6:3",
														"nodeType": "YulTypedName",
														"src": "6299:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6307:3:3",
														"nodeType": "YulTypedName",
														"src": "6307:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6315:5:3",
														"nodeType": "YulTypedName",
														"src": "6315:5:3",
														"type": ""
													}
												],
												"src": "6260:139:3"
											},
											{
												"body": {
													"nativeSrc": "6480:272:3",
													"nodeType": "YulBlock",
													"src": "6480:272:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "6526:83:3",
																"nodeType": "YulBlock",
																"src": "6526:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6528:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "6528:77:3"
																			},
																			"nativeSrc": "6528:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6528:79:3"
																		},
																		"nativeSrc": "6528:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6528:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6501:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "6501:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6510:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6510:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6497:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6497:3:3"
																		},
																		"nativeSrc": "6497:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6497:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6522:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6522:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6493:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6493:3:3"
																},
																"nativeSrc": "6493:32:3",
																"nodeType": "YulFunctionCall",
																"src": "6493:32:3"
															},
															"nativeSrc": "6490:119:3",
															"nodeType": "YulIf",
															"src": "6490:119:3"
														},
														{
															"nativeSrc": "6619:126:3",
															"nodeType": "YulBlock",
															"src": "6619:126:3",
															"statements": [
																{
																	"nativeSrc": "6634:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6634:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6648:1:3",
																		"nodeType": "YulLiteral",
																		"src": "6648:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6638:6:3",
																			"nodeType": "YulTypedName",
																			"src": "6638:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6663:72:3",
																	"nodeType": "YulAssignment",
																	"src": "6663:72:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6707:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "6707:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6718:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "6718:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6703:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6703:3:3"
																				},
																				"nativeSrc": "6703:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6703:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6727:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "6727:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "6673:29:3",
																			"nodeType": "YulIdentifier",
																			"src": "6673:29:3"
																		},
																		"nativeSrc": "6673:62:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6673:62:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6663:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "6663:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "6405:347:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6450:9:3",
														"nodeType": "YulTypedName",
														"src": "6450:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6461:7:3",
														"nodeType": "YulTypedName",
														"src": "6461:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6473:6:3",
														"nodeType": "YulTypedName",
														"src": "6473:6:3",
														"type": ""
													}
												],
												"src": "6405:347:3"
											},
											{
												"body": {
													"nativeSrc": "6801:148:3",
													"nodeType": "YulBlock",
													"src": "6801:148:3",
													"statements": [
														{
															"nativeSrc": "6811:23:3",
															"nodeType": "YulAssignment",
															"src": "6811:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6832:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6832:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "6816:15:3",
																	"nodeType": "YulIdentifier",
																	"src": "6816:15:3"
																},
																"nativeSrc": "6816:18:3",
																"nodeType": "YulFunctionCall",
																"src": "6816:18:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6811:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "6811:1:3"
																}
															]
														},
														{
															"nativeSrc": "6843:23:3",
															"nodeType": "YulAssignment",
															"src": "6843:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6864:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6864:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "6848:15:3",
																	"nodeType": "YulIdentifier",
																	"src": "6848:15:3"
																},
																"nativeSrc": "6848:18:3",
																"nodeType": "YulFunctionCall",
																"src": "6848:18:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6843:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "6843:1:3"
																}
															]
														},
														{
															"nativeSrc": "6875:17:3",
															"nodeType": "YulAssignment",
															"src": "6875:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6887:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6887:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6890:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6890:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6883:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6883:3:3"
																},
																"nativeSrc": "6883:9:3",
																"nodeType": "YulFunctionCall",
																"src": "6883:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6875:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6875:4:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6920:22:3",
																"nodeType": "YulBlock",
																"src": "6920:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6922:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "6922:16:3"
																			},
																			"nativeSrc": "6922:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6922:18:3"
																		},
																		"nativeSrc": "6922:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6922:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6908:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "6908:4:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6914:4:3",
																		"nodeType": "YulLiteral",
																		"src": "6914:4:3",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6905:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "6905:2:3"
																},
																"nativeSrc": "6905:14:3",
																"nodeType": "YulFunctionCall",
																"src": "6905:14:3"
															},
															"nativeSrc": "6902:40:3",
															"nodeType": "YulIf",
															"src": "6902:40:3"
														}
													]
												},
												"name": "checked_sub_t_uint8",
												"nativeSrc": "6758:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6787:1:3",
														"nodeType": "YulTypedName",
														"src": "6787:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6790:1:3",
														"nodeType": "YulTypedName",
														"src": "6790:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6796:4:3",
														"nodeType": "YulTypedName",
														"src": "6796:4:3",
														"type": ""
													}
												],
												"src": "6758:191:3"
											},
											{
												"body": {
													"nativeSrc": "7006:51:3",
													"nodeType": "YulBlock",
													"src": "7006:51:3",
													"statements": [
														{
															"nativeSrc": "7016:34:3",
															"nodeType": "YulAssignment",
															"src": "7016:34:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7041:1:3",
																		"nodeType": "YulLiteral",
																		"src": "7041:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7044:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "7044:5:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7037:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7037:3:3"
																},
																"nativeSrc": "7037:13:3",
																"nodeType": "YulFunctionCall",
																"src": "7037:13:3"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7016:8:3",
																	"nodeType": "YulIdentifier",
																	"src": "7016:8:3"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "6955:102:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6987:5:3",
														"nodeType": "YulTypedName",
														"src": "6987:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6997:8:3",
														"nodeType": "YulTypedName",
														"src": "6997:8:3",
														"type": ""
													}
												],
												"src": "6955:102:3"
											},
											{
												"body": {
													"nativeSrc": "7136:775:3",
													"nodeType": "YulBlock",
													"src": "7136:775:3",
													"statements": [
														{
															"nativeSrc": "7146:15:3",
															"nodeType": "YulAssignment",
															"src": "7146:15:3",
															"value": {
																"name": "_power",
																"nativeSrc": "7155:6:3",
																"nodeType": "YulIdentifier",
																"src": "7155:6:3"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7146:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "7146:5:3"
																}
															]
														},
														{
															"nativeSrc": "7170:14:3",
															"nodeType": "YulAssignment",
															"src": "7170:14:3",
															"value": {
																"name": "_base",
																"nativeSrc": "7179:5:3",
																"nodeType": "YulIdentifier",
																"src": "7179:5:3"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7170:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "7170:4:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7228:677:3",
																"nodeType": "YulBlock",
																"src": "7228:677:3",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "7316:22:3",
																			"nodeType": "YulBlock",
																			"src": "7316:22:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7318:16:3",
																							"nodeType": "YulIdentifier",
																							"src": "7318:16:3"
																						},
																						"nativeSrc": "7318:18:3",
																						"nodeType": "YulFunctionCall",
																						"src": "7318:18:3"
																					},
																					"nativeSrc": "7318:18:3",
																					"nodeType": "YulExpressionStatement",
																					"src": "7318:18:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7294:4:3",
																					"nodeType": "YulIdentifier",
																					"src": "7294:4:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "7304:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "7304:3:3"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "7309:4:3",
																							"nodeType": "YulIdentifier",
																							"src": "7309:4:3"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "7300:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "7300:3:3"
																					},
																					"nativeSrc": "7300:14:3",
																					"nodeType": "YulFunctionCall",
																					"src": "7300:14:3"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7291:2:3",
																				"nodeType": "YulIdentifier",
																				"src": "7291:2:3"
																			},
																			"nativeSrc": "7291:24:3",
																			"nodeType": "YulFunctionCall",
																			"src": "7291:24:3"
																		},
																		"nativeSrc": "7288:50:3",
																		"nodeType": "YulIf",
																		"src": "7288:50:3"
																	},
																	{
																		"body": {
																			"nativeSrc": "7383:419:3",
																			"nodeType": "YulBlock",
																			"src": "7383:419:3",
																			"statements": [
																				{
																					"nativeSrc": "7763:25:3",
																					"nodeType": "YulAssignment",
																					"src": "7763:25:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7776:5:3",
																								"nodeType": "YulIdentifier",
																								"src": "7776:5:3"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7783:4:3",
																								"nodeType": "YulIdentifier",
																								"src": "7783:4:3"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7772:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "7772:3:3"
																						},
																						"nativeSrc": "7772:16:3",
																						"nodeType": "YulFunctionCall",
																						"src": "7772:16:3"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7763:5:3",
																							"nodeType": "YulIdentifier",
																							"src": "7763:5:3"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7358:8:3",
																					"nodeType": "YulIdentifier",
																					"src": "7358:8:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7368:1:3",
																					"nodeType": "YulLiteral",
																					"src": "7368:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7354:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "7354:3:3"
																			},
																			"nativeSrc": "7354:16:3",
																			"nodeType": "YulFunctionCall",
																			"src": "7354:16:3"
																		},
																		"nativeSrc": "7351:451:3",
																		"nodeType": "YulIf",
																		"src": "7351:451:3"
																	},
																	{
																		"nativeSrc": "7815:23:3",
																		"nodeType": "YulAssignment",
																		"src": "7815:23:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7827:4:3",
																					"nodeType": "YulIdentifier",
																					"src": "7827:4:3"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "7833:4:3",
																					"nodeType": "YulIdentifier",
																					"src": "7833:4:3"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7823:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "7823:3:3"
																			},
																			"nativeSrc": "7823:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "7823:15:3"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7815:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "7815:4:3"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7851:44:3",
																		"nodeType": "YulAssignment",
																		"src": "7851:44:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7886:8:3",
																					"nodeType": "YulIdentifier",
																					"src": "7886:8:3"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "7863:22:3",
																				"nodeType": "YulIdentifier",
																				"src": "7863:22:3"
																			},
																			"nativeSrc": "7863:32:3",
																			"nodeType": "YulFunctionCall",
																			"src": "7863:32:3"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "7851:8:3",
																				"nodeType": "YulIdentifier",
																				"src": "7851:8:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7204:8:3",
																		"nodeType": "YulIdentifier",
																		"src": "7204:8:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7214:1:3",
																		"nodeType": "YulLiteral",
																		"src": "7214:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7201:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "7201:2:3"
																},
																"nativeSrc": "7201:15:3",
																"nodeType": "YulFunctionCall",
																"src": "7201:15:3"
															},
															"nativeSrc": "7193:712:3",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7217:2:3",
																"nodeType": "YulBlock",
																"src": "7217:2:3",
																"statements": []
															},
															"pre": {
																"nativeSrc": "7197:3:3",
																"nodeType": "YulBlock",
																"src": "7197:3:3",
																"statements": []
															},
															"src": "7193:712:3"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "7063:848:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "7091:6:3",
														"nodeType": "YulTypedName",
														"src": "7091:6:3",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "7099:5:3",
														"nodeType": "YulTypedName",
														"src": "7099:5:3",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7106:8:3",
														"nodeType": "YulTypedName",
														"src": "7106:8:3",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7116:3:3",
														"nodeType": "YulTypedName",
														"src": "7116:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7124:5:3",
														"nodeType": "YulTypedName",
														"src": "7124:5:3",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "7131:4:3",
														"nodeType": "YulTypedName",
														"src": "7131:4:3",
														"type": ""
													}
												],
												"src": "7063:848:3"
											},
											{
												"body": {
													"nativeSrc": "7977:1013:3",
													"nodeType": "YulBlock",
													"src": "7977:1013:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "8172:20:3",
																"nodeType": "YulBlock",
																"src": "8172:20:3",
																"statements": [
																	{
																		"nativeSrc": "8174:10:3",
																		"nodeType": "YulAssignment",
																		"src": "8174:10:3",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8183:1:3",
																			"nodeType": "YulLiteral",
																			"src": "8183:1:3",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8174:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "8174:5:3"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8185:5:3",
																		"nodeType": "YulLeave",
																		"src": "8185:5:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8162:8:3",
																		"nodeType": "YulIdentifier",
																		"src": "8162:8:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8155:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8155:6:3"
																},
																"nativeSrc": "8155:16:3",
																"nodeType": "YulFunctionCall",
																"src": "8155:16:3"
															},
															"nativeSrc": "8152:40:3",
															"nodeType": "YulIf",
															"src": "8152:40:3"
														},
														{
															"body": {
																"nativeSrc": "8217:20:3",
																"nodeType": "YulBlock",
																"src": "8217:20:3",
																"statements": [
																	{
																		"nativeSrc": "8219:10:3",
																		"nodeType": "YulAssignment",
																		"src": "8219:10:3",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8228:1:3",
																			"nodeType": "YulLiteral",
																			"src": "8228:1:3",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8219:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "8219:5:3"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8230:5:3",
																		"nodeType": "YulLeave",
																		"src": "8230:5:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8211:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "8211:4:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8204:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8204:6:3"
																},
																"nativeSrc": "8204:12:3",
																"nodeType": "YulFunctionCall",
																"src": "8204:12:3"
															},
															"nativeSrc": "8201:36:3",
															"nodeType": "YulIf",
															"src": "8201:36:3"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8347:20:3",
																		"nodeType": "YulBlock",
																		"src": "8347:20:3",
																		"statements": [
																			{
																				"nativeSrc": "8349:10:3",
																				"nodeType": "YulAssignment",
																				"src": "8349:10:3",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8358:1:3",
																					"nodeType": "YulLiteral",
																					"src": "8358:1:3",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8349:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "8349:5:3"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8360:5:3",
																				"nodeType": "YulLeave",
																				"src": "8360:5:3"
																			}
																		]
																	},
																	"nativeSrc": "8340:27:3",
																	"nodeType": "YulCase",
																	"src": "8340:27:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8345:1:3",
																		"nodeType": "YulLiteral",
																		"src": "8345:1:3",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8391:176:3",
																		"nodeType": "YulBlock",
																		"src": "8391:176:3",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8426:22:3",
																					"nodeType": "YulBlock",
																					"src": "8426:22:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8428:16:3",
																									"nodeType": "YulIdentifier",
																									"src": "8428:16:3"
																								},
																								"nativeSrc": "8428:18:3",
																								"nodeType": "YulFunctionCall",
																								"src": "8428:18:3"
																							},
																							"nativeSrc": "8428:18:3",
																							"nodeType": "YulExpressionStatement",
																							"src": "8428:18:3"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8411:8:3",
																							"nodeType": "YulIdentifier",
																							"src": "8411:8:3"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8421:3:3",
																							"nodeType": "YulLiteral",
																							"src": "8421:3:3",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8408:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "8408:2:3"
																					},
																					"nativeSrc": "8408:17:3",
																					"nodeType": "YulFunctionCall",
																					"src": "8408:17:3"
																				},
																				"nativeSrc": "8405:43:3",
																				"nodeType": "YulIf",
																				"src": "8405:43:3"
																			},
																			{
																				"nativeSrc": "8461:25:3",
																				"nodeType": "YulAssignment",
																				"src": "8461:25:3",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8474:1:3",
																							"nodeType": "YulLiteral",
																							"src": "8474:1:3",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8477:8:3",
																							"nodeType": "YulIdentifier",
																							"src": "8477:8:3"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8470:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "8470:3:3"
																					},
																					"nativeSrc": "8470:16:3",
																					"nodeType": "YulFunctionCall",
																					"src": "8470:16:3"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8461:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "8461:5:3"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8517:22:3",
																					"nodeType": "YulBlock",
																					"src": "8517:22:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8519:16:3",
																									"nodeType": "YulIdentifier",
																									"src": "8519:16:3"
																								},
																								"nativeSrc": "8519:18:3",
																								"nodeType": "YulFunctionCall",
																								"src": "8519:18:3"
																							},
																							"nativeSrc": "8519:18:3",
																							"nodeType": "YulExpressionStatement",
																							"src": "8519:18:3"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "8505:5:3",
																							"nodeType": "YulIdentifier",
																							"src": "8505:5:3"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "8512:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "8512:3:3"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8502:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "8502:2:3"
																					},
																					"nativeSrc": "8502:14:3",
																					"nodeType": "YulFunctionCall",
																					"src": "8502:14:3"
																				},
																				"nativeSrc": "8499:40:3",
																				"nodeType": "YulIf",
																				"src": "8499:40:3"
																			},
																			{
																				"nativeSrc": "8552:5:3",
																				"nodeType": "YulLeave",
																				"src": "8552:5:3"
																			}
																		]
																	},
																	"nativeSrc": "8376:191:3",
																	"nodeType": "YulCase",
																	"src": "8376:191:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8381:1:3",
																		"nodeType": "YulLiteral",
																		"src": "8381:1:3",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "8297:4:3",
																"nodeType": "YulIdentifier",
																"src": "8297:4:3"
															},
															"nativeSrc": "8290:277:3",
															"nodeType": "YulSwitch",
															"src": "8290:277:3"
														},
														{
															"body": {
																"nativeSrc": "8699:123:3",
																"nodeType": "YulBlock",
																"src": "8699:123:3",
																"statements": [
																	{
																		"nativeSrc": "8713:28:3",
																		"nodeType": "YulAssignment",
																		"src": "8713:28:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8726:4:3",
																					"nodeType": "YulIdentifier",
																					"src": "8726:4:3"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8732:8:3",
																					"nodeType": "YulIdentifier",
																					"src": "8732:8:3"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8722:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "8722:3:3"
																			},
																			"nativeSrc": "8722:19:3",
																			"nodeType": "YulFunctionCall",
																			"src": "8722:19:3"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8713:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "8713:5:3"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8772:22:3",
																			"nodeType": "YulBlock",
																			"src": "8772:22:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8774:16:3",
																							"nodeType": "YulIdentifier",
																							"src": "8774:16:3"
																						},
																						"nativeSrc": "8774:18:3",
																						"nodeType": "YulFunctionCall",
																						"src": "8774:18:3"
																					},
																					"nativeSrc": "8774:18:3",
																					"nodeType": "YulExpressionStatement",
																					"src": "8774:18:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8760:5:3",
																					"nodeType": "YulIdentifier",
																					"src": "8760:5:3"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8767:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "8767:3:3"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8757:2:3",
																				"nodeType": "YulIdentifier",
																				"src": "8757:2:3"
																			},
																			"nativeSrc": "8757:14:3",
																			"nodeType": "YulFunctionCall",
																			"src": "8757:14:3"
																		},
																		"nativeSrc": "8754:40:3",
																		"nodeType": "YulIf",
																		"src": "8754:40:3"
																	},
																	{
																		"nativeSrc": "8807:5:3",
																		"nodeType": "YulLeave",
																		"src": "8807:5:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8602:4:3",
																						"nodeType": "YulIdentifier",
																						"src": "8602:4:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8608:2:3",
																						"nodeType": "YulLiteral",
																						"src": "8608:2:3",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8599:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "8599:2:3"
																				},
																				"nativeSrc": "8599:12:3",
																				"nodeType": "YulFunctionCall",
																				"src": "8599:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8616:8:3",
																						"nodeType": "YulIdentifier",
																						"src": "8616:8:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8626:2:3",
																						"nodeType": "YulLiteral",
																						"src": "8626:2:3",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8613:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "8613:2:3"
																				},
																				"nativeSrc": "8613:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "8613:16:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8595:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8595:3:3"
																		},
																		"nativeSrc": "8595:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8595:35:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8651:4:3",
																						"nodeType": "YulIdentifier",
																						"src": "8651:4:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8657:3:3",
																						"nodeType": "YulLiteral",
																						"src": "8657:3:3",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8648:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "8648:2:3"
																				},
																				"nativeSrc": "8648:13:3",
																				"nodeType": "YulFunctionCall",
																				"src": "8648:13:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8666:8:3",
																						"nodeType": "YulIdentifier",
																						"src": "8666:8:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8676:2:3",
																						"nodeType": "YulLiteral",
																						"src": "8676:2:3",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8663:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "8663:2:3"
																				},
																				"nativeSrc": "8663:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "8663:16:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8644:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8644:3:3"
																		},
																		"nativeSrc": "8644:36:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8644:36:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8579:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "8579:2:3"
																},
																"nativeSrc": "8579:111:3",
																"nodeType": "YulFunctionCall",
																"src": "8579:111:3"
															},
															"nativeSrc": "8576:246:3",
															"nodeType": "YulIf",
															"src": "8576:246:3"
														},
														{
															"nativeSrc": "8832:57:3",
															"nodeType": "YulAssignment",
															"src": "8832:57:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8866:1:3",
																		"nodeType": "YulLiteral",
																		"src": "8866:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8869:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "8869:4:3"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8875:8:3",
																		"nodeType": "YulIdentifier",
																		"src": "8875:8:3"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "8885:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "8885:3:3"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "8847:18:3",
																	"nodeType": "YulIdentifier",
																	"src": "8847:18:3"
																},
																"nativeSrc": "8847:42:3",
																"nodeType": "YulFunctionCall",
																"src": "8847:42:3"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8832:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "8832:5:3"
																},
																{
																	"name": "base",
																	"nativeSrc": "8839:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "8839:4:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8928:22:3",
																"nodeType": "YulBlock",
																"src": "8928:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8930:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "8930:16:3"
																			},
																			"nativeSrc": "8930:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "8930:18:3"
																		},
																		"nativeSrc": "8930:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "8930:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8905:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "8905:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "8916:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "8916:3:3"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "8921:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "8921:4:3"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "8912:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8912:3:3"
																		},
																		"nativeSrc": "8912:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8912:14:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8902:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "8902:2:3"
																},
																"nativeSrc": "8902:25:3",
																"nodeType": "YulFunctionCall",
																"src": "8902:25:3"
															},
															"nativeSrc": "8899:51:3",
															"nodeType": "YulIf",
															"src": "8899:51:3"
														},
														{
															"nativeSrc": "8959:25:3",
															"nodeType": "YulAssignment",
															"src": "8959:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8972:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "8972:5:3"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8979:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "8979:4:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8968:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8968:3:3"
																},
																"nativeSrc": "8968:16:3",
																"nodeType": "YulFunctionCall",
																"src": "8968:16:3"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8959:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "8959:5:3"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "7917:1073:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7947:4:3",
														"nodeType": "YulTypedName",
														"src": "7947:4:3",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7953:8:3",
														"nodeType": "YulTypedName",
														"src": "7953:8:3",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7963:3:3",
														"nodeType": "YulTypedName",
														"src": "7963:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7971:5:3",
														"nodeType": "YulTypedName",
														"src": "7971:5:3",
														"type": ""
													}
												],
												"src": "7917:1073:3"
											},
											{
												"body": {
													"nativeSrc": "9062:219:3",
													"nodeType": "YulBlock",
													"src": "9062:219:3",
													"statements": [
														{
															"nativeSrc": "9072:31:3",
															"nodeType": "YulAssignment",
															"src": "9072:31:3",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9098:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "9098:4:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9080:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "9080:17:3"
																},
																"nativeSrc": "9080:23:3",
																"nodeType": "YulFunctionCall",
																"src": "9080:23:3"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9072:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "9072:4:3"
																}
															]
														},
														{
															"nativeSrc": "9112:39:3",
															"nodeType": "YulAssignment",
															"src": "9112:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9142:8:3",
																		"nodeType": "YulIdentifier",
																		"src": "9142:8:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9124:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "9124:17:3"
																},
																"nativeSrc": "9124:27:3",
																"nodeType": "YulFunctionCall",
																"src": "9124:27:3"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "9112:8:3",
																	"nodeType": "YulIdentifier",
																	"src": "9112:8:3"
																}
															]
														},
														{
															"nativeSrc": "9161:113:3",
															"nodeType": "YulAssignment",
															"src": "9161:113:3",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9191:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "9191:4:3"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9197:8:3",
																		"nodeType": "YulIdentifier",
																		"src": "9197:8:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:66:3",
																		"nodeType": "YulLiteral",
																		"src": "9207:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "9170:20:3",
																	"nodeType": "YulIdentifier",
																	"src": "9170:20:3"
																},
																"nativeSrc": "9170:104:3",
																"nodeType": "YulFunctionCall",
																"src": "9170:104:3"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9161:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "9161:5:3"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "8996:285:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9037:4:3",
														"nodeType": "YulTypedName",
														"src": "9037:4:3",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9043:8:3",
														"nodeType": "YulTypedName",
														"src": "9043:8:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9056:5:3",
														"nodeType": "YulTypedName",
														"src": "9056:5:3",
														"type": ""
													}
												],
												"src": "8996:285:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_uint112(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint112(value) {\n        if iszero(eq(value, cleanup_t_uint112(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint112_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint112(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint112_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint112_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_6e8a3ed432c0512d004ecad554fe366a5594ee75cdf27e9451e55f5b44628a94(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pair does not contain base token\")\n\n    }\n\n    function abi_encode_t_stringliteral_6e8a3ed432c0512d004ecad554fe366a5594ee75cdf27e9451e55f5b44628a94_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_6e8a3ed432c0512d004ecad554fe366a5594ee75cdf27e9451e55f5b44628a94(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6e8a3ed432c0512d004ecad554fe366a5594ee75cdf27e9451e55f5b44628a94__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6e8a3ed432c0512d004ecad554fe366a5594ee75cdf27e9451e55f5b44628a94_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint8(x, y) -> diff {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xff) { panic_error_0x11() }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610054575f3560e01c8062593bcf14610058578063040141e5146100885780630b017603146100a65780636855e939146100c45780637b49b49d146100e2575b5f5ffd5b610072600480360381019061006d91906106c4565b610112565b60405161007f9190610707565b60405180910390f35b610090610152565b60405161009d919061072f565b60405180910390f35b6100ae610176565b6040516100bb919061072f565b60405180910390f35b6100cc61019b565b6040516100d99190610707565b60405180910390f35b6100fc60048036038101906100f791906106c4565b610209565b6040516101099190610707565b60405180910390f35b5f5f61011d83610209565b90505f61012861019b565b9050670de0b6b3a7640000818361013f9190610775565b61014991906107e3565b92505050919050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f5f5f5f6101eb60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610258565b509350935093509350610200828286866105c4565b94505050505090565b5f5f5f5f5f610238865f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610258565b50935093509350935061024d848484846105c4565b945050505050919050565b5f5f5f5f5f5f8790505f5f8273ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156102ac573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102d0919061088f565b50915091505f8373ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561031f573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061034391906108f3565b90505f8473ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561038f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103b391906108f3565b90505f8b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103f25760019050610469565b8b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361042d575f9050610468565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045f90610978565b60405180910390fd5b5b8061048457836dffffffffffffffffffffffffffff16610496565b846dffffffffffffffffffffffffffff165b9a50806104b357846dffffffffffffffffffffffffffff166104c5565b836dffffffffffffffffffffffffffff165b9850806104d257826104d4565b815b96508b73ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561051f573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061054391906109cc565b99508673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561058e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b291906109cc565b97505050505050509295509295909350565b5f5f670de0b6b3a7640000866105da9190610775565b90508460ff168360ff1611156106175784836105f691906109f7565b60ff16600a6106059190610b5a565b816106109190610775565b905061064f565b8260ff168560ff16111561064e57828561063191906109f7565b60ff16600a6106409190610b5a565b8161064b91906107e3565b90505b5b838161065b91906107e3565b915050949350505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106938261066a565b9050919050565b6106a381610689565b81146106ad575f5ffd5b50565b5f813590506106be8161069a565b92915050565b5f602082840312156106d9576106d8610666565b5b5f6106e6848285016106b0565b91505092915050565b5f819050919050565b610701816106ef565b82525050565b5f60208201905061071a5f8301846106f8565b92915050565b61072981610689565b82525050565b5f6020820190506107425f830184610720565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61077f826106ef565b915061078a836106ef565b9250828202610798816106ef565b915082820484148315176107af576107ae610748565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6107ed826106ef565b91506107f8836106ef565b925082610808576108076107b6565b5b828204905092915050565b5f6dffffffffffffffffffffffffffff82169050919050565b61083581610813565b811461083f575f5ffd5b50565b5f815190506108508161082c565b92915050565b5f63ffffffff82169050919050565b61086e81610856565b8114610878575f5ffd5b50565b5f8151905061088981610865565b92915050565b5f5f5f606084860312156108a6576108a5610666565b5b5f6108b386828701610842565b93505060206108c486828701610842565b92505060406108d58682870161087b565b9150509250925092565b5f815190506108ed8161069a565b92915050565b5f6020828403121561090857610907610666565b5b5f610915848285016108df565b91505092915050565b5f82825260208201905092915050565b7f5061697220646f6573206e6f7420636f6e7461696e206261736520746f6b656e5f82015250565b5f61096260208361091e565b915061096d8261092e565b602082019050919050565b5f6020820190508181035f83015261098f81610956565b9050919050565b5f60ff82169050919050565b6109ab81610996565b81146109b5575f5ffd5b50565b5f815190506109c6816109a2565b92915050565b5f602082840312156109e1576109e0610666565b5b5f6109ee848285016109b8565b91505092915050565b5f610a0182610996565b9150610a0c83610996565b9250828203905060ff811115610a2557610a24610748565b5b92915050565b5f8160011c9050919050565b5f5f8291508390505b6001851115610a8057808604811115610a5c57610a5b610748565b5b6001851615610a6b5780820291505b8081029050610a7985610a2b565b9450610a40565b94509492505050565b5f82610a985760019050610b53565b81610aa5575f9050610b53565b8160018114610abb5760028114610ac557610af4565b6001915050610b53565b60ff841115610ad757610ad6610748565b5b8360020a915084821115610aee57610aed610748565b5b50610b53565b5060208310610133831016604e8410600b8410161715610b295782820a905083811115610b2457610b23610748565b5b610b53565b610b368484846001610a37565b92509050818404811115610b4d57610b4c610748565b5b81810290505b9392505050565b5f610b64826106ef565b9150610b6f836106ef565b9250610b9c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610a89565b90509291505056fea2646970667358221220d7a7a5f708f05aea04a2dd708102f50c247125ea221a3e13ec3a1546d8f4833f64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x54 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x593BCF EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x40141E5 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xB017603 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x6855E939 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x7B49B49D EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH2 0x152 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x72F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH2 0x176 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x72F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0x209 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH2 0x11D DUP4 PUSH2 0x209 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x128 PUSH2 0x19B JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 DUP4 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x775 JUMP JUMPDEST PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x7E3 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x1EB PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x258 JUMP JUMPDEST POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x200 DUP3 DUP3 DUP7 DUP7 PUSH2 0x5C4 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x238 DUP7 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x258 JUMP JUMPDEST POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x24D DUP5 DUP5 DUP5 DUP5 PUSH2 0x5C4 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 DUP8 SWAP1 POP PUSH0 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AC JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x8F3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x38F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x8F3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3F2 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x469 JUMP JUMPDEST DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x42D JUMPI PUSH0 SWAP1 POP PUSH2 0x468 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP1 PUSH2 0x484 JUMPI DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x496 JUMP JUMPDEST DUP5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP11 POP DUP1 PUSH2 0x4B3 JUMPI DUP5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4C5 JUMP JUMPDEST DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP9 POP DUP1 PUSH2 0x4D2 JUMPI DUP3 PUSH2 0x4D4 JUMP JUMPDEST DUP2 JUMPDEST SWAP7 POP DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x51F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x543 SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST SWAP10 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST SWAP8 POP POP POP POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x5DA SWAP2 SWAP1 PUSH2 0x775 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND GT ISZERO PUSH2 0x617 JUMPI DUP5 DUP4 PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH2 0x605 SWAP2 SWAP1 PUSH2 0xB5A JUMP JUMPDEST DUP2 PUSH2 0x610 SWAP2 SWAP1 PUSH2 0x775 JUMP JUMPDEST SWAP1 POP PUSH2 0x64F JUMP JUMPDEST DUP3 PUSH1 0xFF AND DUP6 PUSH1 0xFF AND GT ISZERO PUSH2 0x64E JUMPI DUP3 DUP6 PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH2 0x640 SWAP2 SWAP1 PUSH2 0xB5A JUMP JUMPDEST DUP2 PUSH2 0x64B SWAP2 SWAP1 PUSH2 0x7E3 JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST DUP4 DUP2 PUSH2 0x65B SWAP2 SWAP1 PUSH2 0x7E3 JUMP JUMPDEST SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x693 DUP3 PUSH2 0x66A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A3 DUP2 PUSH2 0x689 JUMP JUMPDEST DUP2 EQ PUSH2 0x6AD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6BE DUP2 PUSH2 0x69A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6D9 JUMPI PUSH2 0x6D8 PUSH2 0x666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6E6 DUP5 DUP3 DUP6 ADD PUSH2 0x6B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x701 DUP2 PUSH2 0x6EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x71A PUSH0 DUP4 ADD DUP5 PUSH2 0x6F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x729 DUP2 PUSH2 0x689 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x742 PUSH0 DUP4 ADD DUP5 PUSH2 0x720 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x77F DUP3 PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP PUSH2 0x78A DUP4 PUSH2 0x6EF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x798 DUP2 PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x7AF JUMPI PUSH2 0x7AE PUSH2 0x748 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x7ED DUP3 PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP PUSH2 0x7F8 DUP4 PUSH2 0x6EF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x808 JUMPI PUSH2 0x807 PUSH2 0x7B6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x835 DUP2 PUSH2 0x813 JUMP JUMPDEST DUP2 EQ PUSH2 0x83F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x850 DUP2 PUSH2 0x82C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86E DUP2 PUSH2 0x856 JUMP JUMPDEST DUP2 EQ PUSH2 0x878 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x889 DUP2 PUSH2 0x865 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x8A5 PUSH2 0x666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8B3 DUP7 DUP3 DUP8 ADD PUSH2 0x842 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x8C4 DUP7 DUP3 DUP8 ADD PUSH2 0x842 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x8D5 DUP7 DUP3 DUP8 ADD PUSH2 0x87B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x8ED DUP2 PUSH2 0x69A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x908 JUMPI PUSH2 0x907 PUSH2 0x666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x915 DUP5 DUP3 DUP6 ADD PUSH2 0x8DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061697220646F6573206E6F7420636F6E7461696E206261736520746F6B656E PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x962 PUSH1 0x20 DUP4 PUSH2 0x91E JUMP JUMPDEST SWAP2 POP PUSH2 0x96D DUP3 PUSH2 0x92E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x98F DUP2 PUSH2 0x956 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9AB DUP2 PUSH2 0x996 JUMP JUMPDEST DUP2 EQ PUSH2 0x9B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x9C6 DUP2 PUSH2 0x9A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9E1 JUMPI PUSH2 0x9E0 PUSH2 0x666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9EE DUP5 DUP3 DUP6 ADD PUSH2 0x9B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA01 DUP3 PUSH2 0x996 JUMP JUMPDEST SWAP2 POP PUSH2 0xA0C DUP4 PUSH2 0x996 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0xA25 JUMPI PUSH2 0xA24 PUSH2 0x748 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xA80 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xA5C JUMPI PUSH2 0xA5B PUSH2 0x748 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xA6B JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xA79 DUP6 PUSH2 0xA2B JUMP JUMPDEST SWAP5 POP PUSH2 0xA40 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xA98 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xB53 JUMP JUMPDEST DUP2 PUSH2 0xAA5 JUMPI PUSH0 SWAP1 POP PUSH2 0xB53 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xABB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xAC5 JUMPI PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xB53 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xAD7 JUMPI PUSH2 0xAD6 PUSH2 0x748 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAED PUSH2 0x748 JUMP JUMPDEST JUMPDEST POP PUSH2 0xB53 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xB29 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xB24 JUMPI PUSH2 0xB23 PUSH2 0x748 JUMP JUMPDEST JUMPDEST PUSH2 0xB53 JUMP JUMPDEST PUSH2 0xB36 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xA37 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xB4D JUMPI PUSH2 0xB4C PUSH2 0x748 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB64 DUP3 PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP PUSH2 0xB6F DUP4 PUSH2 0x6EF JUMP JUMPDEST SWAP3 POP PUSH2 0xB9C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xA89 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0xA7 0xA5 0xF7 ADDMOD CREATE GAS 0xEA DIV LOG2 0xDD PUSH17 0x8102F50C247125EA221A3E13EC3A1546D8 DELEGATECALL DUP4 EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "2249:1628:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3063:355;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2282:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2315:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3509:365;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2613:382;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3063:355;3131:15;3158:17;3178:30;3196:11;3178:17;:30::i;:::-;3158:50;;3238:15;3258:17;:15;:17::i;:::-;3238:37;;3407:4;3396:7;3384:9;:19;;;;:::i;:::-;3383:28;;;;:::i;:::-;3373:38;;3148:270;;3063:355;;;:::o;2282:27::-;;;;;;;;;;;;;:::o;2315:36::-;;;;;;;;;;;;;:::o;3509:365::-;3557:15;3598:19;3631:10;3655:18;3687:10;3712:56;3732:21;;;;;;;;;;;3755:12;;;;;;;;;;;3712:19;:56::i;:::-;3584:184;;;;;;;;;3815:52;3831:10;3843:4;3849:11;3862:4;3815:15;:52::i;:::-;3805:62;;3574:300;;;;3509:365;:::o;2613:382::-;2682:15;2723:19;2756:10;2780:20;2814:10;2839:46;2859:11;2872:12;;;;;;;;;;;2839:19;:46::i;:::-;2709:176;;;;;;;;;2934:54;2950:11;2963:4;2969:12;2983:4;2934:15;:54::i;:::-;2924:64;;2699:296;;;;2613:382;;;:::o;571:1123::-;700:19;733:13;760:20;794:14;822:18;865:19;902:11;865:49;;925:10;937;953:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;924:47;;;;;981:10;994:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;981:26;;1017:10;1030:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1017:26;;1054:17;1091:9;1085:15;;:2;:15;;;1081:210;;1131:4;1116:19;;1081:210;;;1162:9;1156:15;;:2;:15;;;1152:139;;1202:5;1187:20;;1152:139;;;1238:42;;;;;;;;;;:::i;:::-;;;;;;;;1152:139;1081:210;1316:12;:40;;1353:2;1345:11;;1316:40;;;1339:2;1331:11;;1316:40;1301:55;;1381:12;:40;;1418:2;1410:11;;1381:40;;;1404:2;1396:11;;1381:40;1366:55;;1446:12;:22;;1466:2;1446:22;;;1461:2;1446:22;1431:37;;1608:9;1593:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1582:47;;1665:10;1650:35;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1639:48;;855:839;;;;;;571:1123;;;;;;;;:::o;1837:408::-;1983:15;2010:11;2035:4;2024:8;:15;;;;:::i;:::-;2010:29;;2060:4;2053:11;;:4;:11;;;2049:156;;;2108:4;2101;:11;;;;:::i;:::-;2093:20;;2087:2;:26;;;;:::i;:::-;2080:33;;;;;:::i;:::-;;;2049:156;;;2141:4;2134:11;;:4;:11;;;2130:75;;;2189:4;2182;:11;;;;:::i;:::-;2174:20;;2168:2;:26;;;;:::i;:::-;2161:33;;;;;:::i;:::-;;;2130:75;2049:156;2230:8;2224:3;:14;;;;:::i;:::-;2214:24;;2000:245;1837:408;;;;;;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:180::-;2011:77;2008:1;2001:88;2108:4;2105:1;2098:15;2132:4;2129:1;2122:15;2149:410;2189:7;2212:20;2230:1;2212:20;:::i;:::-;2207:25;;2246:20;2264:1;2246:20;:::i;:::-;2241:25;;2301:1;2298;2294:9;2323:30;2341:11;2323:30;:::i;:::-;2312:41;;2502:1;2493:7;2489:15;2486:1;2483:22;2463:1;2456:9;2436:83;2413:139;;2532:18;;:::i;:::-;2413:139;2197:362;2149:410;;;;:::o;2565:180::-;2613:77;2610:1;2603:88;2710:4;2707:1;2700:15;2734:4;2731:1;2724:15;2751:185;2791:1;2808:20;2826:1;2808:20;:::i;:::-;2803:25;;2842:20;2860:1;2842:20;:::i;:::-;2837:25;;2881:1;2871:35;;2886:18;;:::i;:::-;2871:35;2928:1;2925;2921:9;2916:14;;2751:185;;;;:::o;2942:114::-;2979:7;3019:30;3012:5;3008:42;2997:53;;2942:114;;;:::o;3062:122::-;3135:24;3153:5;3135:24;:::i;:::-;3128:5;3125:35;3115:63;;3174:1;3171;3164:12;3115:63;3062:122;:::o;3190:143::-;3247:5;3278:6;3272:13;3263:22;;3294:33;3321:5;3294:33;:::i;:::-;3190:143;;;;:::o;3339:93::-;3375:7;3415:10;3408:5;3404:22;3393:33;;3339:93;;;:::o;3438:120::-;3510:23;3527:5;3510:23;:::i;:::-;3503:5;3500:34;3490:62;;3548:1;3545;3538:12;3490:62;3438:120;:::o;3564:141::-;3620:5;3651:6;3645:13;3636:22;;3667:32;3693:5;3667:32;:::i;:::-;3564:141;;;;:::o;3711:661::-;3798:6;3806;3814;3863:2;3851:9;3842:7;3838:23;3834:32;3831:119;;;3869:79;;:::i;:::-;3831:119;3989:1;4014:64;4070:7;4061:6;4050:9;4046:22;4014:64;:::i;:::-;4004:74;;3960:128;4127:2;4153:64;4209:7;4200:6;4189:9;4185:22;4153:64;:::i;:::-;4143:74;;4098:129;4266:2;4292:63;4347:7;4338:6;4327:9;4323:22;4292:63;:::i;:::-;4282:73;;4237:128;3711:661;;;;;:::o;4378:143::-;4435:5;4466:6;4460:13;4451:22;;4482:33;4509:5;4482:33;:::i;:::-;4378:143;;;;:::o;4527:351::-;4597:6;4646:2;4634:9;4625:7;4621:23;4617:32;4614:119;;;4652:79;;:::i;:::-;4614:119;4772:1;4797:64;4853:7;4844:6;4833:9;4829:22;4797:64;:::i;:::-;4787:74;;4743:128;4527:351;;;;:::o;4884:169::-;4968:11;5002:6;4997:3;4990:19;5042:4;5037:3;5033:14;5018:29;;4884:169;;;;:::o;5059:182::-;5199:34;5195:1;5187:6;5183:14;5176:58;5059:182;:::o;5247:366::-;5389:3;5410:67;5474:2;5469:3;5410:67;:::i;:::-;5403:74;;5486:93;5575:3;5486:93;:::i;:::-;5604:2;5599:3;5595:12;5588:19;;5247:366;;;:::o;5619:419::-;5785:4;5823:2;5812:9;5808:18;5800:26;;5872:9;5866:4;5862:20;5858:1;5847:9;5843:17;5836:47;5900:131;6026:4;5900:131;:::i;:::-;5892:139;;5619:419;;;:::o;6044:86::-;6079:7;6119:4;6112:5;6108:16;6097:27;;6044:86;;;:::o;6136:118::-;6207:22;6223:5;6207:22;:::i;:::-;6200:5;6197:33;6187:61;;6244:1;6241;6234:12;6187:61;6136:118;:::o;6260:139::-;6315:5;6346:6;6340:13;6331:22;;6362:31;6387:5;6362:31;:::i;:::-;6260:139;;;;:::o;6405:347::-;6473:6;6522:2;6510:9;6501:7;6497:23;6493:32;6490:119;;;6528:79;;:::i;:::-;6490:119;6648:1;6673:62;6727:7;6718:6;6707:9;6703:22;6673:62;:::i;:::-;6663:72;;6619:126;6405:347;;;;:::o;6758:191::-;6796:4;6816:18;6832:1;6816:18;:::i;:::-;6811:23;;6848:18;6864:1;6848:18;:::i;:::-;6843:23;;6890:1;6887;6883:9;6875:17;;6914:4;6908;6905:14;6902:40;;;6922:18;;:::i;:::-;6902:40;6758:191;;;;:::o;6955:102::-;6997:8;7044:5;7041:1;7037:13;7016:34;;6955:102;;;:::o;7063:848::-;7124:5;7131:4;7155:6;7146:15;;7179:5;7170:14;;7193:712;7214:1;7204:8;7201:15;7193:712;;;7309:4;7304:3;7300:14;7294:4;7291:24;7288:50;;;7318:18;;:::i;:::-;7288:50;7368:1;7358:8;7354:16;7351:451;;;7783:4;7776:5;7772:16;7763:25;;7351:451;7833:4;7827;7823:15;7815:23;;7863:32;7886:8;7863:32;:::i;:::-;7851:44;;7193:712;;;7063:848;;;;;;;:::o;7917:1073::-;7971:5;8162:8;8152:40;;8183:1;8174:10;;8185:5;;8152:40;8211:4;8201:36;;8228:1;8219:10;;8230:5;;8201:36;8297:4;8345:1;8340:27;;;;8381:1;8376:191;;;;8290:277;;8340:27;8358:1;8349:10;;8360:5;;;8376:191;8421:3;8411:8;8408:17;8405:43;;;8428:18;;:::i;:::-;8405:43;8477:8;8474:1;8470:16;8461:25;;8512:3;8505:5;8502:14;8499:40;;;8519:18;;:::i;:::-;8499:40;8552:5;;;8290:277;;8676:2;8666:8;8663:16;8657:3;8651:4;8648:13;8644:36;8626:2;8616:8;8613:16;8608:2;8602:4;8599:12;8595:35;8579:111;8576:246;;;8732:8;8726:4;8722:19;8713:28;;8767:3;8760:5;8757:14;8754:40;;;8774:18;;:::i;:::-;8754:40;8807:5;;8576:246;8847:42;8885:3;8875:8;8869:4;8866:1;8847:42;:::i;:::-;8832:57;;;;8921:4;8916:3;8912:14;8905:5;8902:25;8899:51;;;8930:18;;:::i;:::-;8899:51;8979:4;8972:5;8968:16;8959:25;;7917:1073;;;;;;:::o;8996:285::-;9056:5;9080:23;9098:4;9080:23;:::i;:::-;9072:31;;9124:27;9142:8;9124:27;:::i;:::-;9112:39;;9170:104;9207:66;9197:8;9191:4;9170:104;:::i;:::-;9161:113;;8996:285;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "606800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"WETH_ADDRESS()": "2507",
								"WETH_USD_PAIR_ADDRESS()": "2530",
								"getTokenUsdPrice(address)": "infinite",
								"getTokenWethPrice(address)": "infinite",
								"getWethUsdPrice()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2249,
									"end": 3877,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 2249,
									"end": 3877,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2249,
									"end": 3877,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2358,
									"end": 2518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2446,
									"end": 2458,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2431,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2431,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2431,
									"end": 2458,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2431,
									"end": 2458,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2431,
									"end": 2458,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2431,
									"end": 2458,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2431,
									"end": 2458,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2431,
									"end": 2458,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2431,
									"end": 2458,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2431,
									"end": 2458,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2431,
									"end": 2458,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2431,
									"end": 2458,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2431,
									"end": 2458,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2431,
									"end": 2458,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2431,
									"end": 2458,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2431,
									"end": 2458,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2431,
									"end": 2458,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2431,
									"end": 2458,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2431,
									"end": 2458,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2431,
									"end": 2458,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2492,
									"end": 2511,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2468,
									"end": 2489,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2468,
									"end": 2489,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2468,
									"end": 2511,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2468,
									"end": 2511,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2468,
									"end": 2511,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2468,
									"end": 2511,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2468,
									"end": 2511,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2468,
									"end": 2511,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2468,
									"end": 2511,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2468,
									"end": 2511,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2468,
									"end": 2511,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2468,
									"end": 2511,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2468,
									"end": 2511,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2468,
									"end": 2511,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2468,
									"end": 2511,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2468,
									"end": 2511,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2468,
									"end": 2511,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2468,
									"end": 2511,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2468,
									"end": 2511,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2468,
									"end": 2511,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2358,
									"end": 2518,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2249,
									"end": 3877,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2249,
									"end": 3877,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2249,
									"end": 3877,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2249,
									"end": 3877,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2249,
									"end": 3877,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2249,
									"end": 3877,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2249,
									"end": 3877,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2249,
									"end": 3877,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2249,
									"end": 3877,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 2249,
									"end": 3877,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2249,
									"end": 3877,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d7a7a5f708f05aea04a2dd708102f50c247125ea221a3e13ec3a1546d8f4833f64736f6c634300081e0033",
									".code": [
										{
											"begin": 2249,
											"end": 3877,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "PUSH",
											"source": 2,
											"value": "593BCF"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "PUSH",
											"source": 2,
											"value": "40141E5"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "PUSH",
											"source": 2,
											"value": "B017603"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "PUSH",
											"source": 2,
											"value": "6855E939"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "PUSH",
											"source": 2,
											"value": "7B49B49D"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 3877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3063,
											"end": 3418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3063,
											"end": 3418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3063,
											"end": 3418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2282,
											"end": 2309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2282,
											"end": 2309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2315,
											"end": 2351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2315,
											"end": 2351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3509,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3509,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2613,
											"end": 2995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2613,
											"end": 2995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2613,
											"end": 2995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3146,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3178,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3196,
											"end": 3207,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3178,
											"end": 3208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3178,
											"end": 3208,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3178,
											"end": 3208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3238,
											"end": 3253,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3258,
											"end": 3275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3258,
											"end": 3275,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3258,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3238,
											"end": 3275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3238,
											"end": 3275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3411,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3396,
											"end": 3403,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3393,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3384,
											"end": 3403,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3384,
											"end": 3403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3403,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3384,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3383,
											"end": 3411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3383,
											"end": 3411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3411,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3383,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3373,
											"end": 3411,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3373,
											"end": 3411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3557,
											"end": 3572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3617,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3631,
											"end": 3641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3655,
											"end": 3673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3687,
											"end": 3697,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3732,
											"end": 3753,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3732,
											"end": 3753,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3732,
											"end": 3753,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3732,
											"end": 3753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3732,
											"end": 3753,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3732,
											"end": 3753,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3732,
											"end": 3753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3732,
											"end": 3753,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3732,
											"end": 3753,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3732,
											"end": 3753,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3712,
											"end": 3731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3712,
											"end": 3768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3712,
											"end": 3768,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3712,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3584,
											"end": 3768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3584,
											"end": 3768,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3584,
											"end": 3768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3584,
											"end": 3768,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3584,
											"end": 3768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3584,
											"end": 3768,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3584,
											"end": 3768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3584,
											"end": 3768,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3584,
											"end": 3768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3815,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3831,
											"end": 3841,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3843,
											"end": 3847,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3860,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3862,
											"end": 3866,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3815,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3815,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3815,
											"end": 3867,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3815,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3805,
											"end": 3867,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3805,
											"end": 3867,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3574,
											"end": 3874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3574,
											"end": 3874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3574,
											"end": 3874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3574,
											"end": 3874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3874,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2697,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2824,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2859,
											"end": 2870,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2839,
											"end": 2885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2885,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2839,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2885,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2885,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2885,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2885,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2950,
											"end": 2961,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2967,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 2981,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2983,
											"end": 2987,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2934,
											"end": 2988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2988,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2934,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2988,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2699,
											"end": 2995,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2699,
											"end": 2995,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2699,
											"end": 2995,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2699,
											"end": 2995,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 571,
											"end": 1694,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 571,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 700,
											"end": 719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 780,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 913,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 865,
											"end": 914,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 865,
											"end": 914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 925,
											"end": 935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 947,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 957,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 953,
											"end": 969,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 953,
											"end": 969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 953,
											"end": 969,
											"name": "PUSH",
											"source": 2,
											"value": "902F1AC"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 953,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 953,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 924,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 924,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 924,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 924,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 924,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 991,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 998,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 994,
											"end": 1005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "DFE1681"
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 994,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 994,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1027,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1034,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1041,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1030,
											"end": 1041,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1041,
											"name": "PUSH",
											"source": 2,
											"value": "D21220A7"
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1030,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1030,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1100,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1100,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1085,
											"end": 1100,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1100,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1085,
											"end": 1100,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1100,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1081,
											"end": 1291,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1135,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1116,
											"end": 1135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1081,
											"end": 1291,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1291,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1081,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1171,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1156,
											"end": 1158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1152,
											"end": 1291,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1207,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1152,
											"end": 1291,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1291,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1152,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1280,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1280,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1280,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1238,
											"end": 1280,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1280,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1280,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1238,
											"end": 1280,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1238,
											"end": 1280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1238,
											"end": 1280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1280,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1238,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1280,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1280,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1280,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1280,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1280,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1280,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1291,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1152,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1291,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1081,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1328,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1316,
											"end": 1356,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1355,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1356,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1345,
											"end": 1356,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1316,
											"end": 1356,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1356,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1316,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1341,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1331,
											"end": 1342,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1331,
											"end": 1342,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1356,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1316,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1356,
											"name": "SWAP11",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1356,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1393,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1381,
											"end": 1421,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1418,
											"end": 1420,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1421,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1410,
											"end": 1421,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1381,
											"end": 1421,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1421,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1381,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1406,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1396,
											"end": 1407,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1396,
											"end": 1407,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1421,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1381,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1366,
											"end": 1421,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 1366,
											"end": 1421,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1446,
											"end": 1468,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1468,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1446,
											"end": 1468,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1468,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1446,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1468,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1446,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1431,
											"end": 1468,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 1431,
											"end": 1468,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 1617,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1627,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1593,
											"end": 1627,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1627,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1593,
											"end": 1629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1593,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1629,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1675,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1650,
											"end": 1685,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1650,
											"end": 1687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1650,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1687,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1687,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 855,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 855,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 855,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 855,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 855,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 855,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 571,
											"end": 1694,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 571,
											"end": 1694,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 571,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 571,
											"end": 1694,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 571,
											"end": 1694,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 571,
											"end": 1694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 571,
											"end": 1694,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 571,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 571,
											"end": 1694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1837,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 1998,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2039,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2024,
											"end": 2032,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2024,
											"end": 2039,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2024,
											"end": 2039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2039,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2024,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2039,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2064,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2057,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2205,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2049,
											"end": 2205,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2112,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2105,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2101,
											"end": 2112,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2101,
											"end": 2112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2112,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2101,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2087,
											"end": 2089,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 2087,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2087,
											"end": 2113,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2087,
											"end": 2113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2087,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2087,
											"end": 2113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2087,
											"end": 2113,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2087,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2080,
											"end": 2113,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2080,
											"end": 2113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2113,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2080,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2049,
											"end": 2205,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2205,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2049,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2141,
											"end": 2145,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2145,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2134,
											"end": 2145,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2138,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2145,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2134,
											"end": 2145,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2145,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2205,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2130,
											"end": 2205,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2193,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2186,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2182,
											"end": 2193,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2182,
											"end": 2193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2193,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2182,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2174,
											"end": 2194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2170,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 2168,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2168,
											"end": 2194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2168,
											"end": 2194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2194,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2168,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2161,
											"end": 2194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2161,
											"end": 2194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2194,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2161,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2205,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2130,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2205,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2049,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2238,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2224,
											"end": 2238,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2224,
											"end": 2238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2238,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2224,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2238,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2238,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 2245,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 2245,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 2245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 2245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 2245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 2245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2143,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1963,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2088,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2008,
											"end": 2009,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2089,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2108,
											"end": 2112,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2105,
											"end": 2106,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2132,
											"end": 2136,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2129,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2149,
											"end": 2559,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2149,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2189,
											"end": 2196,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2230,
											"end": 2231,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2212,
											"end": 2232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2232,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2212,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2207,
											"end": 2232,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2207,
											"end": 2232,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2264,
											"end": 2265,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2246,
											"end": 2266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2301,
											"end": 2302,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2298,
											"end": 2299,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2294,
											"end": 2303,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2341,
											"end": 2352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2323,
											"end": 2353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2353,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2323,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2353,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2353,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2500,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2504,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2486,
											"end": 2487,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2505,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2464,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 2465,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2519,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2413,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2413,
											"end": 2552,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2532,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2532,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2532,
											"end": 2550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2532,
											"end": 2550,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2532,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2413,
											"end": 2552,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2413,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2197,
											"end": 2559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2149,
											"end": 2559,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2149,
											"end": 2559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2149,
											"end": 2559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2149,
											"end": 2559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2149,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2745,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2565,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2690,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2610,
											"end": 2611,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2603,
											"end": 2691,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2714,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2707,
											"end": 2708,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2700,
											"end": 2715,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2734,
											"end": 2738,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2731,
											"end": 2732,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2739,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2751,
											"end": 2936,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2751,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2791,
											"end": 2792,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2826,
											"end": 2827,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2808,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2808,
											"end": 2828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2808,
											"end": 2828,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2808,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2842,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2860,
											"end": 2861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2842,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2842,
											"end": 2862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2842,
											"end": 2862,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2842,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2837,
											"end": 2862,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2837,
											"end": 2862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2882,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2871,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2871,
											"end": 2906,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2886,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2886,
											"end": 2904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 2904,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2886,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2871,
											"end": 2906,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2871,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2928,
											"end": 2929,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2926,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2930,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2916,
											"end": 2930,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2916,
											"end": 2930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2751,
											"end": 2936,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2751,
											"end": 2936,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2751,
											"end": 2936,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2751,
											"end": 2936,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2751,
											"end": 2936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2942,
											"end": 3056,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2942,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 2986,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3049,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3012,
											"end": 3017,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3008,
											"end": 3050,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2997,
											"end": 3050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2997,
											"end": 3050,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2942,
											"end": 3056,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2942,
											"end": 3056,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2942,
											"end": 3056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2942,
											"end": 3056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3062,
											"end": 3184,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3062,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3153,
											"end": 3158,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3135,
											"end": 3159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3159,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3135,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3128,
											"end": 3133,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3160,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3115,
											"end": 3178,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3174,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3172,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3176,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3178,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3115,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3062,
											"end": 3184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3062,
											"end": 3184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3333,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3190,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3247,
											"end": 3252,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3272,
											"end": 3285,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3263,
											"end": 3285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3263,
											"end": 3285,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3294,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3321,
											"end": 3326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3294,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3294,
											"end": 3327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3294,
											"end": 3327,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3294,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3333,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3333,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3333,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3333,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3339,
											"end": 3432,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3339,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3375,
											"end": 3382,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3415,
											"end": 3425,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3408,
											"end": 3413,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3426,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3426,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3426,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3339,
											"end": 3432,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3339,
											"end": 3432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3339,
											"end": 3432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3339,
											"end": 3432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3558,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3438,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3527,
											"end": 3532,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3510,
											"end": 3533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3533,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3510,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3508,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3500,
											"end": 3534,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3490,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3490,
											"end": 3552,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3549,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3545,
											"end": 3546,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3550,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3490,
											"end": 3552,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3490,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3558,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3564,
											"end": 3705,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3564,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3620,
											"end": 3625,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3645,
											"end": 3658,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 3658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 3658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3667,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 3693,
											"end": 3698,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3667,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3667,
											"end": 3699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3667,
											"end": 3699,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 3667,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3564,
											"end": 3705,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3564,
											"end": 3705,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3564,
											"end": 3705,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3564,
											"end": 3705,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3564,
											"end": 3705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 4372,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3711,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 3804,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3812,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3865,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3851,
											"end": 3860,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3842,
											"end": 3849,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3838,
											"end": 3861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3834,
											"end": 3866,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3831,
											"end": 3950,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3831,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3831,
											"end": 3950,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3869,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 3869,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3869,
											"end": 3948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3869,
											"end": 3948,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 3869,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3831,
											"end": 3950,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3831,
											"end": 3950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 3990,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4014,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4070,
											"end": 4077,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4061,
											"end": 4067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4050,
											"end": 4059,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4046,
											"end": 4068,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4014,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 4014,
											"end": 4078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4014,
											"end": 4078,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4014,
											"end": 4078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4004,
											"end": 4078,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4004,
											"end": 4078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3960,
											"end": 4088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4127,
											"end": 4129,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4153,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4209,
											"end": 4216,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4200,
											"end": 4206,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4189,
											"end": 4198,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4207,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4153,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 4153,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4153,
											"end": 4217,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4153,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4217,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4098,
											"end": 4227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4266,
											"end": 4268,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4292,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4347,
											"end": 4354,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4338,
											"end": 4344,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4336,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4292,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 4292,
											"end": 4355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4292,
											"end": 4355,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4292,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4355,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4355,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4237,
											"end": 4365,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 4372,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 4372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 4372,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 4372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 4372,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 4372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4378,
											"end": 4521,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 4378,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4435,
											"end": 4440,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4466,
											"end": 4472,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4473,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4482,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4509,
											"end": 4514,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4482,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4482,
											"end": 4515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4482,
											"end": 4515,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4482,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4378,
											"end": 4521,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4378,
											"end": 4521,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4378,
											"end": 4521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4378,
											"end": 4521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4378,
											"end": 4521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4527,
											"end": 4878,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4527,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4597,
											"end": 4603,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4646,
											"end": 4648,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4634,
											"end": 4643,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 4632,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4621,
											"end": 4644,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4617,
											"end": 4649,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4614,
											"end": 4733,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4614,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 4614,
											"end": 4733,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4652,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4652,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4652,
											"end": 4731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4652,
											"end": 4731,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4652,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4614,
											"end": 4733,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 4614,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4772,
											"end": 4773,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4797,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4853,
											"end": 4860,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4844,
											"end": 4850,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4833,
											"end": 4842,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4829,
											"end": 4851,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4797,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 4797,
											"end": 4861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4797,
											"end": 4861,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4797,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4743,
											"end": 4871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4527,
											"end": 4878,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4527,
											"end": 4878,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4527,
											"end": 4878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4527,
											"end": 4878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4527,
											"end": 4878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4884,
											"end": 5053,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4884,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4968,
											"end": 4979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5008,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4997,
											"end": 5000,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5009,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5042,
											"end": 5046,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5037,
											"end": 5040,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5033,
											"end": 5047,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5047,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4884,
											"end": 5053,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4884,
											"end": 5053,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4884,
											"end": 5053,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4884,
											"end": 5053,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4884,
											"end": 5053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5241,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 5059,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5199,
											"end": 5233,
											"name": "PUSH",
											"source": 3,
											"value": "5061697220646F6573206E6F7420636F6E7461696E206261736520746F6B656E"
										},
										{
											"begin": 5195,
											"end": 5196,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5187,
											"end": 5193,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5183,
											"end": 5197,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5176,
											"end": 5234,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5241,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5247,
											"end": 5613,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 5247,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5392,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5410,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 5474,
											"end": 5476,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5469,
											"end": 5472,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5410,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 5410,
											"end": 5477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5410,
											"end": 5477,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 5410,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5403,
											"end": 5477,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5403,
											"end": 5477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5486,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 5575,
											"end": 5578,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5486,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 5486,
											"end": 5579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5486,
											"end": 5579,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 5486,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5604,
											"end": 5606,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5599,
											"end": 5602,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5595,
											"end": 5607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5588,
											"end": 5607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5588,
											"end": 5607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5247,
											"end": 5613,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5247,
											"end": 5613,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5247,
											"end": 5613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5247,
											"end": 5613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 6038,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5619,
											"end": 6038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5785,
											"end": 5789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5823,
											"end": 5825,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5812,
											"end": 5821,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5808,
											"end": 5826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5872,
											"end": 5881,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5866,
											"end": 5870,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5862,
											"end": 5882,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5858,
											"end": 5859,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5847,
											"end": 5856,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 5860,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5836,
											"end": 5883,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5900,
											"end": 6031,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 6026,
											"end": 6030,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5900,
											"end": 6031,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 5900,
											"end": 6031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5900,
											"end": 6031,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 5900,
											"end": 6031,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5892,
											"end": 6031,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5892,
											"end": 6031,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 6038,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 6038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 6038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 6038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6044,
											"end": 6130,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 6044,
											"end": 6130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6079,
											"end": 6086,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6119,
											"end": 6123,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 6112,
											"end": 6117,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6108,
											"end": 6124,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6044,
											"end": 6130,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6044,
											"end": 6130,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6044,
											"end": 6130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6044,
											"end": 6130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6136,
											"end": 6254,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 6136,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6207,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 6223,
											"end": 6228,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6207,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 6207,
											"end": 6229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6207,
											"end": 6229,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 6207,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6200,
											"end": 6205,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6197,
											"end": 6230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6187,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 6187,
											"end": 6248,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6244,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6241,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6246,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6187,
											"end": 6248,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 6187,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6136,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6136,
											"end": 6254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6260,
											"end": 6399,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 6260,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6320,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6346,
											"end": 6352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6353,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6331,
											"end": 6353,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6331,
											"end": 6353,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 6387,
											"end": 6392,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 6362,
											"end": 6393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6260,
											"end": 6399,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6260,
											"end": 6399,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6260,
											"end": 6399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6260,
											"end": 6399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6260,
											"end": 6399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6405,
											"end": 6752,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 6405,
											"end": 6752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6473,
											"end": 6479,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6522,
											"end": 6524,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6510,
											"end": 6519,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6501,
											"end": 6508,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6497,
											"end": 6520,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6493,
											"end": 6525,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6490,
											"end": 6609,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6490,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 6490,
											"end": 6609,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6528,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 6528,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 6528,
											"end": 6607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6528,
											"end": 6607,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 6528,
											"end": 6607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6490,
											"end": 6609,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 6490,
											"end": 6609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6648,
											"end": 6649,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6673,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 6727,
											"end": 6734,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6718,
											"end": 6724,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6707,
											"end": 6716,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6703,
											"end": 6725,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6673,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 6673,
											"end": 6735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6673,
											"end": 6735,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 6673,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6663,
											"end": 6735,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6663,
											"end": 6735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6619,
											"end": 6745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6405,
											"end": 6752,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6405,
											"end": 6752,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6405,
											"end": 6752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6405,
											"end": 6752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6405,
											"end": 6752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6758,
											"end": 6949,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 6758,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6796,
											"end": 6800,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6816,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 6832,
											"end": 6833,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6816,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 6816,
											"end": 6834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6816,
											"end": 6834,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 6816,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6848,
											"end": 6866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 6864,
											"end": 6865,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6848,
											"end": 6866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 6848,
											"end": 6866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6848,
											"end": 6866,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 6848,
											"end": 6866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6843,
											"end": 6866,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6843,
											"end": 6866,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6890,
											"end": 6891,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6887,
											"end": 6888,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6883,
											"end": 6892,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6875,
											"end": 6892,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6875,
											"end": 6892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6914,
											"end": 6918,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 6908,
											"end": 6912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6905,
											"end": 6919,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6902,
											"end": 6942,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6902,
											"end": 6942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 6902,
											"end": 6942,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6922,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 6922,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 6922,
											"end": 6940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6922,
											"end": 6940,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 6922,
											"end": 6940,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6902,
											"end": 6942,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 6902,
											"end": 6942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6758,
											"end": 6949,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6758,
											"end": 6949,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6758,
											"end": 6949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6758,
											"end": 6949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6758,
											"end": 6949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6955,
											"end": 7057,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 6955,
											"end": 7057,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6997,
											"end": 7005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7044,
											"end": 7049,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7041,
											"end": 7042,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7037,
											"end": 7050,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 7016,
											"end": 7050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7016,
											"end": 7050,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6955,
											"end": 7057,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6955,
											"end": 7057,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6955,
											"end": 7057,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6955,
											"end": 7057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7063,
											"end": 7911,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 7063,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7124,
											"end": 7129,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7131,
											"end": 7135,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7155,
											"end": 7161,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7146,
											"end": 7161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7146,
											"end": 7161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7179,
											"end": 7184,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7193,
											"end": 7905,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 7193,
											"end": 7905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7214,
											"end": 7215,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7204,
											"end": 7212,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7201,
											"end": 7216,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7193,
											"end": 7905,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7193,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 7193,
											"end": 7905,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7309,
											"end": 7313,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7304,
											"end": 7307,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7300,
											"end": 7314,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7298,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7291,
											"end": 7315,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7288,
											"end": 7338,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7288,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 7288,
											"end": 7338,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7318,
											"end": 7336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 7318,
											"end": 7336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 7318,
											"end": 7336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7318,
											"end": 7336,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 7318,
											"end": 7336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7288,
											"end": 7338,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 7288,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7369,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7358,
											"end": 7366,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7370,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7351,
											"end": 7802,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7351,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 7351,
											"end": 7802,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7783,
											"end": 7787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7776,
											"end": 7781,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7772,
											"end": 7788,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7763,
											"end": 7788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7763,
											"end": 7788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7351,
											"end": 7802,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 7351,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7833,
											"end": 7837,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7827,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7838,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7838,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7838,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7863,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 7886,
											"end": 7894,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7863,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 7863,
											"end": 7895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7863,
											"end": 7895,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 7863,
											"end": 7895,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7851,
											"end": 7895,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 7851,
											"end": 7895,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7193,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 7193,
											"end": 7905,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7193,
											"end": 7905,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 7193,
											"end": 7905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7063,
											"end": 7911,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 7063,
											"end": 7911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7063,
											"end": 7911,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 7063,
											"end": 7911,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7063,
											"end": 7911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7063,
											"end": 7911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7063,
											"end": 7911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7063,
											"end": 7911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7917,
											"end": 8990,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 7917,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7971,
											"end": 7976,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8162,
											"end": 8170,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 8152,
											"end": 8192,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8183,
											"end": 8184,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8174,
											"end": 8184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8174,
											"end": 8184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 8185,
											"end": 8190,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8192,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 8152,
											"end": 8192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8211,
											"end": 8215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8201,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 8201,
											"end": 8237,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8228,
											"end": 8229,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8219,
											"end": 8229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8219,
											"end": 8229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8230,
											"end": 8235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 8230,
											"end": 8235,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8201,
											"end": 8237,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 8201,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8297,
											"end": 8301,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8345,
											"end": 8346,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8340,
											"end": 8367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8340,
											"end": 8367,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8340,
											"end": 8367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 8340,
											"end": 8367,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8381,
											"end": 8382,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 8376,
											"end": 8567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8376,
											"end": 8567,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8376,
											"end": 8567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 8376,
											"end": 8567,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8290,
											"end": 8567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 8290,
											"end": 8567,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8340,
											"end": 8367,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 8340,
											"end": 8367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8349,
											"end": 8359,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8349,
											"end": 8359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8360,
											"end": 8365,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8360,
											"end": 8365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 8360,
											"end": 8365,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8376,
											"end": 8567,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 8376,
											"end": 8567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8421,
											"end": 8424,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 8411,
											"end": 8419,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8408,
											"end": 8425,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8405,
											"end": 8448,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8405,
											"end": 8448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 8405,
											"end": 8448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8428,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 8428,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 8428,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8428,
											"end": 8446,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 8428,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8405,
											"end": 8448,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 8405,
											"end": 8448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8477,
											"end": 8485,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8474,
											"end": 8475,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 8470,
											"end": 8486,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 8461,
											"end": 8486,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8461,
											"end": 8486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8512,
											"end": 8515,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8505,
											"end": 8510,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8502,
											"end": 8516,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8499,
											"end": 8539,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8499,
											"end": 8539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 8499,
											"end": 8539,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 8519,
											"end": 8537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8499,
											"end": 8539,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 8499,
											"end": 8539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8552,
											"end": 8557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8552,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 8552,
											"end": 8557,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8290,
											"end": 8567,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 8290,
											"end": 8567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8290,
											"end": 8567,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8676,
											"end": 8678,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8666,
											"end": 8674,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8663,
											"end": 8679,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8657,
											"end": 8660,
											"name": "PUSH",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 8651,
											"end": 8655,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8648,
											"end": 8661,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8644,
											"end": 8680,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8626,
											"end": 8628,
											"name": "PUSH",
											"source": 3,
											"value": "4E"
										},
										{
											"begin": 8616,
											"end": 8624,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8613,
											"end": 8629,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8608,
											"end": 8610,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 8602,
											"end": 8606,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8599,
											"end": 8611,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8595,
											"end": 8630,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8579,
											"end": 8690,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 8576,
											"end": 8822,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8576,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 8576,
											"end": 8822,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8732,
											"end": 8740,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8730,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8722,
											"end": 8741,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 8713,
											"end": 8741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8713,
											"end": 8741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8767,
											"end": 8770,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8760,
											"end": 8765,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8757,
											"end": 8771,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8754,
											"end": 8794,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8754,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 8754,
											"end": 8794,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8774,
											"end": 8792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 8774,
											"end": 8792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 8774,
											"end": 8792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8774,
											"end": 8792,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 8774,
											"end": 8792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8754,
											"end": 8794,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 8754,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8807,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 8807,
											"end": 8812,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8576,
											"end": 8822,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 8576,
											"end": 8822,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 8885,
											"end": 8888,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8883,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8869,
											"end": 8873,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8866,
											"end": 8867,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8847,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 8847,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8889,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 8847,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8832,
											"end": 8889,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8832,
											"end": 8889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8832,
											"end": 8889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8832,
											"end": 8889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8921,
											"end": 8925,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8916,
											"end": 8919,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8912,
											"end": 8926,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 8905,
											"end": 8910,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8902,
											"end": 8927,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8899,
											"end": 8950,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8899,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 8899,
											"end": 8950,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8930,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 8930,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 8930,
											"end": 8948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8930,
											"end": 8948,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 8930,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8899,
											"end": 8950,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 8899,
											"end": 8950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8979,
											"end": 8983,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8972,
											"end": 8977,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8968,
											"end": 8984,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 8959,
											"end": 8984,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8959,
											"end": 8984,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7917,
											"end": 8990,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 7917,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7917,
											"end": 8990,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7917,
											"end": 8990,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7917,
											"end": 8990,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7917,
											"end": 8990,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7917,
											"end": 8990,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7917,
											"end": 8990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8996,
											"end": 9281,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 8996,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9056,
											"end": 9061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9080,
											"end": 9103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 9098,
											"end": 9102,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9080,
											"end": 9103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 9080,
											"end": 9103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9080,
											"end": 9103,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 9080,
											"end": 9103,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9072,
											"end": 9103,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9072,
											"end": 9103,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9124,
											"end": 9151,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 9142,
											"end": 9150,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9124,
											"end": 9151,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 9124,
											"end": 9151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9124,
											"end": 9151,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 9124,
											"end": 9151,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9112,
											"end": 9151,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9112,
											"end": 9151,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9170,
											"end": 9274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 9207,
											"end": 9273,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9197,
											"end": 9205,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9191,
											"end": 9195,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9170,
											"end": 9274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 9170,
											"end": 9274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9170,
											"end": 9274,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 9170,
											"end": 9274,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8996,
											"end": 9281,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8996,
											"end": 9281,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8996,
											"end": 9281,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8996,
											"end": 9281,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8996,
											"end": 9281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"hopium/standalone/quoter.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"WETH_ADDRESS()": "040141e5",
							"WETH_USD_PAIR_ADDRESS()": "0b017603",
							"getTokenUsdPrice(address)": "00593bcf",
							"getTokenWethPrice(address)": "7b49b49d",
							"getWethUsdPrice()": "6855e939"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wethAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wethUsdPairAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH_USD_PAIR_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pairAddress\",\"type\":\"address\"}],\"name\":\"getTokenUsdPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price18\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pairAddress\",\"type\":\"address\"}],\"name\":\"getTokenWethPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price18\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWethUsdPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price18\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getTokenUsdPrice(address)\":{\"notice\":\"Returns USD price of 1 TOKEN (scaled to 1e18)\"},\"getTokenWethPrice(address)\":{\"notice\":\"Returns WETH per 1 QUOTE (scaled 1e18) for an arbitrary WETH-QUOTE pair.\"},\"getWethUsdPrice()\":{\"notice\":\"Returns USD per 1 WETH (scaled 1e18) using the stored WETH/USD pair.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/standalone/quoter.sol\":\"Quoter\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"hopium/standalone/quoter.sol\":{\"keccak256\":\"0x2df01ecebbafe79cabab0e9c6738ac341ea5db0b63794ed4418ece65db58078f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb9bf2ec37bdb834bf1593fab5f36d22c503afeb2d2dc9f8093459a9fbfc433a\",\"dweb:/ipfs/QmVkVsgPd6KRhKQDnMuSNgS4V71dfJhvZXyayHoDfz1VMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 312,
								"contract": "hopium/standalone/quoter.sol:Quoter",
								"label": "WETH_ADDRESS",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 314,
								"contract": "hopium/standalone/quoter.sol:Quoter",
								"label": "WETH_USD_PAIR_ADDRESS",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getTokenUsdPrice(address)": {
								"notice": "Returns USD price of 1 TOKEN (scaled to 1e18)"
							},
							"getTokenWethPrice(address)": {
								"notice": "Returns WETH per 1 QUOTE (scaled 1e18) for an arbitrary WETH-QUOTE pair."
							},
							"getWethUsdPrice()": {
								"notice": "Returns USD per 1 WETH (scaled 1e18) using the stored WETH/USD pair."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "215:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "397:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "406:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "428:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "448:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:0"
									},
									"src": "391:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "628:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "637:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "660:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "685:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:0"
									},
									"src": "622:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "822:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:0"
									},
									"scope": 77,
									"src": "776:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "932:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "972:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:0"
									},
									"scope": 77,
									"src": "913:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1235:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1268:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:0"
									},
									"scope": 77,
									"src": "1205:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1568:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1583:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1623:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:0"
									},
									"scope": 77,
									"src": "1549:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2327:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2344:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:0"
									},
									"scope": 77,
									"src": "2310:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2713:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2727:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2739:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2772:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:0"
									},
									"scope": 77,
									"src": "2691:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "205:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2675:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IERC20Metadata": [
							103
						]
					},
					"id": 104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 81,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 104,
							"sourceUnit": 78,
							"src": "151:37:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 80,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 77,
										"src": "159:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 83,
										"name": "IERC20",
										"nameLocations": [
											"306:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "306:6:1"
									},
									"id": 84,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:1"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 82,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:1",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 103,
							"linearizedBaseContracts": [
								103,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "417:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 87,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:1"
									},
									"scope": 103,
									"src": "378:54:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:1",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:1"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "540:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 93,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:1"
									},
									"scope": 103,
									"src": "499:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:1",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:1"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "674:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 99,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:1"
									},
									"scope": 103,
									"src": "631:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 104,
							"src": "278:405:1",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "125:559:1"
				},
				"id": 1
			},
			"hopium/standalone/quoter.sol": {
				"ast": {
					"absolutePath": "hopium/standalone/quoter.sol",
					"exportedSymbols": {
						"Helpers": [
							308
						],
						"IERC20": [
							77
						],
						"IERC20Metadata": [
							103
						],
						"IUniswapV2Pair": [
							127
						],
						"Quoter": [
							420
						]
					},
					"id": 421,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 105,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 106,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 421,
							"sourceUnit": 78,
							"src": "57:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 421,
							"sourceUnit": 104,
							"src": "114:75:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Pair",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 127,
							"linearizedBaseContracts": [
								127
							],
							"name": "IUniswapV2Pair",
							"nameLocation": "201:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "0dfe1681",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "231:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "237:2:2"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "263:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "262:9:2"
									},
									"scope": 127,
									"src": "222:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 117,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "286:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:2:2"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "318:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "317:9:2"
									},
									"scope": 127,
									"src": "277:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "341:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:2:2"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "386:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "378:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 119,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "404:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "396:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 121,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nameLocation": "421:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "414:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 123,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "414:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:63:2"
									},
									"scope": 127,
									"src": "332:109:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 421,
							"src": "191:252:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Helpers",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 308,
							"linearizedBaseContracts": [
								308
							],
							"name": "Helpers",
							"nameLocation": "454:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "855:839:2",
										"statements": [
											{
												"assignments": [
													147
												],
												"declarations": [
													{
														"constant": false,
														"id": 147,
														"mutability": "mutable",
														"name": "pair",
														"nameLocation": "880:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 247,
														"src": "865:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Pair_$127",
															"typeString": "contract IUniswapV2Pair"
														},
														"typeName": {
															"id": 146,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 145,
																"name": "IUniswapV2Pair",
																"nameLocations": [
																	"865:14:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 127,
																"src": "865:14:2"
															},
															"referencedDeclaration": 127,
															"src": "865:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$127",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 151,
												"initialValue": {
													"arguments": [
														{
															"id": 149,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "902:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 148,
														"name": "IUniswapV2Pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "887:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$127_$",
															"typeString": "type(contract IUniswapV2Pair)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "887:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Pair_$127",
														"typeString": "contract IUniswapV2Pair"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "865:49:2"
											},
											{
												"assignments": [
													153,
													155,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "r0",
														"nameLocation": "933:2:2",
														"nodeType": "VariableDeclaration",
														"scope": 247,
														"src": "925:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 152,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "925:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 155,
														"mutability": "mutable",
														"name": "r1",
														"nameLocation": "945:2:2",
														"nodeType": "VariableDeclaration",
														"scope": 247,
														"src": "937:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 154,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "937:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 159,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 156,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "953:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$127",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "958:11:2",
														"memberName": "getReserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 126,
														"src": "953:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view external returns (uint112,uint112,uint32)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "953:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "924:47:2"
											},
											{
												"assignments": [
													161
												],
												"declarations": [
													{
														"constant": false,
														"id": 161,
														"mutability": "mutable",
														"name": "t0",
														"nameLocation": "989:2:2",
														"nodeType": "VariableDeclaration",
														"scope": 247,
														"src": "981:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 160,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 165,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 162,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "994:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$127",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "999:6:2",
														"memberName": "token0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 112,
														"src": "994:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "994:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "981:26:2"
											},
											{
												"assignments": [
													167
												],
												"declarations": [
													{
														"constant": false,
														"id": 167,
														"mutability": "mutable",
														"name": "t1",
														"nameLocation": "1025:2:2",
														"nodeType": "VariableDeclaration",
														"scope": 247,
														"src": "1017:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 166,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1017:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 171,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 168,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "1030:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$127",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1035:6:2",
														"memberName": "token1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 117,
														"src": "1030:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1030:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1017:26:2"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"mutability": "mutable",
														"name": "baseIsToken0",
														"nameLocation": "1059:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 247,
														"src": "1054:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 172,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1054:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 174,
												"nodeType": "VariableDeclarationStatement",
												"src": "1054:17:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 175,
														"name": "t0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1085:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 176,
														"name": "baseToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "1091:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1085:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 183,
															"name": "t1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1156:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 184,
															"name": "baseToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "1162:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1156:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 195,
														"nodeType": "Block",
														"src": "1224:67:2",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "5061697220646f6573206e6f7420636f6e7461696e206261736520746f6b656e",
																			"id": 192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1245:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_6e8a3ed432c0512d004ecad554fe366a5594ee75cdf27e9451e55f5b44628a94",
																				"typeString": "literal_string \"Pair does not contain base token\""
																			},
																			"value": "Pair does not contain base token"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_6e8a3ed432c0512d004ecad554fe366a5594ee75cdf27e9451e55f5b44628a94",
																				"typeString": "literal_string \"Pair does not contain base token\""
																			}
																		],
																		"id": 191,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "1238:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1238:42:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 194,
																"nodeType": "ExpressionStatement",
																"src": "1238:42:2"
															}
														]
													},
													"id": 196,
													"nodeType": "IfStatement",
													"src": "1152:139:2",
													"trueBody": {
														"id": 190,
														"nodeType": "Block",
														"src": "1173:45:2",
														"statements": [
															{
																"expression": {
																	"id": 188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 186,
																		"name": "baseIsToken0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 173,
																		"src": "1187:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "66616c7365",
																		"id": 187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1202:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"src": "1187:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 189,
																"nodeType": "ExpressionStatement",
																"src": "1187:20:2"
															}
														]
													}
												},
												"id": 197,
												"nodeType": "IfStatement",
												"src": "1081:210:2",
												"trueBody": {
													"id": 182,
													"nodeType": "Block",
													"src": "1102:44:2",
													"statements": [
														{
															"expression": {
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 178,
																	"name": "baseIsToken0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 173,
																	"src": "1116:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1131:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1116:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 181,
															"nodeType": "ExpressionStatement",
															"src": "1116:19:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 198,
														"name": "reserveBase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "1301:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 199,
															"name": "baseIsToken0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1316:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"arguments": [
																{
																	"id": 206,
																	"name": "r1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 155,
																	"src": "1353:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1345:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 204,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1345:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1345:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "1316:40:2",
														"trueExpression": {
															"arguments": [
																{
																	"id": 202,
																	"name": "r0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 153,
																	"src": "1339:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1331:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 200,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1331:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1331:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1301:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "1301:55:2"
											},
											{
												"expression": {
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 211,
														"name": "reserveQuote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "1366:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 212,
															"name": "baseIsToken0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1381:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"arguments": [
																{
																	"id": 219,
																	"name": "r0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 153,
																	"src": "1418:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1410:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 217,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1410:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1410:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "1381:40:2",
														"trueExpression": {
															"arguments": [
																{
																	"id": 215,
																	"name": "r1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 155,
																	"src": "1404:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1396:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 213,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1396:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1396:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1366:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "1366:55:2"
											},
											{
												"expression": {
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 224,
														"name": "quoteToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "1431:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 225,
															"name": "baseIsToken0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1446:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"id": 227,
															"name": "t0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "1466:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "1446:22:2",
														"trueExpression": {
															"id": 226,
															"name": "t1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1461:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1431:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "1431:37:2"
											},
											{
												"expression": {
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 231,
														"name": "decBase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "1582:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 233,
																		"name": "baseToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 132,
																		"src": "1608:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 232,
																	"name": "IERC20Metadata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "1593:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$103_$",
																		"typeString": "type(contract IERC20Metadata)"
																	}
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1593:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Metadata_$103",
																	"typeString": "contract IERC20Metadata"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1619:8:2",
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 102,
															"src": "1593:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1593:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1582:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "1582:47:2"
											},
											{
												"expression": {
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 239,
														"name": "decQuote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "1639:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 241,
																		"name": "quoteToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "1665:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 240,
																	"name": "IERC20Metadata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "1650:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$103_$",
																		"typeString": "type(contract IERC20Metadata)"
																	}
																},
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1650:26:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Metadata_$103",
																	"typeString": "contract IERC20Metadata"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1677:8:2",
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 102,
															"src": "1650:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1650:37:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1639:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "1639:48:2"
											}
										]
									},
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "468:98:2",
										"text": "@dev Returns reserves and decimals ordered so that the first tuple corresponds to `baseToken`."
									},
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOrderedReserves",
									"nameLocation": "580:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "pairAddress",
												"nameLocation": "608:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "600:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "600:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "baseToken",
												"nameLocation": "629:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "621:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:40:2"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "reserveBase",
												"nameLocation": "708:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "700:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "decBase",
												"nameLocation": "739:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "733:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 136,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "733:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "reserveQuote",
												"nameLocation": "768:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "760:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "decQuote",
												"nameLocation": "800:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "794:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 140,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "794:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "quoteToken",
												"nameLocation": "830:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "822:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:164:2"
									},
									"scope": 308,
									"src": "571:1123:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "2000:245:2",
										"statements": [
											{
												"assignments": [
													263
												],
												"declarations": [
													{
														"constant": false,
														"id": 263,
														"mutability": "mutable",
														"name": "num",
														"nameLocation": "2018:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 306,
														"src": "2010:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 262,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2010:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 267,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 264,
														"name": "reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "2024:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2035:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "2024:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2010:29:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 268,
														"name": "decB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2053:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 269,
														"name": "decA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "2060:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2053:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 283,
															"name": "decA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "2134:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 284,
															"name": "decB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2141:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "2134:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 298,
													"nodeType": "IfStatement",
													"src": "2130:75:2",
													"trueBody": {
														"id": 297,
														"nodeType": "Block",
														"src": "2147:58:2",
														"statements": [
															{
																"expression": {
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 286,
																		"name": "num",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 263,
																		"src": "2161:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "/=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2168:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					"id": 292,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 290,
																						"name": "decA",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 253,
																						"src": "2182:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 291,
																						"name": "decB",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 257,
																						"src": "2189:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "2182:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"id": 289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2174:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 288,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2174:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2174:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2168:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2161:33:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 296,
																"nodeType": "ExpressionStatement",
																"src": "2161:33:2"
															}
														]
													}
												},
												"id": 299,
												"nodeType": "IfStatement",
												"src": "2049:156:2",
												"trueBody": {
													"id": 282,
													"nodeType": "Block",
													"src": "2066:58:2",
													"statements": [
														{
															"expression": {
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 271,
																	"name": "num",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "2080:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "*=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2087:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 277,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 275,
																					"name": "decB",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 257,
																					"src": "2101:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 276,
																					"name": "decA",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 253,
																					"src": "2108:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "2101:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2093:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 273,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "2093:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2093:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2087:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2080:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 281,
															"nodeType": "ExpressionStatement",
															"src": "2080:33:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 300,
														"name": "price18",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "2214:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 301,
															"name": "num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "2224:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 302,
															"name": "reserveB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "2230:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2224:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2214:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "2214:24:2"
											}
										]
									},
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "1700:132:2",
										"text": "@dev Compute price as \"amountA per 1 unit of B\", scaled to 1e18.\n price18 = (reserveA * 10^(18 + decB - decA)) / reserveB"
									},
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_computePrice18",
									"nameLocation": "1846:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "1879:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "1871:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "decA",
												"nameLocation": "1903:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "1897:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 252,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1897:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "1925:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "1917:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1917:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "decB",
												"nameLocation": "1949:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "1943:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 256,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1943:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1861:98:2"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "price18",
												"nameLocation": "1991:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "1983:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:17:2"
									},
									"scope": 308,
									"src": "1837:408:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 421,
							"src": "445:1802:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 309,
										"name": "Helpers",
										"nameLocations": [
											"2268:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 308,
										"src": "2268:7:2"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "2268:7:2"
								}
							],
							"canonicalName": "Quoter",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420,
								308
							],
							"name": "Quoter",
							"nameLocation": "2258:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "040141e5",
									"id": 312,
									"mutability": "mutable",
									"name": "WETH_ADDRESS",
									"nameLocation": "2297:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 420,
									"src": "2282:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 311,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2282:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0b017603",
									"id": 314,
									"mutability": "mutable",
									"name": "WETH_USD_PAIR_ADDRESS",
									"nameLocation": "2330:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 420,
									"src": "2315:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 313,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2315:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "2421:97:2",
										"statements": [
											{
												"expression": {
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 321,
														"name": "WETH_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "2431:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 322,
														"name": "_wethAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "2446:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2431:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "2431:27:2"
											},
											{
												"expression": {
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 325,
														"name": "WETH_USD_PAIR_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "2468:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 326,
														"name": "_wethUsdPairAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "2492:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2468:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "2468:43:2"
											}
										]
									},
									"id": 330,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "_wethAddress",
												"nameLocation": "2378:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "2370:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "_wethUsdPairAddress",
												"nameLocation": "2400:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "2392:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2392:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2369:51:2"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2421:0:2"
									},
									"scope": 420,
									"src": "2358:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "2699:296:2",
										"statements": [
											{
												"assignments": [
													339,
													341,
													343,
													345,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "reserveWeth",
														"nameLocation": "2731:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "2723:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2723:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "decW",
														"nameLocation": "2762:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "2756:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 340,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "2756:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 343,
														"mutability": "mutable",
														"name": "reserveQuote",
														"nameLocation": "2788:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "2780:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 342,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2780:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 345,
														"mutability": "mutable",
														"name": "decQ",
														"nameLocation": "2820:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "2814:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 344,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "2814:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 350,
												"initialValue": {
													"arguments": [
														{
															"id": 347,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "2859:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 348,
															"name": "WETH_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "2872:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 346,
														"name": "_getOrderedReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2839:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$_t_uint8_$_t_uint256_$_t_uint8_$_t_address_$",
															"typeString": "function (address,address) view returns (uint256,uint8,uint256,uint8,address)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2839:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$_t_uint256_$_t_uint8_$_t_address_$",
														"typeString": "tuple(uint256,uint8,uint256,uint8,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2709:176:2"
											},
											{
												"expression": {
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 351,
														"name": "price18",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "2924:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 353,
																"name": "reserveWeth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "2950:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 354,
																"name": "decW",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "2963:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"id": 355,
																"name": "reserveQuote",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "2969:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 356,
																"name": "decQ",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "2983:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 352,
															"name": "_computePrice18",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "2934:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint8,uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2934:54:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2924:64:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "2924:64:2"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "2524:84:2",
										"text": "@notice Returns WETH per 1 QUOTE (scaled 1e18) for an arbitrary WETH-QUOTE pair."
									},
									"functionSelector": "7b49b49d",
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenWethPrice",
									"nameLocation": "2622:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "pairAddress",
												"nameLocation": "2648:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2640:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2640:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2639:21:2"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "price18",
												"nameLocation": "2690:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2682:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2681:17:2"
									},
									"scope": 420,
									"src": "2613:382:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "3148:270:2",
										"statements": [
											{
												"assignments": [
													370
												],
												"declarations": [
													{
														"constant": false,
														"id": 370,
														"mutability": "mutable",
														"name": "tokenWeth",
														"nameLocation": "3166:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "3158:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 369,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3158:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 374,
												"initialValue": {
													"arguments": [
														{
															"id": 372,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "3196:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 371,
														"name": "getTokenWethPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "3178:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3178:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3158:50:2"
											},
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "wethUsd",
														"nameLocation": "3246:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "3238:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 375,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3238:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "getWethUsdPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "3258:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3258:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3238:37:2"
											},
											{
												"expression": {
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 380,
														"name": "price18",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "3373:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 381,
																		"name": "tokenWeth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "3384:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 382,
																		"name": "wethUsd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "3396:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3384:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 384,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3383:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3407:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "3383:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3373:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "3373:38:2"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "3001:57:2",
										"text": "@notice Returns USD price of 1 TOKEN (scaled to 1e18)"
									},
									"functionSelector": "00593bcf",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenUsdPrice",
									"nameLocation": "3072:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "pairAddress",
												"nameLocation": "3097:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3089:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3089:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3088:21:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "price18",
												"nameLocation": "3139:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3131:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3130:17:2"
									},
									"scope": 420,
									"src": "3063:355:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "3574:300:2",
										"statements": [
											{
												"assignments": [
													397,
													399,
													401,
													403,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 397,
														"mutability": "mutable",
														"name": "reserveWeth",
														"nameLocation": "3606:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 418,
														"src": "3598:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 396,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3598:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 399,
														"mutability": "mutable",
														"name": "decW",
														"nameLocation": "3637:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 418,
														"src": "3631:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 398,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "3631:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "reserveUsd",
														"nameLocation": "3663:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 418,
														"src": "3655:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 400,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3655:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "decU",
														"nameLocation": "3693:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 418,
														"src": "3687:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 402,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "3687:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 408,
												"initialValue": {
													"arguments": [
														{
															"id": 405,
															"name": "WETH_USD_PAIR_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "3732:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 406,
															"name": "WETH_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "3755:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 404,
														"name": "_getOrderedReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3712:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$_t_uint8_$_t_uint256_$_t_uint8_$_t_address_$",
															"typeString": "function (address,address) view returns (uint256,uint8,uint256,uint8,address)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3712:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$_t_uint256_$_t_uint8_$_t_address_$",
														"typeString": "tuple(uint256,uint8,uint256,uint8,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3584:184:2"
											},
											{
												"expression": {
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 409,
														"name": "price18",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "3805:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 411,
																"name": "reserveUsd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "3831:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 412,
																"name": "decU",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "3843:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"id": 413,
																"name": "reserveWeth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "3849:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 414,
																"name": "decW",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "3862:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 410,
															"name": "_computePrice18",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "3815:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint8,uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3815:52:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3805:62:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "3805:62:2"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3424:80:2",
										"text": "@notice Returns USD per 1 WETH (scaled 1e18) using the stored WETH/USD pair."
									},
									"functionSelector": "6855e939",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWethUsdPrice",
									"nameLocation": "3518:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3533:2:2"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "price18",
												"nameLocation": "3565:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "3557:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3557:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3556:17:2"
									},
									"scope": 420,
									"src": "3509:365:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 421,
							"src": "2249:1628:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:3846:2"
				},
				"id": 2
			}
		}
	}
}