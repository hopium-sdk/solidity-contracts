{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_wethAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_wethUsdPairAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_uniswapV2FactoryAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "UNISWAP_V2_FACTORY_ADDRESS",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "WETH_ADDRESS",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "WETH_USD_PAIR_ADDRESS",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					}
				],
				"name": "getTokenLiquidityUsd",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "totalLiquidityUsd18",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					}
				],
				"name": "getTokenLiquidityWeth",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "totalLiquidityWeth18",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					}
				],
				"name": "getTokenMarketCapUsd",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "marketCapUsd18",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					}
				],
				"name": "getTokenMarketCapWeth",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "marketCapWeth18",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					}
				],
				"name": "getTokenUsdPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "price18",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					}
				],
				"name": "getTokenWethPairAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					}
				],
				"name": "getTokenWethPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "price18",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getWethUsdPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "price18",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"getTokenMarketCapUsd(address)": {
					"notice": "Returns market cap in USD for TOKEN (scaled 1e18)."
				},
				"getTokenMarketCapWeth(address)": {
					"notice": "Returns market cap in WETH for TOKEN (scaled 1e18): totalSupply * (WETH per 1 TOKEN)."
				},
				"getTokenUsdPrice(address)": {
					"notice": "Returns USD price of 1 TOKEN (scaled to 1e18)"
				},
				"getTokenWethPrice(address)": {
					"notice": "Returns WETH per 1 QUOTE (scaled 1e18) for an arbitrary WETH-QUOTE pair."
				},
				"getWethUsdPrice()": {
					"notice": "Returns USD per 1 WETH (scaled 1e18) using the stored WETH/USD pair."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"hopium/standalone/main/price-oracle.sol": "PriceOracle"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2",
			"license": "MIT",
			"urls": [
				"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303",
				"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f",
			"license": "MIT",
			"urls": [
				"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e",
				"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR"
			]
		},
		"hopium/standalone/main/price-oracle.sol": {
			"keccak256": "0x8468b30275fd9674f6cbfd9cba7664cbb2fec02bb36077467a1b93f64335aea2",
			"license": "MIT",
			"urls": [
				"bzz-raw://1e9e33415c038de2c2abc806fba0fe089a2d817212fd4f51a74782d0659398a4",
				"dweb:/ipfs/QmW7MPbRJkDscPZPfPg5NPPvEW5iaPbXr7hvD14rm74gCM"
			]
		}
	},
	"version": 1
}