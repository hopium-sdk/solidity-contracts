{
	"id": "4b23df9c27160cd7b11d8b64b1d8c699",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"hopium/etf/main/etf-vault-deployer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.30;\n\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\nimport \"hopium/common/interface/imDirectory.sol\";\nimport \"hopium/etf/interface/imEtfFactory.sol\";\nimport \"hopium/etf/interface/iEtfVault.sol\";\n\nerror ImplNotSet();\n\nabstract contract Helpers is ImDirectory {\n    /// @dev Deterministic salt per indexId for CREATE2 clones (optional but useful)\n    function _salt(uint256 indexId) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"ETF_VAULT\", indexId));\n    }\n\n    function getVaultImpl() internal view returns (address) {\n        address vaultImpl =  fetchFromDirectory(\"etf-vault-impl\");\n        if (vaultImpl == address(0)) revert ImplNotSet();\n        \n        return vaultImpl;\n    }\n}\n\n/// @notice Factory that mints minimal-proxy clones of EtfVault (EIP-1167)\ncontract EtfVaultDeployer is ImEtfFactory, Helpers {\n    using Clones for address;\n\n    constructor(address _directory) ImDirectory(_directory) {}\n\n    /// @notice Deploys a new EtfVault clone and initializes it with current Directory\n    function deployEtfVault(uint256 indexId) external onlyEtfFactory returns (address proxy) {\n        address vaultImpl = getVaultImpl();\n\n        proxy = Clones.cloneDeterministic(vaultImpl, _salt(indexId));\n        \n        IEtfVault(proxy).initialize(address(Directory));\n    }\n}\n"
			},
			"hopium/etf/interface/iEtfVault.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.30;\n\ninterface IEtfVault{\n   function redeem(address tokenAddress, uint256 amount, address receiver) external;\n   function initialize(address _directory) external;\n}\n"
			},
			"hopium/etf/interface/imEtfFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.30;\n\nimport \"hopium/common/interface/imDirectory.sol\";\n\ninterface IEtfFactory {\n    function getEtfTokenAddress(uint256 indexId) external view returns (address);\n    function getEtfVaultAddress(uint256 indexId) external view returns (address);\n    function getEtfNavWeth(uint256 indexId) external view returns (uint256 nav);\n    function getIndexIdFromEtfTokenAddress(address etfTokenAddress) external view returns (uint256);\n    function updateEtfVolume(uint256 indexId, uint256 tradeWethValue) external;\n}\n\nabstract contract ImEtfFactory is ImDirectory {\n\n    function getEtfFactory() internal view virtual returns (IEtfFactory) {\n        return IEtfFactory(fetchFromDirectory(\"etf-factory\"));\n    }\n\n    modifier onlyEtfFactory() {\n        require(msg.sender == fetchFromDirectory(\"etf-factory\"), \"msg.sender is not etf factory\");\n        _;\n    }\n}"
			},
			"hopium/common/interface/imDirectory.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.30;\n\n/// @notice Interface used by the registry to talk to the external directory.\ninterface IDirectory {\n    function owner() external view returns (address);\n    function fetchFromDirectory(string memory _key) external view returns (address);\n}\n\nabstract contract ImDirectory {\n    IDirectory public Directory;\n\n    constructor(address _directory) {\n        _setDirectory(_directory); // no modifier here\n    }\n\n    function changeDirectoryAddress(address _directory) external onlyOwner {\n        _setDirectory(_directory);\n    }\n\n    function _setDirectory(address _directory) internal {\n        require(_directory != address(0), \"Directory cannot be zero address\");\n        require(_directory.code.length > 0, \"Directory must be a contract\");\n\n        // Sanity check the interface\n        try IDirectory(_directory).owner() returns (address) {\n            Directory = IDirectory(_directory);\n        } catch {\n            revert(\"Directory address does not implement owner()\");\n        }\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == Directory.owner(), \"Caller is not the owner\");\n        _;\n    }\n\n    function owner() public view returns (address) {\n        return Directory.owner();\n    }\n\n    function fetchFromDirectory(string memory _key) public view returns (address) {\n        return Directory.fetchFromDirectory(_key);\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.20;\n\nimport {Create2} from \"../utils/Create2.sol\";\nimport {Errors} from \"../utils/Errors.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n */\nlibrary Clones {\n    error CloneArgumentsTooLong();\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        return clone(implementation, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n     * to the new contract.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function clone(address implementation, uint256 value) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(value, 0x09, 0x37)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple times will revert, since\n     * the clones cannot be deployed twice at the same address.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        return cloneDeterministic(implementation, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n     * a `value` parameter to send native currency to the new contract.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministic(\n        address implementation,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(value, 0x09, 0x37, salt)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := and(keccak256(add(ptr, 0x43), 0x55), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create opcode, which should never revert.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     */\n    function cloneWithImmutableArgs(address implementation, bytes memory args) internal returns (address instance) {\n        return cloneWithImmutableArgs(implementation, args, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n     * parameter to send native currency to the new contract.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        assembly (\"memory-safe\") {\n            instance := create(value, add(bytecode, 0x20), mload(bytecode))\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n     * `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n     * at the same address.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal returns (address instance) {\n        return cloneDeterministicWithImmutableArgs(implementation, args, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n     * but with a `value` parameter to send native currency to the new contract.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.deploy(value, salt, bytecode);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.computeAddress(salt, keccak256(bytecode), deployer);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddressWithImmutableArgs(implementation, args, salt, address(this));\n    }\n\n    /**\n     * @dev Get the immutable args attached to a clone.\n     *\n     * - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n     *   function will return an empty array.\n     * - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n     *   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n     *   creation.\n     * - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n     *   function should only be used to check addresses that are known to be clones.\n     */\n    function fetchCloneArgs(address instance) internal view returns (bytes memory) {\n        bytes memory result = new bytes(instance.code.length - 45); // revert if length is too short\n        assembly (\"memory-safe\") {\n            extcodecopy(instance, add(result, 32), 45, mload(result))\n        }\n        return result;\n    }\n\n    /**\n     * @dev Helper that prepares the initcode of the proxy with immutable args.\n     *\n     * An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n     * `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n     * abi.encodePacked is more expensive but also more portable and easier to review.\n     *\n     * NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n     * With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes.\n     */\n    function _cloneCodeWithImmutableArgs(\n        address implementation,\n        bytes memory args\n    ) private pure returns (bytes memory) {\n        if (args.length > 24531) revert CloneArgumentsTooLong();\n        return\n            abi.encodePacked(\n                hex\"61\",\n                uint16(args.length + 45),\n                hex\"3d81600a3d39f3363d3d373d3d3d363d73\",\n                implementation,\n                hex\"5af43d82803e903d91602b57fd5bf3\",\n                args\n            );\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Create2.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Create2.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev There's no code to deploy.\n     */\n    error Create2EmptyBytecode();\n\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n        if (bytecode.length == 0) {\n            revert Create2EmptyBytecode();\n        }\n        assembly (\"memory-safe\") {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n            // if no address was created, and returndata is not empty, bubble revert\n            if and(iszero(addr), not(iszero(returndatasize()))) {\n                let p := mload(0x40)\n                returndatacopy(p, 0, returndatasize())\n                revert(p, returndatasize())\n            }\n        }\n        if (addr == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := and(keccak256(start, 85), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"Clones": {
					"abi": [
						{
							"inputs": [],
							"name": "CloneArgumentsTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/Clones.sol\":817:14520  library Clones {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":817:14520  library Clones {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212201927144f7df1cc7ce3b7170813d6a234afd3646705f2c1bd2df341d0aa61b54e64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201927144f7df1cc7ce3b7170813d6a234afd3646705f2c1bd2df341d0aa61b54e64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0x27 EQ 0x4F PUSH30 0xF1CC7CE3B7170813D6A234AFD3646705F2C1BD2DF341D0AA61B54E64736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "817:13703:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201927144f7df1cc7ce3b7170813d6a234afd3646705f2c1bd2df341d0aa61b54e64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0x27 EQ 0x4F PUSH30 0xF1CC7CE3B7170813D6A234AFD3646705F2C1BD2DF341D0AA61B54E64736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "817:13703:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_cloneCodeWithImmutableArgs(address,bytes memory)": "infinite",
								"clone(address)": "infinite",
								"clone(address,uint256)": "infinite",
								"cloneDeterministic(address,bytes32)": "infinite",
								"cloneDeterministic(address,bytes32,uint256)": "infinite",
								"cloneDeterministicWithImmutableArgs(address,bytes memory,bytes32)": "infinite",
								"cloneDeterministicWithImmutableArgs(address,bytes memory,bytes32,uint256)": "infinite",
								"cloneWithImmutableArgs(address,bytes memory)": "infinite",
								"cloneWithImmutableArgs(address,bytes memory,uint256)": "infinite",
								"fetchCloneArgs(address)": "infinite",
								"predictDeterministicAddress(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32,address)": "infinite",
								"predictDeterministicAddressWithImmutableArgs(address,bytes memory,bytes32)": "infinite",
								"predictDeterministicAddressWithImmutableArgs(address,bytes memory,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201927144f7df1cc7ce3b7170813d6a234afd3646705f2c1bd2df341d0aa61b54e64736f6c634300081e0033",
									".code": [
										{
											"begin": 817,
											"end": 14520,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 817,
											"end": 14520,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 817,
											"end": 14520,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 817,
											"end": 14520,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 817,
											"end": 14520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 14520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 817,
											"end": 14520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 14520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 14520,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"hopium/common/interface/imDirectory.sol",
								"hopium/etf/interface/iEtfVault.sol",
								"hopium/etf/interface/imEtfFactory.sol",
								"hopium/etf/main/etf-vault-deployer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CloneArgumentsTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x7e918671c04972845975935ea13c9ce0be1228031ba0e929d0f1f68fd1f17214\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3027ebaeef3e678ad9bae26f0556469878e992bf7dec94bede328a92be529419\",\"dweb:/ipfs/Qmdu4RfMYv9Q7iHWuYfyUL6fZKc73nM4YWizNP8w1xay56\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Create2.sol": {
				"Create2": {
					"abi": [
						{
							"inputs": [],
							"name": "Create2EmptyBytecode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.",
						"errors": {
							"Create2EmptyBytecode()": [
								{
									"details": "There's no code to deploy."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Create2.sol\":533:4465  library Create2 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Create2.sol\":533:4465  library Create2 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122053cfacfcf6c794d529bda8dd9649a3fa31ba9a72ae53a27adb6f96ab70989e9a64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122053cfacfcf6c794d529bda8dd9649a3fa31ba9a72ae53a27adb6f96ab70989e9a64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xCF 0xAC 0xFC 0xF6 0xC7 SWAP5 0xD5 0x29 0xBD 0xA8 0xDD SWAP7 BLOBHASH LOG3 STATICCALL BALANCE 0xBA SWAP11 PUSH19 0xAE53A27ADB6F96AB70989E9A64736F6C634300 ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "533:3932:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122053cfacfcf6c794d529bda8dd9649a3fa31ba9a72ae53a27adb6f96ab70989e9a64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xCF 0xAC 0xFC 0xF6 0xC7 SWAP5 0xD5 0x29 0xBD 0xA8 0xDD SWAP7 BLOBHASH LOG3 STATICCALL BALANCE 0xBA SWAP11 PUSH19 0xAE53A27ADB6F96AB70989E9A64736F6C634300 ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "533:3932:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"computeAddress(bytes32,bytes32)": "infinite",
								"computeAddress(bytes32,bytes32,address)": "infinite",
								"deploy(uint256,bytes32,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122053cfacfcf6c794d529bda8dd9649a3fa31ba9a72ae53a27adb6f96ab70989e9a64736f6c634300081e0033",
									".code": [
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"hopium/common/interface/imDirectory.sol",
								"hopium/etf/interface/iEtfVault.sol",
								"hopium/etf/interface/imEtfFactory.sol",
								"hopium/etf/main/etf-vault-deployer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Create2EmptyBytecode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"errors\":{\"Create2EmptyBytecode()\":[{\"details\":\"There's no code to deploy.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xB7BDD8BFAFAFCAF4815A18409339C23CD5 0x4F 0xA7 0xEA SDIV CREATE2 MSIZE SWAP1 0xDA SHR PUSH27 0x945D265E64736F6C634300081E0033000000000000000000000000 ",
							"sourceMap": "411:484:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xB7BDD8BFAFAFCAF4815A18409339C23CD5 0x4F 0xA7 0xEA SDIV CREATE2 MSIZE SWAP1 0xDA SHR PUSH27 0x945D265E64736F6C634300081E0033000000000000000000000000 ",
							"sourceMap": "411:484:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"hopium/common/interface/imDirectory.sol",
								"hopium/etf/interface/iEtfVault.sol",
								"hopium/etf/interface/imEtfFactory.sol",
								"hopium/etf/main/etf-vault-deployer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hopium/common/interface/imDirectory.sol": {
				"IDirectory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_key",
									"type": "string"
								}
							],
							"name": "fetchFromDirectory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"fetchFromDirectory(string)": "27262618",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"fetchFromDirectory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface used by the registry to talk to the external directory.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/common/interface/imDirectory.sol\":\"IDirectory\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Interface used by the registry to talk to the external directory.",
						"version": 1
					}
				},
				"ImDirectory": {
					"abi": [
						{
							"inputs": [],
							"name": "Directory",
							"outputs": [
								{
									"internalType": "contract IDirectory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_directory",
									"type": "address"
								}
							],
							"name": "changeDirectoryAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_key",
									"type": "string"
								}
							],
							"name": "fetchFromDirectory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"Directory()": "658a847a",
							"changeDirectoryAddress(address)": "ba4c7be1",
							"fetchFromDirectory(string)": "27262618",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Directory\",\"outputs\":[{\"internalType\":\"contract IDirectory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_directory\",\"type\":\"address\"}],\"name\":\"changeDirectoryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"fetchFromDirectory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/common/interface/imDirectory.sol\":\"ImDirectory\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "hopium/common/interface/imDirectory.sol:ImDirectory",
								"label": "Directory",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDirectory)535"
							}
						],
						"types": {
							"t_contract(IDirectory)535": {
								"encoding": "inplace",
								"label": "contract IDirectory",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hopium/etf/interface/iEtfVault.sol": {
				"IEtfVault": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_directory",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "redeem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"initialize(address)": "c4d66de8",
							"redeem(address,uint256,address)": "5c833bfd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_directory\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/etf/interface/iEtfVault.sol\":\"IEtfVault\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hopium/etf/interface/iEtfVault.sol\":{\"keccak256\":\"0xfb14def9e2497164d73a038644d6f2ceb3fe8cfa996ca53a5487439dfe7f6ee2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ac07badc503ea718e351f5e4694021ed548e4e5256f90be6d53c871a108dc3b\",\"dweb:/ipfs/QmeK4yf9x5LF2JaGRfmYto7sddL3AWFU9N1sirAmd8ZFBY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hopium/etf/interface/imEtfFactory.sol": {
				"IEtfFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "indexId",
									"type": "uint256"
								}
							],
							"name": "getEtfNavWeth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nav",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "indexId",
									"type": "uint256"
								}
							],
							"name": "getEtfTokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "indexId",
									"type": "uint256"
								}
							],
							"name": "getEtfVaultAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "etfTokenAddress",
									"type": "address"
								}
							],
							"name": "getIndexIdFromEtfTokenAddress",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "indexId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tradeWethValue",
									"type": "uint256"
								}
							],
							"name": "updateEtfVolume",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getEtfNavWeth(uint256)": "e4b603b3",
							"getEtfTokenAddress(uint256)": "f2018a1f",
							"getEtfVaultAddress(uint256)": "3ee79962",
							"getIndexIdFromEtfTokenAddress(address)": "d00ed651",
							"updateEtfVolume(uint256,uint256)": "1626542c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"indexId\",\"type\":\"uint256\"}],\"name\":\"getEtfNavWeth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nav\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"indexId\",\"type\":\"uint256\"}],\"name\":\"getEtfTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"indexId\",\"type\":\"uint256\"}],\"name\":\"getEtfVaultAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"etfTokenAddress\",\"type\":\"address\"}],\"name\":\"getIndexIdFromEtfTokenAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"indexId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tradeWethValue\",\"type\":\"uint256\"}],\"name\":\"updateEtfVolume\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/etf/interface/imEtfFactory.sol\":\"IEtfFactory\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]},\"hopium/etf/interface/imEtfFactory.sol\":{\"keccak256\":\"0x113e7a55f043117f2fd334de4b88221f31f30045310aa99fe6b5db3d3bd13486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a884bdaa7b3979d02ee6c57af2fc1cbbd31b302b66aacfcdf3f0724f007227b\",\"dweb:/ipfs/QmbNFvdG9cnJht3omTmbuiCATyW895mvPUrLrRbCfikfaQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ImEtfFactory": {
					"abi": [
						{
							"inputs": [],
							"name": "Directory",
							"outputs": [
								{
									"internalType": "contract IDirectory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_directory",
									"type": "address"
								}
							],
							"name": "changeDirectoryAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_key",
									"type": "string"
								}
							],
							"name": "fetchFromDirectory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"Directory()": "658a847a",
							"changeDirectoryAddress(address)": "ba4c7be1",
							"fetchFromDirectory(string)": "27262618",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Directory\",\"outputs\":[{\"internalType\":\"contract IDirectory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_directory\",\"type\":\"address\"}],\"name\":\"changeDirectoryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"fetchFromDirectory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/etf/interface/imEtfFactory.sol\":\"ImEtfFactory\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]},\"hopium/etf/interface/imEtfFactory.sol\":{\"keccak256\":\"0x113e7a55f043117f2fd334de4b88221f31f30045310aa99fe6b5db3d3bd13486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a884bdaa7b3979d02ee6c57af2fc1cbbd31b302b66aacfcdf3f0724f007227b\",\"dweb:/ipfs/QmbNFvdG9cnJht3omTmbuiCATyW895mvPUrLrRbCfikfaQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "hopium/etf/interface/imEtfFactory.sol:ImEtfFactory",
								"label": "Directory",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDirectory)535"
							}
						],
						"types": {
							"t_contract(IDirectory)535": {
								"encoding": "inplace",
								"label": "contract IDirectory",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hopium/etf/main/etf-vault-deployer.sol": {
				"EtfVaultDeployer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_directory",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ImplNotSet",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Directory",
							"outputs": [
								{
									"internalType": "contract IDirectory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_directory",
									"type": "address"
								}
							],
							"name": "changeDirectoryAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "indexId",
									"type": "uint256"
								}
							],
							"name": "deployEtfVault",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxy",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_key",
									"type": "string"
								}
							],
							"name": "fetchFromDirectory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"hopium/etf/main/etf-vault-deployer.sol\":850:1368  contract EtfVaultDeployer is ImEtfFactory, Helpers {... */\n  mstore(0x40, 0x80)\n    /* \"hopium/etf/main/etf-vault-deployer.sol\":938:996  constructor(address _directory) ImDirectory(_directory) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"hopium/etf/main/etf-vault-deployer.sol\":982:992  _directory */\n  dup1\n    /* \"hopium/common/interface/imDirectory.sol\":412:437  _setDirectory(_directory) */\n  tag_7\n    /* \"hopium/common/interface/imDirectory.sol\":426:436  _directory */\n  dup2\n    /* \"hopium/common/interface/imDirectory.sol\":412:425  _setDirectory */\n  shl(0x20, tag_8)\n    /* \"hopium/common/interface/imDirectory.sol\":412:437  _setDirectory(_directory) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"hopium/common/interface/imDirectory.sol\":370:464  constructor(address _directory) {... */\n  pop\n    /* \"hopium/etf/main/etf-vault-deployer.sol\":938:996  constructor(address _directory) ImDirectory(_directory) {} */\n  pop\n    /* \"hopium/etf/main/etf-vault-deployer.sol\":850:1368  contract EtfVaultDeployer is ImEtfFactory, Helpers {... */\n  jump(tag_10)\n    /* \"hopium/common/interface/imDirectory.sol\":589:1050  function _setDirectory(address _directory) internal {... */\ntag_8:\n    /* \"hopium/common/interface/imDirectory.sol\":681:682  0 */\n  0x00\n    /* \"hopium/common/interface/imDirectory.sol\":659:683  _directory != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"hopium/common/interface/imDirectory.sol\":659:669  _directory */\n  dup2\n    /* \"hopium/common/interface/imDirectory.sol\":659:683  _directory != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"hopium/common/interface/imDirectory.sol\":651:720  require(_directory != address(0), \"Directory cannot be zero address\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"hopium/common/interface/imDirectory.sol\":763:764  0 */\n  0x00\n    /* \"hopium/common/interface/imDirectory.sol\":738:748  _directory */\n  dup2\n    /* \"hopium/common/interface/imDirectory.sol\":738:760  _directory.code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"hopium/common/interface/imDirectory.sol\":738:764  _directory.code.length > 0 */\n  gt\n    /* \"hopium/common/interface/imDirectory.sol\":730:797  require(_directory.code.length > 0, \"Directory must be a contract\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"hopium/common/interface/imDirectory.sol\":861:871  _directory */\n  dup1\n    /* \"hopium/common/interface/imDirectory.sol\":850:878  IDirectory(_directory).owner */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8da5cb5b\n    /* \"hopium/common/interface/imDirectory.sol\":850:880  IDirectory(_directory).owner() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  swap3\n  pop\n  pop\n  pop\n  dup1\n  iszero\n  tag_18\n  jumpi\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_19\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_19:\n  0x01\ntag_18:\n    /* \"hopium/common/interface/imDirectory.sol\":846:1044  try IDirectory(_directory).owner() returns (address) {... */\n  tag_20\n  jumpi\n    /* \"hopium/common/interface/imDirectory.sol\":979:1033  revert(\"Directory address does not implement owner()\") */\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"hopium/common/interface/imDirectory.sol\":846:1044  try IDirectory(_directory).owner() returns (address) {... */\ntag_20:\n    /* \"hopium/common/interface/imDirectory.sol\":936:946  _directory */\n  dup2\n    /* \"hopium/common/interface/imDirectory.sol\":913:922  Directory */\n  0x00\n  0x00\n    /* \"hopium/common/interface/imDirectory.sol\":913:947  Directory = IDirectory(_directory) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"hopium/common/interface/imDirectory.sol\":881:958  returns (address) {... */\n  pop\n    /* \"hopium/common/interface/imDirectory.sol\":589:1050  function _setDirectory(address _directory) internal {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_28:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_30:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_31:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_47\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_30\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_32:\n    /* \"#utility.yul\":641:665   */\n  tag_49\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_31\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_50:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_33:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_52\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_32\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_55\n  tag_28\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":932:1051   */\ntag_54:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_56\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_33\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1371   */\ntag_34:\n    /* \"#utility.yul\":1286:1297   */\n  0x00\n    /* \"#utility.yul\":1320:1326   */\n  dup3\n    /* \"#utility.yul\":1315:1318   */\n  dup3\n    /* \"#utility.yul\":1308:1327   */\n  mstore\n    /* \"#utility.yul\":1360:1364   */\n  0x20\n    /* \"#utility.yul\":1355:1358   */\n  dup3\n    /* \"#utility.yul\":1351:1365   */\n  add\n    /* \"#utility.yul\":1336:1365   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1371   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1377:1559   */\ntag_35:\n    /* \"#utility.yul\":1517:1551   */\n  0x4469726563746f72792063616e6e6f74206265207a65726f2061646472657373\n    /* \"#utility.yul\":1513:1514   */\n  0x00\n    /* \"#utility.yul\":1505:1511   */\n  dup3\n    /* \"#utility.yul\":1501:1515   */\n  add\n    /* \"#utility.yul\":1494:1552   */\n  mstore\n    /* \"#utility.yul\":1377:1559   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1565:1931   */\ntag_36:\n    /* \"#utility.yul\":1707:1710   */\n  0x00\n    /* \"#utility.yul\":1728:1795   */\n  tag_60\n    /* \"#utility.yul\":1792:1794   */\n  0x20\n    /* \"#utility.yul\":1787:1790   */\n  dup4\n    /* \"#utility.yul\":1728:1795   */\n  tag_34\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1721:1795   */\n  swap2\n  pop\n    /* \"#utility.yul\":1804:1897   */\n  tag_61\n    /* \"#utility.yul\":1893:1896   */\n  dup3\n    /* \"#utility.yul\":1804:1897   */\n  tag_35\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1922:1924   */\n  0x20\n    /* \"#utility.yul\":1917:1920   */\n  dup3\n    /* \"#utility.yul\":1913:1925   */\n  add\n    /* \"#utility.yul\":1906:1925   */\n  swap1\n  pop\n    /* \"#utility.yul\":1565:1931   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1937:2356   */\ntag_14:\n    /* \"#utility.yul\":2103:2107   */\n  0x00\n    /* \"#utility.yul\":2141:2143   */\n  0x20\n    /* \"#utility.yul\":2130:2139   */\n  dup3\n    /* \"#utility.yul\":2126:2144   */\n  add\n    /* \"#utility.yul\":2118:2144   */\n  swap1\n  pop\n    /* \"#utility.yul\":2190:2199   */\n  dup2\n    /* \"#utility.yul\":2184:2188   */\n  dup2\n    /* \"#utility.yul\":2180:2200   */\n  sub\n    /* \"#utility.yul\":2176:2177   */\n  0x00\n    /* \"#utility.yul\":2165:2174   */\n  dup4\n    /* \"#utility.yul\":2161:2178   */\n  add\n    /* \"#utility.yul\":2154:2201   */\n  mstore\n    /* \"#utility.yul\":2218:2349   */\n  tag_63\n    /* \"#utility.yul\":2344:2348   */\n  dup2\n    /* \"#utility.yul\":2218:2349   */\n  tag_36\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2210:2349   */\n  swap1\n  pop\n    /* \"#utility.yul\":1937:2356   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2362:2540   */\ntag_37:\n    /* \"#utility.yul\":2502:2532   */\n  0x4469726563746f7279206d757374206265206120636f6e747261637400000000\n    /* \"#utility.yul\":2498:2499   */\n  0x00\n    /* \"#utility.yul\":2490:2496   */\n  dup3\n    /* \"#utility.yul\":2486:2500   */\n  add\n    /* \"#utility.yul\":2479:2533   */\n  mstore\n    /* \"#utility.yul\":2362:2540   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2546:2912   */\ntag_38:\n    /* \"#utility.yul\":2688:2691   */\n  0x00\n    /* \"#utility.yul\":2709:2776   */\n  tag_66\n    /* \"#utility.yul\":2773:2775   */\n  0x1c\n    /* \"#utility.yul\":2768:2771   */\n  dup4\n    /* \"#utility.yul\":2709:2776   */\n  tag_34\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2702:2776   */\n  swap2\n  pop\n    /* \"#utility.yul\":2785:2878   */\n  tag_67\n    /* \"#utility.yul\":2874:2877   */\n  dup3\n    /* \"#utility.yul\":2785:2878   */\n  tag_37\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2903:2905   */\n  0x20\n    /* \"#utility.yul\":2898:2901   */\n  dup3\n    /* \"#utility.yul\":2894:2906   */\n  add\n    /* \"#utility.yul\":2887:2906   */\n  swap1\n  pop\n    /* \"#utility.yul\":2546:2912   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2918:3337   */\ntag_17:\n    /* \"#utility.yul\":3084:3088   */\n  0x00\n    /* \"#utility.yul\":3122:3124   */\n  0x20\n    /* \"#utility.yul\":3111:3120   */\n  dup3\n    /* \"#utility.yul\":3107:3125   */\n  add\n    /* \"#utility.yul\":3099:3125   */\n  swap1\n  pop\n    /* \"#utility.yul\":3171:3180   */\n  dup2\n    /* \"#utility.yul\":3165:3169   */\n  dup2\n    /* \"#utility.yul\":3161:3181   */\n  sub\n    /* \"#utility.yul\":3157:3158   */\n  0x00\n    /* \"#utility.yul\":3146:3155   */\n  dup4\n    /* \"#utility.yul\":3142:3159   */\n  add\n    /* \"#utility.yul\":3135:3182   */\n  mstore\n    /* \"#utility.yul\":3199:3330   */\n  tag_69\n    /* \"#utility.yul\":3325:3329   */\n  dup2\n    /* \"#utility.yul\":3199:3330   */\n  tag_38\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":3191:3330   */\n  swap1\n  pop\n    /* \"#utility.yul\":2918:3337   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3343:3574   */\ntag_39:\n    /* \"#utility.yul\":3483:3517   */\n  0x4469726563746f7279206164647265737320646f6573206e6f7420696d706c65\n    /* \"#utility.yul\":3479:3480   */\n  0x00\n    /* \"#utility.yul\":3471:3477   */\n  dup3\n    /* \"#utility.yul\":3467:3481   */\n  add\n    /* \"#utility.yul\":3460:3518   */\n  mstore\n    /* \"#utility.yul\":3552:3566   */\n  0x6d656e74206f776e657228290000000000000000000000000000000000000000\n    /* \"#utility.yul\":3547:3549   */\n  0x20\n    /* \"#utility.yul\":3539:3545   */\n  dup3\n    /* \"#utility.yul\":3535:3550   */\n  add\n    /* \"#utility.yul\":3528:3567   */\n  mstore\n    /* \"#utility.yul\":3343:3574   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3580:3946   */\ntag_40:\n    /* \"#utility.yul\":3722:3725   */\n  0x00\n    /* \"#utility.yul\":3743:3810   */\n  tag_72\n    /* \"#utility.yul\":3807:3809   */\n  0x2c\n    /* \"#utility.yul\":3802:3805   */\n  dup4\n    /* \"#utility.yul\":3743:3810   */\n  tag_34\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":3736:3810   */\n  swap2\n  pop\n    /* \"#utility.yul\":3819:3912   */\n  tag_73\n    /* \"#utility.yul\":3908:3911   */\n  dup3\n    /* \"#utility.yul\":3819:3912   */\n  tag_39\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3937:3939   */\n  0x40\n    /* \"#utility.yul\":3932:3935   */\n  dup3\n    /* \"#utility.yul\":3928:3940   */\n  add\n    /* \"#utility.yul\":3921:3940   */\n  swap1\n  pop\n    /* \"#utility.yul\":3580:3946   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3952:4371   */\ntag_25:\n    /* \"#utility.yul\":4118:4122   */\n  0x00\n    /* \"#utility.yul\":4156:4158   */\n  0x20\n    /* \"#utility.yul\":4145:4154   */\n  dup3\n    /* \"#utility.yul\":4141:4159   */\n  add\n    /* \"#utility.yul\":4133:4159   */\n  swap1\n  pop\n    /* \"#utility.yul\":4205:4214   */\n  dup2\n    /* \"#utility.yul\":4199:4203   */\n  dup2\n    /* \"#utility.yul\":4195:4215   */\n  sub\n    /* \"#utility.yul\":4191:4192   */\n  0x00\n    /* \"#utility.yul\":4180:4189   */\n  dup4\n    /* \"#utility.yul\":4176:4193   */\n  add\n    /* \"#utility.yul\":4169:4216   */\n  mstore\n    /* \"#utility.yul\":4233:4364   */\n  tag_75\n    /* \"#utility.yul\":4359:4363   */\n  dup2\n    /* \"#utility.yul\":4233:4364   */\n  tag_40\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":4225:4364   */\n  swap1\n  pop\n    /* \"#utility.yul\":3952:4371   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"hopium/etf/main/etf-vault-deployer.sol\":850:1368  contract EtfVaultDeployer is ImEtfFactory, Helpers {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":850:1368  contract EtfVaultDeployer is ImEtfFactory, Helpers {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x27262618\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x658a847a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb57c59a7\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xba4c7be1\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"hopium/common/interface/imDirectory.sol\":1272:1408  function fetchFromDirectory(string memory _key) public view returns (address) {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/common/interface/imDirectory.sol\":336:363  IDirectory public Directory */\n    tag_4:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/common/interface/imDirectory.sol\":1178:1266  function owner() public view returns (address) {... */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1089:1366  function deployEtfVault(uint256 indexId) external onlyEtfFactory returns (address proxy) {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/common/interface/imDirectory.sol\":470:583  function changeDirectoryAddress(address _directory) external onlyOwner {... */\n    tag_7:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"hopium/common/interface/imDirectory.sol\":1272:1408  function fetchFromDirectory(string memory _key) public view returns (address) {... */\n    tag_11:\n        /* \"hopium/common/interface/imDirectory.sol\":1341:1348  address */\n      0x00\n        /* \"hopium/common/interface/imDirectory.sol\":1367:1376  Directory */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/common/interface/imDirectory.sol\":1367:1395  Directory.fetchFromDirectory */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x27262618\n        /* \"hopium/common/interface/imDirectory.sol\":1396:1400  _key */\n      dup4\n        /* \"hopium/common/interface/imDirectory.sol\":1367:1401  Directory.fetchFromDirectory(_key) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"hopium/common/interface/imDirectory.sol\":1360:1401  return Directory.fetchFromDirectory(_key) */\n      swap1\n      pop\n        /* \"hopium/common/interface/imDirectory.sol\":1272:1408  function fetchFromDirectory(string memory _key) public view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"hopium/common/interface/imDirectory.sol\":336:363  IDirectory public Directory */\n    tag_15:\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"hopium/common/interface/imDirectory.sol\":1178:1266  function owner() public view returns (address) {... */\n    tag_19:\n        /* \"hopium/common/interface/imDirectory.sol\":1216:1223  address */\n      0x00\n        /* \"hopium/common/interface/imDirectory.sol\":1242:1251  Directory */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/common/interface/imDirectory.sol\":1242:1257  Directory.owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"hopium/common/interface/imDirectory.sol\":1242:1259  Directory.owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_39:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_40:\n        /* \"hopium/common/interface/imDirectory.sol\":1235:1259  return Directory.owner() */\n      swap1\n      pop\n        /* \"hopium/common/interface/imDirectory.sol\":1178:1266  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1089:1366  function deployEtfVault(uint256 indexId) external onlyEtfFactory returns (address proxy) {... */\n    tag_24:\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1163:1176  address proxy */\n      0x00\n        /* \"hopium/etf/interface/imEtfFactory.sol\":817:850  fetchFromDirectory(\"etf-factory\") */\n      tag_42\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x6574662d666163746f7279000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"hopium/etf/interface/imEtfFactory.sol\":817:835  fetchFromDirectory */\n      tag_11\n        /* \"hopium/etf/interface/imEtfFactory.sol\":817:850  fetchFromDirectory(\"etf-factory\") */\n      jump\t// in\n    tag_42:\n        /* \"hopium/etf/interface/imEtfFactory.sol\":803:850  msg.sender == fetchFromDirectory(\"etf-factory\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/etf/interface/imEtfFactory.sol\":803:813  msg.sender */\n      caller\n        /* \"hopium/etf/interface/imEtfFactory.sol\":803:850  msg.sender == fetchFromDirectory(\"etf-factory\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"hopium/etf/interface/imEtfFactory.sol\":795:884  require(msg.sender == fetchFromDirectory(\"etf-factory\"), \"msg.sender is not etf factory\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1188:1205  address vaultImpl */\n      0x00\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1208:1222  getVaultImpl() */\n      tag_47\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1208:1220  getVaultImpl */\n      tag_48\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1208:1222  getVaultImpl() */\n      jump\t// in\n    tag_47:\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1188:1222  address vaultImpl = getVaultImpl() */\n      swap1\n      pop\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1241:1293  Clones.cloneDeterministic(vaultImpl, _salt(indexId)) */\n      tag_49\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1267:1276  vaultImpl */\n      dup2\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1278:1292  _salt(indexId) */\n      tag_50\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1284:1291  indexId */\n      dup6\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1278:1283  _salt */\n      tag_51\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1278:1292  _salt(indexId) */\n      jump\t// in\n    tag_50:\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1241:1266  Clones.cloneDeterministic */\n      tag_52\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1241:1293  Clones.cloneDeterministic(vaultImpl, _salt(indexId)) */\n      jump\t// in\n    tag_49:\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1233:1293  proxy = Clones.cloneDeterministic(vaultImpl, _salt(indexId)) */\n      swap2\n      pop\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1322:1327  proxy */\n      dup2\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1312:1339  IEtfVault(proxy).initialize */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc4d66de8\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1348:1357  Directory */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1312:1359  IEtfVault(proxy).initialize(address(Directory)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_53:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      revert(0x00, 0x00)\n    tag_54:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1178:1366  {... */\n      pop\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":1089:1366  function deployEtfVault(uint256 indexId) external onlyEtfFactory returns (address proxy) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"hopium/common/interface/imDirectory.sol\":470:583  function changeDirectoryAddress(address _directory) external onlyOwner {... */\n    tag_29:\n        /* \"hopium/common/interface/imDirectory.sol\":1109:1118  Directory */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/common/interface/imDirectory.sol\":1109:1124  Directory.owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"hopium/common/interface/imDirectory.sol\":1109:1126  Directory.owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_60:\n        /* \"hopium/common/interface/imDirectory.sol\":1095:1126  msg.sender == Directory.owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/common/interface/imDirectory.sol\":1095:1105  msg.sender */\n      caller\n        /* \"hopium/common/interface/imDirectory.sol\":1095:1126  msg.sender == Directory.owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"hopium/common/interface/imDirectory.sol\":1087:1154  require(msg.sender == Directory.owner(), \"Caller is not the owner\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"hopium/common/interface/imDirectory.sol\":551:576  _setDirectory(_directory) */\n      tag_65\n        /* \"hopium/common/interface/imDirectory.sol\":565:575  _directory */\n      dup2\n        /* \"hopium/common/interface/imDirectory.sol\":551:564  _setDirectory */\n      tag_66\n        /* \"hopium/common/interface/imDirectory.sol\":551:576  _setDirectory(_directory) */\n      jump\t// in\n    tag_65:\n        /* \"hopium/common/interface/imDirectory.sol\":470:583  function changeDirectoryAddress(address _directory) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":548:771  function getVaultImpl() internal view returns (address) {... */\n    tag_48:\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":595:602  address */\n      0x00\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":614:631  address vaultImpl */\n      0x00\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":635:671  fetchFromDirectory(\"etf-vault-impl\") */\n      tag_68\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      0x6574662d7661756c742d696d706c000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":635:653  fetchFromDirectory */\n      tag_11\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":635:671  fetchFromDirectory(\"etf-vault-impl\") */\n      jump\t// in\n    tag_68:\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":614:671  address vaultImpl =  fetchFromDirectory(\"etf-vault-impl\") */\n      swap1\n      pop\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":706:707  0 */\n      0x00\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":685:708  vaultImpl == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":685:694  vaultImpl */\n      dup2\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":685:708  vaultImpl == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":681:729  if (vaultImpl == address(0)) revert ImplNotSet() */\n      tag_69\n      jumpi\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":717:729  ImplNotSet() */\n      mload(0x40)\n      0x8020a5c700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":681:729  if (vaultImpl == address(0)) revert ImplNotSet() */\n    tag_69:\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":755:764  vaultImpl */\n      dup1\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":748:764  return vaultImpl */\n      swap2\n      pop\n      pop\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":548:771  function getVaultImpl() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":405:542  function _salt(uint256 indexId) internal pure returns (bytes32) {... */\n    tag_51:\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":460:467  bytes32 */\n      0x00\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":526:533  indexId */\n      dup2\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":496:534  abi.encodePacked(\"ETF_VAULT\", indexId) */\n      add(0x20, mload(0x40))\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":486:535  keccak256(abi.encodePacked(\"ETF_VAULT\", indexId)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":479:535  return keccak256(abi.encodePacked(\"ETF_VAULT\", indexId)) */\n      swap1\n      pop\n        /* \"hopium/etf/main/etf-vault-deployer.sol\":405:542  function _salt(uint256 indexId) internal pure returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3875:4044  function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3959:3975  address instance */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3994:4037  cloneDeterministic(implementation, salt, 0) */\n      tag_74\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4013:4027  implementation */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4029:4033  salt */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4035:4036  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3994:4012  cloneDeterministic */\n      tag_75\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3994:4037  cloneDeterministic(implementation, salt, 0) */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3987:4037  return cloneDeterministic(implementation, salt, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3875:4044  function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"hopium/common/interface/imDirectory.sol\":589:1050  function _setDirectory(address _directory) internal {... */\n    tag_66:\n        /* \"hopium/common/interface/imDirectory.sol\":681:682  0 */\n      0x00\n        /* \"hopium/common/interface/imDirectory.sol\":659:683  _directory != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/common/interface/imDirectory.sol\":659:669  _directory */\n      dup2\n        /* \"hopium/common/interface/imDirectory.sol\":659:683  _directory != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"hopium/common/interface/imDirectory.sol\":651:720  require(_directory != address(0), \"Directory cannot be zero address\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"hopium/common/interface/imDirectory.sol\":763:764  0 */\n      0x00\n        /* \"hopium/common/interface/imDirectory.sol\":738:748  _directory */\n      dup2\n        /* \"hopium/common/interface/imDirectory.sol\":738:760  _directory.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"hopium/common/interface/imDirectory.sol\":738:764  _directory.code.length > 0 */\n      gt\n        /* \"hopium/common/interface/imDirectory.sol\":730:797  require(_directory.code.length > 0, \"Directory must be a contract\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"hopium/common/interface/imDirectory.sol\":861:871  _directory */\n      dup1\n        /* \"hopium/common/interface/imDirectory.sol\":850:878  IDirectory(_directory).owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"hopium/common/interface/imDirectory.sol\":850:880  IDirectory(_directory).owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_83\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_84:\n      0x01\n    tag_83:\n        /* \"hopium/common/interface/imDirectory.sol\":846:1044  try IDirectory(_directory).owner() returns (address) {... */\n      tag_85\n      jumpi\n        /* \"hopium/common/interface/imDirectory.sol\":979:1033  revert(\"Directory address does not implement owner()\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hopium/common/interface/imDirectory.sol\":846:1044  try IDirectory(_directory).owner() returns (address) {... */\n    tag_85:\n        /* \"hopium/common/interface/imDirectory.sol\":936:946  _directory */\n      dup2\n        /* \"hopium/common/interface/imDirectory.sol\":913:922  Directory */\n      0x00\n      0x00\n        /* \"hopium/common/interface/imDirectory.sol\":913:947  Directory = IDirectory(_directory) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"hopium/common/interface/imDirectory.sol\":881:958  returns (address) {... */\n      pop\n        /* \"hopium/common/interface/imDirectory.sol\":589:1050  function _setDirectory(address _directory) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4805:5779  function cloneDeterministic(... */\n    tag_75:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4934:4950  address instance */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4990:4995  value */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4966:4987  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4966:4995  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4962:5085  if (address(this).balance < value) {... */\n      iszero\n      tag_93\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5045:5066  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5068:5073  value */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5018:5074  Errors.InsufficientBalance(address(this).balance, value) */\n      mload(0x40)\n      0xcf47918100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap3\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4962:5085  if (address(this).balance < value) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5371:5419  0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000 */\n      0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5353:5367  implementation */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5347:5351  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5343:5368  shl(0x60, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5337:5341  0xe8 */\n      0xe8\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5333:5369  shr(0xe8, shl(0x60, implementation)) */\n      shr\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5330:5420  or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5324:5328  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5317:5421  mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5578:5610  0x5af43d82803e903d91602b57fd5bf3 */\n      0x5af43d82803e903d91602b57fd5bf3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5561:5575  implementation */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5555:5559  0x78 */\n      0x78\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5551:5576  shl(0x78, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5548:5611  or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5542:5546  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5535:5612  mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5664:5668  salt */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5658:5662  0x37 */\n      0x37\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5652:5656  0x09 */\n      0x09\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5645:5650  value */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5637:5669  create2(value, 0x09, 0x37, salt) */\n      create2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5625:5669  instance := create2(value, 0x09, 0x37, salt) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5712:5713  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5692:5714  instance == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5692:5700  instance */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5692:5714  instance == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5688:5773  if (instance == address(0)) {... */\n      tag_96\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5737:5762  Errors.FailedDeployment() */\n      mload(0x40)\n      0xb06ebf3d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5688:5773  if (instance == address(0)) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4805:5779  function cloneDeterministic(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_97:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_98:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_99:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_100:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      0x00\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_101:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      0x00\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:682   */\n    tag_102:\n        /* \"#utility.yul\":621:627   */\n      0x00\n        /* \"#utility.yul\":672:674   */\n      0x1f\n        /* \"#utility.yul\":668:675   */\n      not\n        /* \"#utility.yul\":663:665   */\n      0x1f\n        /* \"#utility.yul\":656:661   */\n      dup4\n        /* \"#utility.yul\":652:666   */\n      add\n        /* \"#utility.yul\":648:676   */\n      and\n        /* \"#utility.yul\":638:676   */\n      swap1\n      pop\n        /* \"#utility.yul\":580:682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":688:868   */\n    tag_103:\n        /* \"#utility.yul\":736:813   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":733:734   */\n      0x00\n        /* \"#utility.yul\":726:814   */\n      mstore\n        /* \"#utility.yul\":833:837   */\n      0x41\n        /* \"#utility.yul\":830:831   */\n      0x04\n        /* \"#utility.yul\":823:838   */\n      mstore\n        /* \"#utility.yul\":857:861   */\n      0x24\n        /* \"#utility.yul\":854:855   */\n      0x00\n        /* \"#utility.yul\":847:862   */\n      revert\n        /* \"#utility.yul\":874:1155   */\n    tag_104:\n        /* \"#utility.yul\":957:984   */\n      tag_153\n        /* \"#utility.yul\":979:983   */\n      dup3\n        /* \"#utility.yul\":957:984   */\n      tag_102\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":949:955   */\n      dup2\n        /* \"#utility.yul\":945:985   */\n      add\n        /* \"#utility.yul\":1087:1093   */\n      dup2\n        /* \"#utility.yul\":1075:1085   */\n      dup2\n        /* \"#utility.yul\":1072:1094   */\n      lt\n        /* \"#utility.yul\":1051:1069   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1039:1049   */\n      dup3\n        /* \"#utility.yul\":1036:1070   */\n      gt\n        /* \"#utility.yul\":1033:1095   */\n      or\n        /* \"#utility.yul\":1030:1118   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1098:1116   */\n      tag_155\n      tag_103\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1030:1118   */\n    tag_154:\n        /* \"#utility.yul\":1138:1148   */\n      dup1\n        /* \"#utility.yul\":1134:1136   */\n      0x40\n        /* \"#utility.yul\":1127:1149   */\n      mstore\n        /* \"#utility.yul\":917:1155   */\n      pop\n        /* \"#utility.yul\":874:1155   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1161:1290   */\n    tag_105:\n        /* \"#utility.yul\":1195:1201   */\n      0x00\n        /* \"#utility.yul\":1222:1242   */\n      tag_157\n      tag_97\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1212:1242   */\n      swap1\n      pop\n        /* \"#utility.yul\":1251:1284   */\n      tag_158\n        /* \"#utility.yul\":1279:1283   */\n      dup3\n        /* \"#utility.yul\":1271:1277   */\n      dup3\n        /* \"#utility.yul\":1251:1284   */\n      tag_104\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1161:1290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1296:1604   */\n    tag_106:\n        /* \"#utility.yul\":1358:1362   */\n      0x00\n        /* \"#utility.yul\":1448:1466   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1440:1446   */\n      dup3\n        /* \"#utility.yul\":1437:1467   */\n      gt\n        /* \"#utility.yul\":1434:1490   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":1470:1488   */\n      tag_161\n      tag_103\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1434:1490   */\n    tag_160:\n        /* \"#utility.yul\":1508:1537   */\n      tag_162\n        /* \"#utility.yul\":1530:1536   */\n      dup3\n        /* \"#utility.yul\":1508:1537   */\n      tag_102\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":1500:1537   */\n      swap1\n      pop\n        /* \"#utility.yul\":1592:1596   */\n      0x20\n        /* \"#utility.yul\":1586:1590   */\n      dup2\n        /* \"#utility.yul\":1582:1597   */\n      add\n        /* \"#utility.yul\":1574:1597   */\n      swap1\n      pop\n        /* \"#utility.yul\":1296:1604   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1758   */\n    tag_107:\n        /* \"#utility.yul\":1708:1714   */\n      dup3\n        /* \"#utility.yul\":1703:1706   */\n      dup2\n        /* \"#utility.yul\":1698:1701   */\n      dup4\n        /* \"#utility.yul\":1685:1715   */\n      calldatacopy\n        /* \"#utility.yul\":1749:1750   */\n      0x00\n        /* \"#utility.yul\":1740:1746   */\n      dup4\n        /* \"#utility.yul\":1735:1738   */\n      dup4\n        /* \"#utility.yul\":1731:1747   */\n      add\n        /* \"#utility.yul\":1724:1751   */\n      mstore\n        /* \"#utility.yul\":1610:1758   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1764:2189   */\n    tag_108:\n        /* \"#utility.yul\":1842:1847   */\n      0x00\n        /* \"#utility.yul\":1867:1933   */\n      tag_165\n        /* \"#utility.yul\":1883:1932   */\n      tag_166\n        /* \"#utility.yul\":1925:1931   */\n      dup5\n        /* \"#utility.yul\":1883:1932   */\n      tag_106\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":1867:1933   */\n      tag_105\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1858:1933   */\n      swap1\n      pop\n        /* \"#utility.yul\":1956:1962   */\n      dup3\n        /* \"#utility.yul\":1949:1954   */\n      dup2\n        /* \"#utility.yul\":1942:1963   */\n      mstore\n        /* \"#utility.yul\":1994:1998   */\n      0x20\n        /* \"#utility.yul\":1987:1992   */\n      dup2\n        /* \"#utility.yul\":1983:1999   */\n      add\n        /* \"#utility.yul\":2032:2035   */\n      dup5\n        /* \"#utility.yul\":2023:2029   */\n      dup5\n        /* \"#utility.yul\":2018:2021   */\n      dup5\n        /* \"#utility.yul\":2014:2030   */\n      add\n        /* \"#utility.yul\":2011:2036   */\n      gt\n        /* \"#utility.yul\":2008:2120   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2039:2118   */\n      tag_168\n      tag_101\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2008:2120   */\n    tag_167:\n        /* \"#utility.yul\":2129:2183   */\n      tag_169\n        /* \"#utility.yul\":2176:2182   */\n      dup5\n        /* \"#utility.yul\":2171:2174   */\n      dup3\n        /* \"#utility.yul\":2166:2169   */\n      dup6\n        /* \"#utility.yul\":2129:2183   */\n      tag_107\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1848:2189   */\n      pop\n        /* \"#utility.yul\":1764:2189   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2549   */\n    tag_109:\n        /* \"#utility.yul\":2265:2270   */\n      0x00\n        /* \"#utility.yul\":2314:2317   */\n      dup3\n        /* \"#utility.yul\":2307:2311   */\n      0x1f\n        /* \"#utility.yul\":2299:2305   */\n      dup4\n        /* \"#utility.yul\":2295:2312   */\n      add\n        /* \"#utility.yul\":2291:2318   */\n      slt\n        /* \"#utility.yul\":2281:2403   */\n      tag_171\n      jumpi\n        /* \"#utility.yul\":2322:2401   */\n      tag_172\n      tag_100\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2281:2403   */\n    tag_171:\n        /* \"#utility.yul\":2439:2445   */\n      dup2\n        /* \"#utility.yul\":2426:2446   */\n      calldataload\n        /* \"#utility.yul\":2464:2543   */\n      tag_173\n        /* \"#utility.yul\":2539:2542   */\n      dup5\n        /* \"#utility.yul\":2531:2537   */\n      dup3\n        /* \"#utility.yul\":2524:2528   */\n      0x20\n        /* \"#utility.yul\":2516:2522   */\n      dup7\n        /* \"#utility.yul\":2512:2529   */\n      add\n        /* \"#utility.yul\":2464:2543   */\n      tag_108\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":2455:2543   */\n      swap2\n      pop\n        /* \"#utility.yul\":2271:2549   */\n      pop\n        /* \"#utility.yul\":2209:2549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2555:3064   */\n    tag_10:\n        /* \"#utility.yul\":2624:2630   */\n      0x00\n        /* \"#utility.yul\":2673:2675   */\n      0x20\n        /* \"#utility.yul\":2661:2670   */\n      dup3\n        /* \"#utility.yul\":2652:2659   */\n      dup5\n        /* \"#utility.yul\":2648:2671   */\n      sub\n        /* \"#utility.yul\":2644:2676   */\n      slt\n        /* \"#utility.yul\":2641:2760   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":2679:2758   */\n      tag_176\n      tag_98\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2641:2760   */\n    tag_175:\n        /* \"#utility.yul\":2827:2828   */\n      0x00\n        /* \"#utility.yul\":2816:2825   */\n      dup3\n        /* \"#utility.yul\":2812:2829   */\n      add\n        /* \"#utility.yul\":2799:2830   */\n      calldataload\n        /* \"#utility.yul\":2857:2875   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2849:2855   */\n      dup2\n        /* \"#utility.yul\":2846:2876   */\n      gt\n        /* \"#utility.yul\":2843:2960   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":2879:2958   */\n      tag_178\n      tag_99\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2843:2960   */\n    tag_177:\n        /* \"#utility.yul\":2984:3047   */\n      tag_179\n        /* \"#utility.yul\":3039:3046   */\n      dup5\n        /* \"#utility.yul\":3030:3036   */\n      dup3\n        /* \"#utility.yul\":3019:3028   */\n      dup6\n        /* \"#utility.yul\":3015:3037   */\n      add\n        /* \"#utility.yul\":2984:3047   */\n      tag_109\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2974:3047   */\n      swap2\n      pop\n        /* \"#utility.yul\":2770:3057   */\n      pop\n        /* \"#utility.yul\":2555:3064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3070:3196   */\n    tag_110:\n        /* \"#utility.yul\":3107:3114   */\n      0x00\n        /* \"#utility.yul\":3147:3189   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3140:3145   */\n      dup3\n        /* \"#utility.yul\":3136:3190   */\n      and\n        /* \"#utility.yul\":3125:3190   */\n      swap1\n      pop\n        /* \"#utility.yul\":3070:3196   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3202:3298   */\n    tag_111:\n        /* \"#utility.yul\":3239:3246   */\n      0x00\n        /* \"#utility.yul\":3268:3292   */\n      tag_182\n        /* \"#utility.yul\":3286:3291   */\n      dup3\n        /* \"#utility.yul\":3268:3292   */\n      tag_110\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":3257:3292   */\n      swap1\n      pop\n        /* \"#utility.yul\":3202:3298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3304:3422   */\n    tag_112:\n        /* \"#utility.yul\":3391:3415   */\n      tag_184\n        /* \"#utility.yul\":3409:3414   */\n      dup2\n        /* \"#utility.yul\":3391:3415   */\n      tag_111\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":3386:3389   */\n      dup3\n        /* \"#utility.yul\":3379:3416   */\n      mstore\n        /* \"#utility.yul\":3304:3422   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3428:3650   */\n    tag_13:\n        /* \"#utility.yul\":3521:3525   */\n      0x00\n        /* \"#utility.yul\":3559:3561   */\n      0x20\n        /* \"#utility.yul\":3548:3557   */\n      dup3\n        /* \"#utility.yul\":3544:3562   */\n      add\n        /* \"#utility.yul\":3536:3562   */\n      swap1\n      pop\n        /* \"#utility.yul\":3572:3643   */\n      tag_186\n        /* \"#utility.yul\":3640:3641   */\n      0x00\n        /* \"#utility.yul\":3629:3638   */\n      dup4\n        /* \"#utility.yul\":3625:3642   */\n      add\n        /* \"#utility.yul\":3616:3622   */\n      dup5\n        /* \"#utility.yul\":3572:3643   */\n      tag_112\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":3428:3650   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3656:3716   */\n    tag_113:\n        /* \"#utility.yul\":3684:3687   */\n      0x00\n        /* \"#utility.yul\":3705:3710   */\n      dup2\n        /* \"#utility.yul\":3698:3710   */\n      swap1\n      pop\n        /* \"#utility.yul\":3656:3716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3722:3864   */\n    tag_114:\n        /* \"#utility.yul\":3772:3781   */\n      0x00\n        /* \"#utility.yul\":3805:3858   */\n      tag_189\n        /* \"#utility.yul\":3823:3857   */\n      tag_190\n        /* \"#utility.yul\":3832:3856   */\n      tag_191\n        /* \"#utility.yul\":3850:3855   */\n      dup5\n        /* \"#utility.yul\":3832:3856   */\n      tag_110\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3823:3857   */\n      tag_113\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":3805:3858   */\n      tag_110\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3792:3858   */\n      swap1\n      pop\n        /* \"#utility.yul\":3722:3864   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3870:3996   */\n    tag_115:\n        /* \"#utility.yul\":3920:3929   */\n      0x00\n        /* \"#utility.yul\":3953:3990   */\n      tag_193\n        /* \"#utility.yul\":3984:3989   */\n      dup3\n        /* \"#utility.yul\":3953:3990   */\n      tag_114\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3940:3990   */\n      swap1\n      pop\n        /* \"#utility.yul\":3870:3996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4002:4146   */\n    tag_116:\n        /* \"#utility.yul\":4070:4079   */\n      0x00\n        /* \"#utility.yul\":4103:4140   */\n      tag_195\n        /* \"#utility.yul\":4134:4139   */\n      dup3\n        /* \"#utility.yul\":4103:4140   */\n      tag_115\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":4090:4140   */\n      swap1\n      pop\n        /* \"#utility.yul\":4002:4146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4152:4319   */\n    tag_117:\n        /* \"#utility.yul\":4257:4312   */\n      tag_197\n        /* \"#utility.yul\":4306:4311   */\n      dup2\n        /* \"#utility.yul\":4257:4312   */\n      tag_116\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4252:4255   */\n      dup3\n        /* \"#utility.yul\":4245:4313   */\n      mstore\n        /* \"#utility.yul\":4152:4319   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4325:4583   */\n    tag_17:\n        /* \"#utility.yul\":4436:4440   */\n      0x00\n        /* \"#utility.yul\":4474:4476   */\n      0x20\n        /* \"#utility.yul\":4463:4472   */\n      dup3\n        /* \"#utility.yul\":4459:4477   */\n      add\n        /* \"#utility.yul\":4451:4477   */\n      swap1\n      pop\n        /* \"#utility.yul\":4487:4576   */\n      tag_199\n        /* \"#utility.yul\":4573:4574   */\n      0x00\n        /* \"#utility.yul\":4562:4571   */\n      dup4\n        /* \"#utility.yul\":4558:4575   */\n      add\n        /* \"#utility.yul\":4549:4555   */\n      dup5\n        /* \"#utility.yul\":4487:4576   */\n      tag_117\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":4325:4583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4589:4666   */\n    tag_118:\n        /* \"#utility.yul\":4626:4633   */\n      0x00\n        /* \"#utility.yul\":4655:4660   */\n      dup2\n        /* \"#utility.yul\":4644:4660   */\n      swap1\n      pop\n        /* \"#utility.yul\":4589:4666   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4672:4794   */\n    tag_119:\n        /* \"#utility.yul\":4745:4769   */\n      tag_202\n        /* \"#utility.yul\":4763:4768   */\n      dup2\n        /* \"#utility.yul\":4745:4769   */\n      tag_118\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4738:4743   */\n      dup2\n        /* \"#utility.yul\":4735:4770   */\n      eq\n        /* \"#utility.yul\":4725:4788   */\n      tag_203\n      jumpi\n        /* \"#utility.yul\":4784:4785   */\n      0x00\n        /* \"#utility.yul\":4781:4782   */\n      0x00\n        /* \"#utility.yul\":4774:4786   */\n      revert\n        /* \"#utility.yul\":4725:4788   */\n    tag_203:\n        /* \"#utility.yul\":4672:4794   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4800:4939   */\n    tag_120:\n        /* \"#utility.yul\":4846:4851   */\n      0x00\n        /* \"#utility.yul\":4884:4890   */\n      dup2\n        /* \"#utility.yul\":4871:4891   */\n      calldataload\n        /* \"#utility.yul\":4862:4891   */\n      swap1\n      pop\n        /* \"#utility.yul\":4900:4933   */\n      tag_205\n        /* \"#utility.yul\":4927:4932   */\n      dup2\n        /* \"#utility.yul\":4900:4933   */\n      tag_119\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":4800:4939   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4945:5274   */\n    tag_23:\n        /* \"#utility.yul\":5004:5010   */\n      0x00\n        /* \"#utility.yul\":5053:5055   */\n      0x20\n        /* \"#utility.yul\":5041:5050   */\n      dup3\n        /* \"#utility.yul\":5032:5039   */\n      dup5\n        /* \"#utility.yul\":5028:5051   */\n      sub\n        /* \"#utility.yul\":5024:5056   */\n      slt\n        /* \"#utility.yul\":5021:5140   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":5059:5138   */\n      tag_208\n      tag_98\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":5021:5140   */\n    tag_207:\n        /* \"#utility.yul\":5179:5180   */\n      0x00\n        /* \"#utility.yul\":5204:5257   */\n      tag_209\n        /* \"#utility.yul\":5249:5256   */\n      dup5\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup6\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_120\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":5194:5257   */\n      swap2\n      pop\n        /* \"#utility.yul\":5150:5267   */\n      pop\n        /* \"#utility.yul\":4945:5274   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5280:5402   */\n    tag_121:\n        /* \"#utility.yul\":5353:5377   */\n      tag_211\n        /* \"#utility.yul\":5371:5376   */\n      dup2\n        /* \"#utility.yul\":5353:5377   */\n      tag_111\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":5346:5351   */\n      dup2\n        /* \"#utility.yul\":5343:5378   */\n      eq\n        /* \"#utility.yul\":5333:5396   */\n      tag_212\n      jumpi\n        /* \"#utility.yul\":5392:5393   */\n      0x00\n        /* \"#utility.yul\":5389:5390   */\n      0x00\n        /* \"#utility.yul\":5382:5394   */\n      revert\n        /* \"#utility.yul\":5333:5396   */\n    tag_212:\n        /* \"#utility.yul\":5280:5402   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5408:5547   */\n    tag_122:\n        /* \"#utility.yul\":5454:5459   */\n      0x00\n        /* \"#utility.yul\":5492:5498   */\n      dup2\n        /* \"#utility.yul\":5479:5499   */\n      calldataload\n        /* \"#utility.yul\":5470:5499   */\n      swap1\n      pop\n        /* \"#utility.yul\":5508:5541   */\n      tag_214\n        /* \"#utility.yul\":5535:5540   */\n      dup2\n        /* \"#utility.yul\":5508:5541   */\n      tag_121\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":5408:5547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5553:5882   */\n    tag_28:\n        /* \"#utility.yul\":5612:5618   */\n      0x00\n        /* \"#utility.yul\":5661:5663   */\n      0x20\n        /* \"#utility.yul\":5649:5658   */\n      dup3\n        /* \"#utility.yul\":5640:5647   */\n      dup5\n        /* \"#utility.yul\":5636:5659   */\n      sub\n        /* \"#utility.yul\":5632:5664   */\n      slt\n        /* \"#utility.yul\":5629:5748   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":5667:5746   */\n      tag_217\n      tag_98\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":5629:5748   */\n    tag_216:\n        /* \"#utility.yul\":5787:5788   */\n      0x00\n        /* \"#utility.yul\":5812:5865   */\n      tag_218\n        /* \"#utility.yul\":5857:5864   */\n      dup5\n        /* \"#utility.yul\":5848:5854   */\n      dup3\n        /* \"#utility.yul\":5837:5846   */\n      dup6\n        /* \"#utility.yul\":5833:5855   */\n      add\n        /* \"#utility.yul\":5812:5865   */\n      tag_122\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5802:5865   */\n      swap2\n      pop\n        /* \"#utility.yul\":5758:5875   */\n      pop\n        /* \"#utility.yul\":5553:5882   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5888:5987   */\n    tag_123:\n        /* \"#utility.yul\":5940:5946   */\n      0x00\n        /* \"#utility.yul\":5974:5979   */\n      dup2\n        /* \"#utility.yul\":5968:5980   */\n      mload\n        /* \"#utility.yul\":5958:5980   */\n      swap1\n      pop\n        /* \"#utility.yul\":5888:5987   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5993:6162   */\n    tag_124:\n        /* \"#utility.yul\":6077:6088   */\n      0x00\n        /* \"#utility.yul\":6111:6117   */\n      dup3\n        /* \"#utility.yul\":6106:6109   */\n      dup3\n        /* \"#utility.yul\":6099:6118   */\n      mstore\n        /* \"#utility.yul\":6151:6155   */\n      0x20\n        /* \"#utility.yul\":6146:6149   */\n      dup3\n        /* \"#utility.yul\":6142:6156   */\n      add\n        /* \"#utility.yul\":6127:6156   */\n      swap1\n      pop\n        /* \"#utility.yul\":5993:6162   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6168:6307   */\n    tag_125:\n        /* \"#utility.yul\":6257:6263   */\n      dup3\n        /* \"#utility.yul\":6252:6255   */\n      dup2\n        /* \"#utility.yul\":6247:6250   */\n      dup4\n        /* \"#utility.yul\":6241:6264   */\n      mcopy\n        /* \"#utility.yul\":6298:6299   */\n      0x00\n        /* \"#utility.yul\":6289:6295   */\n      dup4\n        /* \"#utility.yul\":6284:6287   */\n      dup4\n        /* \"#utility.yul\":6280:6296   */\n      add\n        /* \"#utility.yul\":6273:6300   */\n      mstore\n        /* \"#utility.yul\":6168:6307   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6313:6690   */\n    tag_126:\n        /* \"#utility.yul\":6401:6404   */\n      0x00\n        /* \"#utility.yul\":6429:6468   */\n      tag_223\n        /* \"#utility.yul\":6462:6467   */\n      dup3\n        /* \"#utility.yul\":6429:6468   */\n      tag_123\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":6484:6555   */\n      tag_224\n        /* \"#utility.yul\":6548:6554   */\n      dup2\n        /* \"#utility.yul\":6543:6546   */\n      dup6\n        /* \"#utility.yul\":6484:6555   */\n      tag_124\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":6477:6555   */\n      swap4\n      pop\n        /* \"#utility.yul\":6564:6629   */\n      tag_225\n        /* \"#utility.yul\":6622:6628   */\n      dup2\n        /* \"#utility.yul\":6617:6620   */\n      dup6\n        /* \"#utility.yul\":6610:6614   */\n      0x20\n        /* \"#utility.yul\":6603:6608   */\n      dup7\n        /* \"#utility.yul\":6599:6615   */\n      add\n        /* \"#utility.yul\":6564:6629   */\n      tag_125\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":6654:6683   */\n      tag_226\n        /* \"#utility.yul\":6676:6682   */\n      dup2\n        /* \"#utility.yul\":6654:6683   */\n      tag_102\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":6649:6652   */\n      dup5\n        /* \"#utility.yul\":6645:6684   */\n      add\n        /* \"#utility.yul\":6638:6684   */\n      swap2\n      pop\n        /* \"#utility.yul\":6405:6690   */\n      pop\n        /* \"#utility.yul\":6313:6690   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6696:7009   */\n    tag_32:\n        /* \"#utility.yul\":6809:6813   */\n      0x00\n        /* \"#utility.yul\":6847:6849   */\n      0x20\n        /* \"#utility.yul\":6836:6845   */\n      dup3\n        /* \"#utility.yul\":6832:6850   */\n      add\n        /* \"#utility.yul\":6824:6850   */\n      swap1\n      pop\n        /* \"#utility.yul\":6896:6905   */\n      dup2\n        /* \"#utility.yul\":6890:6894   */\n      dup2\n        /* \"#utility.yul\":6886:6906   */\n      sub\n        /* \"#utility.yul\":6882:6883   */\n      0x00\n        /* \"#utility.yul\":6871:6880   */\n      dup4\n        /* \"#utility.yul\":6867:6884   */\n      add\n        /* \"#utility.yul\":6860:6907   */\n      mstore\n        /* \"#utility.yul\":6924:7002   */\n      tag_228\n        /* \"#utility.yul\":6997:7001   */\n      dup2\n        /* \"#utility.yul\":6988:6994   */\n      dup5\n        /* \"#utility.yul\":6924:7002   */\n      tag_126\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":6916:7002   */\n      swap1\n      pop\n        /* \"#utility.yul\":6696:7009   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7015:7158   */\n    tag_127:\n        /* \"#utility.yul\":7072:7077   */\n      0x00\n        /* \"#utility.yul\":7103:7109   */\n      dup2\n        /* \"#utility.yul\":7097:7110   */\n      mload\n        /* \"#utility.yul\":7088:7110   */\n      swap1\n      pop\n        /* \"#utility.yul\":7119:7152   */\n      tag_230\n        /* \"#utility.yul\":7146:7151   */\n      dup2\n        /* \"#utility.yul\":7119:7152   */\n      tag_121\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":7015:7158   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7164:7515   */\n    tag_36:\n        /* \"#utility.yul\":7234:7240   */\n      0x00\n        /* \"#utility.yul\":7283:7285   */\n      0x20\n        /* \"#utility.yul\":7271:7280   */\n      dup3\n        /* \"#utility.yul\":7262:7269   */\n      dup5\n        /* \"#utility.yul\":7258:7281   */\n      sub\n        /* \"#utility.yul\":7254:7286   */\n      slt\n        /* \"#utility.yul\":7251:7370   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":7289:7368   */\n      tag_233\n      tag_98\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":7251:7370   */\n    tag_232:\n        /* \"#utility.yul\":7409:7410   */\n      0x00\n        /* \"#utility.yul\":7434:7498   */\n      tag_234\n        /* \"#utility.yul\":7490:7497   */\n      dup5\n        /* \"#utility.yul\":7481:7487   */\n      dup3\n        /* \"#utility.yul\":7470:7479   */\n      dup6\n        /* \"#utility.yul\":7466:7488   */\n      add\n        /* \"#utility.yul\":7434:7498   */\n      tag_127\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":7424:7498   */\n      swap2\n      pop\n        /* \"#utility.yul\":7380:7508   */\n      pop\n        /* \"#utility.yul\":7164:7515   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7521:7700   */\n    tag_128:\n        /* \"#utility.yul\":7661:7692   */\n      0x6d73672e73656e646572206973206e6f742065746620666163746f7279000000\n        /* \"#utility.yul\":7657:7658   */\n      0x00\n        /* \"#utility.yul\":7649:7655   */\n      dup3\n        /* \"#utility.yul\":7645:7659   */\n      add\n        /* \"#utility.yul\":7638:7693   */\n      mstore\n        /* \"#utility.yul\":7521:7700   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7706:8072   */\n    tag_129:\n        /* \"#utility.yul\":7848:7851   */\n      0x00\n        /* \"#utility.yul\":7869:7936   */\n      tag_237\n        /* \"#utility.yul\":7933:7935   */\n      0x1d\n        /* \"#utility.yul\":7928:7931   */\n      dup4\n        /* \"#utility.yul\":7869:7936   */\n      tag_124\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":7862:7936   */\n      swap2\n      pop\n        /* \"#utility.yul\":7945:8038   */\n      tag_238\n        /* \"#utility.yul\":8034:8037   */\n      dup3\n        /* \"#utility.yul\":7945:8038   */\n      tag_128\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":8063:8065   */\n      0x20\n        /* \"#utility.yul\":8058:8061   */\n      dup3\n        /* \"#utility.yul\":8054:8066   */\n      add\n        /* \"#utility.yul\":8047:8066   */\n      swap1\n      pop\n        /* \"#utility.yul\":7706:8072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8078:8497   */\n    tag_45:\n        /* \"#utility.yul\":8244:8248   */\n      0x00\n        /* \"#utility.yul\":8282:8284   */\n      0x20\n        /* \"#utility.yul\":8271:8280   */\n      dup3\n        /* \"#utility.yul\":8267:8285   */\n      add\n        /* \"#utility.yul\":8259:8285   */\n      swap1\n      pop\n        /* \"#utility.yul\":8331:8340   */\n      dup2\n        /* \"#utility.yul\":8325:8329   */\n      dup2\n        /* \"#utility.yul\":8321:8341   */\n      sub\n        /* \"#utility.yul\":8317:8318   */\n      0x00\n        /* \"#utility.yul\":8306:8315   */\n      dup4\n        /* \"#utility.yul\":8302:8319   */\n      add\n        /* \"#utility.yul\":8295:8342   */\n      mstore\n        /* \"#utility.yul\":8359:8490   */\n      tag_240\n        /* \"#utility.yul\":8485:8489   */\n      dup2\n        /* \"#utility.yul\":8359:8490   */\n      tag_129\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":8351:8490   */\n      swap1\n      pop\n        /* \"#utility.yul\":8078:8497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8503:8676   */\n    tag_130:\n        /* \"#utility.yul\":8643:8668   */\n      0x43616c6c6572206973206e6f7420746865206f776e6572000000000000000000\n        /* \"#utility.yul\":8639:8640   */\n      0x00\n        /* \"#utility.yul\":8631:8637   */\n      dup3\n        /* \"#utility.yul\":8627:8641   */\n      add\n        /* \"#utility.yul\":8620:8669   */\n      mstore\n        /* \"#utility.yul\":8503:8676   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8682:9048   */\n    tag_131:\n        /* \"#utility.yul\":8824:8827   */\n      0x00\n        /* \"#utility.yul\":8845:8912   */\n      tag_243\n        /* \"#utility.yul\":8909:8911   */\n      0x17\n        /* \"#utility.yul\":8904:8907   */\n      dup4\n        /* \"#utility.yul\":8845:8912   */\n      tag_124\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":8838:8912   */\n      swap2\n      pop\n        /* \"#utility.yul\":8921:9014   */\n      tag_244\n        /* \"#utility.yul\":9010:9013   */\n      dup3\n        /* \"#utility.yul\":8921:9014   */\n      tag_130\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":9039:9041   */\n      0x20\n        /* \"#utility.yul\":9034:9037   */\n      dup3\n        /* \"#utility.yul\":9030:9042   */\n      add\n        /* \"#utility.yul\":9023:9042   */\n      swap1\n      pop\n        /* \"#utility.yul\":8682:9048   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9054:9473   */\n    tag_63:\n        /* \"#utility.yul\":9220:9224   */\n      0x00\n        /* \"#utility.yul\":9258:9260   */\n      0x20\n        /* \"#utility.yul\":9247:9256   */\n      dup3\n        /* \"#utility.yul\":9243:9261   */\n      add\n        /* \"#utility.yul\":9235:9261   */\n      swap1\n      pop\n        /* \"#utility.yul\":9307:9316   */\n      dup2\n        /* \"#utility.yul\":9301:9305   */\n      dup2\n        /* \"#utility.yul\":9297:9317   */\n      sub\n        /* \"#utility.yul\":9293:9294   */\n      0x00\n        /* \"#utility.yul\":9282:9291   */\n      dup4\n        /* \"#utility.yul\":9278:9295   */\n      add\n        /* \"#utility.yul\":9271:9318   */\n      mstore\n        /* \"#utility.yul\":9335:9466   */\n      tag_246\n        /* \"#utility.yul\":9461:9465   */\n      dup2\n        /* \"#utility.yul\":9335:9466   */\n      tag_131\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":9327:9466   */\n      swap1\n      pop\n        /* \"#utility.yul\":9054:9473   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9479:9627   */\n    tag_132:\n        /* \"#utility.yul\":9581:9592   */\n      0x00\n        /* \"#utility.yul\":9618:9621   */\n      dup2\n        /* \"#utility.yul\":9603:9621   */\n      swap1\n      pop\n        /* \"#utility.yul\":9479:9627   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9633:9792   */\n    tag_133:\n        /* \"#utility.yul\":9773:9784   */\n      0x4554465f5641554c540000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9769:9770   */\n      0x00\n        /* \"#utility.yul\":9761:9767   */\n      dup3\n        /* \"#utility.yul\":9757:9771   */\n      add\n        /* \"#utility.yul\":9750:9785   */\n      mstore\n        /* \"#utility.yul\":9633:9792   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9798:10198   */\n    tag_134:\n        /* \"#utility.yul\":9958:9961   */\n      0x00\n        /* \"#utility.yul\":9979:10063   */\n      tag_250\n        /* \"#utility.yul\":10061:10062   */\n      0x09\n        /* \"#utility.yul\":10056:10059   */\n      dup4\n        /* \"#utility.yul\":9979:10063   */\n      tag_132\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":9972:10063   */\n      swap2\n      pop\n        /* \"#utility.yul\":10072:10165   */\n      tag_251\n        /* \"#utility.yul\":10161:10164   */\n      dup3\n        /* \"#utility.yul\":10072:10165   */\n      tag_133\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":10190:10191   */\n      0x09\n        /* \"#utility.yul\":10185:10188   */\n      dup3\n        /* \"#utility.yul\":10181:10192   */\n      add\n        /* \"#utility.yul\":10174:10192   */\n      swap1\n      pop\n        /* \"#utility.yul\":9798:10198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10204:10283   */\n    tag_135:\n        /* \"#utility.yul\":10243:10250   */\n      0x00\n        /* \"#utility.yul\":10272:10277   */\n      dup2\n        /* \"#utility.yul\":10261:10277   */\n      swap1\n      pop\n        /* \"#utility.yul\":10204:10283   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10289:10446   */\n    tag_136:\n        /* \"#utility.yul\":10394:10439   */\n      tag_254\n        /* \"#utility.yul\":10414:10438   */\n      tag_255\n        /* \"#utility.yul\":10432:10437   */\n      dup3\n        /* \"#utility.yul\":10414:10438   */\n      tag_118\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":10394:10439   */\n      tag_135\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":10389:10392   */\n      dup3\n        /* \"#utility.yul\":10382:10440   */\n      mstore\n        /* \"#utility.yul\":10289:10446   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10452:10974   */\n    tag_72:\n        /* \"#utility.yul\":10665:10668   */\n      0x00\n        /* \"#utility.yul\":10687:10835   */\n      tag_257\n        /* \"#utility.yul\":10831:10834   */\n      dup3\n        /* \"#utility.yul\":10687:10835   */\n      tag_134\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":10680:10835   */\n      swap2\n      pop\n        /* \"#utility.yul\":10845:10920   */\n      tag_258\n        /* \"#utility.yul\":10916:10919   */\n      dup3\n        /* \"#utility.yul\":10907:10913   */\n      dup5\n        /* \"#utility.yul\":10845:10920   */\n      tag_136\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":10945:10947   */\n      0x20\n        /* \"#utility.yul\":10940:10943   */\n      dup3\n        /* \"#utility.yul\":10936:10948   */\n      add\n        /* \"#utility.yul\":10929:10948   */\n      swap2\n      pop\n        /* \"#utility.yul\":10965:10968   */\n      dup2\n        /* \"#utility.yul\":10958:10968   */\n      swap1\n      pop\n        /* \"#utility.yul\":10452:10974   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10980:11162   */\n    tag_137:\n        /* \"#utility.yul\":11120:11154   */\n      0x4469726563746f72792063616e6e6f74206265207a65726f2061646472657373\n        /* \"#utility.yul\":11116:11117   */\n      0x00\n        /* \"#utility.yul\":11108:11114   */\n      dup3\n        /* \"#utility.yul\":11104:11118   */\n      add\n        /* \"#utility.yul\":11097:11155   */\n      mstore\n        /* \"#utility.yul\":10980:11162   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11168:11534   */\n    tag_138:\n        /* \"#utility.yul\":11310:11313   */\n      0x00\n        /* \"#utility.yul\":11331:11398   */\n      tag_261\n        /* \"#utility.yul\":11395:11397   */\n      0x20\n        /* \"#utility.yul\":11390:11393   */\n      dup4\n        /* \"#utility.yul\":11331:11398   */\n      tag_124\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":11324:11398   */\n      swap2\n      pop\n        /* \"#utility.yul\":11407:11500   */\n      tag_262\n        /* \"#utility.yul\":11496:11499   */\n      dup3\n        /* \"#utility.yul\":11407:11500   */\n      tag_137\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":11525:11527   */\n      0x20\n        /* \"#utility.yul\":11520:11523   */\n      dup3\n        /* \"#utility.yul\":11516:11528   */\n      add\n        /* \"#utility.yul\":11509:11528   */\n      swap1\n      pop\n        /* \"#utility.yul\":11168:11534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11540:11959   */\n    tag_79:\n        /* \"#utility.yul\":11706:11710   */\n      0x00\n        /* \"#utility.yul\":11744:11746   */\n      0x20\n        /* \"#utility.yul\":11733:11742   */\n      dup3\n        /* \"#utility.yul\":11729:11747   */\n      add\n        /* \"#utility.yul\":11721:11747   */\n      swap1\n      pop\n        /* \"#utility.yul\":11793:11802   */\n      dup2\n        /* \"#utility.yul\":11787:11791   */\n      dup2\n        /* \"#utility.yul\":11783:11803   */\n      sub\n        /* \"#utility.yul\":11779:11780   */\n      0x00\n        /* \"#utility.yul\":11768:11777   */\n      dup4\n        /* \"#utility.yul\":11764:11781   */\n      add\n        /* \"#utility.yul\":11757:11804   */\n      mstore\n        /* \"#utility.yul\":11821:11952   */\n      tag_264\n        /* \"#utility.yul\":11947:11951   */\n      dup2\n        /* \"#utility.yul\":11821:11952   */\n      tag_138\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":11813:11952   */\n      swap1\n      pop\n        /* \"#utility.yul\":11540:11959   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11965:12143   */\n    tag_139:\n        /* \"#utility.yul\":12105:12135   */\n      0x4469726563746f7279206d757374206265206120636f6e747261637400000000\n        /* \"#utility.yul\":12101:12102   */\n      0x00\n        /* \"#utility.yul\":12093:12099   */\n      dup3\n        /* \"#utility.yul\":12089:12103   */\n      add\n        /* \"#utility.yul\":12082:12136   */\n      mstore\n        /* \"#utility.yul\":11965:12143   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12149:12515   */\n    tag_140:\n        /* \"#utility.yul\":12291:12294   */\n      0x00\n        /* \"#utility.yul\":12312:12379   */\n      tag_267\n        /* \"#utility.yul\":12376:12378   */\n      0x1c\n        /* \"#utility.yul\":12371:12374   */\n      dup4\n        /* \"#utility.yul\":12312:12379   */\n      tag_124\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":12305:12379   */\n      swap2\n      pop\n        /* \"#utility.yul\":12388:12481   */\n      tag_268\n        /* \"#utility.yul\":12477:12480   */\n      dup3\n        /* \"#utility.yul\":12388:12481   */\n      tag_139\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":12506:12508   */\n      0x20\n        /* \"#utility.yul\":12501:12504   */\n      dup3\n        /* \"#utility.yul\":12497:12509   */\n      add\n        /* \"#utility.yul\":12490:12509   */\n      swap1\n      pop\n        /* \"#utility.yul\":12149:12515   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12521:12940   */\n    tag_82:\n        /* \"#utility.yul\":12687:12691   */\n      0x00\n        /* \"#utility.yul\":12725:12727   */\n      0x20\n        /* \"#utility.yul\":12714:12723   */\n      dup3\n        /* \"#utility.yul\":12710:12728   */\n      add\n        /* \"#utility.yul\":12702:12728   */\n      swap1\n      pop\n        /* \"#utility.yul\":12774:12783   */\n      dup2\n        /* \"#utility.yul\":12768:12772   */\n      dup2\n        /* \"#utility.yul\":12764:12784   */\n      sub\n        /* \"#utility.yul\":12760:12761   */\n      0x00\n        /* \"#utility.yul\":12749:12758   */\n      dup4\n        /* \"#utility.yul\":12745:12762   */\n      add\n        /* \"#utility.yul\":12738:12785   */\n      mstore\n        /* \"#utility.yul\":12802:12933   */\n      tag_270\n        /* \"#utility.yul\":12928:12932   */\n      dup2\n        /* \"#utility.yul\":12802:12933   */\n      tag_140\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":12794:12933   */\n      swap1\n      pop\n        /* \"#utility.yul\":12521:12940   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12946:13177   */\n    tag_141:\n        /* \"#utility.yul\":13086:13120   */\n      0x4469726563746f7279206164647265737320646f6573206e6f7420696d706c65\n        /* \"#utility.yul\":13082:13083   */\n      0x00\n        /* \"#utility.yul\":13074:13080   */\n      dup3\n        /* \"#utility.yul\":13070:13084   */\n      add\n        /* \"#utility.yul\":13063:13121   */\n      mstore\n        /* \"#utility.yul\":13155:13169   */\n      0x6d656e74206f776e657228290000000000000000000000000000000000000000\n        /* \"#utility.yul\":13150:13152   */\n      0x20\n        /* \"#utility.yul\":13142:13148   */\n      dup3\n        /* \"#utility.yul\":13138:13153   */\n      add\n        /* \"#utility.yul\":13131:13170   */\n      mstore\n        /* \"#utility.yul\":12946:13177   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13183:13549   */\n    tag_142:\n        /* \"#utility.yul\":13325:13328   */\n      0x00\n        /* \"#utility.yul\":13346:13413   */\n      tag_273\n        /* \"#utility.yul\":13410:13412   */\n      0x2c\n        /* \"#utility.yul\":13405:13408   */\n      dup4\n        /* \"#utility.yul\":13346:13413   */\n      tag_124\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":13339:13413   */\n      swap2\n      pop\n        /* \"#utility.yul\":13422:13515   */\n      tag_274\n        /* \"#utility.yul\":13511:13514   */\n      dup3\n        /* \"#utility.yul\":13422:13515   */\n      tag_141\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":13540:13542   */\n      0x40\n        /* \"#utility.yul\":13535:13538   */\n      dup3\n        /* \"#utility.yul\":13531:13543   */\n      add\n        /* \"#utility.yul\":13524:13543   */\n      swap1\n      pop\n        /* \"#utility.yul\":13183:13549   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13555:13974   */\n    tag_90:\n        /* \"#utility.yul\":13721:13725   */\n      0x00\n        /* \"#utility.yul\":13759:13761   */\n      0x20\n        /* \"#utility.yul\":13748:13757   */\n      dup3\n        /* \"#utility.yul\":13744:13762   */\n      add\n        /* \"#utility.yul\":13736:13762   */\n      swap1\n      pop\n        /* \"#utility.yul\":13808:13817   */\n      dup2\n        /* \"#utility.yul\":13802:13806   */\n      dup2\n        /* \"#utility.yul\":13798:13818   */\n      sub\n        /* \"#utility.yul\":13794:13795   */\n      0x00\n        /* \"#utility.yul\":13783:13792   */\n      dup4\n        /* \"#utility.yul\":13779:13796   */\n      add\n        /* \"#utility.yul\":13772:13819   */\n      mstore\n        /* \"#utility.yul\":13836:13967   */\n      tag_276\n        /* \"#utility.yul\":13962:13966   */\n      dup2\n        /* \"#utility.yul\":13836:13967   */\n      tag_142\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":13828:13967   */\n      swap1\n      pop\n        /* \"#utility.yul\":13555:13974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13980:14098   */\n    tag_143:\n        /* \"#utility.yul\":14067:14091   */\n      tag_278\n        /* \"#utility.yul\":14085:14090   */\n      dup2\n        /* \"#utility.yul\":14067:14091   */\n      tag_118\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":14062:14065   */\n      dup3\n        /* \"#utility.yul\":14055:14092   */\n      mstore\n        /* \"#utility.yul\":13980:14098   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14104:14436   */\n    tag_95:\n        /* \"#utility.yul\":14225:14229   */\n      0x00\n        /* \"#utility.yul\":14263:14265   */\n      0x40\n        /* \"#utility.yul\":14252:14261   */\n      dup3\n        /* \"#utility.yul\":14248:14266   */\n      add\n        /* \"#utility.yul\":14240:14266   */\n      swap1\n      pop\n        /* \"#utility.yul\":14276:14347   */\n      tag_280\n        /* \"#utility.yul\":14344:14345   */\n      0x00\n        /* \"#utility.yul\":14333:14342   */\n      dup4\n        /* \"#utility.yul\":14329:14346   */\n      add\n        /* \"#utility.yul\":14320:14326   */\n      dup6\n        /* \"#utility.yul\":14276:14347   */\n      tag_143\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":14357:14429   */\n      tag_281\n        /* \"#utility.yul\":14425:14427   */\n      0x20\n        /* \"#utility.yul\":14414:14423   */\n      dup4\n        /* \"#utility.yul\":14410:14428   */\n      add\n        /* \"#utility.yul\":14401:14407   */\n      dup5\n        /* \"#utility.yul\":14357:14429   */\n      tag_143\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":14104:14436   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202eefded312626630f732611bd09e6bda2091d58bb8059b3938cd15f48ead823364736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_548": {
									"entryPoint": null,
									"id": 548,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_801": {
									"entryPoint": null,
									"id": 801,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setDirectory_608": {
									"entryPoint": 72,
									"id": 608,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af": {
									"entryPoint": 866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4374:7",
										"nodeType": "YulBlock",
										"src": "0:4374:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "922:274:7",
													"nodeType": "YulBlock",
													"src": "922:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:7",
																"nodeType": "YulBlock",
																"src": "968:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:7"
																			},
																			"nativeSrc": "970:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:7"
																		},
																		"nativeSrc": "970:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:7"
																		},
																		"nativeSrc": "939:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:7",
																		"nodeType": "YulLiteral",
																		"src": "964:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:7"
																},
																"nativeSrc": "935:32:7",
																"nodeType": "YulFunctionCall",
																"src": "935:32:7"
															},
															"nativeSrc": "932:119:7",
															"nodeType": "YulIf",
															"src": "932:119:7"
														},
														{
															"nativeSrc": "1061:128:7",
															"nodeType": "YulBlock",
															"src": "1061:128:7",
															"statements": [
																{
																	"nativeSrc": "1076:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:7"
																				},
																				"nativeSrc": "1147:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:7"
																		},
																		"nativeSrc": "1115:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:7",
														"nodeType": "YulTypedName",
														"src": "892:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:7",
														"nodeType": "YulTypedName",
														"src": "903:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:7",
														"nodeType": "YulTypedName",
														"src": "915:6:7",
														"type": ""
													}
												],
												"src": "845:351:7"
											},
											{
												"body": {
													"nativeSrc": "1298:73:7",
													"nodeType": "YulBlock",
													"src": "1298:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1315:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1315:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1320:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1320:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1308:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1308:6:7"
																},
																"nativeSrc": "1308:19:7",
																"nodeType": "YulFunctionCall",
																"src": "1308:19:7"
															},
															"nativeSrc": "1308:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "1308:19:7"
														},
														{
															"nativeSrc": "1336:29:7",
															"nodeType": "YulAssignment",
															"src": "1336:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1355:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1355:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1360:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1360:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1351:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1351:3:7"
																},
																"nativeSrc": "1351:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1351:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1336:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "1336:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1202:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1270:3:7",
														"nodeType": "YulTypedName",
														"src": "1270:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1286:11:7",
														"nodeType": "YulTypedName",
														"src": "1286:11:7",
														"type": ""
													}
												],
												"src": "1202:169:7"
											},
											{
												"body": {
													"nativeSrc": "1483:76:7",
													"nodeType": "YulBlock",
													"src": "1483:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1505:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1505:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1513:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1513:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1501:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1501:3:7"
																		},
																		"nativeSrc": "1501:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1501:14:7"
																	},
																	{
																		"hexValue": "4469726563746f72792063616e6e6f74206265207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "1517:34:7",
																		"nodeType": "YulLiteral",
																		"src": "1517:34:7",
																		"type": "",
																		"value": "Directory cannot be zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1494:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1494:6:7"
																},
																"nativeSrc": "1494:58:7",
																"nodeType": "YulFunctionCall",
																"src": "1494:58:7"
															},
															"nativeSrc": "1494:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "1494:58:7"
														}
													]
												},
												"name": "store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
												"nativeSrc": "1377:182:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1475:6:7",
														"nodeType": "YulTypedName",
														"src": "1475:6:7",
														"type": ""
													}
												],
												"src": "1377:182:7"
											},
											{
												"body": {
													"nativeSrc": "1711:220:7",
													"nodeType": "YulBlock",
													"src": "1711:220:7",
													"statements": [
														{
															"nativeSrc": "1721:74:7",
															"nodeType": "YulAssignment",
															"src": "1721:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1787:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1787:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1792:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1792:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1728:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "1728:58:7"
																},
																"nativeSrc": "1728:67:7",
																"nodeType": "YulFunctionCall",
																"src": "1728:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1721:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1721:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1893:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1893:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
																	"nativeSrc": "1804:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "1804:88:7"
																},
																"nativeSrc": "1804:93:7",
																"nodeType": "YulFunctionCall",
																"src": "1804:93:7"
															},
															"nativeSrc": "1804:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "1804:93:7"
														},
														{
															"nativeSrc": "1906:19:7",
															"nodeType": "YulAssignment",
															"src": "1906:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1917:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1917:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1922:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1922:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1913:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1913:3:7"
																},
																"nativeSrc": "1913:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1913:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1906:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1906:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1565:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1699:3:7",
														"nodeType": "YulTypedName",
														"src": "1699:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1707:3:7",
														"nodeType": "YulTypedName",
														"src": "1707:3:7",
														"type": ""
													}
												],
												"src": "1565:366:7"
											},
											{
												"body": {
													"nativeSrc": "2108:248:7",
													"nodeType": "YulBlock",
													"src": "2108:248:7",
													"statements": [
														{
															"nativeSrc": "2118:26:7",
															"nodeType": "YulAssignment",
															"src": "2118:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2130:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2130:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2141:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2141:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2126:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2126:3:7"
																},
																"nativeSrc": "2126:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2126:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2118:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2118:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2165:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2165:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2176:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2176:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2161:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2161:3:7"
																		},
																		"nativeSrc": "2161:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2161:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2184:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2184:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2190:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2190:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2180:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2180:3:7"
																		},
																		"nativeSrc": "2180:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2180:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2154:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2154:6:7"
																},
																"nativeSrc": "2154:47:7",
																"nodeType": "YulFunctionCall",
																"src": "2154:47:7"
															},
															"nativeSrc": "2154:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "2154:47:7"
														},
														{
															"nativeSrc": "2210:139:7",
															"nodeType": "YulAssignment",
															"src": "2210:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2344:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2344:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2218:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "2218:124:7"
																},
																"nativeSrc": "2218:131:7",
																"nodeType": "YulFunctionCall",
																"src": "2218:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2210:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2210:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1937:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2088:9:7",
														"nodeType": "YulTypedName",
														"src": "2088:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2103:4:7",
														"nodeType": "YulTypedName",
														"src": "2103:4:7",
														"type": ""
													}
												],
												"src": "1937:419:7"
											},
											{
												"body": {
													"nativeSrc": "2468:72:7",
													"nodeType": "YulBlock",
													"src": "2468:72:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2490:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2490:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2498:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2498:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2486:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2486:3:7"
																		},
																		"nativeSrc": "2486:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2486:14:7"
																	},
																	{
																		"hexValue": "4469726563746f7279206d757374206265206120636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "2502:30:7",
																		"nodeType": "YulLiteral",
																		"src": "2502:30:7",
																		"type": "",
																		"value": "Directory must be a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2479:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2479:6:7"
																},
																"nativeSrc": "2479:54:7",
																"nodeType": "YulFunctionCall",
																"src": "2479:54:7"
															},
															"nativeSrc": "2479:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "2479:54:7"
														}
													]
												},
												"name": "store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
												"nativeSrc": "2362:178:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2460:6:7",
														"nodeType": "YulTypedName",
														"src": "2460:6:7",
														"type": ""
													}
												],
												"src": "2362:178:7"
											},
											{
												"body": {
													"nativeSrc": "2692:220:7",
													"nodeType": "YulBlock",
													"src": "2692:220:7",
													"statements": [
														{
															"nativeSrc": "2702:74:7",
															"nodeType": "YulAssignment",
															"src": "2702:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2768:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2768:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2773:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2773:2:7",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2709:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "2709:58:7"
																},
																"nativeSrc": "2709:67:7",
																"nodeType": "YulFunctionCall",
																"src": "2709:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2702:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2702:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2874:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2874:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
																	"nativeSrc": "2785:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "2785:88:7"
																},
																"nativeSrc": "2785:93:7",
																"nodeType": "YulFunctionCall",
																"src": "2785:93:7"
															},
															"nativeSrc": "2785:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "2785:93:7"
														},
														{
															"nativeSrc": "2887:19:7",
															"nodeType": "YulAssignment",
															"src": "2887:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2898:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2898:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2903:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2903:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2894:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2894:3:7"
																},
																"nativeSrc": "2894:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2894:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2887:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2887:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2546:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2680:3:7",
														"nodeType": "YulTypedName",
														"src": "2680:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2688:3:7",
														"nodeType": "YulTypedName",
														"src": "2688:3:7",
														"type": ""
													}
												],
												"src": "2546:366:7"
											},
											{
												"body": {
													"nativeSrc": "3089:248:7",
													"nodeType": "YulBlock",
													"src": "3089:248:7",
													"statements": [
														{
															"nativeSrc": "3099:26:7",
															"nodeType": "YulAssignment",
															"src": "3099:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3111:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3122:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3107:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:7"
																},
																"nativeSrc": "3107:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3107:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3099:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3146:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3146:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3157:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3157:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3142:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3142:3:7"
																		},
																		"nativeSrc": "3142:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3142:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3165:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3165:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3171:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3171:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3161:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3161:3:7"
																		},
																		"nativeSrc": "3161:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3161:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3135:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3135:6:7"
																},
																"nativeSrc": "3135:47:7",
																"nodeType": "YulFunctionCall",
																"src": "3135:47:7"
															},
															"nativeSrc": "3135:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "3135:47:7"
														},
														{
															"nativeSrc": "3191:139:7",
															"nodeType": "YulAssignment",
															"src": "3191:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3325:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3325:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3199:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "3199:124:7"
																},
																"nativeSrc": "3199:131:7",
																"nodeType": "YulFunctionCall",
																"src": "3199:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3191:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3191:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2918:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3069:9:7",
														"nodeType": "YulTypedName",
														"src": "3069:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3084:4:7",
														"nodeType": "YulTypedName",
														"src": "3084:4:7",
														"type": ""
													}
												],
												"src": "2918:419:7"
											},
											{
												"body": {
													"nativeSrc": "3449:125:7",
													"nodeType": "YulBlock",
													"src": "3449:125:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3471:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3471:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3479:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3479:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3467:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3467:3:7"
																		},
																		"nativeSrc": "3467:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3467:14:7"
																	},
																	{
																		"hexValue": "4469726563746f7279206164647265737320646f6573206e6f7420696d706c65",
																		"kind": "string",
																		"nativeSrc": "3483:34:7",
																		"nodeType": "YulLiteral",
																		"src": "3483:34:7",
																		"type": "",
																		"value": "Directory address does not imple"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3460:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3460:6:7"
																},
																"nativeSrc": "3460:58:7",
																"nodeType": "YulFunctionCall",
																"src": "3460:58:7"
															},
															"nativeSrc": "3460:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "3460:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3539:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3539:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3547:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3547:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3535:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3535:3:7"
																		},
																		"nativeSrc": "3535:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3535:15:7"
																	},
																	{
																		"hexValue": "6d656e74206f776e65722829",
																		"kind": "string",
																		"nativeSrc": "3552:14:7",
																		"nodeType": "YulLiteral",
																		"src": "3552:14:7",
																		"type": "",
																		"value": "ment owner()"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3528:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3528:6:7"
																},
																"nativeSrc": "3528:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3528:39:7"
															},
															"nativeSrc": "3528:39:7",
															"nodeType": "YulExpressionStatement",
															"src": "3528:39:7"
														}
													]
												},
												"name": "store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
												"nativeSrc": "3343:231:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3441:6:7",
														"nodeType": "YulTypedName",
														"src": "3441:6:7",
														"type": ""
													}
												],
												"src": "3343:231:7"
											},
											{
												"body": {
													"nativeSrc": "3726:220:7",
													"nodeType": "YulBlock",
													"src": "3726:220:7",
													"statements": [
														{
															"nativeSrc": "3736:74:7",
															"nodeType": "YulAssignment",
															"src": "3736:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3802:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3802:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3807:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3807:2:7",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3743:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "3743:58:7"
																},
																"nativeSrc": "3743:67:7",
																"nodeType": "YulFunctionCall",
																"src": "3743:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3736:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3736:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3908:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3908:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
																	"nativeSrc": "3819:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "3819:88:7"
																},
																"nativeSrc": "3819:93:7",
																"nodeType": "YulFunctionCall",
																"src": "3819:93:7"
															},
															"nativeSrc": "3819:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "3819:93:7"
														},
														{
															"nativeSrc": "3921:19:7",
															"nodeType": "YulAssignment",
															"src": "3921:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3932:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3932:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3937:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3937:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3928:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3928:3:7"
																},
																"nativeSrc": "3928:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3928:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3921:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3921:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3580:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3714:3:7",
														"nodeType": "YulTypedName",
														"src": "3714:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3722:3:7",
														"nodeType": "YulTypedName",
														"src": "3722:3:7",
														"type": ""
													}
												],
												"src": "3580:366:7"
											},
											{
												"body": {
													"nativeSrc": "4123:248:7",
													"nodeType": "YulBlock",
													"src": "4123:248:7",
													"statements": [
														{
															"nativeSrc": "4133:26:7",
															"nodeType": "YulAssignment",
															"src": "4133:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4145:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4145:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4156:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4156:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4141:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4141:3:7"
																},
																"nativeSrc": "4141:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4141:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4133:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4133:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4180:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4180:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4191:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4191:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4176:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4176:3:7"
																		},
																		"nativeSrc": "4176:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4176:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4199:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4199:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4205:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4205:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4195:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4195:3:7"
																		},
																		"nativeSrc": "4195:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4195:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4169:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4169:6:7"
																},
																"nativeSrc": "4169:47:7",
																"nodeType": "YulFunctionCall",
																"src": "4169:47:7"
															},
															"nativeSrc": "4169:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "4169:47:7"
														},
														{
															"nativeSrc": "4225:139:7",
															"nodeType": "YulAssignment",
															"src": "4225:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4359:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4359:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4233:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "4233:124:7"
																},
																"nativeSrc": "4233:131:7",
																"nodeType": "YulFunctionCall",
																"src": "4233:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4225:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3952:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4103:9:7",
														"nodeType": "YulTypedName",
														"src": "4103:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4118:4:7",
														"nodeType": "YulTypedName",
														"src": "4118:4:7",
														"type": ""
													}
												],
												"src": "3952:419:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory cannot be zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory must be a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory address does not imple\")\n\n        mstore(add(memPtr, 32), \"ment owner()\")\n\n    }\n\n    function abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060405161136038038061136083398181016040528101906100319190610257565b806100418161004860201b60201c565b50506103f0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ad906102dc565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff163b1161010f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010690610344565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561017757506040513d601f19601f820116820180604052508101906101749190610257565b60015b6101b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ad906103d2565b60405180910390fd5b815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610226826101fd565b9050919050565b6102368161021c565b8114610240575f5ffd5b50565b5f815190506102518161022d565b92915050565b5f6020828403121561026c5761026b6101f9565b5b5f61027984828501610243565b91505092915050565b5f82825260208201905092915050565b7f4469726563746f72792063616e6e6f74206265207a65726f20616464726573735f82015250565b5f6102c6602083610282565b91506102d182610292565b602082019050919050565b5f6020820190508181035f8301526102f3816102ba565b9050919050565b7f4469726563746f7279206d757374206265206120636f6e7472616374000000005f82015250565b5f61032e601c83610282565b9150610339826102fa565b602082019050919050565b5f6020820190508181035f83015261035b81610322565b9050919050565b7f4469726563746f7279206164647265737320646f6573206e6f7420696d706c655f8201527f6d656e74206f776e657228290000000000000000000000000000000000000000602082015250565b5f6103bc602c83610282565b91506103c782610362565b604082019050919050565b5f6020820190508181035f8301526103e9816103b0565b9050919050565b610f63806103fd5f395ff3fe608060405234801561000f575f5ffd5b5060043610610055575f3560e01c80632726261814610059578063658a847a146100895780638da5cb5b146100a7578063b57c59a7146100c5578063ba4c7be1146100f5575b5f5ffd5b610073600480360381019061006e91906109ab565b610111565b6040516100809190610a31565b60405180910390f35b6100916101b1565b60405161009e9190610aa5565b60405180910390f35b6100af6101d5565b6040516100bc9190610a31565b60405180910390f35b6100df60048036038101906100da9190610af1565b610268565b6040516100ec9190610a31565b60405180910390f35b61010f600480360381019061010a9190610b46565b6103bf565b005b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327262618836040518263ffffffff1660e01b815260040161016b9190610bd1565b602060405180830381865afa158015610186573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101aa9190610c05565b9050919050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561023f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102639190610c05565b905090565b5f6102a76040518060400160405280600b81526020017f6574662d666163746f7279000000000000000000000000000000000000000000815250610111565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610314576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030b90610c7a565b60405180910390fd5b5f61031d6104c5565b90506103318161032c85610573565b6105a2565b91508173ffffffffffffffffffffffffffffffffffffffff1663c4d66de85f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161038c9190610a31565b5f604051808303815f87803b1580156103a3575f5ffd5b505af11580156103b5573d5f5f3e3d5ffd5b5050505050919050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610428573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061044c9190610c05565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090610ce2565b60405180910390fd5b6104c2816105b6565b50565b5f5f6105056040518060400160405280600e81526020017f6574662d7661756c742d696d706c000000000000000000000000000000000000815250610111565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361056c576040517f8020a5c700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8091505090565b5f816040516020016105859190610d74565b604051602081830303815290604052805190602001209050919050565b5f6105ae83835f610767565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061b90610de3565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff163b1161067d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067490610e4b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156106e557506040513d601f19601f820116820180604052508101906106e29190610c05565b60015b610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071b90610ed9565b60405180910390fd5b815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b5f814710156107af5747826040517fcf4791810000000000000000000000000000000000000000000000000000000081526004016107a6929190610f06565b60405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008460601b60e81c175f526e5af43d82803e903d91602b57fd5bf38460781b17602052826037600984f590505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610857576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6108bd82610877565b810181811067ffffffffffffffff821117156108dc576108db610887565b5b80604052505050565b5f6108ee61085e565b90506108fa82826108b4565b919050565b5f67ffffffffffffffff82111561091957610918610887565b5b61092282610877565b9050602081019050919050565b828183375f83830152505050565b5f61094f61094a846108ff565b6108e5565b90508281526020810184848401111561096b5761096a610873565b5b61097684828561092f565b509392505050565b5f82601f8301126109925761099161086f565b5b81356109a284826020860161093d565b91505092915050565b5f602082840312156109c0576109bf610867565b5b5f82013567ffffffffffffffff8111156109dd576109dc61086b565b5b6109e98482850161097e565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a1b826109f2565b9050919050565b610a2b81610a11565b82525050565b5f602082019050610a445f830184610a22565b92915050565b5f819050919050565b5f610a6d610a68610a63846109f2565b610a4a565b6109f2565b9050919050565b5f610a7e82610a53565b9050919050565b5f610a8f82610a74565b9050919050565b610a9f81610a85565b82525050565b5f602082019050610ab85f830184610a96565b92915050565b5f819050919050565b610ad081610abe565b8114610ada575f5ffd5b50565b5f81359050610aeb81610ac7565b92915050565b5f60208284031215610b0657610b05610867565b5b5f610b1384828501610add565b91505092915050565b610b2581610a11565b8114610b2f575f5ffd5b50565b5f81359050610b4081610b1c565b92915050565b5f60208284031215610b5b57610b5a610867565b5b5f610b6884828501610b32565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f610ba382610b71565b610bad8185610b7b565b9350610bbd818560208601610b8b565b610bc681610877565b840191505092915050565b5f6020820190508181035f830152610be98184610b99565b905092915050565b5f81519050610bff81610b1c565b92915050565b5f60208284031215610c1a57610c19610867565b5b5f610c2784828501610bf1565b91505092915050565b7f6d73672e73656e646572206973206e6f742065746620666163746f72790000005f82015250565b5f610c64601d83610b7b565b9150610c6f82610c30565b602082019050919050565b5f6020820190508181035f830152610c9181610c58565b9050919050565b7f43616c6c6572206973206e6f7420746865206f776e65720000000000000000005f82015250565b5f610ccc601783610b7b565b9150610cd782610c98565b602082019050919050565b5f6020820190508181035f830152610cf981610cc0565b9050919050565b5f81905092915050565b7f4554465f5641554c5400000000000000000000000000000000000000000000005f82015250565b5f610d3e600983610d00565b9150610d4982610d0a565b600982019050919050565b5f819050919050565b610d6e610d6982610abe565b610d54565b82525050565b5f610d7e82610d32565b9150610d8a8284610d5d565b60208201915081905092915050565b7f4469726563746f72792063616e6e6f74206265207a65726f20616464726573735f82015250565b5f610dcd602083610b7b565b9150610dd882610d99565b602082019050919050565b5f6020820190508181035f830152610dfa81610dc1565b9050919050565b7f4469726563746f7279206d757374206265206120636f6e7472616374000000005f82015250565b5f610e35601c83610b7b565b9150610e4082610e01565b602082019050919050565b5f6020820190508181035f830152610e6281610e29565b9050919050565b7f4469726563746f7279206164647265737320646f6573206e6f7420696d706c655f8201527f6d656e74206f776e657228290000000000000000000000000000000000000000602082015250565b5f610ec3602c83610b7b565b9150610ece82610e69565b604082019050919050565b5f6020820190508181035f830152610ef081610eb7565b9050919050565b610f0081610abe565b82525050565b5f604082019050610f195f830185610ef7565b610f266020830184610ef7565b939250505056fea26469706673582212202eefded312626630f732611bd09e6bda2091d58bb8059b3938cd15f48ead823364736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1360 CODESIZE SUB DUP1 PUSH2 0x1360 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x257 JUMP JUMPDEST DUP1 PUSH2 0x41 DUP2 PUSH2 0x48 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x3F0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD SWAP1 PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT PUSH2 0x10F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP1 PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x177 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x257 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD SWAP1 PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x226 DUP3 PUSH2 0x1FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x236 DUP2 PUSH2 0x21C JUMP JUMPDEST DUP2 EQ PUSH2 0x240 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x251 DUP2 PUSH2 0x22D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26C JUMPI PUSH2 0x26B PUSH2 0x1F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x279 DUP5 DUP3 DUP6 ADD PUSH2 0x243 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4469726563746F72792063616E6E6F74206265207A65726F2061646472657373 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C6 PUSH1 0x20 DUP4 PUSH2 0x282 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D1 DUP3 PUSH2 0x292 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F3 DUP2 PUSH2 0x2BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206D757374206265206120636F6E747261637400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x32E PUSH1 0x1C DUP4 PUSH2 0x282 JUMP JUMPDEST SWAP2 POP PUSH2 0x339 DUP3 PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x35B DUP2 PUSH2 0x322 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206164647265737320646F6573206E6F7420696D706C65 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D656E74206F776E657228290000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3BC PUSH1 0x2C DUP4 PUSH2 0x282 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C7 DUP3 PUSH2 0x362 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3E9 DUP2 PUSH2 0x3B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF63 DUP1 PUSH2 0x3FD PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27262618 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x658A847A EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0xB57C59A7 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xBA4C7BE1 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x9AB JUMP JUMPDEST PUSH2 0x111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0xA31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH2 0x1B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0xAA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0xA31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xA31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10A SWAP2 SWAP1 PUSH2 0xB46 JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x27262618 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0xBD1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x186 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xC05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0xC05 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x2A7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6574662D666163746F7279000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x111 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30B SWAP1 PUSH2 0xC7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x31D PUSH2 0x4C5 JUMP JUMPDEST SWAP1 POP PUSH2 0x331 DUP2 PUSH2 0x32C DUP6 PUSH2 0x573 JUMP JUMPDEST PUSH2 0x5A2 JUMP JUMPDEST SWAP2 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC4D66DE8 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA31 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B5 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x428 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x44C SWAP2 SWAP1 PUSH2 0xC05 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B0 SWAP1 PUSH2 0xCE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4C2 DUP2 PUSH2 0x5B6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x505 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6574662D7661756C742D696D706C000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x111 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x56C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8020A5C700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x585 SWAP2 SWAP1 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5AE DUP4 DUP4 PUSH0 PUSH2 0x767 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61B SWAP1 PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x674 SWAP1 PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x6E5 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x724 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71B SWAP1 PUSH2 0xED9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x7AF JUMPI SELFBALANCE DUP3 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A6 SWAP3 SWAP2 SWAP1 PUSH2 0xF06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP5 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP5 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE DUP3 PUSH1 0x37 PUSH1 0x9 DUP5 CREATE2 SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x857 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06EBF3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x8BD DUP3 PUSH2 0x877 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x8DC JUMPI PUSH2 0x8DB PUSH2 0x887 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8EE PUSH2 0x85E JUMP JUMPDEST SWAP1 POP PUSH2 0x8FA DUP3 DUP3 PUSH2 0x8B4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x919 JUMPI PUSH2 0x918 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH2 0x922 DUP3 PUSH2 0x877 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x94F PUSH2 0x94A DUP5 PUSH2 0x8FF JUMP JUMPDEST PUSH2 0x8E5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x96B JUMPI PUSH2 0x96A PUSH2 0x873 JUMP JUMPDEST JUMPDEST PUSH2 0x976 DUP5 DUP3 DUP6 PUSH2 0x92F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x992 JUMPI PUSH2 0x991 PUSH2 0x86F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9A2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x93D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C0 JUMPI PUSH2 0x9BF PUSH2 0x867 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9DD JUMPI PUSH2 0x9DC PUSH2 0x86B JUMP JUMPDEST JUMPDEST PUSH2 0x9E9 DUP5 DUP3 DUP6 ADD PUSH2 0x97E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA1B DUP3 PUSH2 0x9F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA2B DUP2 PUSH2 0xA11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA44 PUSH0 DUP4 ADD DUP5 PUSH2 0xA22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA6D PUSH2 0xA68 PUSH2 0xA63 DUP5 PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST PUSH2 0x9F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA7E DUP3 PUSH2 0xA53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA8F DUP3 PUSH2 0xA74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9F DUP2 PUSH2 0xA85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAB8 PUSH0 DUP4 ADD DUP5 PUSH2 0xA96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD0 DUP2 PUSH2 0xABE JUMP JUMPDEST DUP2 EQ PUSH2 0xADA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAEB DUP2 PUSH2 0xAC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB06 JUMPI PUSH2 0xB05 PUSH2 0x867 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB13 DUP5 DUP3 DUP6 ADD PUSH2 0xADD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB25 DUP2 PUSH2 0xA11 JUMP JUMPDEST DUP2 EQ PUSH2 0xB2F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB40 DUP2 PUSH2 0xB1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB5B JUMPI PUSH2 0xB5A PUSH2 0x867 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB68 DUP5 DUP3 DUP6 ADD PUSH2 0xB32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBA3 DUP3 PUSH2 0xB71 JUMP JUMPDEST PUSH2 0xBAD DUP2 DUP6 PUSH2 0xB7B JUMP JUMPDEST SWAP4 POP PUSH2 0xBBD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB8B JUMP JUMPDEST PUSH2 0xBC6 DUP2 PUSH2 0x877 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBE9 DUP2 DUP5 PUSH2 0xB99 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBFF DUP2 PUSH2 0xB1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC1A JUMPI PUSH2 0xC19 PUSH2 0x867 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC27 DUP5 DUP3 DUP6 ADD PUSH2 0xBF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6D73672E73656E646572206973206E6F742065746620666163746F7279000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC64 PUSH1 0x1D DUP4 PUSH2 0xB7B JUMP JUMPDEST SWAP2 POP PUSH2 0xC6F DUP3 PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC91 DUP2 PUSH2 0xC58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420746865206F776E6572000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCCC PUSH1 0x17 DUP4 PUSH2 0xB7B JUMP JUMPDEST SWAP2 POP PUSH2 0xCD7 DUP3 PUSH2 0xC98 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCF9 DUP2 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4554465F5641554C540000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD3E PUSH1 0x9 DUP4 PUSH2 0xD00 JUMP JUMPDEST SWAP2 POP PUSH2 0xD49 DUP3 PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD6E PUSH2 0xD69 DUP3 PUSH2 0xABE JUMP JUMPDEST PUSH2 0xD54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD7E DUP3 PUSH2 0xD32 JUMP JUMPDEST SWAP2 POP PUSH2 0xD8A DUP3 DUP5 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4469726563746F72792063616E6E6F74206265207A65726F2061646472657373 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDCD PUSH1 0x20 DUP4 PUSH2 0xB7B JUMP JUMPDEST SWAP2 POP PUSH2 0xDD8 DUP3 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDFA DUP2 PUSH2 0xDC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206D757374206265206120636F6E747261637400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE35 PUSH1 0x1C DUP4 PUSH2 0xB7B JUMP JUMPDEST SWAP2 POP PUSH2 0xE40 DUP3 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE62 DUP2 PUSH2 0xE29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206164647265737320646F6573206E6F7420696D706C65 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D656E74206F776E657228290000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEC3 PUSH1 0x2C DUP4 PUSH2 0xB7B JUMP JUMPDEST SWAP2 POP PUSH2 0xECE DUP3 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEF0 DUP2 PUSH2 0xEB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF00 DUP2 PUSH2 0xABE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF19 PUSH0 DUP4 ADD DUP6 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0xF26 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEF7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xEF 0xDE 0xD3 SLT PUSH3 0x6630F7 ORIGIN PUSH2 0x1BD0 SWAP15 PUSH12 0xDA2091D58BB8059B3938CD15 DELEGATECALL DUP15 0xAD DUP3 CALLER PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "850:518:6:-:0;;;938:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;982:10;412:25:3;426:10;412:13;;;:25;;:::i;:::-;370:94;938:58:6;850:518;;589:461:3;681:1;659:24;;:10;:24;;;651:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;763:1;738:10;:22;;;:26;730:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;861:10;850:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;846:198;;979:54;;;;;;;;;;:::i;:::-;;;;;;;;846:198;936:10;913:9;;:34;;;;;;;;;;;;;;;;;;881:77;589:461;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:169::-;1286:11;1320:6;1315:3;1308:19;1360:4;1355:3;1351:14;1336:29;;1202:169;;;;:::o;1377:182::-;1517:34;1513:1;1505:6;1501:14;1494:58;1377:182;:::o;1565:366::-;1707:3;1728:67;1792:2;1787:3;1728:67;:::i;:::-;1721:74;;1804:93;1893:3;1804:93;:::i;:::-;1922:2;1917:3;1913:12;1906:19;;1565:366;;;:::o;1937:419::-;2103:4;2141:2;2130:9;2126:18;2118:26;;2190:9;2184:4;2180:20;2176:1;2165:9;2161:17;2154:47;2218:131;2344:4;2218:131;:::i;:::-;2210:139;;1937:419;;;:::o;2362:178::-;2502:30;2498:1;2490:6;2486:14;2479:54;2362:178;:::o;2546:366::-;2688:3;2709:67;2773:2;2768:3;2709:67;:::i;:::-;2702:74;;2785:93;2874:3;2785:93;:::i;:::-;2903:2;2898:3;2894:12;2887:19;;2546:366;;;:::o;2918:419::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3171:9;3165:4;3161:20;3157:1;3146:9;3142:17;3135:47;3199:131;3325:4;3199:131;:::i;:::-;3191:139;;2918:419;;;:::o;3343:231::-;3483:34;3479:1;3471:6;3467:14;3460:58;3552:14;3547:2;3539:6;3535:15;3528:39;3343:231;:::o;3580:366::-;3722:3;3743:67;3807:2;3802:3;3743:67;:::i;:::-;3736:74;;3819:93;3908:3;3819:93;:::i;:::-;3937:2;3932:3;3928:12;3921:19;;3580:366;;;:::o;3952:419::-;4118:4;4156:2;4145:9;4141:18;4133:26;;4205:9;4199:4;4195:20;4191:1;4180:9;4176:17;4169:47;4233:131;4359:4;4233:131;:::i;:::-;4225:139;;3952:419;;;:::o;850:518:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Directory_538": {
									"entryPoint": 433,
									"id": 538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_salt_759": {
									"entryPoint": 1395,
									"id": 759,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setDirectory_608": {
									"entryPoint": 1462,
									"id": 608,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeDirectoryAddress_560": {
									"entryPoint": 959,
									"id": 560,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cloneDeterministic_131": {
									"entryPoint": 1895,
									"id": 131,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@cloneDeterministic_84": {
									"entryPoint": 1442,
									"id": 84,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@deployEtfVault_837": {
									"entryPoint": 616,
									"id": 837,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@fetchFromDirectory_645": {
									"entryPoint": 273,
									"id": 645,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getVaultImpl_783": {
									"entryPoint": 1221,
									"id": 783,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_632": {
									"entryPoint": 469,
									"id": 632,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 2365,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 3057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 2430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 3077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 2475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IDirectory_$535_to_t_address_fromStack": {
									"entryPoint": 2710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_96d2274afc2e46d87651e0ea9c531d7bd4a8254dcdfc9658ecdc8737b93f78e9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f955503d96b7300413529fdb5cf5324810609da700b17d240c22a22cec0dbf80_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 3421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_f955503d96b7300413529fdb5cf5324810609da700b17d240c22a22cec0dbf80_t_uint256__to_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IDirectory_$535__to_t_address__fromStack_reversed": {
									"entryPoint": 2725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_96d2274afc2e46d87651e0ea9c531d7bd4a8254dcdfc9658ecdc8737b93f78e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3846,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2142,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 2303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IDirectory_$535_to_t_address": {
									"entryPoint": 2693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 2351,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2955,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 2228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 3412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 2183,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2159,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 2163,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2155,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2151,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33": {
									"entryPoint": 3224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679": {
									"entryPoint": 3585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758": {
									"entryPoint": 3481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af": {
									"entryPoint": 3689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_96d2274afc2e46d87651e0ea9c531d7bd4a8254dcdfc9658ecdc8737b93f78e9": {
									"entryPoint": 3120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f955503d96b7300413529fdb5cf5324810609da700b17d240c22a22cec0dbf80": {
									"entryPoint": 3338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14439:7",
										"nodeType": "YulBlock",
										"src": "0:14439:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "423:28:7",
													"nodeType": "YulBlock",
													"src": "423:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:7",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:7",
																		"nodeType": "YulLiteral",
																		"src": "443:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nativeSrc": "433:12:7",
																"nodeType": "YulFunctionCall",
																"src": "433:12:7"
															},
															"nativeSrc": "433:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:7"
											},
											{
												"body": {
													"nativeSrc": "546:28:7",
													"nodeType": "YulBlock",
													"src": "546:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:7",
																		"nodeType": "YulLiteral",
																		"src": "563:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:7",
																		"nodeType": "YulLiteral",
																		"src": "566:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:7"
																},
																"nativeSrc": "556:12:7",
																"nodeType": "YulFunctionCall",
																"src": "556:12:7"
															},
															"nativeSrc": "556:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:7"
											},
											{
												"body": {
													"nativeSrc": "628:54:7",
													"nodeType": "YulBlock",
													"src": "628:54:7",
													"statements": [
														{
															"nativeSrc": "638:38:7",
															"nodeType": "YulAssignment",
															"src": "638:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:7",
																				"nodeType": "YulLiteral",
																				"src": "663:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:7"
																		},
																		"nativeSrc": "652:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:7",
																				"nodeType": "YulLiteral",
																				"src": "672:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:7"
																		},
																		"nativeSrc": "668:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:7"
																},
																"nativeSrc": "648:28:7",
																"nodeType": "YulFunctionCall",
																"src": "648:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:7",
														"nodeType": "YulTypedName",
														"src": "611:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:7",
														"nodeType": "YulTypedName",
														"src": "621:6:7",
														"type": ""
													}
												],
												"src": "580:102:7"
											},
											{
												"body": {
													"nativeSrc": "716:152:7",
													"nodeType": "YulBlock",
													"src": "716:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:7",
																		"nodeType": "YulLiteral",
																		"src": "733:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:7",
																		"nodeType": "YulLiteral",
																		"src": "736:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:7"
																},
																"nativeSrc": "726:88:7",
																"nodeType": "YulFunctionCall",
																"src": "726:88:7"
															},
															"nativeSrc": "726:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:7",
																		"nodeType": "YulLiteral",
																		"src": "830:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:7",
																		"nodeType": "YulLiteral",
																		"src": "833:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:7"
																},
																"nativeSrc": "823:15:7",
																"nodeType": "YulFunctionCall",
																"src": "823:15:7"
															},
															"nativeSrc": "823:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:7",
																		"nodeType": "YulLiteral",
																		"src": "854:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:7",
																		"nodeType": "YulLiteral",
																		"src": "857:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:7"
																},
																"nativeSrc": "847:15:7",
																"nodeType": "YulFunctionCall",
																"src": "847:15:7"
															},
															"nativeSrc": "847:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:7"
											},
											{
												"body": {
													"nativeSrc": "917:238:7",
													"nodeType": "YulBlock",
													"src": "917:238:7",
													"statements": [
														{
															"nativeSrc": "927:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:7"
																		},
																		"nativeSrc": "957:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:7"
																},
																"nativeSrc": "945:40:7",
																"nodeType": "YulFunctionCall",
																"src": "945:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:7",
																	"nodeType": "YulTypedName",
																	"src": "931:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:7",
																"nodeType": "YulBlock",
																"src": "1096:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:7"
																			},
																			"nativeSrc": "1098:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:7"
																		},
																		"nativeSrc": "1098:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:7",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:7"
																		},
																		"nativeSrc": "1036:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:7"
																		},
																		"nativeSrc": "1072:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:7"
																},
																"nativeSrc": "1033:62:7",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:7"
															},
															"nativeSrc": "1030:88:7",
															"nodeType": "YulIf",
															"src": "1030:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:7"
																},
																"nativeSrc": "1127:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:7"
															},
															"nativeSrc": "1127:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:7",
														"nodeType": "YulTypedName",
														"src": "903:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:7",
														"nodeType": "YulTypedName",
														"src": "911:4:7",
														"type": ""
													}
												],
												"src": "874:281:7"
											},
											{
												"body": {
													"nativeSrc": "1202:88:7",
													"nodeType": "YulBlock",
													"src": "1202:88:7",
													"statements": [
														{
															"nativeSrc": "1212:30:7",
															"nodeType": "YulAssignment",
															"src": "1212:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:7"
																},
																"nativeSrc": "1222:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:7"
																},
																"nativeSrc": "1251:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:7"
															},
															"nativeSrc": "1251:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:7",
														"nodeType": "YulTypedName",
														"src": "1186:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:7",
														"nodeType": "YulTypedName",
														"src": "1195:6:7",
														"type": ""
													}
												],
												"src": "1161:129:7"
											},
											{
												"body": {
													"nativeSrc": "1363:241:7",
													"nodeType": "YulBlock",
													"src": "1363:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:7",
																"nodeType": "YulBlock",
																"src": "1468:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:7"
																			},
																			"nativeSrc": "1470:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:7"
																		},
																		"nativeSrc": "1470:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:7"
																},
																"nativeSrc": "1437:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:7"
															},
															"nativeSrc": "1434:56:7",
															"nodeType": "YulIf",
															"src": "1434:56:7"
														},
														{
															"nativeSrc": "1500:37:7",
															"nodeType": "YulAssignment",
															"src": "1500:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:7"
																},
																"nativeSrc": "1508:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:7"
																}
															]
														},
														{
															"nativeSrc": "1574:23:7",
															"nodeType": "YulAssignment",
															"src": "1574:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:7"
																},
																"nativeSrc": "1582:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:7",
														"nodeType": "YulTypedName",
														"src": "1347:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:7",
														"nodeType": "YulTypedName",
														"src": "1358:4:7",
														"type": ""
													}
												],
												"src": "1296:308:7"
											},
											{
												"body": {
													"nativeSrc": "1674:84:7",
													"nodeType": "YulBlock",
													"src": "1674:84:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1698:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1698:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1703:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1703:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1708:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1708:6:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1685:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1685:12:7"
																},
																"nativeSrc": "1685:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1685:30:7"
															},
															"nativeSrc": "1685:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "1685:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1735:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1735:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1740:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1740:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1731:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1731:3:7"
																		},
																		"nativeSrc": "1731:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1731:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1749:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1724:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1724:6:7"
																},
																"nativeSrc": "1724:27:7",
																"nodeType": "YulFunctionCall",
																"src": "1724:27:7"
															},
															"nativeSrc": "1724:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "1724:27:7"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "1610:148:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1656:3:7",
														"nodeType": "YulTypedName",
														"src": "1656:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1661:3:7",
														"nodeType": "YulTypedName",
														"src": "1661:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1666:6:7",
														"nodeType": "YulTypedName",
														"src": "1666:6:7",
														"type": ""
													}
												],
												"src": "1610:148:7"
											},
											{
												"body": {
													"nativeSrc": "1848:341:7",
													"nodeType": "YulBlock",
													"src": "1848:341:7",
													"statements": [
														{
															"nativeSrc": "1858:75:7",
															"nodeType": "YulAssignment",
															"src": "1858:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1925:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1925:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1883:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "1883:41:7"
																		},
																		"nativeSrc": "1883:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1883:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1867:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "1867:15:7"
																},
																"nativeSrc": "1867:66:7",
																"nodeType": "YulFunctionCall",
																"src": "1867:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1858:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1858:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1949:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1949:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1956:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1956:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1942:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1942:6:7"
																},
																"nativeSrc": "1942:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1942:21:7"
															},
															"nativeSrc": "1942:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "1942:21:7"
														},
														{
															"nativeSrc": "1972:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1972:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1987:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1987:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1994:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1994:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1983:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:7"
																},
																"nativeSrc": "1983:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1983:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1976:3:7",
																	"nodeType": "YulTypedName",
																	"src": "1976:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2037:83:7",
																"nodeType": "YulBlock",
																"src": "2037:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2039:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2039:77:7"
																			},
																			"nativeSrc": "2039:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2039:79:7"
																		},
																		"nativeSrc": "2039:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2039:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2018:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2018:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2023:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2023:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2014:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2014:3:7"
																		},
																		"nativeSrc": "2014:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2014:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2032:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2032:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2011:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2011:2:7"
																},
																"nativeSrc": "2011:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2011:25:7"
															},
															"nativeSrc": "2008:112:7",
															"nodeType": "YulIf",
															"src": "2008:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "2129:36:7",
																	"nodeType": "YulIdentifier",
																	"src": "2129:36:7"
																},
																"nativeSrc": "2129:54:7",
																"nodeType": "YulFunctionCall",
																"src": "2129:54:7"
															},
															"nativeSrc": "2129:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "2129:54:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "1764:425:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1821:3:7",
														"nodeType": "YulTypedName",
														"src": "1821:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1826:6:7",
														"nodeType": "YulTypedName",
														"src": "1826:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1834:3:7",
														"nodeType": "YulTypedName",
														"src": "1834:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1842:5:7",
														"nodeType": "YulTypedName",
														"src": "1842:5:7",
														"type": ""
													}
												],
												"src": "1764:425:7"
											},
											{
												"body": {
													"nativeSrc": "2271:278:7",
													"nodeType": "YulBlock",
													"src": "2271:278:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2320:83:7",
																"nodeType": "YulBlock",
																"src": "2320:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2322:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2322:77:7"
																			},
																			"nativeSrc": "2322:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2322:79:7"
																		},
																		"nativeSrc": "2322:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2322:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2299:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2299:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2307:4:7",
																						"nodeType": "YulLiteral",
																						"src": "2307:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2295:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2295:3:7"
																				},
																				"nativeSrc": "2295:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2295:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2314:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2291:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2291:3:7"
																		},
																		"nativeSrc": "2291:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2291:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2284:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:7"
																},
																"nativeSrc": "2284:35:7",
																"nodeType": "YulFunctionCall",
																"src": "2284:35:7"
															},
															"nativeSrc": "2281:122:7",
															"nodeType": "YulIf",
															"src": "2281:122:7"
														},
														{
															"nativeSrc": "2412:34:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2412:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2439:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2439:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2426:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2426:12:7"
																},
																"nativeSrc": "2426:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2426:20:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2416:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2416:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2455:88:7",
															"nodeType": "YulAssignment",
															"src": "2455:88:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2516:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2516:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2524:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2524:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2512:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2512:3:7"
																		},
																		"nativeSrc": "2512:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2512:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2531:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2531:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2539:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2539:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "2464:47:7",
																	"nodeType": "YulIdentifier",
																	"src": "2464:47:7"
																},
																"nativeSrc": "2464:79:7",
																"nodeType": "YulFunctionCall",
																"src": "2464:79:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2455:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2455:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "2209:340:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2249:6:7",
														"nodeType": "YulTypedName",
														"src": "2249:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2257:3:7",
														"nodeType": "YulTypedName",
														"src": "2257:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2265:5:7",
														"nodeType": "YulTypedName",
														"src": "2265:5:7",
														"type": ""
													}
												],
												"src": "2209:340:7"
											},
											{
												"body": {
													"nativeSrc": "2631:433:7",
													"nodeType": "YulBlock",
													"src": "2631:433:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2677:83:7",
																"nodeType": "YulBlock",
																"src": "2677:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2679:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2679:77:7"
																			},
																			"nativeSrc": "2679:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2679:79:7"
																		},
																		"nativeSrc": "2679:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2679:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2652:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2652:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2661:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2661:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2648:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2648:3:7"
																		},
																		"nativeSrc": "2648:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2648:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2673:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2673:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2644:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:7"
																},
																"nativeSrc": "2644:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2644:32:7"
															},
															"nativeSrc": "2641:119:7",
															"nodeType": "YulIf",
															"src": "2641:119:7"
														},
														{
															"nativeSrc": "2770:287:7",
															"nodeType": "YulBlock",
															"src": "2770:287:7",
															"statements": [
																{
																	"nativeSrc": "2785:45:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2785:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2816:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2816:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2827:1:7",
																						"nodeType": "YulLiteral",
																						"src": "2827:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2812:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2812:3:7"
																				},
																				"nativeSrc": "2812:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2812:17:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "2799:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "2799:12:7"
																		},
																		"nativeSrc": "2799:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2799:31:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2789:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2789:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2877:83:7",
																		"nodeType": "YulBlock",
																		"src": "2877:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2879:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "2879:77:7"
																					},
																					"nativeSrc": "2879:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2879:79:7"
																				},
																				"nativeSrc": "2879:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "2879:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2849:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2849:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2857:18:7",
																				"nodeType": "YulLiteral",
																				"src": "2857:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2846:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2846:2:7"
																		},
																		"nativeSrc": "2846:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2846:30:7"
																	},
																	"nativeSrc": "2843:117:7",
																	"nodeType": "YulIf",
																	"src": "2843:117:7"
																},
																{
																	"nativeSrc": "2974:73:7",
																	"nodeType": "YulAssignment",
																	"src": "2974:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3019:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3019:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3030:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3030:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3015:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3015:3:7"
																				},
																				"nativeSrc": "3015:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3015:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3039:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3039:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "2984:30:7",
																			"nodeType": "YulIdentifier",
																			"src": "2984:30:7"
																		},
																		"nativeSrc": "2984:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2984:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2974:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2974:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "2555:509:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2601:9:7",
														"nodeType": "YulTypedName",
														"src": "2601:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2612:7:7",
														"nodeType": "YulTypedName",
														"src": "2612:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2624:6:7",
														"nodeType": "YulTypedName",
														"src": "2624:6:7",
														"type": ""
													}
												],
												"src": "2555:509:7"
											},
											{
												"body": {
													"nativeSrc": "3115:81:7",
													"nodeType": "YulBlock",
													"src": "3115:81:7",
													"statements": [
														{
															"nativeSrc": "3125:65:7",
															"nodeType": "YulAssignment",
															"src": "3125:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3140:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3140:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3147:42:7",
																		"nodeType": "YulLiteral",
																		"src": "3147:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3136:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3136:3:7"
																},
																"nativeSrc": "3136:54:7",
																"nodeType": "YulFunctionCall",
																"src": "3136:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3125:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3125:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3070:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3097:5:7",
														"nodeType": "YulTypedName",
														"src": "3097:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3107:7:7",
														"nodeType": "YulTypedName",
														"src": "3107:7:7",
														"type": ""
													}
												],
												"src": "3070:126:7"
											},
											{
												"body": {
													"nativeSrc": "3247:51:7",
													"nodeType": "YulBlock",
													"src": "3247:51:7",
													"statements": [
														{
															"nativeSrc": "3257:35:7",
															"nodeType": "YulAssignment",
															"src": "3257:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3286:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3286:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3268:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3268:17:7"
																},
																"nativeSrc": "3268:24:7",
																"nodeType": "YulFunctionCall",
																"src": "3268:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3257:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3257:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3202:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3229:5:7",
														"nodeType": "YulTypedName",
														"src": "3229:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3239:7:7",
														"nodeType": "YulTypedName",
														"src": "3239:7:7",
														"type": ""
													}
												],
												"src": "3202:96:7"
											},
											{
												"body": {
													"nativeSrc": "3369:53:7",
													"nodeType": "YulBlock",
													"src": "3369:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3386:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3386:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3409:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3409:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3391:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3391:17:7"
																		},
																		"nativeSrc": "3391:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3391:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3379:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3379:6:7"
																},
																"nativeSrc": "3379:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3379:37:7"
															},
															"nativeSrc": "3379:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3379:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3304:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3357:5:7",
														"nodeType": "YulTypedName",
														"src": "3357:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3364:3:7",
														"nodeType": "YulTypedName",
														"src": "3364:3:7",
														"type": ""
													}
												],
												"src": "3304:118:7"
											},
											{
												"body": {
													"nativeSrc": "3526:124:7",
													"nodeType": "YulBlock",
													"src": "3526:124:7",
													"statements": [
														{
															"nativeSrc": "3536:26:7",
															"nodeType": "YulAssignment",
															"src": "3536:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3548:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3548:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3559:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3559:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3544:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3544:3:7"
																},
																"nativeSrc": "3544:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3544:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3536:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3536:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3616:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3616:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3629:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3629:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3640:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3640:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3625:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3625:3:7"
																		},
																		"nativeSrc": "3625:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3625:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3572:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3572:43:7"
																},
																"nativeSrc": "3572:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3572:71:7"
															},
															"nativeSrc": "3572:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3572:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3428:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3498:9:7",
														"nodeType": "YulTypedName",
														"src": "3498:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3510:6:7",
														"nodeType": "YulTypedName",
														"src": "3510:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3521:4:7",
														"nodeType": "YulTypedName",
														"src": "3521:4:7",
														"type": ""
													}
												],
												"src": "3428:222:7"
											},
											{
												"body": {
													"nativeSrc": "3688:28:7",
													"nodeType": "YulBlock",
													"src": "3688:28:7",
													"statements": [
														{
															"nativeSrc": "3698:12:7",
															"nodeType": "YulAssignment",
															"src": "3698:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3705:5:7",
																"nodeType": "YulIdentifier",
																"src": "3705:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3698:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3698:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3656:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3674:5:7",
														"nodeType": "YulTypedName",
														"src": "3674:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3684:3:7",
														"nodeType": "YulTypedName",
														"src": "3684:3:7",
														"type": ""
													}
												],
												"src": "3656:60:7"
											},
											{
												"body": {
													"nativeSrc": "3782:82:7",
													"nodeType": "YulBlock",
													"src": "3782:82:7",
													"statements": [
														{
															"nativeSrc": "3792:66:7",
															"nodeType": "YulAssignment",
															"src": "3792:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3850:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3850:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3832:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3832:17:7"
																				},
																				"nativeSrc": "3832:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3832:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3823:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "3823:8:7"
																		},
																		"nativeSrc": "3823:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3823:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3805:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3805:17:7"
																},
																"nativeSrc": "3805:53:7",
																"nodeType": "YulFunctionCall",
																"src": "3805:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3792:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3792:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3722:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3762:5:7",
														"nodeType": "YulTypedName",
														"src": "3762:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3772:9:7",
														"nodeType": "YulTypedName",
														"src": "3772:9:7",
														"type": ""
													}
												],
												"src": "3722:142:7"
											},
											{
												"body": {
													"nativeSrc": "3930:66:7",
													"nodeType": "YulBlock",
													"src": "3930:66:7",
													"statements": [
														{
															"nativeSrc": "3940:50:7",
															"nodeType": "YulAssignment",
															"src": "3940:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3984:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3984:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3953:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3953:30:7"
																},
																"nativeSrc": "3953:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3953:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3940:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3940:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3870:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3910:5:7",
														"nodeType": "YulTypedName",
														"src": "3910:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3920:9:7",
														"nodeType": "YulTypedName",
														"src": "3920:9:7",
														"type": ""
													}
												],
												"src": "3870:126:7"
											},
											{
												"body": {
													"nativeSrc": "4080:66:7",
													"nodeType": "YulBlock",
													"src": "4080:66:7",
													"statements": [
														{
															"nativeSrc": "4090:50:7",
															"nodeType": "YulAssignment",
															"src": "4090:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4134:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4134:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4103:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "4103:30:7"
																},
																"nativeSrc": "4103:37:7",
																"nodeType": "YulFunctionCall",
																"src": "4103:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4090:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4090:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IDirectory_$535_to_t_address",
												"nativeSrc": "4002:144:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4060:5:7",
														"nodeType": "YulTypedName",
														"src": "4060:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4070:9:7",
														"nodeType": "YulTypedName",
														"src": "4070:9:7",
														"type": ""
													}
												],
												"src": "4002:144:7"
											},
											{
												"body": {
													"nativeSrc": "4235:84:7",
													"nodeType": "YulBlock",
													"src": "4235:84:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4252:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4252:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4306:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4306:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IDirectory_$535_to_t_address",
																			"nativeSrc": "4257:48:7",
																			"nodeType": "YulIdentifier",
																			"src": "4257:48:7"
																		},
																		"nativeSrc": "4257:55:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4257:55:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4245:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4245:6:7"
																},
																"nativeSrc": "4245:68:7",
																"nodeType": "YulFunctionCall",
																"src": "4245:68:7"
															},
															"nativeSrc": "4245:68:7",
															"nodeType": "YulExpressionStatement",
															"src": "4245:68:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IDirectory_$535_to_t_address_fromStack",
												"nativeSrc": "4152:167:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4223:5:7",
														"nodeType": "YulTypedName",
														"src": "4223:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4230:3:7",
														"nodeType": "YulTypedName",
														"src": "4230:3:7",
														"type": ""
													}
												],
												"src": "4152:167:7"
											},
											{
												"body": {
													"nativeSrc": "4441:142:7",
													"nodeType": "YulBlock",
													"src": "4441:142:7",
													"statements": [
														{
															"nativeSrc": "4451:26:7",
															"nodeType": "YulAssignment",
															"src": "4451:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4463:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4463:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4474:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4474:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4459:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4459:3:7"
																},
																"nativeSrc": "4459:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4459:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4451:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4451:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4549:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4549:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4562:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4562:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4573:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4573:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4558:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4558:3:7"
																		},
																		"nativeSrc": "4558:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4558:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IDirectory_$535_to_t_address_fromStack",
																	"nativeSrc": "4487:61:7",
																	"nodeType": "YulIdentifier",
																	"src": "4487:61:7"
																},
																"nativeSrc": "4487:89:7",
																"nodeType": "YulFunctionCall",
																"src": "4487:89:7"
															},
															"nativeSrc": "4487:89:7",
															"nodeType": "YulExpressionStatement",
															"src": "4487:89:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IDirectory_$535__to_t_address__fromStack_reversed",
												"nativeSrc": "4325:258:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4413:9:7",
														"nodeType": "YulTypedName",
														"src": "4413:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4425:6:7",
														"nodeType": "YulTypedName",
														"src": "4425:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4436:4:7",
														"nodeType": "YulTypedName",
														"src": "4436:4:7",
														"type": ""
													}
												],
												"src": "4325:258:7"
											},
											{
												"body": {
													"nativeSrc": "4634:32:7",
													"nodeType": "YulBlock",
													"src": "4634:32:7",
													"statements": [
														{
															"nativeSrc": "4644:16:7",
															"nodeType": "YulAssignment",
															"src": "4644:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "4655:5:7",
																"nodeType": "YulIdentifier",
																"src": "4655:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4644:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4644:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4589:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4616:5:7",
														"nodeType": "YulTypedName",
														"src": "4616:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4626:7:7",
														"nodeType": "YulTypedName",
														"src": "4626:7:7",
														"type": ""
													}
												],
												"src": "4589:77:7"
											},
											{
												"body": {
													"nativeSrc": "4715:79:7",
													"nodeType": "YulBlock",
													"src": "4715:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4772:16:7",
																"nodeType": "YulBlock",
																"src": "4772:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4781:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4781:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4784:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4784:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4774:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4774:6:7"
																			},
																			"nativeSrc": "4774:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4774:12:7"
																		},
																		"nativeSrc": "4774:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4774:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4738:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4738:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4763:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4763:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4745:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "4745:17:7"
																				},
																				"nativeSrc": "4745:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4745:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4735:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4735:2:7"
																		},
																		"nativeSrc": "4735:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4735:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4728:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4728:6:7"
																},
																"nativeSrc": "4728:43:7",
																"nodeType": "YulFunctionCall",
																"src": "4728:43:7"
															},
															"nativeSrc": "4725:63:7",
															"nodeType": "YulIf",
															"src": "4725:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4672:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4708:5:7",
														"nodeType": "YulTypedName",
														"src": "4708:5:7",
														"type": ""
													}
												],
												"src": "4672:122:7"
											},
											{
												"body": {
													"nativeSrc": "4852:87:7",
													"nodeType": "YulBlock",
													"src": "4852:87:7",
													"statements": [
														{
															"nativeSrc": "4862:29:7",
															"nodeType": "YulAssignment",
															"src": "4862:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4884:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4884:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4871:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4871:12:7"
																},
																"nativeSrc": "4871:20:7",
																"nodeType": "YulFunctionCall",
																"src": "4871:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4862:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4862:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4927:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4927:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4900:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "4900:26:7"
																},
																"nativeSrc": "4900:33:7",
																"nodeType": "YulFunctionCall",
																"src": "4900:33:7"
															},
															"nativeSrc": "4900:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "4900:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4800:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4830:6:7",
														"nodeType": "YulTypedName",
														"src": "4830:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4838:3:7",
														"nodeType": "YulTypedName",
														"src": "4838:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4846:5:7",
														"nodeType": "YulTypedName",
														"src": "4846:5:7",
														"type": ""
													}
												],
												"src": "4800:139:7"
											},
											{
												"body": {
													"nativeSrc": "5011:263:7",
													"nodeType": "YulBlock",
													"src": "5011:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5057:83:7",
																"nodeType": "YulBlock",
																"src": "5057:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5059:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5059:77:7"
																			},
																			"nativeSrc": "5059:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5059:79:7"
																		},
																		"nativeSrc": "5059:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5059:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5032:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5032:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5041:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5041:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5028:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5028:3:7"
																		},
																		"nativeSrc": "5028:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5028:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5053:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5053:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5024:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5024:3:7"
																},
																"nativeSrc": "5024:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5024:32:7"
															},
															"nativeSrc": "5021:119:7",
															"nodeType": "YulIf",
															"src": "5021:119:7"
														},
														{
															"nativeSrc": "5150:117:7",
															"nodeType": "YulBlock",
															"src": "5150:117:7",
															"statements": [
																{
																	"nativeSrc": "5165:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5165:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5179:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5179:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5169:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5169:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:7"
																				},
																				"nativeSrc": "5225:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5204:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:7"
																		},
																		"nativeSrc": "5204:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5194:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4945:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4981:9:7",
														"nodeType": "YulTypedName",
														"src": "4981:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4992:7:7",
														"nodeType": "YulTypedName",
														"src": "4992:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5004:6:7",
														"nodeType": "YulTypedName",
														"src": "5004:6:7",
														"type": ""
													}
												],
												"src": "4945:329:7"
											},
											{
												"body": {
													"nativeSrc": "5323:79:7",
													"nodeType": "YulBlock",
													"src": "5323:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5380:16:7",
																"nodeType": "YulBlock",
																"src": "5380:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5389:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5389:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5392:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5392:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5382:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5382:6:7"
																			},
																			"nativeSrc": "5382:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5382:12:7"
																		},
																		"nativeSrc": "5382:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5382:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5346:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5346:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5371:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5371:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "5353:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "5353:17:7"
																				},
																				"nativeSrc": "5353:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5343:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5343:2:7"
																		},
																		"nativeSrc": "5343:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5343:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5336:6:7"
																},
																"nativeSrc": "5336:43:7",
																"nodeType": "YulFunctionCall",
																"src": "5336:43:7"
															},
															"nativeSrc": "5333:63:7",
															"nodeType": "YulIf",
															"src": "5333:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "5280:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5316:5:7",
														"nodeType": "YulTypedName",
														"src": "5316:5:7",
														"type": ""
													}
												],
												"src": "5280:122:7"
											},
											{
												"body": {
													"nativeSrc": "5460:87:7",
													"nodeType": "YulBlock",
													"src": "5460:87:7",
													"statements": [
														{
															"nativeSrc": "5470:29:7",
															"nodeType": "YulAssignment",
															"src": "5470:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5492:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5492:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5479:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "5479:12:7"
																},
																"nativeSrc": "5479:20:7",
																"nodeType": "YulFunctionCall",
																"src": "5479:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5470:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5470:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5535:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5535:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "5508:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "5508:26:7"
																},
																"nativeSrc": "5508:33:7",
																"nodeType": "YulFunctionCall",
																"src": "5508:33:7"
															},
															"nativeSrc": "5508:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "5508:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "5408:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5438:6:7",
														"nodeType": "YulTypedName",
														"src": "5438:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5446:3:7",
														"nodeType": "YulTypedName",
														"src": "5446:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5454:5:7",
														"nodeType": "YulTypedName",
														"src": "5454:5:7",
														"type": ""
													}
												],
												"src": "5408:139:7"
											},
											{
												"body": {
													"nativeSrc": "5619:263:7",
													"nodeType": "YulBlock",
													"src": "5619:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5665:83:7",
																"nodeType": "YulBlock",
																"src": "5665:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5667:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5667:77:7"
																			},
																			"nativeSrc": "5667:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5667:79:7"
																		},
																		"nativeSrc": "5667:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5667:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5640:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5640:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5649:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5649:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5636:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5636:3:7"
																		},
																		"nativeSrc": "5636:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5636:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5661:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5661:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5632:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5632:3:7"
																},
																"nativeSrc": "5632:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5632:32:7"
															},
															"nativeSrc": "5629:119:7",
															"nodeType": "YulIf",
															"src": "5629:119:7"
														},
														{
															"nativeSrc": "5758:117:7",
															"nodeType": "YulBlock",
															"src": "5758:117:7",
															"statements": [
																{
																	"nativeSrc": "5773:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5773:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5787:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5787:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5777:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5777:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5802:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5802:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5837:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5837:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5848:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5848:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5833:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5833:3:7"
																				},
																				"nativeSrc": "5833:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5833:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5857:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5857:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5812:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5812:20:7"
																		},
																		"nativeSrc": "5812:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5812:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5802:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5802:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5553:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5589:9:7",
														"nodeType": "YulTypedName",
														"src": "5589:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5600:7:7",
														"nodeType": "YulTypedName",
														"src": "5600:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5612:6:7",
														"nodeType": "YulTypedName",
														"src": "5612:6:7",
														"type": ""
													}
												],
												"src": "5553:329:7"
											},
											{
												"body": {
													"nativeSrc": "5947:40:7",
													"nodeType": "YulBlock",
													"src": "5947:40:7",
													"statements": [
														{
															"nativeSrc": "5958:22:7",
															"nodeType": "YulAssignment",
															"src": "5958:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5974:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5974:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5968:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5968:5:7"
																},
																"nativeSrc": "5968:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5968:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5958:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5958:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "5888:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5930:5:7",
														"nodeType": "YulTypedName",
														"src": "5930:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5940:6:7",
														"nodeType": "YulTypedName",
														"src": "5940:6:7",
														"type": ""
													}
												],
												"src": "5888:99:7"
											},
											{
												"body": {
													"nativeSrc": "6089:73:7",
													"nodeType": "YulBlock",
													"src": "6089:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6106:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6106:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6111:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6111:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6099:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6099:6:7"
																},
																"nativeSrc": "6099:19:7",
																"nodeType": "YulFunctionCall",
																"src": "6099:19:7"
															},
															"nativeSrc": "6099:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "6099:19:7"
														},
														{
															"nativeSrc": "6127:29:7",
															"nodeType": "YulAssignment",
															"src": "6127:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6146:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6146:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6151:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6151:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6142:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6142:3:7"
																},
																"nativeSrc": "6142:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6142:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6127:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "6127:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5993:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6061:3:7",
														"nodeType": "YulTypedName",
														"src": "6061:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6066:6:7",
														"nodeType": "YulTypedName",
														"src": "6066:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6077:11:7",
														"nodeType": "YulTypedName",
														"src": "6077:11:7",
														"type": ""
													}
												],
												"src": "5993:169:7"
											},
											{
												"body": {
													"nativeSrc": "6230:77:7",
													"nodeType": "YulBlock",
													"src": "6230:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6247:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6247:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6252:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6252:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6257:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6257:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6241:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6241:5:7"
																},
																"nativeSrc": "6241:23:7",
																"nodeType": "YulFunctionCall",
																"src": "6241:23:7"
															},
															"nativeSrc": "6241:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "6241:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6284:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6284:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6289:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6289:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6280:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6280:3:7"
																		},
																		"nativeSrc": "6280:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6280:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6298:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6298:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6273:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6273:6:7"
																},
																"nativeSrc": "6273:27:7",
																"nodeType": "YulFunctionCall",
																"src": "6273:27:7"
															},
															"nativeSrc": "6273:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "6273:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6168:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6212:3:7",
														"nodeType": "YulTypedName",
														"src": "6212:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6217:3:7",
														"nodeType": "YulTypedName",
														"src": "6217:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6222:6:7",
														"nodeType": "YulTypedName",
														"src": "6222:6:7",
														"type": ""
													}
												],
												"src": "6168:139:7"
											},
											{
												"body": {
													"nativeSrc": "6405:285:7",
													"nodeType": "YulBlock",
													"src": "6405:285:7",
													"statements": [
														{
															"nativeSrc": "6415:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6415:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6462:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6462:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6429:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "6429:32:7"
																},
																"nativeSrc": "6429:39:7",
																"nodeType": "YulFunctionCall",
																"src": "6429:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6419:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6419:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6477:78:7",
															"nodeType": "YulAssignment",
															"src": "6477:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6543:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6543:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6548:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6548:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6484:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "6484:58:7"
																},
																"nativeSrc": "6484:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6484:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6477:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6477:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6603:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6603:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6610:4:7",
																				"nodeType": "YulLiteral",
																				"src": "6610:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6599:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6599:3:7"
																		},
																		"nativeSrc": "6599:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6599:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6617:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6617:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6622:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6622:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6564:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "6564:34:7"
																},
																"nativeSrc": "6564:65:7",
																"nodeType": "YulFunctionCall",
																"src": "6564:65:7"
															},
															"nativeSrc": "6564:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "6564:65:7"
														},
														{
															"nativeSrc": "6638:46:7",
															"nodeType": "YulAssignment",
															"src": "6638:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6649:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6649:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6676:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6676:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6654:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "6654:21:7"
																		},
																		"nativeSrc": "6654:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6654:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6645:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6645:3:7"
																},
																"nativeSrc": "6645:39:7",
																"nodeType": "YulFunctionCall",
																"src": "6645:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6638:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6638:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6313:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6386:5:7",
														"nodeType": "YulTypedName",
														"src": "6386:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6393:3:7",
														"nodeType": "YulTypedName",
														"src": "6393:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6401:3:7",
														"nodeType": "YulTypedName",
														"src": "6401:3:7",
														"type": ""
													}
												],
												"src": "6313:377:7"
											},
											{
												"body": {
													"nativeSrc": "6814:195:7",
													"nodeType": "YulBlock",
													"src": "6814:195:7",
													"statements": [
														{
															"nativeSrc": "6824:26:7",
															"nodeType": "YulAssignment",
															"src": "6824:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6836:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6836:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6847:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6847:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6832:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6832:3:7"
																},
																"nativeSrc": "6832:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6832:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6824:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6824:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6871:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6871:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6882:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6882:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6867:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6867:3:7"
																		},
																		"nativeSrc": "6867:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6867:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6890:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6890:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6896:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6896:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6886:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6886:3:7"
																		},
																		"nativeSrc": "6886:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6886:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6860:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6860:6:7"
																},
																"nativeSrc": "6860:47:7",
																"nodeType": "YulFunctionCall",
																"src": "6860:47:7"
															},
															"nativeSrc": "6860:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "6860:47:7"
														},
														{
															"nativeSrc": "6916:86:7",
															"nodeType": "YulAssignment",
															"src": "6916:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6988:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6988:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "6997:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6997:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6924:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "6924:63:7"
																},
																"nativeSrc": "6924:78:7",
																"nodeType": "YulFunctionCall",
																"src": "6924:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6916:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6916:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6696:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6786:9:7",
														"nodeType": "YulTypedName",
														"src": "6786:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6798:6:7",
														"nodeType": "YulTypedName",
														"src": "6798:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6809:4:7",
														"nodeType": "YulTypedName",
														"src": "6809:4:7",
														"type": ""
													}
												],
												"src": "6696:313:7"
											},
											{
												"body": {
													"nativeSrc": "7078:80:7",
													"nodeType": "YulBlock",
													"src": "7078:80:7",
													"statements": [
														{
															"nativeSrc": "7088:22:7",
															"nodeType": "YulAssignment",
															"src": "7088:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7103:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7103:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7097:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7097:5:7"
																},
																"nativeSrc": "7097:13:7",
																"nodeType": "YulFunctionCall",
																"src": "7097:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7088:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7088:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7146:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7146:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "7119:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "7119:26:7"
																},
																"nativeSrc": "7119:33:7",
																"nodeType": "YulFunctionCall",
																"src": "7119:33:7"
															},
															"nativeSrc": "7119:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "7119:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "7015:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7056:6:7",
														"nodeType": "YulTypedName",
														"src": "7056:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7064:3:7",
														"nodeType": "YulTypedName",
														"src": "7064:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7072:5:7",
														"nodeType": "YulTypedName",
														"src": "7072:5:7",
														"type": ""
													}
												],
												"src": "7015:143:7"
											},
											{
												"body": {
													"nativeSrc": "7241:274:7",
													"nodeType": "YulBlock",
													"src": "7241:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7287:83:7",
																"nodeType": "YulBlock",
																"src": "7287:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7289:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7289:77:7"
																			},
																			"nativeSrc": "7289:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7289:79:7"
																		},
																		"nativeSrc": "7289:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7289:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7262:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7262:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7271:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7271:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7258:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7258:3:7"
																		},
																		"nativeSrc": "7258:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7258:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7283:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7283:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7254:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7254:3:7"
																},
																"nativeSrc": "7254:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7254:32:7"
															},
															"nativeSrc": "7251:119:7",
															"nodeType": "YulIf",
															"src": "7251:119:7"
														},
														{
															"nativeSrc": "7380:128:7",
															"nodeType": "YulBlock",
															"src": "7380:128:7",
															"statements": [
																{
																	"nativeSrc": "7395:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7395:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7409:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7409:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7399:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7399:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7424:74:7",
																	"nodeType": "YulAssignment",
																	"src": "7424:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7470:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7470:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7481:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7481:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7466:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7466:3:7"
																				},
																				"nativeSrc": "7466:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7466:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7490:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7490:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "7434:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "7434:31:7"
																		},
																		"nativeSrc": "7434:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7434:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7424:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7424:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "7164:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7211:9:7",
														"nodeType": "YulTypedName",
														"src": "7211:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7222:7:7",
														"nodeType": "YulTypedName",
														"src": "7222:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7234:6:7",
														"nodeType": "YulTypedName",
														"src": "7234:6:7",
														"type": ""
													}
												],
												"src": "7164:351:7"
											},
											{
												"body": {
													"nativeSrc": "7627:73:7",
													"nodeType": "YulBlock",
													"src": "7627:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7649:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7649:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7657:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7657:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7645:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7645:3:7"
																		},
																		"nativeSrc": "7645:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7645:14:7"
																	},
																	{
																		"hexValue": "6d73672e73656e646572206973206e6f742065746620666163746f7279",
																		"kind": "string",
																		"nativeSrc": "7661:31:7",
																		"nodeType": "YulLiteral",
																		"src": "7661:31:7",
																		"type": "",
																		"value": "msg.sender is not etf factory"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7638:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7638:6:7"
																},
																"nativeSrc": "7638:55:7",
																"nodeType": "YulFunctionCall",
																"src": "7638:55:7"
															},
															"nativeSrc": "7638:55:7",
															"nodeType": "YulExpressionStatement",
															"src": "7638:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_96d2274afc2e46d87651e0ea9c531d7bd4a8254dcdfc9658ecdc8737b93f78e9",
												"nativeSrc": "7521:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7619:6:7",
														"nodeType": "YulTypedName",
														"src": "7619:6:7",
														"type": ""
													}
												],
												"src": "7521:179:7"
											},
											{
												"body": {
													"nativeSrc": "7852:220:7",
													"nodeType": "YulBlock",
													"src": "7852:220:7",
													"statements": [
														{
															"nativeSrc": "7862:74:7",
															"nodeType": "YulAssignment",
															"src": "7862:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7928:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7928:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7933:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7933:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7869:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7869:58:7"
																},
																"nativeSrc": "7869:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7869:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7862:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7862:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8034:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8034:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_96d2274afc2e46d87651e0ea9c531d7bd4a8254dcdfc9658ecdc8737b93f78e9",
																	"nativeSrc": "7945:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "7945:88:7"
																},
																"nativeSrc": "7945:93:7",
																"nodeType": "YulFunctionCall",
																"src": "7945:93:7"
															},
															"nativeSrc": "7945:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "7945:93:7"
														},
														{
															"nativeSrc": "8047:19:7",
															"nodeType": "YulAssignment",
															"src": "8047:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8058:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8058:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8063:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8063:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8054:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8054:3:7"
																},
																"nativeSrc": "8054:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8054:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8047:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8047:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_96d2274afc2e46d87651e0ea9c531d7bd4a8254dcdfc9658ecdc8737b93f78e9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7706:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7840:3:7",
														"nodeType": "YulTypedName",
														"src": "7840:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7848:3:7",
														"nodeType": "YulTypedName",
														"src": "7848:3:7",
														"type": ""
													}
												],
												"src": "7706:366:7"
											},
											{
												"body": {
													"nativeSrc": "8249:248:7",
													"nodeType": "YulBlock",
													"src": "8249:248:7",
													"statements": [
														{
															"nativeSrc": "8259:26:7",
															"nodeType": "YulAssignment",
															"src": "8259:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8271:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8271:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8282:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8282:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8267:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8267:3:7"
																},
																"nativeSrc": "8267:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8267:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8259:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8259:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8306:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8306:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8317:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8317:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8302:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8302:3:7"
																		},
																		"nativeSrc": "8302:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8302:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8325:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8325:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8331:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8331:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8321:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8321:3:7"
																		},
																		"nativeSrc": "8321:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8321:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8295:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8295:6:7"
																},
																"nativeSrc": "8295:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8295:47:7"
															},
															"nativeSrc": "8295:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8295:47:7"
														},
														{
															"nativeSrc": "8351:139:7",
															"nodeType": "YulAssignment",
															"src": "8351:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8485:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8485:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_96d2274afc2e46d87651e0ea9c531d7bd4a8254dcdfc9658ecdc8737b93f78e9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8359:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8359:124:7"
																},
																"nativeSrc": "8359:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8359:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8351:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8351:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_96d2274afc2e46d87651e0ea9c531d7bd4a8254dcdfc9658ecdc8737b93f78e9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8078:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8229:9:7",
														"nodeType": "YulTypedName",
														"src": "8229:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8244:4:7",
														"nodeType": "YulTypedName",
														"src": "8244:4:7",
														"type": ""
													}
												],
												"src": "8078:419:7"
											},
											{
												"body": {
													"nativeSrc": "8609:67:7",
													"nodeType": "YulBlock",
													"src": "8609:67:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8631:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8631:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8639:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8639:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8627:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8627:3:7"
																		},
																		"nativeSrc": "8627:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8627:14:7"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "8643:25:7",
																		"nodeType": "YulLiteral",
																		"src": "8643:25:7",
																		"type": "",
																		"value": "Caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8620:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8620:6:7"
																},
																"nativeSrc": "8620:49:7",
																"nodeType": "YulFunctionCall",
																"src": "8620:49:7"
															},
															"nativeSrc": "8620:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "8620:49:7"
														}
													]
												},
												"name": "store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
												"nativeSrc": "8503:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8601:6:7",
														"nodeType": "YulTypedName",
														"src": "8601:6:7",
														"type": ""
													}
												],
												"src": "8503:173:7"
											},
											{
												"body": {
													"nativeSrc": "8828:220:7",
													"nodeType": "YulBlock",
													"src": "8828:220:7",
													"statements": [
														{
															"nativeSrc": "8838:74:7",
															"nodeType": "YulAssignment",
															"src": "8838:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8904:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8904:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8909:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8909:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8845:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "8845:58:7"
																},
																"nativeSrc": "8845:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8845:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8838:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8838:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9010:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9010:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
																	"nativeSrc": "8921:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8921:88:7"
																},
																"nativeSrc": "8921:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8921:93:7"
															},
															"nativeSrc": "8921:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8921:93:7"
														},
														{
															"nativeSrc": "9023:19:7",
															"nodeType": "YulAssignment",
															"src": "9023:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9034:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9034:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9039:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9039:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9030:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9030:3:7"
																},
																"nativeSrc": "9030:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9030:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9023:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9023:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8682:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8816:3:7",
														"nodeType": "YulTypedName",
														"src": "8816:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8824:3:7",
														"nodeType": "YulTypedName",
														"src": "8824:3:7",
														"type": ""
													}
												],
												"src": "8682:366:7"
											},
											{
												"body": {
													"nativeSrc": "9225:248:7",
													"nodeType": "YulBlock",
													"src": "9225:248:7",
													"statements": [
														{
															"nativeSrc": "9235:26:7",
															"nodeType": "YulAssignment",
															"src": "9235:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9247:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9247:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9258:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9258:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9243:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9243:3:7"
																},
																"nativeSrc": "9243:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9243:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9235:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9235:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9282:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9282:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9293:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9293:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9278:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9278:3:7"
																		},
																		"nativeSrc": "9278:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9278:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9301:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9301:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9307:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9307:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9297:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9297:3:7"
																		},
																		"nativeSrc": "9297:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9297:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9271:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9271:6:7"
																},
																"nativeSrc": "9271:47:7",
																"nodeType": "YulFunctionCall",
																"src": "9271:47:7"
															},
															"nativeSrc": "9271:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "9271:47:7"
														},
														{
															"nativeSrc": "9327:139:7",
															"nodeType": "YulAssignment",
															"src": "9327:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9461:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9461:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9335:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "9335:124:7"
																},
																"nativeSrc": "9335:131:7",
																"nodeType": "YulFunctionCall",
																"src": "9335:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9327:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9327:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9054:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9205:9:7",
														"nodeType": "YulTypedName",
														"src": "9205:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9220:4:7",
														"nodeType": "YulTypedName",
														"src": "9220:4:7",
														"type": ""
													}
												],
												"src": "9054:419:7"
											},
											{
												"body": {
													"nativeSrc": "9593:34:7",
													"nodeType": "YulBlock",
													"src": "9593:34:7",
													"statements": [
														{
															"nativeSrc": "9603:18:7",
															"nodeType": "YulAssignment",
															"src": "9603:18:7",
															"value": {
																"name": "pos",
																"nativeSrc": "9618:3:7",
																"nodeType": "YulIdentifier",
																"src": "9618:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9603:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9603:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "9479:148:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9565:3:7",
														"nodeType": "YulTypedName",
														"src": "9565:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9570:6:7",
														"nodeType": "YulTypedName",
														"src": "9570:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9581:11:7",
														"nodeType": "YulTypedName",
														"src": "9581:11:7",
														"type": ""
													}
												],
												"src": "9479:148:7"
											},
											{
												"body": {
													"nativeSrc": "9739:53:7",
													"nodeType": "YulBlock",
													"src": "9739:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9761:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9761:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9769:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9769:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9757:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9757:3:7"
																		},
																		"nativeSrc": "9757:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9757:14:7"
																	},
																	{
																		"hexValue": "4554465f5641554c54",
																		"kind": "string",
																		"nativeSrc": "9773:11:7",
																		"nodeType": "YulLiteral",
																		"src": "9773:11:7",
																		"type": "",
																		"value": "ETF_VAULT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9750:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9750:6:7"
																},
																"nativeSrc": "9750:35:7",
																"nodeType": "YulFunctionCall",
																"src": "9750:35:7"
															},
															"nativeSrc": "9750:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "9750:35:7"
														}
													]
												},
												"name": "store_literal_in_memory_f955503d96b7300413529fdb5cf5324810609da700b17d240c22a22cec0dbf80",
												"nativeSrc": "9633:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9731:6:7",
														"nodeType": "YulTypedName",
														"src": "9731:6:7",
														"type": ""
													}
												],
												"src": "9633:159:7"
											},
											{
												"body": {
													"nativeSrc": "9962:236:7",
													"nodeType": "YulBlock",
													"src": "9962:236:7",
													"statements": [
														{
															"nativeSrc": "9972:91:7",
															"nodeType": "YulAssignment",
															"src": "9972:91:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10056:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10056:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10061:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10061:1:7",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "9979:76:7",
																	"nodeType": "YulIdentifier",
																	"src": "9979:76:7"
																},
																"nativeSrc": "9979:84:7",
																"nodeType": "YulFunctionCall",
																"src": "9979:84:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9972:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9972:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10161:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10161:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f955503d96b7300413529fdb5cf5324810609da700b17d240c22a22cec0dbf80",
																	"nativeSrc": "10072:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10072:88:7"
																},
																"nativeSrc": "10072:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10072:93:7"
															},
															"nativeSrc": "10072:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10072:93:7"
														},
														{
															"nativeSrc": "10174:18:7",
															"nodeType": "YulAssignment",
															"src": "10174:18:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10185:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10185:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10190:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10190:1:7",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10181:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10181:3:7"
																},
																"nativeSrc": "10181:11:7",
																"nodeType": "YulFunctionCall",
																"src": "10181:11:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10174:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10174:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f955503d96b7300413529fdb5cf5324810609da700b17d240c22a22cec0dbf80_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "9798:400:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9950:3:7",
														"nodeType": "YulTypedName",
														"src": "9950:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9958:3:7",
														"nodeType": "YulTypedName",
														"src": "9958:3:7",
														"type": ""
													}
												],
												"src": "9798:400:7"
											},
											{
												"body": {
													"nativeSrc": "10251:32:7",
													"nodeType": "YulBlock",
													"src": "10251:32:7",
													"statements": [
														{
															"nativeSrc": "10261:16:7",
															"nodeType": "YulAssignment",
															"src": "10261:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "10272:5:7",
																"nodeType": "YulIdentifier",
																"src": "10272:5:7"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "10261:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "10261:7:7"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nativeSrc": "10204:79:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10233:5:7",
														"nodeType": "YulTypedName",
														"src": "10233:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "10243:7:7",
														"nodeType": "YulTypedName",
														"src": "10243:7:7",
														"type": ""
													}
												],
												"src": "10204:79:7"
											},
											{
												"body": {
													"nativeSrc": "10372:74:7",
													"nodeType": "YulBlock",
													"src": "10372:74:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10389:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10389:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10432:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "10432:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "10414:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "10414:17:7"
																				},
																				"nativeSrc": "10414:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10414:24:7"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nativeSrc": "10394:19:7",
																			"nodeType": "YulIdentifier",
																			"src": "10394:19:7"
																		},
																		"nativeSrc": "10394:45:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10394:45:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10382:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10382:6:7"
																},
																"nativeSrc": "10382:58:7",
																"nodeType": "YulFunctionCall",
																"src": "10382:58:7"
															},
															"nativeSrc": "10382:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "10382:58:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nativeSrc": "10289:157:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10360:5:7",
														"nodeType": "YulTypedName",
														"src": "10360:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10367:3:7",
														"nodeType": "YulTypedName",
														"src": "10367:3:7",
														"type": ""
													}
												],
												"src": "10289:157:7"
											},
											{
												"body": {
													"nativeSrc": "10669:305:7",
													"nodeType": "YulBlock",
													"src": "10669:305:7",
													"statements": [
														{
															"nativeSrc": "10680:155:7",
															"nodeType": "YulAssignment",
															"src": "10680:155:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10831:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10831:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f955503d96b7300413529fdb5cf5324810609da700b17d240c22a22cec0dbf80_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "10687:142:7",
																	"nodeType": "YulIdentifier",
																	"src": "10687:142:7"
																},
																"nativeSrc": "10687:148:7",
																"nodeType": "YulFunctionCall",
																"src": "10687:148:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10680:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10680:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10907:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10907:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10916:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10916:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "10845:61:7",
																	"nodeType": "YulIdentifier",
																	"src": "10845:61:7"
																},
																"nativeSrc": "10845:75:7",
																"nodeType": "YulFunctionCall",
																"src": "10845:75:7"
															},
															"nativeSrc": "10845:75:7",
															"nodeType": "YulExpressionStatement",
															"src": "10845:75:7"
														},
														{
															"nativeSrc": "10929:19:7",
															"nodeType": "YulAssignment",
															"src": "10929:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10940:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10940:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10945:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10945:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10936:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10936:3:7"
																},
																"nativeSrc": "10936:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10936:12:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10929:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10929:3:7"
																}
															]
														},
														{
															"nativeSrc": "10958:10:7",
															"nodeType": "YulAssignment",
															"src": "10958:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "10965:3:7",
																"nodeType": "YulIdentifier",
																"src": "10965:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10958:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10958:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_f955503d96b7300413529fdb5cf5324810609da700b17d240c22a22cec0dbf80_t_uint256__to_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10452:522:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10648:3:7",
														"nodeType": "YulTypedName",
														"src": "10648:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10654:6:7",
														"nodeType": "YulTypedName",
														"src": "10654:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10665:3:7",
														"nodeType": "YulTypedName",
														"src": "10665:3:7",
														"type": ""
													}
												],
												"src": "10452:522:7"
											},
											{
												"body": {
													"nativeSrc": "11086:76:7",
													"nodeType": "YulBlock",
													"src": "11086:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11108:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11108:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11116:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11116:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11104:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11104:3:7"
																		},
																		"nativeSrc": "11104:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11104:14:7"
																	},
																	{
																		"hexValue": "4469726563746f72792063616e6e6f74206265207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "11120:34:7",
																		"nodeType": "YulLiteral",
																		"src": "11120:34:7",
																		"type": "",
																		"value": "Directory cannot be zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11097:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11097:6:7"
																},
																"nativeSrc": "11097:58:7",
																"nodeType": "YulFunctionCall",
																"src": "11097:58:7"
															},
															"nativeSrc": "11097:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "11097:58:7"
														}
													]
												},
												"name": "store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
												"nativeSrc": "10980:182:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11078:6:7",
														"nodeType": "YulTypedName",
														"src": "11078:6:7",
														"type": ""
													}
												],
												"src": "10980:182:7"
											},
											{
												"body": {
													"nativeSrc": "11314:220:7",
													"nodeType": "YulBlock",
													"src": "11314:220:7",
													"statements": [
														{
															"nativeSrc": "11324:74:7",
															"nodeType": "YulAssignment",
															"src": "11324:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11390:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11390:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11395:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11395:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11331:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11331:58:7"
																},
																"nativeSrc": "11331:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11331:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11324:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11324:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11496:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11496:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
																	"nativeSrc": "11407:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11407:88:7"
																},
																"nativeSrc": "11407:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11407:93:7"
															},
															"nativeSrc": "11407:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11407:93:7"
														},
														{
															"nativeSrc": "11509:19:7",
															"nodeType": "YulAssignment",
															"src": "11509:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11520:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11520:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11525:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11525:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11516:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11516:3:7"
																},
																"nativeSrc": "11516:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11516:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11509:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11509:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11168:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11302:3:7",
														"nodeType": "YulTypedName",
														"src": "11302:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11310:3:7",
														"nodeType": "YulTypedName",
														"src": "11310:3:7",
														"type": ""
													}
												],
												"src": "11168:366:7"
											},
											{
												"body": {
													"nativeSrc": "11711:248:7",
													"nodeType": "YulBlock",
													"src": "11711:248:7",
													"statements": [
														{
															"nativeSrc": "11721:26:7",
															"nodeType": "YulAssignment",
															"src": "11721:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11733:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11733:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11744:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11744:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11729:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11729:3:7"
																},
																"nativeSrc": "11729:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11729:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11721:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11721:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11768:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11768:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11779:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11779:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11764:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11764:3:7"
																		},
																		"nativeSrc": "11764:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11764:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11787:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11787:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11793:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11793:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11783:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11783:3:7"
																		},
																		"nativeSrc": "11783:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11783:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11757:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11757:6:7"
																},
																"nativeSrc": "11757:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11757:47:7"
															},
															"nativeSrc": "11757:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11757:47:7"
														},
														{
															"nativeSrc": "11813:139:7",
															"nodeType": "YulAssignment",
															"src": "11813:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11947:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11947:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11821:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11821:124:7"
																},
																"nativeSrc": "11821:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11821:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11813:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11813:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11540:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11691:9:7",
														"nodeType": "YulTypedName",
														"src": "11691:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11706:4:7",
														"nodeType": "YulTypedName",
														"src": "11706:4:7",
														"type": ""
													}
												],
												"src": "11540:419:7"
											},
											{
												"body": {
													"nativeSrc": "12071:72:7",
													"nodeType": "YulBlock",
													"src": "12071:72:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12093:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12093:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12101:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12101:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12089:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12089:3:7"
																		},
																		"nativeSrc": "12089:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12089:14:7"
																	},
																	{
																		"hexValue": "4469726563746f7279206d757374206265206120636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "12105:30:7",
																		"nodeType": "YulLiteral",
																		"src": "12105:30:7",
																		"type": "",
																		"value": "Directory must be a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12082:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12082:6:7"
																},
																"nativeSrc": "12082:54:7",
																"nodeType": "YulFunctionCall",
																"src": "12082:54:7"
															},
															"nativeSrc": "12082:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "12082:54:7"
														}
													]
												},
												"name": "store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
												"nativeSrc": "11965:178:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12063:6:7",
														"nodeType": "YulTypedName",
														"src": "12063:6:7",
														"type": ""
													}
												],
												"src": "11965:178:7"
											},
											{
												"body": {
													"nativeSrc": "12295:220:7",
													"nodeType": "YulBlock",
													"src": "12295:220:7",
													"statements": [
														{
															"nativeSrc": "12305:74:7",
															"nodeType": "YulAssignment",
															"src": "12305:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12371:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12376:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12376:2:7",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12312:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12312:58:7"
																},
																"nativeSrc": "12312:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12312:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12305:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12305:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12477:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12477:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
																	"nativeSrc": "12388:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12388:88:7"
																},
																"nativeSrc": "12388:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12388:93:7"
															},
															"nativeSrc": "12388:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12388:93:7"
														},
														{
															"nativeSrc": "12490:19:7",
															"nodeType": "YulAssignment",
															"src": "12490:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12501:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12501:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12506:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12506:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12497:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12497:3:7"
																},
																"nativeSrc": "12497:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12497:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12490:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12490:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12149:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12283:3:7",
														"nodeType": "YulTypedName",
														"src": "12283:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12291:3:7",
														"nodeType": "YulTypedName",
														"src": "12291:3:7",
														"type": ""
													}
												],
												"src": "12149:366:7"
											},
											{
												"body": {
													"nativeSrc": "12692:248:7",
													"nodeType": "YulBlock",
													"src": "12692:248:7",
													"statements": [
														{
															"nativeSrc": "12702:26:7",
															"nodeType": "YulAssignment",
															"src": "12702:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12714:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12714:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12725:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12725:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12710:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12710:3:7"
																},
																"nativeSrc": "12710:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12710:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12702:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12702:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12749:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12749:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12760:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12760:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12745:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12745:3:7"
																		},
																		"nativeSrc": "12745:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12745:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12768:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12768:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12774:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12774:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12764:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12764:3:7"
																		},
																		"nativeSrc": "12764:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12764:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12738:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12738:6:7"
																},
																"nativeSrc": "12738:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12738:47:7"
															},
															"nativeSrc": "12738:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12738:47:7"
														},
														{
															"nativeSrc": "12794:139:7",
															"nodeType": "YulAssignment",
															"src": "12794:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12928:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12928:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12802:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12802:124:7"
																},
																"nativeSrc": "12802:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12802:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12794:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12794:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12521:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12672:9:7",
														"nodeType": "YulTypedName",
														"src": "12672:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12687:4:7",
														"nodeType": "YulTypedName",
														"src": "12687:4:7",
														"type": ""
													}
												],
												"src": "12521:419:7"
											},
											{
												"body": {
													"nativeSrc": "13052:125:7",
													"nodeType": "YulBlock",
													"src": "13052:125:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13074:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13074:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13082:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13082:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13070:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13070:3:7"
																		},
																		"nativeSrc": "13070:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13070:14:7"
																	},
																	{
																		"hexValue": "4469726563746f7279206164647265737320646f6573206e6f7420696d706c65",
																		"kind": "string",
																		"nativeSrc": "13086:34:7",
																		"nodeType": "YulLiteral",
																		"src": "13086:34:7",
																		"type": "",
																		"value": "Directory address does not imple"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13063:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13063:6:7"
																},
																"nativeSrc": "13063:58:7",
																"nodeType": "YulFunctionCall",
																"src": "13063:58:7"
															},
															"nativeSrc": "13063:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "13063:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13142:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13142:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13150:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13150:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13138:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13138:3:7"
																		},
																		"nativeSrc": "13138:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13138:15:7"
																	},
																	{
																		"hexValue": "6d656e74206f776e65722829",
																		"kind": "string",
																		"nativeSrc": "13155:14:7",
																		"nodeType": "YulLiteral",
																		"src": "13155:14:7",
																		"type": "",
																		"value": "ment owner()"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13131:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13131:6:7"
																},
																"nativeSrc": "13131:39:7",
																"nodeType": "YulFunctionCall",
																"src": "13131:39:7"
															},
															"nativeSrc": "13131:39:7",
															"nodeType": "YulExpressionStatement",
															"src": "13131:39:7"
														}
													]
												},
												"name": "store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
												"nativeSrc": "12946:231:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13044:6:7",
														"nodeType": "YulTypedName",
														"src": "13044:6:7",
														"type": ""
													}
												],
												"src": "12946:231:7"
											},
											{
												"body": {
													"nativeSrc": "13329:220:7",
													"nodeType": "YulBlock",
													"src": "13329:220:7",
													"statements": [
														{
															"nativeSrc": "13339:74:7",
															"nodeType": "YulAssignment",
															"src": "13339:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13405:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13405:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13410:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13410:2:7",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13346:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "13346:58:7"
																},
																"nativeSrc": "13346:67:7",
																"nodeType": "YulFunctionCall",
																"src": "13346:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13339:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13339:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13511:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13511:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
																	"nativeSrc": "13422:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13422:88:7"
																},
																"nativeSrc": "13422:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13422:93:7"
															},
															"nativeSrc": "13422:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13422:93:7"
														},
														{
															"nativeSrc": "13524:19:7",
															"nodeType": "YulAssignment",
															"src": "13524:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13535:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13535:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13540:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13540:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13531:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13531:3:7"
																},
																"nativeSrc": "13531:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13531:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13524:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13524:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13183:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13317:3:7",
														"nodeType": "YulTypedName",
														"src": "13317:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13325:3:7",
														"nodeType": "YulTypedName",
														"src": "13325:3:7",
														"type": ""
													}
												],
												"src": "13183:366:7"
											},
											{
												"body": {
													"nativeSrc": "13726:248:7",
													"nodeType": "YulBlock",
													"src": "13726:248:7",
													"statements": [
														{
															"nativeSrc": "13736:26:7",
															"nodeType": "YulAssignment",
															"src": "13736:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13748:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13748:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13759:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13759:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13744:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13744:3:7"
																},
																"nativeSrc": "13744:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13744:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13736:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13736:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13783:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13783:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13794:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13794:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13779:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13779:3:7"
																		},
																		"nativeSrc": "13779:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13779:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13802:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13802:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13808:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13808:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13798:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13798:3:7"
																		},
																		"nativeSrc": "13798:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13798:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13772:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13772:6:7"
																},
																"nativeSrc": "13772:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13772:47:7"
															},
															"nativeSrc": "13772:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13772:47:7"
														},
														{
															"nativeSrc": "13828:139:7",
															"nodeType": "YulAssignment",
															"src": "13828:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13962:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13962:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13836:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13836:124:7"
																},
																"nativeSrc": "13836:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13836:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13828:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13828:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13555:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13706:9:7",
														"nodeType": "YulTypedName",
														"src": "13706:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13721:4:7",
														"nodeType": "YulTypedName",
														"src": "13721:4:7",
														"type": ""
													}
												],
												"src": "13555:419:7"
											},
											{
												"body": {
													"nativeSrc": "14045:53:7",
													"nodeType": "YulBlock",
													"src": "14045:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14062:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14062:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14085:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "14085:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "14067:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "14067:17:7"
																		},
																		"nativeSrc": "14067:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14067:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14055:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14055:6:7"
																},
																"nativeSrc": "14055:37:7",
																"nodeType": "YulFunctionCall",
																"src": "14055:37:7"
															},
															"nativeSrc": "14055:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "14055:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "13980:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14033:5:7",
														"nodeType": "YulTypedName",
														"src": "14033:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14040:3:7",
														"nodeType": "YulTypedName",
														"src": "14040:3:7",
														"type": ""
													}
												],
												"src": "13980:118:7"
											},
											{
												"body": {
													"nativeSrc": "14230:206:7",
													"nodeType": "YulBlock",
													"src": "14230:206:7",
													"statements": [
														{
															"nativeSrc": "14240:26:7",
															"nodeType": "YulAssignment",
															"src": "14240:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14252:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14252:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14263:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14263:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14248:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14248:3:7"
																},
																"nativeSrc": "14248:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14248:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14240:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14240:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14320:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14320:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14333:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14333:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14344:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14344:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14329:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14329:3:7"
																		},
																		"nativeSrc": "14329:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14329:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14276:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14276:43:7"
																},
																"nativeSrc": "14276:71:7",
																"nodeType": "YulFunctionCall",
																"src": "14276:71:7"
															},
															"nativeSrc": "14276:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "14276:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14401:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14401:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14414:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14414:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14425:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14425:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14410:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14410:3:7"
																		},
																		"nativeSrc": "14410:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14410:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14357:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14357:43:7"
																},
																"nativeSrc": "14357:72:7",
																"nodeType": "YulFunctionCall",
																"src": "14357:72:7"
															},
															"nativeSrc": "14357:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "14357:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14104:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14194:9:7",
														"nodeType": "YulTypedName",
														"src": "14194:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14206:6:7",
														"nodeType": "YulTypedName",
														"src": "14206:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14214:6:7",
														"nodeType": "YulTypedName",
														"src": "14214:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14225:4:7",
														"nodeType": "YulTypedName",
														"src": "14225:4:7",
														"type": ""
													}
												],
												"src": "14104:332:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IDirectory_$535_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IDirectory_$535_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IDirectory_$535_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IDirectory_$535__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IDirectory_$535_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_96d2274afc2e46d87651e0ea9c531d7bd4a8254dcdfc9658ecdc8737b93f78e9(memPtr) {\n\n        mstore(add(memPtr, 0), \"msg.sender is not etf factory\")\n\n    }\n\n    function abi_encode_t_stringliteral_96d2274afc2e46d87651e0ea9c531d7bd4a8254dcdfc9658ecdc8737b93f78e9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_96d2274afc2e46d87651e0ea9c531d7bd4a8254dcdfc9658ecdc8737b93f78e9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_96d2274afc2e46d87651e0ea9c531d7bd4a8254dcdfc9658ecdc8737b93f78e9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_96d2274afc2e46d87651e0ea9c531d7bd4a8254dcdfc9658ecdc8737b93f78e9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_f955503d96b7300413529fdb5cf5324810609da700b17d240c22a22cec0dbf80(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETF_VAULT\")\n\n    }\n\n    function abi_encode_t_stringliteral_f955503d96b7300413529fdb5cf5324810609da700b17d240c22a22cec0dbf80_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 9)\n        store_literal_in_memory_f955503d96b7300413529fdb5cf5324810609da700b17d240c22a22cec0dbf80(pos)\n        end := add(pos, 9)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_f955503d96b7300413529fdb5cf5324810609da700b17d240c22a22cec0dbf80_t_uint256__to_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_stringliteral_f955503d96b7300413529fdb5cf5324810609da700b17d240c22a22cec0dbf80_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory cannot be zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory must be a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory address does not imple\")\n\n        mstore(add(memPtr, 32), \"ment owner()\")\n\n    }\n\n    function abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610055575f3560e01c80632726261814610059578063658a847a146100895780638da5cb5b146100a7578063b57c59a7146100c5578063ba4c7be1146100f5575b5f5ffd5b610073600480360381019061006e91906109ab565b610111565b6040516100809190610a31565b60405180910390f35b6100916101b1565b60405161009e9190610aa5565b60405180910390f35b6100af6101d5565b6040516100bc9190610a31565b60405180910390f35b6100df60048036038101906100da9190610af1565b610268565b6040516100ec9190610a31565b60405180910390f35b61010f600480360381019061010a9190610b46565b6103bf565b005b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327262618836040518263ffffffff1660e01b815260040161016b9190610bd1565b602060405180830381865afa158015610186573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101aa9190610c05565b9050919050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561023f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102639190610c05565b905090565b5f6102a76040518060400160405280600b81526020017f6574662d666163746f7279000000000000000000000000000000000000000000815250610111565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610314576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030b90610c7a565b60405180910390fd5b5f61031d6104c5565b90506103318161032c85610573565b6105a2565b91508173ffffffffffffffffffffffffffffffffffffffff1663c4d66de85f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161038c9190610a31565b5f604051808303815f87803b1580156103a3575f5ffd5b505af11580156103b5573d5f5f3e3d5ffd5b5050505050919050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610428573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061044c9190610c05565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090610ce2565b60405180910390fd5b6104c2816105b6565b50565b5f5f6105056040518060400160405280600e81526020017f6574662d7661756c742d696d706c000000000000000000000000000000000000815250610111565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361056c576040517f8020a5c700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8091505090565b5f816040516020016105859190610d74565b604051602081830303815290604052805190602001209050919050565b5f6105ae83835f610767565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061b90610de3565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff163b1161067d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067490610e4b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156106e557506040513d601f19601f820116820180604052508101906106e29190610c05565b60015b610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071b90610ed9565b60405180910390fd5b815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b5f814710156107af5747826040517fcf4791810000000000000000000000000000000000000000000000000000000081526004016107a6929190610f06565b60405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008460601b60e81c175f526e5af43d82803e903d91602b57fd5bf38460781b17602052826037600984f590505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610857576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6108bd82610877565b810181811067ffffffffffffffff821117156108dc576108db610887565b5b80604052505050565b5f6108ee61085e565b90506108fa82826108b4565b919050565b5f67ffffffffffffffff82111561091957610918610887565b5b61092282610877565b9050602081019050919050565b828183375f83830152505050565b5f61094f61094a846108ff565b6108e5565b90508281526020810184848401111561096b5761096a610873565b5b61097684828561092f565b509392505050565b5f82601f8301126109925761099161086f565b5b81356109a284826020860161093d565b91505092915050565b5f602082840312156109c0576109bf610867565b5b5f82013567ffffffffffffffff8111156109dd576109dc61086b565b5b6109e98482850161097e565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a1b826109f2565b9050919050565b610a2b81610a11565b82525050565b5f602082019050610a445f830184610a22565b92915050565b5f819050919050565b5f610a6d610a68610a63846109f2565b610a4a565b6109f2565b9050919050565b5f610a7e82610a53565b9050919050565b5f610a8f82610a74565b9050919050565b610a9f81610a85565b82525050565b5f602082019050610ab85f830184610a96565b92915050565b5f819050919050565b610ad081610abe565b8114610ada575f5ffd5b50565b5f81359050610aeb81610ac7565b92915050565b5f60208284031215610b0657610b05610867565b5b5f610b1384828501610add565b91505092915050565b610b2581610a11565b8114610b2f575f5ffd5b50565b5f81359050610b4081610b1c565b92915050565b5f60208284031215610b5b57610b5a610867565b5b5f610b6884828501610b32565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f610ba382610b71565b610bad8185610b7b565b9350610bbd818560208601610b8b565b610bc681610877565b840191505092915050565b5f6020820190508181035f830152610be98184610b99565b905092915050565b5f81519050610bff81610b1c565b92915050565b5f60208284031215610c1a57610c19610867565b5b5f610c2784828501610bf1565b91505092915050565b7f6d73672e73656e646572206973206e6f742065746620666163746f72790000005f82015250565b5f610c64601d83610b7b565b9150610c6f82610c30565b602082019050919050565b5f6020820190508181035f830152610c9181610c58565b9050919050565b7f43616c6c6572206973206e6f7420746865206f776e65720000000000000000005f82015250565b5f610ccc601783610b7b565b9150610cd782610c98565b602082019050919050565b5f6020820190508181035f830152610cf981610cc0565b9050919050565b5f81905092915050565b7f4554465f5641554c5400000000000000000000000000000000000000000000005f82015250565b5f610d3e600983610d00565b9150610d4982610d0a565b600982019050919050565b5f819050919050565b610d6e610d6982610abe565b610d54565b82525050565b5f610d7e82610d32565b9150610d8a8284610d5d565b60208201915081905092915050565b7f4469726563746f72792063616e6e6f74206265207a65726f20616464726573735f82015250565b5f610dcd602083610b7b565b9150610dd882610d99565b602082019050919050565b5f6020820190508181035f830152610dfa81610dc1565b9050919050565b7f4469726563746f7279206d757374206265206120636f6e7472616374000000005f82015250565b5f610e35601c83610b7b565b9150610e4082610e01565b602082019050919050565b5f6020820190508181035f830152610e6281610e29565b9050919050565b7f4469726563746f7279206164647265737320646f6573206e6f7420696d706c655f8201527f6d656e74206f776e657228290000000000000000000000000000000000000000602082015250565b5f610ec3602c83610b7b565b9150610ece82610e69565b604082019050919050565b5f6020820190508181035f830152610ef081610eb7565b9050919050565b610f0081610abe565b82525050565b5f604082019050610f195f830185610ef7565b610f266020830184610ef7565b939250505056fea26469706673582212202eefded312626630f732611bd09e6bda2091d58bb8059b3938cd15f48ead823364736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27262618 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x658A847A EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0xB57C59A7 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xBA4C7BE1 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x9AB JUMP JUMPDEST PUSH2 0x111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0xA31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH2 0x1B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0xAA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0xA31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xA31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10A SWAP2 SWAP1 PUSH2 0xB46 JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x27262618 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0xBD1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x186 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xC05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0xC05 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x2A7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6574662D666163746F7279000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x111 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30B SWAP1 PUSH2 0xC7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x31D PUSH2 0x4C5 JUMP JUMPDEST SWAP1 POP PUSH2 0x331 DUP2 PUSH2 0x32C DUP6 PUSH2 0x573 JUMP JUMPDEST PUSH2 0x5A2 JUMP JUMPDEST SWAP2 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC4D66DE8 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA31 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B5 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x428 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x44C SWAP2 SWAP1 PUSH2 0xC05 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B0 SWAP1 PUSH2 0xCE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4C2 DUP2 PUSH2 0x5B6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x505 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6574662D7661756C742D696D706C000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x111 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x56C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8020A5C700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x585 SWAP2 SWAP1 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5AE DUP4 DUP4 PUSH0 PUSH2 0x767 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61B SWAP1 PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x674 SWAP1 PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x6E5 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x724 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71B SWAP1 PUSH2 0xED9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x7AF JUMPI SELFBALANCE DUP3 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A6 SWAP3 SWAP2 SWAP1 PUSH2 0xF06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP5 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP5 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE DUP3 PUSH1 0x37 PUSH1 0x9 DUP5 CREATE2 SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x857 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06EBF3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x8BD DUP3 PUSH2 0x877 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x8DC JUMPI PUSH2 0x8DB PUSH2 0x887 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8EE PUSH2 0x85E JUMP JUMPDEST SWAP1 POP PUSH2 0x8FA DUP3 DUP3 PUSH2 0x8B4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x919 JUMPI PUSH2 0x918 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH2 0x922 DUP3 PUSH2 0x877 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x94F PUSH2 0x94A DUP5 PUSH2 0x8FF JUMP JUMPDEST PUSH2 0x8E5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x96B JUMPI PUSH2 0x96A PUSH2 0x873 JUMP JUMPDEST JUMPDEST PUSH2 0x976 DUP5 DUP3 DUP6 PUSH2 0x92F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x992 JUMPI PUSH2 0x991 PUSH2 0x86F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9A2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x93D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C0 JUMPI PUSH2 0x9BF PUSH2 0x867 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9DD JUMPI PUSH2 0x9DC PUSH2 0x86B JUMP JUMPDEST JUMPDEST PUSH2 0x9E9 DUP5 DUP3 DUP6 ADD PUSH2 0x97E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA1B DUP3 PUSH2 0x9F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA2B DUP2 PUSH2 0xA11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA44 PUSH0 DUP4 ADD DUP5 PUSH2 0xA22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA6D PUSH2 0xA68 PUSH2 0xA63 DUP5 PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST PUSH2 0x9F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA7E DUP3 PUSH2 0xA53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA8F DUP3 PUSH2 0xA74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9F DUP2 PUSH2 0xA85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAB8 PUSH0 DUP4 ADD DUP5 PUSH2 0xA96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD0 DUP2 PUSH2 0xABE JUMP JUMPDEST DUP2 EQ PUSH2 0xADA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAEB DUP2 PUSH2 0xAC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB06 JUMPI PUSH2 0xB05 PUSH2 0x867 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB13 DUP5 DUP3 DUP6 ADD PUSH2 0xADD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB25 DUP2 PUSH2 0xA11 JUMP JUMPDEST DUP2 EQ PUSH2 0xB2F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB40 DUP2 PUSH2 0xB1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB5B JUMPI PUSH2 0xB5A PUSH2 0x867 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB68 DUP5 DUP3 DUP6 ADD PUSH2 0xB32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBA3 DUP3 PUSH2 0xB71 JUMP JUMPDEST PUSH2 0xBAD DUP2 DUP6 PUSH2 0xB7B JUMP JUMPDEST SWAP4 POP PUSH2 0xBBD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB8B JUMP JUMPDEST PUSH2 0xBC6 DUP2 PUSH2 0x877 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBE9 DUP2 DUP5 PUSH2 0xB99 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBFF DUP2 PUSH2 0xB1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC1A JUMPI PUSH2 0xC19 PUSH2 0x867 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC27 DUP5 DUP3 DUP6 ADD PUSH2 0xBF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6D73672E73656E646572206973206E6F742065746620666163746F7279000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC64 PUSH1 0x1D DUP4 PUSH2 0xB7B JUMP JUMPDEST SWAP2 POP PUSH2 0xC6F DUP3 PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC91 DUP2 PUSH2 0xC58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420746865206F776E6572000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCCC PUSH1 0x17 DUP4 PUSH2 0xB7B JUMP JUMPDEST SWAP2 POP PUSH2 0xCD7 DUP3 PUSH2 0xC98 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCF9 DUP2 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4554465F5641554C540000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD3E PUSH1 0x9 DUP4 PUSH2 0xD00 JUMP JUMPDEST SWAP2 POP PUSH2 0xD49 DUP3 PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD6E PUSH2 0xD69 DUP3 PUSH2 0xABE JUMP JUMPDEST PUSH2 0xD54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD7E DUP3 PUSH2 0xD32 JUMP JUMPDEST SWAP2 POP PUSH2 0xD8A DUP3 DUP5 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4469726563746F72792063616E6E6F74206265207A65726F2061646472657373 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDCD PUSH1 0x20 DUP4 PUSH2 0xB7B JUMP JUMPDEST SWAP2 POP PUSH2 0xDD8 DUP3 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDFA DUP2 PUSH2 0xDC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206D757374206265206120636F6E747261637400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE35 PUSH1 0x1C DUP4 PUSH2 0xB7B JUMP JUMPDEST SWAP2 POP PUSH2 0xE40 DUP3 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE62 DUP2 PUSH2 0xE29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206164647265737320646F6573206E6F7420696D706C65 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D656E74206F776E657228290000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEC3 PUSH1 0x2C DUP4 PUSH2 0xB7B JUMP JUMPDEST SWAP2 POP PUSH2 0xECE DUP3 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEF0 DUP2 PUSH2 0xEB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF00 DUP2 PUSH2 0xABE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF19 PUSH0 DUP4 ADD DUP6 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0xF26 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEF7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xEF 0xDE 0xD3 SLT PUSH3 0x6630F7 ORIGIN PUSH2 0x1BD0 SWAP15 PUSH12 0xDA2091D58BB8059B3938CD15 DELEGATECALL DUP15 0xAD DUP3 CALLER PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "850:518:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1272:136:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;336:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1178:88;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1089:277:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;470:113:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1272:136;1341:7;1367:9;;;;;;;;;;;:28;;;1396:4;1367:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1360:41;;1272:136;;;:::o;336:27::-;;;;;;;;;;;;;:::o;1178:88::-;1216:7;1242:9;;;;;;;;;;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1235:24;;1178:88;:::o;1089:277:6:-;1163:13;817:33:5;;;;;;;;;;;;;;;;;;:18;:33::i;:::-;803:47;;:10;:47;;;795:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;1188:17:6::1;1208:14;:12;:14::i;:::-;1188:34;;1241:52;1267:9;1278:14;1284:7;1278:5;:14::i;:::-;1241:25;:52::i;:::-;1233:60;;1322:5;1312:27;;;1348:9;;;;;;;;;;;1312:47;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1178:188;1089:277:::0;;;:::o;470:113:3:-;1109:9;;;;;;;;;;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1095:31;;:10;:31;;;1087:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;551:25:::1;565:10;551:13;:25::i;:::-;470:113:::0;:::o;548:223:6:-;595:7;614:17;635:36;;;;;;;;;;;;;;;;;;:18;:36::i;:::-;614:57;;706:1;685:23;;:9;:23;;;681:48;;717:12;;;;;;;;;;;;;;681:48;755:9;748:16;;;548:223;:::o;405:137::-;460:7;526;496:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;486:49;;;;;;479:56;;405:137;;;:::o;3875:169:0:-;3959:16;3994:43;4013:14;4029:4;4035:1;3994:18;:43::i;:::-;3987:50;;3875:169;;;;:::o;589:461:3:-;681:1;659:24;;:10;:24;;;651:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;763:1;738:10;:22;;;:26;730:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;861:10;850:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;846:198;;979:54;;;;;;;;;;:::i;:::-;;;;;;;;846:198;936:10;913:9;;:34;;;;;;;;;;;;;;;;;;881:77;589:461;:::o;4805:974:0:-;4934:16;4990:5;4966:21;:29;4962:123;;;5045:21;5068:5;5018:56;;;;;;;;;;;;:::i;:::-;;;;;;;;4962:123;5371:48;5353:14;5347:4;5343:25;5337:4;5333:36;5330:90;5324:4;5317:104;5578:32;5561:14;5555:4;5551:25;5548:63;5542:4;5535:77;5664:4;5658;5652;5645:5;5637:32;5625:44;;5712:1;5692:22;;:8;:22;;;5688:85;;5737:25;;;;;;;;;;;;;;5688:85;4805:974;;;;;:::o;7:75:7:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:148::-;1708:6;1703:3;1698;1685:30;1749:1;1740:6;1735:3;1731:16;1724:27;1610:148;;;:::o;1764:425::-;1842:5;1867:66;1883:49;1925:6;1883:49;:::i;:::-;1867:66;:::i;:::-;1858:75;;1956:6;1949:5;1942:21;1994:4;1987:5;1983:16;2032:3;2023:6;2018:3;2014:16;2011:25;2008:112;;;2039:79;;:::i;:::-;2008:112;2129:54;2176:6;2171:3;2166;2129:54;:::i;:::-;1848:341;1764:425;;;;;:::o;2209:340::-;2265:5;2314:3;2307:4;2299:6;2295:17;2291:27;2281:122;;2322:79;;:::i;:::-;2281:122;2439:6;2426:20;2464:79;2539:3;2531:6;2524:4;2516:6;2512:17;2464:79;:::i;:::-;2455:88;;2271:278;2209:340;;;;:::o;2555:509::-;2624:6;2673:2;2661:9;2652:7;2648:23;2644:32;2641:119;;;2679:79;;:::i;:::-;2641:119;2827:1;2816:9;2812:17;2799:31;2857:18;2849:6;2846:30;2843:117;;;2879:79;;:::i;:::-;2843:117;2984:63;3039:7;3030:6;3019:9;3015:22;2984:63;:::i;:::-;2974:73;;2770:287;2555:509;;;;:::o;3070:126::-;3107:7;3147:42;3140:5;3136:54;3125:65;;3070:126;;;:::o;3202:96::-;3239:7;3268:24;3286:5;3268:24;:::i;:::-;3257:35;;3202:96;;;:::o;3304:118::-;3391:24;3409:5;3391:24;:::i;:::-;3386:3;3379:37;3304:118;;:::o;3428:222::-;3521:4;3559:2;3548:9;3544:18;3536:26;;3572:71;3640:1;3629:9;3625:17;3616:6;3572:71;:::i;:::-;3428:222;;;;:::o;3656:60::-;3684:3;3705:5;3698:12;;3656:60;;;:::o;3722:142::-;3772:9;3805:53;3823:34;3832:24;3850:5;3832:24;:::i;:::-;3823:34;:::i;:::-;3805:53;:::i;:::-;3792:66;;3722:142;;;:::o;3870:126::-;3920:9;3953:37;3984:5;3953:37;:::i;:::-;3940:50;;3870:126;;;:::o;4002:144::-;4070:9;4103:37;4134:5;4103:37;:::i;:::-;4090:50;;4002:144;;;:::o;4152:167::-;4257:55;4306:5;4257:55;:::i;:::-;4252:3;4245:68;4152:167;;:::o;4325:258::-;4436:4;4474:2;4463:9;4459:18;4451:26;;4487:89;4573:1;4562:9;4558:17;4549:6;4487:89;:::i;:::-;4325:258;;;;:::o;4589:77::-;4626:7;4655:5;4644:16;;4589:77;;;:::o;4672:122::-;4745:24;4763:5;4745:24;:::i;:::-;4738:5;4735:35;4725:63;;4784:1;4781;4774:12;4725:63;4672:122;:::o;4800:139::-;4846:5;4884:6;4871:20;4862:29;;4900:33;4927:5;4900:33;:::i;:::-;4800:139;;;;:::o;4945:329::-;5004:6;5053:2;5041:9;5032:7;5028:23;5024:32;5021:119;;;5059:79;;:::i;:::-;5021:119;5179:1;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5150:117;4945:329;;;;:::o;5280:122::-;5353:24;5371:5;5353:24;:::i;:::-;5346:5;5343:35;5333:63;;5392:1;5389;5382:12;5333:63;5280:122;:::o;5408:139::-;5454:5;5492:6;5479:20;5470:29;;5508:33;5535:5;5508:33;:::i;:::-;5408:139;;;;:::o;5553:329::-;5612:6;5661:2;5649:9;5640:7;5636:23;5632:32;5629:119;;;5667:79;;:::i;:::-;5629:119;5787:1;5812:53;5857:7;5848:6;5837:9;5833:22;5812:53;:::i;:::-;5802:63;;5758:117;5553:329;;;;:::o;5888:99::-;5940:6;5974:5;5968:12;5958:22;;5888:99;;;:::o;5993:169::-;6077:11;6111:6;6106:3;6099:19;6151:4;6146:3;6142:14;6127:29;;5993:169;;;;:::o;6168:139::-;6257:6;6252:3;6247;6241:23;6298:1;6289:6;6284:3;6280:16;6273:27;6168:139;;;:::o;6313:377::-;6401:3;6429:39;6462:5;6429:39;:::i;:::-;6484:71;6548:6;6543:3;6484:71;:::i;:::-;6477:78;;6564:65;6622:6;6617:3;6610:4;6603:5;6599:16;6564:65;:::i;:::-;6654:29;6676:6;6654:29;:::i;:::-;6649:3;6645:39;6638:46;;6405:285;6313:377;;;;:::o;6696:313::-;6809:4;6847:2;6836:9;6832:18;6824:26;;6896:9;6890:4;6886:20;6882:1;6871:9;6867:17;6860:47;6924:78;6997:4;6988:6;6924:78;:::i;:::-;6916:86;;6696:313;;;;:::o;7015:143::-;7072:5;7103:6;7097:13;7088:22;;7119:33;7146:5;7119:33;:::i;:::-;7015:143;;;;:::o;7164:351::-;7234:6;7283:2;7271:9;7262:7;7258:23;7254:32;7251:119;;;7289:79;;:::i;:::-;7251:119;7409:1;7434:64;7490:7;7481:6;7470:9;7466:22;7434:64;:::i;:::-;7424:74;;7380:128;7164:351;;;;:::o;7521:179::-;7661:31;7657:1;7649:6;7645:14;7638:55;7521:179;:::o;7706:366::-;7848:3;7869:67;7933:2;7928:3;7869:67;:::i;:::-;7862:74;;7945:93;8034:3;7945:93;:::i;:::-;8063:2;8058:3;8054:12;8047:19;;7706:366;;;:::o;8078:419::-;8244:4;8282:2;8271:9;8267:18;8259:26;;8331:9;8325:4;8321:20;8317:1;8306:9;8302:17;8295:47;8359:131;8485:4;8359:131;:::i;:::-;8351:139;;8078:419;;;:::o;8503:173::-;8643:25;8639:1;8631:6;8627:14;8620:49;8503:173;:::o;8682:366::-;8824:3;8845:67;8909:2;8904:3;8845:67;:::i;:::-;8838:74;;8921:93;9010:3;8921:93;:::i;:::-;9039:2;9034:3;9030:12;9023:19;;8682:366;;;:::o;9054:419::-;9220:4;9258:2;9247:9;9243:18;9235:26;;9307:9;9301:4;9297:20;9293:1;9282:9;9278:17;9271:47;9335:131;9461:4;9335:131;:::i;:::-;9327:139;;9054:419;;;:::o;9479:148::-;9581:11;9618:3;9603:18;;9479:148;;;;:::o;9633:159::-;9773:11;9769:1;9761:6;9757:14;9750:35;9633:159;:::o;9798:400::-;9958:3;9979:84;10061:1;10056:3;9979:84;:::i;:::-;9972:91;;10072:93;10161:3;10072:93;:::i;:::-;10190:1;10185:3;10181:11;10174:18;;9798:400;;;:::o;10204:79::-;10243:7;10272:5;10261:16;;10204:79;;;:::o;10289:157::-;10394:45;10414:24;10432:5;10414:24;:::i;:::-;10394:45;:::i;:::-;10389:3;10382:58;10289:157;;:::o;10452:522::-;10665:3;10687:148;10831:3;10687:148;:::i;:::-;10680:155;;10845:75;10916:3;10907:6;10845:75;:::i;:::-;10945:2;10940:3;10936:12;10929:19;;10965:3;10958:10;;10452:522;;;;:::o;10980:182::-;11120:34;11116:1;11108:6;11104:14;11097:58;10980:182;:::o;11168:366::-;11310:3;11331:67;11395:2;11390:3;11331:67;:::i;:::-;11324:74;;11407:93;11496:3;11407:93;:::i;:::-;11525:2;11520:3;11516:12;11509:19;;11168:366;;;:::o;11540:419::-;11706:4;11744:2;11733:9;11729:18;11721:26;;11793:9;11787:4;11783:20;11779:1;11768:9;11764:17;11757:47;11821:131;11947:4;11821:131;:::i;:::-;11813:139;;11540:419;;;:::o;11965:178::-;12105:30;12101:1;12093:6;12089:14;12082:54;11965:178;:::o;12149:366::-;12291:3;12312:67;12376:2;12371:3;12312:67;:::i;:::-;12305:74;;12388:93;12477:3;12388:93;:::i;:::-;12506:2;12501:3;12497:12;12490:19;;12149:366;;;:::o;12521:419::-;12687:4;12725:2;12714:9;12710:18;12702:26;;12774:9;12768:4;12764:20;12760:1;12749:9;12745:17;12738:47;12802:131;12928:4;12802:131;:::i;:::-;12794:139;;12521:419;;;:::o;12946:231::-;13086:34;13082:1;13074:6;13070:14;13063:58;13155:14;13150:2;13142:6;13138:15;13131:39;12946:231;:::o;13183:366::-;13325:3;13346:67;13410:2;13405:3;13346:67;:::i;:::-;13339:74;;13422:93;13511:3;13422:93;:::i;:::-;13540:2;13535:3;13531:12;13524:19;;13183:366;;;:::o;13555:419::-;13721:4;13759:2;13748:9;13744:18;13736:26;;13808:9;13802:4;13798:20;13794:1;13783:9;13779:17;13772:47;13836:131;13962:4;13836:131;:::i;:::-;13828:139;;13555:419;;;:::o;13980:118::-;14067:24;14085:5;14067:24;:::i;:::-;14062:3;14055:37;13980:118;;:::o;14104:332::-;14225:4;14263:2;14252:9;14248:18;14240:26;;14276:71;14344:1;14333:9;14329:17;14320:6;14276:71;:::i;:::-;14357:72;14425:2;14414:9;14410:18;14401:6;14357:72;:::i;:::-;14104:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "787800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Directory()": "infinite",
								"changeDirectoryAddress(address)": "infinite",
								"deployEtfVault(uint256)": "infinite",
								"fetchFromDirectory(string)": "infinite",
								"owner()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 850,
									"end": 1368,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 850,
									"end": 1368,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 850,
									"end": 1368,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 938,
									"end": 996,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 938,
									"end": 996,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 938,
									"end": 996,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 938,
									"end": 996,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 938,
									"end": 996,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 938,
									"end": 996,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 938,
									"end": 996,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 938,
									"end": 996,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 938,
									"end": 996,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 938,
									"end": 996,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 982,
									"end": 992,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 412,
									"end": 437,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 426,
									"end": 436,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 412,
									"end": 425,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 412,
									"end": 425,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 412,
									"end": 425,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 412,
									"end": 437,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 412,
									"end": 437,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 412,
									"end": 437,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 412,
									"end": 437,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 412,
									"end": 437,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 370,
									"end": 464,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 938,
									"end": 996,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 850,
									"end": 1368,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 850,
									"end": 1368,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 589,
									"end": 1050,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 589,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 681,
									"end": 682,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 659,
									"end": 683,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 659,
									"end": 683,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 659,
									"end": 669,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 659,
									"end": 683,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 659,
									"end": 683,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 659,
									"end": 683,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 651,
									"end": 720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 763,
									"end": 764,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 738,
									"end": 748,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 738,
									"end": 760,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 738,
									"end": 760,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 738,
									"end": 760,
									"name": "EXTCODESIZE",
									"source": 3
								},
								{
									"begin": 738,
									"end": 764,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 730,
									"end": 797,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 861,
									"end": 871,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 850,
									"end": 878,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 850,
									"end": 878,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 850,
									"end": 878,
									"name": "PUSH",
									"source": 3,
									"value": "8DA5CB5B"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "STATICCALL",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 850,
									"end": 880,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 846,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 846,
									"end": 1044,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 979,
									"end": 1033,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 846,
									"end": 1044,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 846,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 936,
									"end": 946,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 913,
									"end": 922,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 913,
									"end": 922,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 913,
									"end": 947,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 913,
									"end": 947,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 913,
									"end": 947,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 913,
									"end": 947,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 881,
									"end": 958,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 589,
									"end": 1050,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 589,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1286,
									"end": 1297,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1320,
									"end": 1326,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1315,
									"end": 1318,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1308,
									"end": 1327,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1360,
									"end": 1364,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1355,
									"end": 1358,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1351,
									"end": 1365,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1336,
									"end": 1365,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1336,
									"end": 1365,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1377,
									"end": 1559,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1377,
									"end": 1559,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1551,
									"name": "PUSH",
									"source": 7,
									"value": "4469726563746F72792063616E6E6F74206265207A65726F2061646472657373"
								},
								{
									"begin": 1513,
									"end": 1514,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 1511,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1501,
									"end": 1515,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1494,
									"end": 1552,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1377,
									"end": 1559,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1377,
									"end": 1559,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1565,
									"end": 1931,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1565,
									"end": 1931,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1707,
									"end": 1710,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1728,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1792,
									"end": 1794,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1787,
									"end": 1790,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1728,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1728,
									"end": 1795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1728,
									"end": 1795,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1728,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1721,
									"end": 1795,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1721,
									"end": 1795,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1804,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1893,
									"end": 1896,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1804,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1804,
									"end": 1897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1804,
									"end": 1897,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1804,
									"end": 1897,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1924,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1917,
									"end": 1920,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1913,
									"end": 1925,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1906,
									"end": 1925,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1906,
									"end": 1925,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1565,
									"end": 1931,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1565,
									"end": 1931,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1565,
									"end": 1931,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1565,
									"end": 1931,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1937,
									"end": 2356,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 1937,
									"end": 2356,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2141,
									"end": 2143,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2130,
									"end": 2139,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2126,
									"end": 2144,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2118,
									"end": 2144,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2118,
									"end": 2144,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2199,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2184,
									"end": 2188,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2180,
									"end": 2200,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2176,
									"end": 2177,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2165,
									"end": 2174,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2161,
									"end": 2178,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2154,
									"end": 2201,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2218,
									"end": 2349,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2344,
									"end": 2348,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2218,
									"end": 2349,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 2218,
									"end": 2349,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2218,
									"end": 2349,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2218,
									"end": 2349,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2210,
									"end": 2349,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2210,
									"end": 2349,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1937,
									"end": 2356,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1937,
									"end": 2356,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1937,
									"end": 2356,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1937,
									"end": 2356,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2362,
									"end": 2540,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 2362,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2502,
									"end": 2532,
									"name": "PUSH",
									"source": 7,
									"value": "4469726563746F7279206D757374206265206120636F6E747261637400000000"
								},
								{
									"begin": 2498,
									"end": 2499,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2490,
									"end": 2496,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2486,
									"end": 2500,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2479,
									"end": 2533,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2362,
									"end": 2540,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2362,
									"end": 2540,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2546,
									"end": 2912,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 2546,
									"end": 2912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2688,
									"end": 2691,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2709,
									"end": 2776,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2773,
									"end": 2775,
									"name": "PUSH",
									"source": 7,
									"value": "1C"
								},
								{
									"begin": 2768,
									"end": 2771,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2709,
									"end": 2776,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 2709,
									"end": 2776,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2709,
									"end": 2776,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2709,
									"end": 2776,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2702,
									"end": 2776,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2702,
									"end": 2776,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2785,
									"end": 2878,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2785,
									"end": 2878,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 2785,
									"end": 2878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2785,
									"end": 2878,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 2785,
									"end": 2878,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2903,
									"end": 2905,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2898,
									"end": 2901,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2894,
									"end": 2906,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2887,
									"end": 2906,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2887,
									"end": 2906,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2546,
									"end": 2912,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2546,
									"end": 2912,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2546,
									"end": 2912,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2546,
									"end": 2912,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2918,
									"end": 3337,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 2918,
									"end": 3337,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3084,
									"end": 3088,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3122,
									"end": 3124,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3111,
									"end": 3120,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3107,
									"end": 3125,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3099,
									"end": 3125,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3099,
									"end": 3125,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3171,
									"end": 3180,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3165,
									"end": 3169,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3161,
									"end": 3181,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3157,
									"end": 3158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3146,
									"end": 3155,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3142,
									"end": 3159,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3135,
									"end": 3182,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3199,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 3325,
									"end": 3329,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3199,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 3199,
									"end": 3330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3199,
									"end": 3330,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 3199,
									"end": 3330,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3191,
									"end": 3330,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3191,
									"end": 3330,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2918,
									"end": 3337,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2918,
									"end": 3337,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2918,
									"end": 3337,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2918,
									"end": 3337,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3343,
									"end": 3574,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 3343,
									"end": 3574,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3483,
									"end": 3517,
									"name": "PUSH",
									"source": 7,
									"value": "4469726563746F7279206164647265737320646F6573206E6F7420696D706C65"
								},
								{
									"begin": 3479,
									"end": 3480,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3471,
									"end": 3477,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3467,
									"end": 3481,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3460,
									"end": 3518,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3552,
									"end": 3566,
									"name": "PUSH",
									"source": 7,
									"value": "6D656E74206F776E657228290000000000000000000000000000000000000000"
								},
								{
									"begin": 3547,
									"end": 3549,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3539,
									"end": 3545,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3535,
									"end": 3550,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3528,
									"end": 3567,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3343,
									"end": 3574,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3343,
									"end": 3574,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3580,
									"end": 3946,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3580,
									"end": 3946,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3722,
									"end": 3725,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3743,
									"end": 3810,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 3807,
									"end": 3809,
									"name": "PUSH",
									"source": 7,
									"value": "2C"
								},
								{
									"begin": 3802,
									"end": 3805,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3743,
									"end": 3810,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 3743,
									"end": 3810,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3743,
									"end": 3810,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 3743,
									"end": 3810,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3736,
									"end": 3810,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3736,
									"end": 3810,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3819,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 3908,
									"end": 3911,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3819,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 3819,
									"end": 3912,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3819,
									"end": 3912,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 3819,
									"end": 3912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3937,
									"end": 3939,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3932,
									"end": 3935,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3928,
									"end": 3940,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3921,
									"end": 3940,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3921,
									"end": 3940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3580,
									"end": 3946,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3580,
									"end": 3946,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3580,
									"end": 3946,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3580,
									"end": 3946,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3952,
									"end": 4371,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 3952,
									"end": 4371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4122,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4156,
									"end": 4158,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4145,
									"end": 4154,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4141,
									"end": 4159,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4133,
									"end": 4159,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4133,
									"end": 4159,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4205,
									"end": 4214,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4199,
									"end": 4203,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4195,
									"end": 4215,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4191,
									"end": 4192,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4180,
									"end": 4189,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4176,
									"end": 4193,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4169,
									"end": 4216,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4233,
									"end": 4364,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 4359,
									"end": 4363,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4233,
									"end": 4364,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4233,
									"end": 4364,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4233,
									"end": 4364,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 4233,
									"end": 4364,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4225,
									"end": 4364,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4225,
									"end": 4364,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3952,
									"end": 4371,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3952,
									"end": 4371,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3952,
									"end": 4371,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3952,
									"end": 4371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 850,
									"end": 1368,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 850,
									"end": 1368,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 850,
									"end": 1368,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 850,
									"end": 1368,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 850,
									"end": 1368,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 850,
									"end": 1368,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 850,
									"end": 1368,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 850,
									"end": 1368,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 850,
									"end": 1368,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202eefded312626630f732611bd09e6bda2091d58bb8059b3938cd15f48ead823364736f6c634300081e0033",
									".code": [
										{
											"begin": 850,
											"end": 1368,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "PUSH",
											"source": 6,
											"value": "27262618"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "PUSH",
											"source": 6,
											"value": "658A847A"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "PUSH",
											"source": 6,
											"value": "B57C59A7"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "PUSH",
											"source": 6,
											"value": "BA4C7BE1"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 1368,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1272,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1272,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1272,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 336,
											"end": 363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 336,
											"end": 363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1178,
											"end": 1266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1178,
											"end": 1266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1089,
											"end": 1366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1089,
											"end": 1366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1089,
											"end": 1366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 470,
											"end": 583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 470,
											"end": 583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1348,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1395,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1367,
											"end": 1395,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1395,
											"name": "PUSH",
											"source": 3,
											"value": "27262618"
										},
										{
											"begin": 1396,
											"end": 1400,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1367,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1367,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1401,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1216,
											"end": 1223,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1242,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1163,
											"end": 1176,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 817,
											"end": 850,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 850,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 817,
											"end": 850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 817,
											"end": 850,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 850,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 817,
											"end": 850,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 817,
											"end": 850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 817,
											"end": 850,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 817,
											"end": 850,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 817,
											"end": 850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 817,
											"end": 850,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 850,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 817,
											"end": 850,
											"name": "PUSH",
											"source": 5,
											"value": "6574662D666163746F7279000000000000000000000000000000000000000000"
										},
										{
											"begin": 817,
											"end": 850,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 817,
											"end": 850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 817,
											"end": 850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 817,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 817,
											"end": 850,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 817,
											"end": 850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 803,
											"end": 850,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 803,
											"end": 850,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 803,
											"end": 813,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 803,
											"end": 850,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 803,
											"end": 850,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 803,
											"end": 850,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 795,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 795,
											"end": 884,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 795,
											"end": 884,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 795,
											"end": 884,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 795,
											"end": 884,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 795,
											"end": 884,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 795,
											"end": 884,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 795,
											"end": 884,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 795,
											"end": 884,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 795,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 795,
											"end": 884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 795,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 795,
											"end": 884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 795,
											"end": 884,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 795,
											"end": 884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 795,
											"end": 884,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 795,
											"end": 884,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 795,
											"end": 884,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 795,
											"end": 884,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 795,
											"end": 884,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 795,
											"end": 884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 795,
											"end": 884,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 795,
											"end": 884,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 795,
											"end": 884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1188,
											"end": 1205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1208,
											"end": 1220,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1208,
											"end": 1222,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1222,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1208,
											"end": 1222,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1222,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1222,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1267,
											"end": 1276,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1278,
											"end": 1292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1284,
											"end": 1291,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1278,
											"end": 1283,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1278,
											"end": 1292,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1278,
											"end": 1292,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1278,
											"end": 1292,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1266,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1241,
											"end": 1293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1241,
											"end": 1293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1233,
											"end": 1293,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1233,
											"end": 1293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1327,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1312,
											"end": 1339,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C4D66DE8"
										},
										{
											"begin": 1348,
											"end": 1357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1357,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1357,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1357,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1348,
											"end": 1357,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1357,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1357,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1348,
											"end": 1357,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1312,
											"end": 1359,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1359,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1366,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 470,
											"end": 583,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1109,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1095,
											"end": 1105,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1087,
											"end": 1154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 551,
											"end": 576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 565,
											"end": 575,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 551,
											"end": 564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 551,
											"end": 576,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 551,
											"end": 576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 551,
											"end": 576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 548,
											"end": 771,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 548,
											"end": 771,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 595,
											"end": 602,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 614,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 635,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 635,
											"end": 671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 635,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 635,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 635,
											"end": 671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 635,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 635,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 635,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 635,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 635,
											"end": 671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 635,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "6574662D7661756C742D696D706C000000000000000000000000000000000000"
										},
										{
											"begin": 635,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 635,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 635,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 635,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 635,
											"end": 671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 635,
											"end": 671,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 635,
											"end": 671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 614,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 614,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 706,
											"end": 707,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 708,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 685,
											"end": 708,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 685,
											"end": 708,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 685,
											"end": 708,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 685,
											"end": 708,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 681,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 681,
											"end": 729,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 717,
											"end": 729,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 729,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 717,
											"end": 729,
											"name": "PUSH",
											"source": 6,
											"value": "8020A5C700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 717,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 717,
											"end": 729,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 717,
											"end": 729,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 717,
											"end": 729,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 717,
											"end": 729,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 729,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 717,
											"end": 729,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 717,
											"end": 729,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 717,
											"end": 729,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 717,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 717,
											"end": 729,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 681,
											"end": 729,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 681,
											"end": 729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 755,
											"end": 764,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 748,
											"end": 764,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 748,
											"end": 764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 748,
											"end": 764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 548,
											"end": 771,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 548,
											"end": 771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 405,
											"end": 542,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 405,
											"end": 542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 460,
											"end": 467,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 533,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 496,
											"end": 534,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 534,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 496,
											"end": 534,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 534,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 496,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 496,
											"end": 534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 496,
											"end": 534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 496,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 496,
											"end": 534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 496,
											"end": 534,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 496,
											"end": 534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 496,
											"end": 534,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 534,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 496,
											"end": 534,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 534,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 496,
											"end": 534,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 496,
											"end": 534,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 496,
											"end": 534,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 496,
											"end": 534,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 496,
											"end": 534,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 496,
											"end": 534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 496,
											"end": 534,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 534,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 486,
											"end": 535,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 535,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 486,
											"end": 535,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 535,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 486,
											"end": 535,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 486,
											"end": 535,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 479,
											"end": 535,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 535,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 405,
											"end": 542,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 405,
											"end": 542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 405,
											"end": 542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 405,
											"end": 542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 4044,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3875,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3994,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4013,
											"end": 4027,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4029,
											"end": 4033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3994,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3994,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4037,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3994,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 4044,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 4044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 4044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 4044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 4044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1050,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 589,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 681,
											"end": 682,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 659,
											"end": 683,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 659,
											"end": 669,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 659,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 659,
											"end": 683,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 659,
											"end": 683,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 651,
											"end": 720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 763,
											"end": 764,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 738,
											"end": 760,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 738,
											"end": 760,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 738,
											"end": 764,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 730,
											"end": 797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 861,
											"end": 871,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 850,
											"end": 878,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 850,
											"end": 878,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 850,
											"end": 878,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 850,
											"end": 880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 846,
											"end": 1044,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 979,
											"end": 1033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1044,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 846,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 936,
											"end": 946,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 913,
											"end": 922,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 922,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 947,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 913,
											"end": 947,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 913,
											"end": 947,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 913,
											"end": 947,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 881,
											"end": 958,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 1050,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 1050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4805,
											"end": 5779,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4805,
											"end": 5779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4934,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4990,
											"end": 4995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4966,
											"end": 4987,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 4966,
											"end": 4995,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5085,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4962,
											"end": 5085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5045,
											"end": 5066,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 5068,
											"end": 5073,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "PUSH",
											"source": 0,
											"value": "CF47918100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5018,
											"end": 5074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5085,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4962,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5371,
											"end": 5419,
											"name": "PUSH",
											"source": 0,
											"value": "3D602D80600A3D3981F3363D3D373D3D3D363D73000000"
										},
										{
											"begin": 5353,
											"end": 5367,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5347,
											"end": 5351,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5343,
											"end": 5368,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5337,
											"end": 5341,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 5333,
											"end": 5369,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 5330,
											"end": 5420,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5317,
											"end": 5421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5578,
											"end": 5610,
											"name": "PUSH",
											"source": 0,
											"value": "5AF43D82803E903D91602B57FD5BF3"
										},
										{
											"begin": 5561,
											"end": 5575,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5555,
											"end": 5559,
											"name": "PUSH",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5551,
											"end": 5576,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5548,
											"end": 5611,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5535,
											"end": 5612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5668,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5658,
											"end": 5662,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5652,
											"end": 5656,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5645,
											"end": 5650,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5637,
											"end": 5669,
											"name": "CREATE2",
											"source": 0
										},
										{
											"begin": 5625,
											"end": 5669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5625,
											"end": 5669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5692,
											"end": 5714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5692,
											"end": 5700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5692,
											"end": 5714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5692,
											"end": 5714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5692,
											"end": 5714,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5688,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5688,
											"end": 5773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "PUSH",
											"source": 0,
											"value": "B06EBF3D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5688,
											"end": 5773,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5688,
											"end": 5773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 5779,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 5779,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 5779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 5779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 5779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 5779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 580,
											"end": 682,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 580,
											"end": 682,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 621,
											"end": 627,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 674,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 668,
											"end": 675,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 663,
											"end": 665,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 652,
											"end": 666,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 648,
											"end": 676,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 638,
											"end": 676,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 638,
											"end": 676,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 580,
											"end": 682,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 580,
											"end": 682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 688,
											"end": 868,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 688,
											"end": 868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 736,
											"end": 813,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 733,
											"end": 734,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 814,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 833,
											"end": 837,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 823,
											"end": 838,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 857,
											"end": 861,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 862,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 979,
											"end": 983,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 957,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 957,
											"end": 984,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 957,
											"end": 984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 949,
											"end": 955,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 945,
											"end": 985,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1049,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1070,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1033,
											"end": 1095,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1098,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1138,
											"end": 1148,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1149,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1155,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 874,
											"end": 1155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1195,
											"end": 1201,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1222,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1279,
											"end": 1283,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1277,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1251,
											"end": 1284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1466,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1446,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1467,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1470,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1530,
											"end": 1536,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1508,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1592,
											"end": 1596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1706,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1701,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 1749,
											"end": 1750,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1740,
											"end": 1746,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1738,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1724,
											"end": 1751,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1847,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1925,
											"end": 1931,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1883,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1867,
											"end": 1933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 1933,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 1933,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1956,
											"end": 1962,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1954,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 1998,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 1992,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 1999,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2035,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2029,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2021,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2030,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2011,
											"end": 2036,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 2039,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2176,
											"end": 2182,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2174,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2166,
											"end": 2169,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2129,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1848,
											"end": 2189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 2189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2270,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2311,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2312,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2318,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2322,
											"end": 2401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2439,
											"end": 2445,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2446,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 2539,
											"end": 2542,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2524,
											"end": 2528,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2529,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 2464,
											"end": 2543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2455,
											"end": 2543,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2455,
											"end": 2543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2624,
											"end": 2630,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2661,
											"end": 2670,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2659,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2671,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2676,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 2679,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2827,
											"end": 2828,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2825,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2812,
											"end": 2829,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2799,
											"end": 2830,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2875,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2876,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2879,
											"end": 2958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3039,
											"end": 3046,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3036,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2984,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3047,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2770,
											"end": 3057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 3064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3196,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 3070,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3107,
											"end": 3114,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3189,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3140,
											"end": 3145,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3196,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3196,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3196,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3298,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 3202,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3239,
											"end": 3246,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3286,
											"end": 3291,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3268,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 3268,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3268,
											"end": 3292,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3268,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3292,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3298,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3298,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3304,
											"end": 3422,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 3304,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 3391,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3415,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3391,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3386,
											"end": 3389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3379,
											"end": 3416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3304,
											"end": 3422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3304,
											"end": 3422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3304,
											"end": 3422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3428,
											"end": 3650,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 3428,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3521,
											"end": 3525,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3561,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3548,
											"end": 3557,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3562,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3536,
											"end": 3562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3536,
											"end": 3562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3640,
											"end": 3641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3629,
											"end": 3638,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3625,
											"end": 3642,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3616,
											"end": 3622,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 3572,
											"end": 3643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3643,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3572,
											"end": 3643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3428,
											"end": 3650,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3428,
											"end": 3650,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3428,
											"end": 3650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3428,
											"end": 3650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3428,
											"end": 3650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3656,
											"end": 3716,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 3656,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3684,
											"end": 3687,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3710,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3698,
											"end": 3710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3698,
											"end": 3710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3656,
											"end": 3716,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3656,
											"end": 3716,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3656,
											"end": 3716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3656,
											"end": 3716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3864,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 3722,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3772,
											"end": 3781,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3805,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3823,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3832,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3850,
											"end": 3855,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3832,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 3832,
											"end": 3856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3832,
											"end": 3856,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3832,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3823,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 3823,
											"end": 3857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3823,
											"end": 3857,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3823,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3805,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 3805,
											"end": 3858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3805,
											"end": 3858,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3805,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3792,
											"end": 3858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3792,
											"end": 3858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3864,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3864,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3864,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3870,
											"end": 3996,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 3870,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3920,
											"end": 3929,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3984,
											"end": 3989,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3953,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 3953,
											"end": 3990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3953,
											"end": 3990,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3953,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3940,
											"end": 3990,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3940,
											"end": 3990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3870,
											"end": 3996,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3870,
											"end": 3996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3870,
											"end": 3996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3870,
											"end": 3996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4002,
											"end": 4146,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 4002,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4070,
											"end": 4079,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4103,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 4103,
											"end": 4140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4103,
											"end": 4140,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 4103,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4002,
											"end": 4146,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4002,
											"end": 4146,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4002,
											"end": 4146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4002,
											"end": 4146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4319,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 4152,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 4306,
											"end": 4311,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 4257,
											"end": 4312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4312,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 4257,
											"end": 4312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4252,
											"end": 4255,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4245,
											"end": 4313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4319,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4319,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4583,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 4325,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4436,
											"end": 4440,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4474,
											"end": 4476,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4463,
											"end": 4472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4451,
											"end": 4477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4451,
											"end": 4477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 4573,
											"end": 4574,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4571,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4558,
											"end": 4575,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4555,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 4487,
											"end": 4576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4576,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 4487,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4583,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4583,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4589,
											"end": 4666,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4589,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4626,
											"end": 4633,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4655,
											"end": 4660,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4644,
											"end": 4660,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4644,
											"end": 4660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4589,
											"end": 4666,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4589,
											"end": 4666,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4589,
											"end": 4666,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4589,
											"end": 4666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4794,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 4672,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4745,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4763,
											"end": 4768,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4745,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4745,
											"end": 4769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4745,
											"end": 4769,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4745,
											"end": 4769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4738,
											"end": 4743,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4735,
											"end": 4770,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4725,
											"end": 4788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4725,
											"end": 4788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4784,
											"end": 4785,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4774,
											"end": 4786,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4725,
											"end": 4788,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4725,
											"end": 4788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4939,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4800,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4846,
											"end": 4851,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4884,
											"end": 4890,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 4891,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4862,
											"end": 4891,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4862,
											"end": 4891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4927,
											"end": 4932,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 4900,
											"end": 4933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 4933,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4900,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4939,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4945,
											"end": 5274,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 4945,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5004,
											"end": 5010,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5055,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5041,
											"end": 5050,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5032,
											"end": 5039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5051,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5024,
											"end": 5056,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5021,
											"end": 5140,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5021,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 5021,
											"end": 5140,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5059,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 5059,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 5059,
											"end": 5138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5059,
											"end": 5138,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 5059,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5021,
											"end": 5140,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 5021,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5180,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5150,
											"end": 5267,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4945,
											"end": 5274,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4945,
											"end": 5274,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4945,
											"end": 5274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4945,
											"end": 5274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4945,
											"end": 5274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5280,
											"end": 5402,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 5280,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5353,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 5371,
											"end": 5376,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5353,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 5353,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5353,
											"end": 5377,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 5353,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5346,
											"end": 5351,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5343,
											"end": 5378,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 5333,
											"end": 5396,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5392,
											"end": 5393,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5390,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5382,
											"end": 5394,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5396,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 5333,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5280,
											"end": 5402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5280,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5408,
											"end": 5547,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 5408,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5454,
											"end": 5459,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5492,
											"end": 5498,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5479,
											"end": 5499,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5470,
											"end": 5499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5470,
											"end": 5499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5508,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 5535,
											"end": 5540,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5508,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 5508,
											"end": 5541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5508,
											"end": 5541,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 5508,
											"end": 5541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5408,
											"end": 5547,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5408,
											"end": 5547,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5408,
											"end": 5547,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5408,
											"end": 5547,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5408,
											"end": 5547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5553,
											"end": 5882,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 5553,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5612,
											"end": 5618,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5661,
											"end": 5663,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5649,
											"end": 5658,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5647,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5636,
											"end": 5659,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5664,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5629,
											"end": 5748,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5629,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 5629,
											"end": 5748,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 5667,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 5667,
											"end": 5746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5746,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 5667,
											"end": 5746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5629,
											"end": 5748,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 5629,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5787,
											"end": 5788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5812,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5857,
											"end": 5864,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5848,
											"end": 5854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5846,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5833,
											"end": 5855,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5812,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 5812,
											"end": 5865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5812,
											"end": 5865,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5812,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5802,
											"end": 5865,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5802,
											"end": 5865,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5758,
											"end": 5875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5553,
											"end": 5882,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5553,
											"end": 5882,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5553,
											"end": 5882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5553,
											"end": 5882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5553,
											"end": 5882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 5987,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 5888,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5940,
											"end": 5946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5974,
											"end": 5979,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5968,
											"end": 5980,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5958,
											"end": 5980,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5958,
											"end": 5980,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 5987,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 5987,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 5987,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 5987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5993,
											"end": 6162,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 5993,
											"end": 6162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6077,
											"end": 6088,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6117,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6109,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6118,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6151,
											"end": 6155,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6146,
											"end": 6149,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6142,
											"end": 6156,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6127,
											"end": 6156,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6127,
											"end": 6156,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5993,
											"end": 6162,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5993,
											"end": 6162,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5993,
											"end": 6162,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5993,
											"end": 6162,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5993,
											"end": 6162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6168,
											"end": 6307,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 6168,
											"end": 6307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6257,
											"end": 6263,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6252,
											"end": 6255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6247,
											"end": 6250,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6241,
											"end": 6264,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 6298,
											"end": 6299,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6289,
											"end": 6295,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6284,
											"end": 6287,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6280,
											"end": 6296,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6273,
											"end": 6300,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6168,
											"end": 6307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6168,
											"end": 6307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6168,
											"end": 6307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6168,
											"end": 6307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6313,
											"end": 6690,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 6313,
											"end": 6690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6401,
											"end": 6404,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6429,
											"end": 6468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 6462,
											"end": 6467,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 6429,
											"end": 6468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6468,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 6429,
											"end": 6468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6484,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 6548,
											"end": 6554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 6546,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6484,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 6484,
											"end": 6555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6484,
											"end": 6555,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 6484,
											"end": 6555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6477,
											"end": 6555,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6477,
											"end": 6555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6564,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 6622,
											"end": 6628,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6617,
											"end": 6620,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6610,
											"end": 6614,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6599,
											"end": 6615,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6564,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 6564,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6564,
											"end": 6629,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 6564,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6654,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 6676,
											"end": 6682,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6654,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 6654,
											"end": 6683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6654,
											"end": 6683,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 6654,
											"end": 6683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6649,
											"end": 6652,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6645,
											"end": 6684,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 6684,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 6684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6313,
											"end": 6690,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6313,
											"end": 6690,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6313,
											"end": 6690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6313,
											"end": 6690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6313,
											"end": 6690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 7009,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 6696,
											"end": 7009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6809,
											"end": 6813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6847,
											"end": 6849,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6836,
											"end": 6845,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6832,
											"end": 6850,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6824,
											"end": 6850,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6824,
											"end": 6850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6896,
											"end": 6905,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 6894,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6886,
											"end": 6906,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6882,
											"end": 6883,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6871,
											"end": 6880,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6867,
											"end": 6884,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6860,
											"end": 6907,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6924,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 6997,
											"end": 7001,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6988,
											"end": 6994,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6924,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 6924,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6924,
											"end": 7002,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 6924,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6916,
											"end": 7002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6916,
											"end": 7002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 7009,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 7009,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 7009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 7009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 7009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7015,
											"end": 7158,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 7015,
											"end": 7158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7072,
											"end": 7077,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7103,
											"end": 7109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7097,
											"end": 7110,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7088,
											"end": 7110,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7088,
											"end": 7110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7119,
											"end": 7152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 7146,
											"end": 7151,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7119,
											"end": 7152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 7119,
											"end": 7152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7119,
											"end": 7152,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 7119,
											"end": 7152,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7015,
											"end": 7158,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7015,
											"end": 7158,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7015,
											"end": 7158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7015,
											"end": 7158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7015,
											"end": 7158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7515,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 7164,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7234,
											"end": 7240,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7283,
											"end": 7285,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7271,
											"end": 7280,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7262,
											"end": 7269,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7258,
											"end": 7281,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7254,
											"end": 7286,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7289,
											"end": 7368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 7289,
											"end": 7368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 7289,
											"end": 7368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7289,
											"end": 7368,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 7289,
											"end": 7368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7409,
											"end": 7410,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7434,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 7490,
											"end": 7497,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7481,
											"end": 7487,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7470,
											"end": 7479,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 7488,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7434,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 7434,
											"end": 7498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7434,
											"end": 7498,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 7434,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7424,
											"end": 7498,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7424,
											"end": 7498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7380,
											"end": 7508,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7515,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7515,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7515,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7515,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7521,
											"end": 7700,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 7521,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7661,
											"end": 7692,
											"name": "PUSH",
											"source": 7,
											"value": "6D73672E73656E646572206973206E6F742065746620666163746F7279000000"
										},
										{
											"begin": 7657,
											"end": 7658,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7649,
											"end": 7655,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7645,
											"end": 7659,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7638,
											"end": 7693,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7521,
											"end": 7700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7521,
											"end": 7700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 8072,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 7706,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7848,
											"end": 7851,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7869,
											"end": 7936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 7933,
											"end": 7935,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 7928,
											"end": 7931,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7869,
											"end": 7936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 7869,
											"end": 7936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7869,
											"end": 7936,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 7869,
											"end": 7936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7862,
											"end": 7936,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7862,
											"end": 7936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7945,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 8034,
											"end": 8037,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7945,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 7945,
											"end": 8038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7945,
											"end": 8038,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 7945,
											"end": 8038,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8063,
											"end": 8065,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8058,
											"end": 8061,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8054,
											"end": 8066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8047,
											"end": 8066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8047,
											"end": 8066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 8072,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 8072,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 8072,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 8072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8078,
											"end": 8497,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 8078,
											"end": 8497,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8244,
											"end": 8248,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8282,
											"end": 8284,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8271,
											"end": 8280,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8267,
											"end": 8285,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8259,
											"end": 8285,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8259,
											"end": 8285,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8331,
											"end": 8340,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8329,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8341,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8317,
											"end": 8318,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8306,
											"end": 8315,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8302,
											"end": 8319,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8295,
											"end": 8342,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8359,
											"end": 8490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 8485,
											"end": 8489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8359,
											"end": 8490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 8359,
											"end": 8490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8359,
											"end": 8490,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 8359,
											"end": 8490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8351,
											"end": 8490,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8351,
											"end": 8490,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8078,
											"end": 8497,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8078,
											"end": 8497,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8078,
											"end": 8497,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8078,
											"end": 8497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8503,
											"end": 8676,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 8503,
											"end": 8676,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8643,
											"end": 8668,
											"name": "PUSH",
											"source": 7,
											"value": "43616C6C6572206973206E6F7420746865206F776E6572000000000000000000"
										},
										{
											"begin": 8639,
											"end": 8640,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8631,
											"end": 8637,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8627,
											"end": 8641,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8669,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8503,
											"end": 8676,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8503,
											"end": 8676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8682,
											"end": 9048,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 8682,
											"end": 9048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8824,
											"end": 8827,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8845,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 8909,
											"end": 8911,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 8904,
											"end": 8907,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8845,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 8845,
											"end": 8912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8845,
											"end": 8912,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 8845,
											"end": 8912,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8838,
											"end": 8912,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8838,
											"end": 8912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8921,
											"end": 9014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 9010,
											"end": 9013,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8921,
											"end": 9014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 8921,
											"end": 9014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8921,
											"end": 9014,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 8921,
											"end": 9014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9041,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9034,
											"end": 9037,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9030,
											"end": 9042,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9023,
											"end": 9042,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9023,
											"end": 9042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8682,
											"end": 9048,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8682,
											"end": 9048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8682,
											"end": 9048,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8682,
											"end": 9048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9473,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 9054,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9220,
											"end": 9224,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9258,
											"end": 9260,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9247,
											"end": 9256,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9243,
											"end": 9261,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9235,
											"end": 9261,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9235,
											"end": 9261,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9307,
											"end": 9316,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9301,
											"end": 9305,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9297,
											"end": 9317,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9293,
											"end": 9294,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9282,
											"end": 9291,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9278,
											"end": 9295,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9271,
											"end": 9318,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 9461,
											"end": 9465,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 9335,
											"end": 9466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9466,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 9335,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9327,
											"end": 9466,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9327,
											"end": 9466,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9473,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9473,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9479,
											"end": 9627,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 9479,
											"end": 9627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9581,
											"end": 9592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9618,
											"end": 9621,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9479,
											"end": 9627,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9479,
											"end": 9627,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9479,
											"end": 9627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9479,
											"end": 9627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9479,
											"end": 9627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9633,
											"end": 9792,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 9633,
											"end": 9792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9784,
											"name": "PUSH",
											"source": 7,
											"value": "4554465F5641554C540000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9769,
											"end": 9770,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9761,
											"end": 9767,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9757,
											"end": 9771,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9750,
											"end": 9785,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9633,
											"end": 9792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9633,
											"end": 9792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9798,
											"end": 10198,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 9798,
											"end": 10198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9958,
											"end": 9961,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9979,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 10061,
											"end": 10062,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 10056,
											"end": 10059,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9979,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 9979,
											"end": 10063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9979,
											"end": 10063,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 9979,
											"end": 10063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9972,
											"end": 10063,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9972,
											"end": 10063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10072,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 10161,
											"end": 10164,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10072,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 10072,
											"end": 10165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10072,
											"end": 10165,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 10072,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10190,
											"end": 10191,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 10185,
											"end": 10188,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10181,
											"end": 10192,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10174,
											"end": 10192,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10174,
											"end": 10192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9798,
											"end": 10198,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9798,
											"end": 10198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9798,
											"end": 10198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9798,
											"end": 10198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10204,
											"end": 10283,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 10204,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10243,
											"end": 10250,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10272,
											"end": 10277,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10261,
											"end": 10277,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10261,
											"end": 10277,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10204,
											"end": 10283,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10204,
											"end": 10283,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10204,
											"end": 10283,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10204,
											"end": 10283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10289,
											"end": 10446,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 10289,
											"end": 10446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10394,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 10414,
											"end": 10438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 10432,
											"end": 10437,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 10414,
											"end": 10438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10438,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 10414,
											"end": 10438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10394,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 10394,
											"end": 10439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10394,
											"end": 10439,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 10394,
											"end": 10439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10389,
											"end": 10392,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10382,
											"end": 10440,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10289,
											"end": 10446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10289,
											"end": 10446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10289,
											"end": 10446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10452,
											"end": 10974,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 10452,
											"end": 10974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10665,
											"end": 10668,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10687,
											"end": 10835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 10831,
											"end": 10834,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10687,
											"end": 10835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 10687,
											"end": 10835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10687,
											"end": 10835,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 10687,
											"end": 10835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10680,
											"end": 10835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10680,
											"end": 10835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10845,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 10916,
											"end": 10919,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10907,
											"end": 10913,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10845,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 10845,
											"end": 10920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10845,
											"end": 10920,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 10845,
											"end": 10920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10945,
											"end": 10947,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10940,
											"end": 10943,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10936,
											"end": 10948,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10929,
											"end": 10948,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10929,
											"end": 10948,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10965,
											"end": 10968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10958,
											"end": 10968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10958,
											"end": 10968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10452,
											"end": 10974,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10452,
											"end": 10974,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10452,
											"end": 10974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10452,
											"end": 10974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10452,
											"end": 10974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10980,
											"end": 11162,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 10980,
											"end": 11162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11120,
											"end": 11154,
											"name": "PUSH",
											"source": 7,
											"value": "4469726563746F72792063616E6E6F74206265207A65726F2061646472657373"
										},
										{
											"begin": 11116,
											"end": 11117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11108,
											"end": 11114,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11104,
											"end": 11118,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11097,
											"end": 11155,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10980,
											"end": 11162,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10980,
											"end": 11162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11168,
											"end": 11534,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 11168,
											"end": 11534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11310,
											"end": 11313,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11331,
											"end": 11398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 11395,
											"end": 11397,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11390,
											"end": 11393,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11331,
											"end": 11398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 11331,
											"end": 11398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11331,
											"end": 11398,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 11331,
											"end": 11398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11324,
											"end": 11398,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11324,
											"end": 11398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11407,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 11496,
											"end": 11499,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11407,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 11407,
											"end": 11500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11407,
											"end": 11500,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 11407,
											"end": 11500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11525,
											"end": 11527,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11520,
											"end": 11523,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11509,
											"end": 11528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11509,
											"end": 11528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11168,
											"end": 11534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11168,
											"end": 11534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11168,
											"end": 11534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11168,
											"end": 11534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11540,
											"end": 11959,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 11540,
											"end": 11959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11706,
											"end": 11710,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11744,
											"end": 11746,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11733,
											"end": 11742,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11721,
											"end": 11747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11721,
											"end": 11747,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11793,
											"end": 11802,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11787,
											"end": 11791,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11783,
											"end": 11803,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11779,
											"end": 11780,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11768,
											"end": 11777,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11764,
											"end": 11781,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11757,
											"end": 11804,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11821,
											"end": 11952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 11947,
											"end": 11951,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11821,
											"end": 11952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 11821,
											"end": 11952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11821,
											"end": 11952,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 11821,
											"end": 11952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11813,
											"end": 11952,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11813,
											"end": 11952,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11540,
											"end": 11959,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11540,
											"end": 11959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11540,
											"end": 11959,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11540,
											"end": 11959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11965,
											"end": 12143,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 11965,
											"end": 12143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12105,
											"end": 12135,
											"name": "PUSH",
											"source": 7,
											"value": "4469726563746F7279206D757374206265206120636F6E747261637400000000"
										},
										{
											"begin": 12101,
											"end": 12102,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12093,
											"end": 12099,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12089,
											"end": 12103,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12082,
											"end": 12136,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11965,
											"end": 12143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11965,
											"end": 12143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12149,
											"end": 12515,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 12149,
											"end": 12515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12291,
											"end": 12294,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12312,
											"end": 12379,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 12376,
											"end": 12378,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 12371,
											"end": 12374,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12312,
											"end": 12379,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 12312,
											"end": 12379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12312,
											"end": 12379,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 12312,
											"end": 12379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12305,
											"end": 12379,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12305,
											"end": 12379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12388,
											"end": 12481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 12477,
											"end": 12480,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12388,
											"end": 12481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 12388,
											"end": 12481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12388,
											"end": 12481,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 12388,
											"end": 12481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12506,
											"end": 12508,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12501,
											"end": 12504,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12497,
											"end": 12509,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12490,
											"end": 12509,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12490,
											"end": 12509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12149,
											"end": 12515,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12149,
											"end": 12515,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12149,
											"end": 12515,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12149,
											"end": 12515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12521,
											"end": 12940,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 12521,
											"end": 12940,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12687,
											"end": 12691,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12725,
											"end": 12727,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12714,
											"end": 12723,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12710,
											"end": 12728,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12702,
											"end": 12728,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12702,
											"end": 12728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12774,
											"end": 12783,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12768,
											"end": 12772,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12764,
											"end": 12784,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12760,
											"end": 12761,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12749,
											"end": 12758,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12745,
											"end": 12762,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12738,
											"end": 12785,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12802,
											"end": 12933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 12928,
											"end": 12932,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12802,
											"end": 12933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 12802,
											"end": 12933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12802,
											"end": 12933,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 12802,
											"end": 12933,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12794,
											"end": 12933,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12794,
											"end": 12933,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12521,
											"end": 12940,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12521,
											"end": 12940,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12521,
											"end": 12940,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12521,
											"end": 12940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12946,
											"end": 13177,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 12946,
											"end": 13177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13086,
											"end": 13120,
											"name": "PUSH",
											"source": 7,
											"value": "4469726563746F7279206164647265737320646F6573206E6F7420696D706C65"
										},
										{
											"begin": 13082,
											"end": 13083,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13074,
											"end": 13080,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13070,
											"end": 13084,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13063,
											"end": 13121,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13155,
											"end": 13169,
											"name": "PUSH",
											"source": 7,
											"value": "6D656E74206F776E657228290000000000000000000000000000000000000000"
										},
										{
											"begin": 13150,
											"end": 13152,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13142,
											"end": 13148,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13138,
											"end": 13153,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13131,
											"end": 13170,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12946,
											"end": 13177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12946,
											"end": 13177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13183,
											"end": 13549,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 13183,
											"end": 13549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13325,
											"end": 13328,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13346,
											"end": 13413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 13410,
											"end": 13412,
											"name": "PUSH",
											"source": 7,
											"value": "2C"
										},
										{
											"begin": 13405,
											"end": 13408,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13346,
											"end": 13413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 13346,
											"end": 13413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13346,
											"end": 13413,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 13346,
											"end": 13413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13339,
											"end": 13413,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13339,
											"end": 13413,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13422,
											"end": 13515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 13511,
											"end": 13514,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13422,
											"end": 13515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 13422,
											"end": 13515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13422,
											"end": 13515,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 13422,
											"end": 13515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13540,
											"end": 13542,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13538,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13531,
											"end": 13543,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13524,
											"end": 13543,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13524,
											"end": 13543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13183,
											"end": 13549,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13183,
											"end": 13549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13183,
											"end": 13549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13183,
											"end": 13549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13555,
											"end": 13974,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 13555,
											"end": 13974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13721,
											"end": 13725,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13759,
											"end": 13761,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13748,
											"end": 13757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13744,
											"end": 13762,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13736,
											"end": 13762,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13736,
											"end": 13762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13808,
											"end": 13817,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13802,
											"end": 13806,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13798,
											"end": 13818,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13794,
											"end": 13795,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13783,
											"end": 13792,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13779,
											"end": 13796,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13772,
											"end": 13819,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13836,
											"end": 13967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 13962,
											"end": 13966,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13836,
											"end": 13967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 13836,
											"end": 13967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13836,
											"end": 13967,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 13836,
											"end": 13967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13828,
											"end": 13967,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13828,
											"end": 13967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13555,
											"end": 13974,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13555,
											"end": 13974,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13555,
											"end": 13974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13555,
											"end": 13974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 14098,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 13980,
											"end": 14098,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14067,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 14085,
											"end": 14090,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14067,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 14067,
											"end": 14091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14067,
											"end": 14091,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 14067,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14062,
											"end": 14065,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14055,
											"end": 14092,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 14098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 14098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 14098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14104,
											"end": 14436,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 14104,
											"end": 14436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14225,
											"end": 14229,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14263,
											"end": 14265,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14252,
											"end": 14261,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14248,
											"end": 14266,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14240,
											"end": 14266,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14240,
											"end": 14266,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14276,
											"end": 14347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 14344,
											"end": 14345,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14333,
											"end": 14342,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14329,
											"end": 14346,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14320,
											"end": 14326,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14276,
											"end": 14347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 14276,
											"end": 14347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14276,
											"end": 14347,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 14276,
											"end": 14347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14357,
											"end": 14429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 14425,
											"end": 14427,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14414,
											"end": 14423,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14410,
											"end": 14428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14401,
											"end": 14407,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14357,
											"end": 14429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 14357,
											"end": 14429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14357,
											"end": 14429,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 14357,
											"end": 14429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14104,
											"end": 14436,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14104,
											"end": 14436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14104,
											"end": 14436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14104,
											"end": 14436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14104,
											"end": 14436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14104,
											"end": 14436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"hopium/common/interface/imDirectory.sol",
								"hopium/etf/interface/iEtfVault.sol",
								"hopium/etf/interface/imEtfFactory.sol",
								"hopium/etf/main/etf-vault-deployer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Directory()": "658a847a",
							"changeDirectoryAddress(address)": "ba4c7be1",
							"deployEtfVault(uint256)": "b57c59a7",
							"fetchFromDirectory(string)": "27262618",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_directory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImplNotSet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Directory\",\"outputs\":[{\"internalType\":\"contract IDirectory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_directory\",\"type\":\"address\"}],\"name\":\"changeDirectoryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"indexId\",\"type\":\"uint256\"}],\"name\":\"deployEtfVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"fetchFromDirectory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deployEtfVault(uint256)\":{\"notice\":\"Deploys a new EtfVault clone and initializes it with current Directory\"}},\"notice\":\"Factory that mints minimal-proxy clones of EtfVault (EIP-1167)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/etf/main/etf-vault-deployer.sol\":\"EtfVaultDeployer\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x7e918671c04972845975935ea13c9ce0be1228031ba0e929d0f1f68fd1f17214\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3027ebaeef3e678ad9bae26f0556469878e992bf7dec94bede328a92be529419\",\"dweb:/ipfs/Qmdu4RfMYv9Q7iHWuYfyUL6fZKc73nM4YWizNP8w1xay56\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]},\"hopium/etf/interface/iEtfVault.sol\":{\"keccak256\":\"0xfb14def9e2497164d73a038644d6f2ceb3fe8cfa996ca53a5487439dfe7f6ee2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ac07badc503ea718e351f5e4694021ed548e4e5256f90be6d53c871a108dc3b\",\"dweb:/ipfs/QmeK4yf9x5LF2JaGRfmYto7sddL3AWFU9N1sirAmd8ZFBY\"]},\"hopium/etf/interface/imEtfFactory.sol\":{\"keccak256\":\"0x113e7a55f043117f2fd334de4b88221f31f30045310aa99fe6b5db3d3bd13486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a884bdaa7b3979d02ee6c57af2fc1cbbd31b302b66aacfcdf3f0724f007227b\",\"dweb:/ipfs/QmbNFvdG9cnJht3omTmbuiCATyW895mvPUrLrRbCfikfaQ\"]},\"hopium/etf/main/etf-vault-deployer.sol\":{\"keccak256\":\"0x8cff437714a15c2c0976b71a067f0d4011863af437369edaf78a2201a70d36e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca55eac73cbefd65908a9eb2f034e2e3de3b63cd981fc4802eec7c6fbfb9475b\",\"dweb:/ipfs/QmXvTj2iv7KS8S9qtmSWzL6edQgtrqUi6QRp65UjU2AU9R\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "hopium/etf/main/etf-vault-deployer.sol:EtfVaultDeployer",
								"label": "Directory",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDirectory)535"
							}
						],
						"types": {
							"t_contract(IDirectory)535": {
								"encoding": "inplace",
								"label": "contract IDirectory",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deployEtfVault(uint256)": {
								"notice": "Deploys a new EtfVault clone and initializes it with current Directory"
							}
						},
						"notice": "Factory that mints minimal-proxy clones of EtfVault (EIP-1167)",
						"version": 1
					}
				},
				"Helpers": {
					"abi": [
						{
							"inputs": [],
							"name": "Directory",
							"outputs": [
								{
									"internalType": "contract IDirectory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_directory",
									"type": "address"
								}
							],
							"name": "changeDirectoryAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_key",
									"type": "string"
								}
							],
							"name": "fetchFromDirectory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"Directory()": "658a847a",
							"changeDirectoryAddress(address)": "ba4c7be1",
							"fetchFromDirectory(string)": "27262618",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Directory\",\"outputs\":[{\"internalType\":\"contract IDirectory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_directory\",\"type\":\"address\"}],\"name\":\"changeDirectoryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"fetchFromDirectory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/etf/main/etf-vault-deployer.sol\":\"Helpers\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x7e918671c04972845975935ea13c9ce0be1228031ba0e929d0f1f68fd1f17214\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3027ebaeef3e678ad9bae26f0556469878e992bf7dec94bede328a92be529419\",\"dweb:/ipfs/Qmdu4RfMYv9Q7iHWuYfyUL6fZKc73nM4YWizNP8w1xay56\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]},\"hopium/etf/interface/iEtfVault.sol\":{\"keccak256\":\"0xfb14def9e2497164d73a038644d6f2ceb3fe8cfa996ca53a5487439dfe7f6ee2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ac07badc503ea718e351f5e4694021ed548e4e5256f90be6d53c871a108dc3b\",\"dweb:/ipfs/QmeK4yf9x5LF2JaGRfmYto7sddL3AWFU9N1sirAmd8ZFBY\"]},\"hopium/etf/interface/imEtfFactory.sol\":{\"keccak256\":\"0x113e7a55f043117f2fd334de4b88221f31f30045310aa99fe6b5db3d3bd13486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a884bdaa7b3979d02ee6c57af2fc1cbbd31b302b66aacfcdf3f0724f007227b\",\"dweb:/ipfs/QmbNFvdG9cnJht3omTmbuiCATyW895mvPUrLrRbCfikfaQ\"]},\"hopium/etf/main/etf-vault-deployer.sol\":{\"keccak256\":\"0x8cff437714a15c2c0976b71a067f0d4011863af437369edaf78a2201a70d36e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca55eac73cbefd65908a9eb2f034e2e3de3b63cd981fc4802eec7c6fbfb9475b\",\"dweb:/ipfs/QmXvTj2iv7KS8S9qtmSWzL6edQgtrqUi6QRp65UjU2AU9R\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "hopium/etf/main/etf-vault-deployer.sol:Helpers",
								"label": "Directory",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDirectory)535"
							}
						],
						"types": {
							"t_contract(IDirectory)535": {
								"encoding": "inplace",
								"label": "contract IDirectory",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
					"exportedSymbols": {
						"Clones": [
							398
						],
						"Create2": [
							497
						],
						"Errors": [
							519
						]
					},
					"id": 399,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
							"file": "../utils/Create2.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 399,
							"sourceUnit": 498,
							"src": "126:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Create2",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 497,
										"src": "134:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "../utils/Errors.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 399,
							"sourceUnit": 520,
							"src": "172:43:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 519,
										"src": "180:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Clones",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "217:599:0",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method."
							},
							"fullyImplemented": true,
							"id": 398,
							"linearizedBaseContracts": [
								398
							],
							"name": "Clones",
							"nameLocation": "825:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "94289054",
									"id": 8,
									"name": "CloneArgumentsTooLong",
									"nameLocation": "844:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:2:0"
									},
									"src": "838:30:0"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "1480:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 17,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1503:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1519:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 16,
														"name": "clone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															22,
															67
														],
														"referencedDeclaration": 67,
														"src": "1497:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,uint256) returns (address)"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1497:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 15,
												"id": 20,
												"nodeType": "Return",
												"src": "1490:31:0"
											}
										]
									},
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "874:526:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n This function uses the create opcode, which should never revert.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later."
									},
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "1414:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1428:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1420:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1419:24:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1470:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1462:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:18:0"
									},
									"scope": 398,
									"src": "1405:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "2345:820:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 34,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2367:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2359:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 32,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2359:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2359:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2373:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "2359:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 37,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2383:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2359:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 51,
												"nodeType": "IfStatement",
												"src": "2355:123:0",
												"trueBody": {
													"id": 50,
													"nodeType": "Block",
													"src": "2390:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 44,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "2446:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 43,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2438:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 42,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2438:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 45,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2438:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 46,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2452:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "2438:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 47,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "2461:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 39,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "2411:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2418:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "2411:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2411:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 49,
															"nodeType": "RevertStatement",
															"src": "2404:63:0"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "2512:553:0",
													"nodeType": "YulBlock",
													"src": "2512:553:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2717:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2717:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2730:4:0",
																						"nodeType": "YulLiteral",
																						"src": "2730:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2740:4:0",
																								"nodeType": "YulLiteral",
																								"src": "2740:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "2746:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "2746:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2736:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "2736:3:0"
																						},
																						"nativeSrc": "2736:25:0",
																						"nodeType": "YulFunctionCall",
																						"src": "2736:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "2726:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2726:3:0"
																				},
																				"nativeSrc": "2726:36:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2726:36:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2764:48:0",
																				"nodeType": "YulLiteral",
																				"src": "2764:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2723:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2723:2:0"
																		},
																		"nativeSrc": "2723:90:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2723:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2710:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2710:6:0"
																},
																"nativeSrc": "2710:104:0",
																"nodeType": "YulFunctionCall",
																"src": "2710:104:0"
															},
															"nativeSrc": "2710:104:0",
															"nodeType": "YulExpressionStatement",
															"src": "2710:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2935:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2935:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2948:4:0",
																						"nodeType": "YulLiteral",
																						"src": "2948:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "2954:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "2954:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2944:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2944:3:0"
																				},
																				"nativeSrc": "2944:25:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2944:25:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2971:32:0",
																				"nodeType": "YulLiteral",
																				"src": "2971:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2941:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2941:2:0"
																		},
																		"nativeSrc": "2941:63:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2941:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2928:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2928:6:0"
																},
																"nativeSrc": "2928:77:0",
																"nodeType": "YulFunctionCall",
																"src": "2928:77:0"
															},
															"nativeSrc": "2928:77:0",
															"nodeType": "YulExpressionStatement",
															"src": "2928:77:0"
														},
														{
															"nativeSrc": "3018:37:0",
															"nodeType": "YulAssignment",
															"src": "3018:37:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3037:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "3037:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3044:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3044:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3050:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3050:4:0",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nativeSrc": "3030:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3030:6:0"
																},
																"nativeSrc": "3030:25:0",
																"nodeType": "YulFunctionCall",
																"src": "3030:25:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "3018:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "3018:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 25,
														"isOffset": false,
														"isSlot": false,
														"src": "2746:14:0",
														"valueSize": 1
													},
													{
														"declaration": 25,
														"isOffset": false,
														"isSlot": false,
														"src": "2954:14:0",
														"valueSize": 1
													},
													{
														"declaration": 30,
														"isOffset": false,
														"isSlot": false,
														"src": "3018:8:0",
														"valueSize": 1
													},
													{
														"declaration": 27,
														"isOffset": false,
														"isSlot": false,
														"src": "3037:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 52,
												"nodeType": "InlineAssembly",
												"src": "2487:578:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 53,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "3078:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3098:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3090:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 54,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3090:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3090:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3078:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 65,
												"nodeType": "IfStatement",
												"src": "3074:85:0",
												"trueBody": {
													"id": 64,
													"nodeType": "Block",
													"src": "3102:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 59,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "3123:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3130:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "3123:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3123:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 63,
															"nodeType": "RevertStatement",
															"src": "3116:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "1534:716:0",
										"text": " @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n to the new contract.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "2264:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2278:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2270:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2270:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2302:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2294:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2294:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2269:39:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "2335:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2327:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:18:0"
									},
									"scope": 398,
									"src": "2255:910:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "3977:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 78,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "4013:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 79,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "4029:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "30",
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4035:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 77,
														"name": "cloneDeterministic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															84,
															131
														],
														"referencedDeclaration": 131,
														"src": "3994:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes32,uint256) returns (address)"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3994:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 76,
												"id": 82,
												"nodeType": "Return",
												"src": "3987:50:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "3171:699:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple times will revert, since\n the clones cannot be deployed twice at the same address.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "3884:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3911:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3903:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3935:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3927:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 71,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3927:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3902:38:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "3967:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3959:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3958:18:0"
									},
									"scope": 398,
									"src": "3875:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "4952:827:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 98,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4974:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4966:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 96,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4966:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4966:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4980:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "4966:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 101,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "4990:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4966:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 115,
												"nodeType": "IfStatement",
												"src": "4962:123:0",
												"trueBody": {
													"id": 114,
													"nodeType": "Block",
													"src": "4997:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 108,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "5053:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 107,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5045:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 106,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5045:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5045:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5059:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "5045:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 111,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "5068:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 103,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "5018:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5025:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "5018:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5018:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 113,
															"nodeType": "RevertStatement",
															"src": "5011:63:0"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "5119:560:0",
													"nodeType": "YulBlock",
													"src": "5119:560:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5324:4:0",
																		"nodeType": "YulLiteral",
																		"src": "5324:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5337:4:0",
																						"nodeType": "YulLiteral",
																						"src": "5337:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5347:4:0",
																								"nodeType": "YulLiteral",
																								"src": "5347:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "5353:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "5353:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5343:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "5343:3:0"
																						},
																						"nativeSrc": "5343:25:0",
																						"nodeType": "YulFunctionCall",
																						"src": "5343:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "5333:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "5333:3:0"
																				},
																				"nativeSrc": "5333:36:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5333:36:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5371:48:0",
																				"nodeType": "YulLiteral",
																				"src": "5371:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5330:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "5330:2:0"
																		},
																		"nativeSrc": "5330:90:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5330:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5317:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5317:6:0"
																},
																"nativeSrc": "5317:104:0",
																"nodeType": "YulFunctionCall",
																"src": "5317:104:0"
															},
															"nativeSrc": "5317:104:0",
															"nodeType": "YulExpressionStatement",
															"src": "5317:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5542:4:0",
																		"nodeType": "YulLiteral",
																		"src": "5542:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5555:4:0",
																						"nodeType": "YulLiteral",
																						"src": "5555:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "5561:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "5561:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "5551:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "5551:3:0"
																				},
																				"nativeSrc": "5551:25:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5551:25:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5578:32:0",
																				"nodeType": "YulLiteral",
																				"src": "5578:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5548:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "5548:2:0"
																		},
																		"nativeSrc": "5548:63:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5548:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5535:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5535:6:0"
																},
																"nativeSrc": "5535:77:0",
																"nodeType": "YulFunctionCall",
																"src": "5535:77:0"
															},
															"nativeSrc": "5535:77:0",
															"nodeType": "YulExpressionStatement",
															"src": "5535:77:0"
														},
														{
															"nativeSrc": "5625:44:0",
															"nodeType": "YulAssignment",
															"src": "5625:44:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5645:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "5645:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5652:4:0",
																		"nodeType": "YulLiteral",
																		"src": "5652:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5658:4:0",
																		"nodeType": "YulLiteral",
																		"src": "5658:4:0",
																		"type": "",
																		"value": "0x37"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "5664:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "5664:4:0"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nativeSrc": "5637:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "5637:7:0"
																},
																"nativeSrc": "5637:32:0",
																"nodeType": "YulFunctionCall",
																"src": "5637:32:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "5625:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "5625:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 87,
														"isOffset": false,
														"isSlot": false,
														"src": "5353:14:0",
														"valueSize": 1
													},
													{
														"declaration": 87,
														"isOffset": false,
														"isSlot": false,
														"src": "5561:14:0",
														"valueSize": 1
													},
													{
														"declaration": 94,
														"isOffset": false,
														"isSlot": false,
														"src": "5625:8:0",
														"valueSize": 1
													},
													{
														"declaration": 89,
														"isOffset": false,
														"isSlot": false,
														"src": "5664:4:0",
														"valueSize": 1
													},
													{
														"declaration": 91,
														"isOffset": false,
														"isSlot": false,
														"src": "5645:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 116,
												"nodeType": "InlineAssembly",
												"src": "5094:585:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 117,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "5692:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5712:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5704:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 118,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5704:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5704:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5692:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "5688:85:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "5716:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 123,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "5737:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5744:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "5737:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5737:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "5730:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "4050:750:0",
										"text": " @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n a `value` parameter to send native currency to the new contract.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "4814:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "4850:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4842:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4842:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "4882:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4874:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 88,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4904:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4896:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4832:83:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "4942:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4934:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4934:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4933:18:0"
									},
									"scope": 398,
									"src": "4805:974:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "6054:537:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "6089:496:0",
													"nodeType": "YulBlock",
													"src": "6089:496:0",
													"statements": [
														{
															"nativeSrc": "6103:22:0",
															"nodeType": "YulVariableDeclaration",
															"src": "6103:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6120:4:0",
																		"nodeType": "YulLiteral",
																		"src": "6120:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6114:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "6114:5:0"
																},
																"nativeSrc": "6114:11:0",
																"nodeType": "YulFunctionCall",
																"src": "6114:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "6107:3:0",
																	"nodeType": "YulTypedName",
																	"src": "6107:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "6149:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6149:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6154:4:0",
																				"nodeType": "YulLiteral",
																				"src": "6154:4:0",
																				"type": "",
																				"value": "0x38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6145:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "6145:3:0"
																		},
																		"nativeSrc": "6145:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6145:14:0"
																	},
																	{
																		"name": "deployer",
																		"nativeSrc": "6161:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "6161:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6138:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6138:6:0"
																},
																"nativeSrc": "6138:32:0",
																"nodeType": "YulFunctionCall",
																"src": "6138:32:0"
															},
															"nativeSrc": "6138:32:0",
															"nodeType": "YulExpressionStatement",
															"src": "6138:32:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "6194:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6194:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6199:4:0",
																				"nodeType": "YulLiteral",
																				"src": "6199:4:0",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6190:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "6190:3:0"
																		},
																		"nativeSrc": "6190:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6190:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6206:34:0",
																		"nodeType": "YulLiteral",
																		"src": "6206:34:0",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3ff"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6183:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6183:6:0"
																},
																"nativeSrc": "6183:58:0",
																"nodeType": "YulFunctionCall",
																"src": "6183:58:0"
															},
															"nativeSrc": "6183:58:0",
															"nodeType": "YulExpressionStatement",
															"src": "6183:58:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "6265:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6265:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6270:4:0",
																				"nodeType": "YulLiteral",
																				"src": "6270:4:0",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6261:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "6261:3:0"
																		},
																		"nativeSrc": "6261:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6261:14:0"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "6277:14:0",
																		"nodeType": "YulIdentifier",
																		"src": "6277:14:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6254:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6254:6:0"
																},
																"nativeSrc": "6254:38:0",
																"nodeType": "YulFunctionCall",
																"src": "6254:38:0"
															},
															"nativeSrc": "6254:38:0",
															"nodeType": "YulExpressionStatement",
															"src": "6254:38:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6312:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "6312:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6317:42:0",
																		"nodeType": "YulLiteral",
																		"src": "6317:42:0",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6305:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6305:6:0"
																},
																"nativeSrc": "6305:55:0",
																"nodeType": "YulFunctionCall",
																"src": "6305:55:0"
															},
															"nativeSrc": "6305:55:0",
															"nodeType": "YulExpressionStatement",
															"src": "6305:55:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "6384:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6384:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6389:4:0",
																				"nodeType": "YulLiteral",
																				"src": "6389:4:0",
																				"type": "",
																				"value": "0x58"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6380:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "6380:3:0"
																		},
																		"nativeSrc": "6380:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6380:14:0"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "6396:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "6396:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6373:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6373:6:0"
																},
																"nativeSrc": "6373:28:0",
																"nodeType": "YulFunctionCall",
																"src": "6373:28:0"
															},
															"nativeSrc": "6373:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "6373:28:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "6425:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6425:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6430:4:0",
																				"nodeType": "YulLiteral",
																				"src": "6430:4:0",
																				"type": "",
																				"value": "0x78"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6421:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "6421:3:0"
																		},
																		"nativeSrc": "6421:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6421:14:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "6451:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "6451:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6456:4:0",
																						"nodeType": "YulLiteral",
																						"src": "6456:4:0",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6447:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "6447:3:0"
																				},
																				"nativeSrc": "6447:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "6447:14:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6463:4:0",
																				"nodeType": "YulLiteral",
																				"src": "6463:4:0",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "6437:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "6437:9:0"
																		},
																		"nativeSrc": "6437:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6437:31:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6414:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6414:6:0"
																},
																"nativeSrc": "6414:55:0",
																"nodeType": "YulFunctionCall",
																"src": "6414:55:0"
															},
															"nativeSrc": "6414:55:0",
															"nodeType": "YulExpressionStatement",
															"src": "6414:55:0"
														},
														{
															"nativeSrc": "6482:93:0",
															"nodeType": "YulAssignment",
															"src": "6482:93:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "6513:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "6513:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6518:4:0",
																						"nodeType": "YulLiteral",
																						"src": "6518:4:0",
																						"type": "",
																						"value": "0x43"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6509:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "6509:3:0"
																				},
																				"nativeSrc": "6509:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "6509:14:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6525:4:0",
																				"nodeType": "YulLiteral",
																				"src": "6525:4:0",
																				"type": "",
																				"value": "0x55"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "6499:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "6499:9:0"
																		},
																		"nativeSrc": "6499:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6499:31:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6532:42:0",
																		"nodeType": "YulLiteral",
																		"src": "6532:42:0",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6495:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "6495:3:0"
																},
																"nativeSrc": "6495:80:0",
																"nodeType": "YulFunctionCall",
																"src": "6495:80:0"
															},
															"variableNames": [
																{
																	"name": "predicted",
																	"nativeSrc": "6482:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "6482:9:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 138,
														"isOffset": false,
														"isSlot": false,
														"src": "6161:8:0",
														"valueSize": 1
													},
													{
														"declaration": 134,
														"isOffset": false,
														"isSlot": false,
														"src": "6277:14:0",
														"valueSize": 1
													},
													{
														"declaration": 141,
														"isOffset": false,
														"isSlot": false,
														"src": "6482:9:0",
														"valueSize": 1
													},
													{
														"declaration": 136,
														"isOffset": false,
														"isSlot": false,
														"src": "6396:4:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 143,
												"nodeType": "InlineAssembly",
												"src": "6064:521:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "5785:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "5898:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "5943:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5935:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5935:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5975:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5967:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 135,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "5997:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5989:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5989:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5925:86:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "6043:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "6035:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6034:19:0"
									},
									"scope": 398,
									"src": "5889:702:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "6840:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 156,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "6885:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 157,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "6901:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 160,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6915:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 158,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6907:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 155,
														"name": "predictDeterministicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															145,
															165
														],
														"referencedDeclaration": 145,
														"src": "6857:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes32,address) pure returns (address)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6857:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 163,
												"nodeType": "Return",
												"src": "6850:71:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "6597:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "6710:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "6755:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "6747:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "6787:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "6779:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6737:60:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "6829:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "6821:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6821:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6820:19:0"
									},
									"scope": 398,
									"src": "6701:227:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "7769:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 176,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "7809:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 177,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "7825:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7831:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 175,
														"name": "cloneWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															182,
															236
														],
														"referencedDeclaration": 236,
														"src": "7786:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes memory,uint256) returns (address)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7786:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 174,
												"id": 180,
												"nodeType": "Return",
												"src": "7779:54:0"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "6934:719:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create opcode, which should never revert.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later."
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneWithImmutableArgs",
									"nameLocation": "7667:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "7698:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "7690:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7690:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "7727:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "7714:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 169,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7714:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7689:43:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "7759:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "7751:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7751:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7750:18:0"
									},
									"scope": 398,
									"src": "7658:182:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "8763:437:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8785:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8777:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 194,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8777:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8777:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8791:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "8777:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 199,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "8801:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8777:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 213,
												"nodeType": "IfStatement",
												"src": "8773:123:0",
												"trueBody": {
													"id": 212,
													"nodeType": "Block",
													"src": "8808:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 206,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "8864:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8856:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 204,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "8856:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8856:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8870:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "8856:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 209,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "8879:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 201,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "8829:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8836:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "8829:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8829:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 211,
															"nodeType": "RevertStatement",
															"src": "8822:63:0"
														}
													]
												}
											},
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "8918:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "8905:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 214,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8905:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 220,
												"initialValue": {
													"arguments": [
														{
															"id": 217,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "8957:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 218,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "8973:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 216,
														"name": "_cloneCodeWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "8929:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8929:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8905:73:0"
											},
											{
												"AST": {
													"nativeSrc": "9013:87:0",
													"nodeType": "YulBlock",
													"src": "9013:87:0",
													"statements": [
														{
															"nativeSrc": "9027:63:0",
															"nodeType": "YulAssignment",
															"src": "9027:63:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9046:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "9046:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "9057:8:0",
																				"nodeType": "YulIdentifier",
																				"src": "9057:8:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9067:4:0",
																				"nodeType": "YulLiteral",
																				"src": "9067:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9053:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "9053:3:0"
																		},
																		"nativeSrc": "9053:19:0",
																		"nodeType": "YulFunctionCall",
																		"src": "9053:19:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "9080:8:0",
																				"nodeType": "YulIdentifier",
																				"src": "9080:8:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9074:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "9074:5:0"
																		},
																		"nativeSrc": "9074:15:0",
																		"nodeType": "YulFunctionCall",
																		"src": "9074:15:0"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nativeSrc": "9039:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "9039:6:0"
																},
																"nativeSrc": "9039:51:0",
																"nodeType": "YulFunctionCall",
																"src": "9039:51:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "9027:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "9027:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 215,
														"isOffset": false,
														"isSlot": false,
														"src": "9057:8:0",
														"valueSize": 1
													},
													{
														"declaration": 215,
														"isOffset": false,
														"isSlot": false,
														"src": "9080:8:0",
														"valueSize": 1
													},
													{
														"declaration": 192,
														"isOffset": false,
														"isSlot": false,
														"src": "9027:8:0",
														"valueSize": 1
													},
													{
														"declaration": 189,
														"isOffset": false,
														"isSlot": false,
														"src": "9046:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 221,
												"nodeType": "InlineAssembly",
												"src": "8988:112:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 222,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "9113:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9133:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9125:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 223,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9125:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9125:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9113:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 234,
												"nodeType": "IfStatement",
												"src": "9109:85:0",
												"trueBody": {
													"id": 233,
													"nodeType": "Block",
													"src": "9137:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 228,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "9158:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9165:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "9158:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9158:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 232,
															"nodeType": "RevertStatement",
															"src": "9151:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "7846:756:0",
										"text": " @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n parameter to send native currency to the new contract.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneWithImmutableArgs",
									"nameLocation": "8616:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "8656:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "8648:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "8693:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "8680:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8680:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8715:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "8707:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8638:88:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "8753:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "8745:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8744:18:0"
									},
									"scope": 398,
									"src": "8607:593:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "10279:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 249,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "10332:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 250,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "10348:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 251,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "10354:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "30",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10360:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 248,
														"name": "cloneDeterministicWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															256,
															285
														],
														"referencedDeclaration": 285,
														"src": "10296:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes memory,bytes32,uint256) returns (address)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10296:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 247,
												"id": 254,
												"nodeType": "Return",
												"src": "10289:73:0"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "9206:900:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n at the same address.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministicWithImmutableArgs",
									"nameLocation": "10120:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "10173:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "10165:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10165:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "10210:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "10197:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 240,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10197:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "10232:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "10224:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10155:87:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "10269:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "10261:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10260:18:0"
									},
									"scope": 398,
									"src": "10111:258:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "11361:144:0",
										"statements": [
											{
												"assignments": [
													271
												],
												"declarations": [
													{
														"constant": false,
														"id": 271,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "11384:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "11371:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 270,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "11371:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 276,
												"initialValue": {
													"arguments": [
														{
															"id": 273,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "11423:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 274,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "11439:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 272,
														"name": "_cloneCodeWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "11395:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11395:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11371:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 279,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "11476:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 280,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "11483:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 281,
															"name": "bytecode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "11489:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 277,
															"name": "Create2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "11461:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Create2_$497_$",
																"typeString": "type(library Create2)"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11469:6:0",
														"memberName": "deploy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 462,
														"src": "11461:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
															"typeString": "function (uint256,bytes32,bytes memory) returns (address)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11461:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 269,
												"id": 283,
												"nodeType": "Return",
												"src": "11454:44:0"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "10375:790:0",
										"text": " @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n but with a `value` parameter to send native currency to the new contract.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministicWithImmutableArgs",
									"nameLocation": "11179:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "11232:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "11224:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "11269:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "11256:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11256:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "11291:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "11283:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 262,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11283:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11313:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "11305:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11214:110:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "11351:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "11343:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11343:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11342:18:0"
									},
									"scope": 398,
									"src": "11170:335:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "11841:166:0",
										"statements": [
											{
												"assignments": [
													300
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "11864:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 315,
														"src": "11851:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 299,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "11851:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"arguments": [
														{
															"id": 302,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "11903:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "11919:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 301,
														"name": "_cloneCodeWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "11875:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11875:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11851:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 308,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "11964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 310,
																	"name": "bytecode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "11980:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 309,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "11970:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11970:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 312,
															"name": "deployer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "11991:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 306,
															"name": "Create2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "11941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Create2_$497_$",
																"typeString": "type(library Create2)"
															}
														},
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11949:14:0",
														"memberName": "computeAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 496,
														"src": "11941:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (bytes32,bytes32,address) pure returns (address)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11941:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 298,
												"id": 314,
												"nodeType": "Return",
												"src": "11934:66:0"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "11511:116:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddressWithImmutableArgs",
									"nameLocation": "11641:44:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "11703:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "11695:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "11740:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "11727:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11727:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "11762:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "11754:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 291,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "11784:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "11776:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11685:113:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "11830:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "11822:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11822:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11821:19:0"
									},
									"scope": 398,
									"src": "11632:375:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "12317:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 329,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "12379:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "12395:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 331,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "12401:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 334,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "12415:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12407:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 332,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12407:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12407:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 328,
														"name": "predictDeterministicAddressWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															316,
															339
														],
														"referencedDeclaration": 316,
														"src": "12334:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes memory,bytes32,address) pure returns (address)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12334:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 327,
												"id": 337,
												"nodeType": "Return",
												"src": "12327:94:0"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "12013:116:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."
									},
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddressWithImmutableArgs",
									"nameLocation": "12143:44:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "12205:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "12197:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "12242:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "12229:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 320,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12229:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "12264:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "12256:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12256:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12187:87:0"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "12306:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "12298:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12297:19:0"
									},
									"scope": 398,
									"src": "12134:294:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "13121:246:0",
										"statements": [
											{
												"assignments": [
													348
												],
												"declarations": [
													{
														"constant": false,
														"id": 348,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13144:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 361,
														"src": "13131:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 347,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13131:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 357,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 351,
																		"name": "instance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "13163:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13172:4:0",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "13163:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13177:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "13163:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "3435",
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13186:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_45_by_1",
																	"typeString": "int_const 45"
																},
																"value": "45"
															},
															"src": "13163:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "13153:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 349,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13157:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13153:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13131:58:0"
											},
											{
												"AST": {
													"nativeSrc": "13257:81:0",
													"nodeType": "YulBlock",
													"src": "13257:81:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "instance",
																		"nativeSrc": "13283:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "13283:8:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "13297:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "13297:6:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13305:2:0",
																				"nodeType": "YulLiteral",
																				"src": "13305:2:0",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13293:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "13293:3:0"
																		},
																		"nativeSrc": "13293:15:0",
																		"nodeType": "YulFunctionCall",
																		"src": "13293:15:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13310:2:0",
																		"nodeType": "YulLiteral",
																		"src": "13310:2:0",
																		"type": "",
																		"value": "45"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "13320:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "13320:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13314:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "13314:5:0"
																		},
																		"nativeSrc": "13314:13:0",
																		"nodeType": "YulFunctionCall",
																		"src": "13314:13:0"
																	}
																],
																"functionName": {
																	"name": "extcodecopy",
																	"nativeSrc": "13271:11:0",
																	"nodeType": "YulIdentifier",
																	"src": "13271:11:0"
																},
																"nativeSrc": "13271:57:0",
																"nodeType": "YulFunctionCall",
																"src": "13271:57:0"
															},
															"nativeSrc": "13271:57:0",
															"nodeType": "YulExpressionStatement",
															"src": "13271:57:0"
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 342,
														"isOffset": false,
														"isSlot": false,
														"src": "13283:8:0",
														"valueSize": 1
													},
													{
														"declaration": 348,
														"isOffset": false,
														"isSlot": false,
														"src": "13297:6:0",
														"valueSize": 1
													},
													{
														"declaration": 348,
														"isOffset": false,
														"isSlot": false,
														"src": "13320:6:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 358,
												"nodeType": "InlineAssembly",
												"src": "13232:106:0"
											},
											{
												"expression": {
													"id": 359,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 348,
													"src": "13354:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 346,
												"id": 360,
												"nodeType": "Return",
												"src": "13347:13:0"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "12434:603:0",
										"text": " @dev Get the immutable args attached to a clone.\n - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n   function will return an empty array.\n - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n   creation.\n - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n   function should only be used to check addresses that are known to be clones."
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchCloneArgs",
									"nameLocation": "13051:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "13074:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "13066:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13066:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13065:18:0"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "13107:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 344,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13107:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13106:14:0"
									},
									"scope": 398,
									"src": "13042:325:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "14156:362:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 372,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "14170:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14175:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14170:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3234353331",
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14184:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_24531_by_1",
															"typeString": "int_const 24531"
														},
														"value": "24531"
													},
													"src": "14170:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 379,
												"nodeType": "IfStatement",
												"src": "14166:55:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 376,
															"name": "CloneArgumentsTooLong",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "14198:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14198:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 378,
													"nodeType": "RevertStatement",
													"src": "14191:30:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "61",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14284:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																"typeString": "literal_string \"a\""
															},
															"value": "a"
														},
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 385,
																			"name": "args",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 367,
																			"src": "14316:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14321:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "14316:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3435",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14330:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_45_by_1",
																			"typeString": "int_const 45"
																		},
																		"value": "45"
																	},
																	"src": "14316:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14309:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint16_$",
																	"typeString": "type(uint16)"
																},
																"typeName": {
																	"id": 383,
																	"name": "uint16",
																	"nodeType": "ElementaryTypeName",
																	"src": "14309:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14309:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"hexValue": "3d81600a3d39f3363d3d373d3d3d363d73",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14351:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4",
																"typeString": "literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""
															}
														},
														{
															"id": 391,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "14408:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "5af43d82803e903d91602b57fd5bf3",
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14440:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45",
																"typeString": "literal_string hex\"5af43d82803e903d91602b57fd5bf3\""
															}
														},
														{
															"id": 393,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "14493:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																"typeString": "literal_string \"a\""
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4",
																"typeString": "literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45",
																"typeString": "literal_string hex\"5af43d82803e903d91602b57fd5bf3\""
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 380,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "14250:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14254:12:0",
														"memberName": "encodePacked",
														"nodeType": "MemberAccess",
														"src": "14250:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14250:261:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 371,
												"id": 395,
												"nodeType": "Return",
												"src": "14231:280:0"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "13373:640:0",
										"text": " @dev Helper that prepares the initcode of the proxy with immutable args.\n An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n abi.encodePacked is more expensive but also more portable and easier to review.\n NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes."
									},
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_cloneCodeWithImmutableArgs",
									"nameLocation": "14027:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "14072:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "14064:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14064:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "14109:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "14096:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 366,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14096:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14054:65:0"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "14142:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14142:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14141:14:0"
									},
									"scope": 398,
									"src": "14018:500:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 399,
							"src": "817:13703:0",
							"usedErrors": [
								8
							],
							"usedEvents": []
						}
					],
					"src": "100:14421:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Create2.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
					"exportedSymbols": {
						"Create2": [
							497
						],
						"Errors": [
							519
						]
					},
					"id": 498,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 400,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 498,
							"sourceUnit": 520,
							"src": "127:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 401,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 519,
										"src": "135:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Create2",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 403,
								"nodeType": "StructuredDocumentation",
								"src": "165:367:1",
								"text": " @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."
							},
							"fullyImplemented": true,
							"id": 497,
							"linearizedBaseContracts": [
								497
							],
							"name": "Create2",
							"nameLocation": "541:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "555:50:1",
										"text": " @dev There's no code to deploy."
									},
									"errorSelector": "4ca249dc",
									"id": 406,
									"name": "Create2EmptyBytecode",
									"nameLocation": "616:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "636:2:1"
									},
									"src": "610:29:1"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "1311:746:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 420,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1333:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																],
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 418,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1325:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1325:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1339:7:1",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1325:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 423,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "1349:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1325:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 437,
												"nodeType": "IfStatement",
												"src": "1321:125:1",
												"trueBody": {
													"id": 436,
													"nodeType": "Block",
													"src": "1357:89:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 430,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1413:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Create2_$497",
																						"typeString": "library Create2"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Create2_$497",
																						"typeString": "library Create2"
																					}
																				],
																				"id": 429,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1405:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 428,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1405:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1405:13:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1419:7:1",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1405:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 433,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "1428:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 425,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "1378:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1385:19:1",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "1378:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1378:57:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 435,
															"nodeType": "RevertStatement",
															"src": "1371:64:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 438,
															"name": "bytecode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "1459:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1468:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1459:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1478:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1459:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 446,
												"nodeType": "IfStatement",
												"src": "1455:80:1",
												"trueBody": {
													"id": 445,
													"nodeType": "Block",
													"src": "1481:54:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 442,
																	"name": "Create2EmptyBytecode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "1502:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1502:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 444,
															"nodeType": "RevertStatement",
															"src": "1495:29:1"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "1569:392:1",
													"nodeType": "YulBlock",
													"src": "1569:392:1",
													"statements": [
														{
															"nativeSrc": "1583:67:1",
															"nodeType": "YulAssignment",
															"src": "1583:67:1",
															"value": {
																"arguments": [
																	{
																		"name": "amount",
																		"nativeSrc": "1599:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1599:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "1611:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1611:8:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1621:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1621:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1607:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1607:3:1"
																		},
																		"nativeSrc": "1607:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1607:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "1634:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1634:8:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1628:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "1628:5:1"
																		},
																		"nativeSrc": "1628:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1628:15:1"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "1645:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1645:4:1"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nativeSrc": "1591:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1591:7:1"
																},
																"nativeSrc": "1591:59:1",
																"nodeType": "YulFunctionCall",
																"src": "1591:59:1"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nativeSrc": "1583:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1583:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1800:151:1",
																"nodeType": "YulBlock",
																"src": "1800:151:1",
																"statements": [
																	{
																		"nativeSrc": "1818:20:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1818:20:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1833:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1833:4:1",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "1827:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1827:5:1"
																			},
																			"nativeSrc": "1827:11:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1827:11:1"
																		},
																		"variables": [
																			{
																				"name": "p",
																				"nativeSrc": "1822:1:1",
																				"nodeType": "YulTypedName",
																				"src": "1822:1:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "p",
																					"nativeSrc": "1870:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1870:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1873:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1873:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "1876:14:1",
																						"nodeType": "YulIdentifier",
																						"src": "1876:14:1"
																					},
																					"nativeSrc": "1876:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1876:16:1"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "1855:14:1",
																				"nodeType": "YulIdentifier",
																				"src": "1855:14:1"
																			},
																			"nativeSrc": "1855:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1855:38:1"
																		},
																		"nativeSrc": "1855:38:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1855:38:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "p",
																					"nativeSrc": "1917:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1917:1:1"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "1920:14:1",
																						"nodeType": "YulIdentifier",
																						"src": "1920:14:1"
																					},
																					"nativeSrc": "1920:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1920:16:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1910:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1910:6:1"
																			},
																			"nativeSrc": "1910:27:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1910:27:1"
																		},
																		"nativeSrc": "1910:27:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1910:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "addr",
																				"nativeSrc": "1762:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1762:4:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1755:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1755:6:1"
																		},
																		"nativeSrc": "1755:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1755:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nativeSrc": "1780:14:1",
																							"nodeType": "YulIdentifier",
																							"src": "1780:14:1"
																						},
																						"nativeSrc": "1780:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1780:16:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1773:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1773:6:1"
																				},
																				"nativeSrc": "1773:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1773:24:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1769:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1769:3:1"
																		},
																		"nativeSrc": "1769:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1769:29:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1751:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1751:3:1"
																},
																"nativeSrc": "1751:48:1",
																"nodeType": "YulFunctionCall",
																"src": "1751:48:1"
															},
															"nativeSrc": "1748:203:1",
															"nodeType": "YulIf",
															"src": "1748:203:1"
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 416,
														"isOffset": false,
														"isSlot": false,
														"src": "1583:4:1",
														"valueSize": 1
													},
													{
														"declaration": 416,
														"isOffset": false,
														"isSlot": false,
														"src": "1762:4:1",
														"valueSize": 1
													},
													{
														"declaration": 409,
														"isOffset": false,
														"isSlot": false,
														"src": "1599:6:1",
														"valueSize": 1
													},
													{
														"declaration": 413,
														"isOffset": false,
														"isSlot": false,
														"src": "1611:8:1",
														"valueSize": 1
													},
													{
														"declaration": 413,
														"isOffset": false,
														"isSlot": false,
														"src": "1634:8:1",
														"valueSize": 1
													},
													{
														"declaration": 411,
														"isOffset": false,
														"isSlot": false,
														"src": "1645:4:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 447,
												"nodeType": "InlineAssembly",
												"src": "1544:417:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 448,
														"name": "addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "1974:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1990:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1982:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 449,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1982:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1982:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1974:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 460,
												"nodeType": "IfStatement",
												"src": "1970:81:1",
												"trueBody": {
													"id": 459,
													"nodeType": "Block",
													"src": "1994:57:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 454,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "2015:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2022:16:1",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "2015:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2015:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 458,
															"nodeType": "RevertStatement",
															"src": "2008:32:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "645:560:1",
										"text": " @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."
									},
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deploy",
									"nameLocation": "1219:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1234:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1226:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "1250:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1242:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 410,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "bytecode",
												"nameLocation": "1269:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1256:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 412,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1256:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1225:53:1"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1297:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:14:1"
									},
									"scope": 497,
									"src": "1210:847:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "2353:73:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 473,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "2385:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 474,
															"name": "bytecodeHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "2391:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 477,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2413:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																],
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2405:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 475,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2405:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2405:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 472,
														"name": "computeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															482,
															496
														],
														"referencedDeclaration": 496,
														"src": "2370:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (bytes32,bytes32,address) pure returns (address)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 480,
												"nodeType": "Return",
												"src": "2363:56:1"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2063:193:1",
										"text": " @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nameLocation": "2270:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2293:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2285:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 464,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "bytecodeHash",
												"nameLocation": "2307:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2299:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 466,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2299:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:36:1"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2344:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2343:9:1"
									},
									"scope": 497,
									"src": "2261:165:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2784:1679:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2819:1638:1",
													"nodeType": "YulBlock",
													"src": "2819:1638:1",
													"statements": [
														{
															"nativeSrc": "2833:22:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2833:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2850:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2850:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2844:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2844:5:1"
																},
																"nativeSrc": "2844:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2844:11:1"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "2837:3:1",
																	"nodeType": "YulTypedName",
																	"src": "2837:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4057:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4057:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4062:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4062:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4053:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4053:3:1"
																		},
																		"nativeSrc": "4053:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4053:14:1"
																	},
																	{
																		"name": "bytecodeHash",
																		"nativeSrc": "4069:12:1",
																		"nodeType": "YulIdentifier",
																		"src": "4069:12:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4046:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:1"
																},
																"nativeSrc": "4046:36:1",
																"nodeType": "YulFunctionCall",
																"src": "4046:36:1"
															},
															"nativeSrc": "4046:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "4046:36:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4106:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4106:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4111:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4111:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4102:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4102:3:1"
																		},
																		"nativeSrc": "4102:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4102:14:1"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "4118:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4118:4:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4095:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4095:6:1"
																},
																"nativeSrc": "4095:28:1",
																"nodeType": "YulFunctionCall",
																"src": "4095:28:1"
															},
															"nativeSrc": "4095:28:1",
															"nodeType": "YulExpressionStatement",
															"src": "4095:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4143:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4143:3:1"
																	},
																	{
																		"name": "deployer",
																		"nativeSrc": "4148:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "4148:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4136:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4136:6:1"
																},
																"nativeSrc": "4136:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4136:21:1"
															},
															"nativeSrc": "4136:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4136:21:1"
														},
														{
															"nativeSrc": "4219:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4219:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4236:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4236:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4241:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4241:4:1",
																		"type": "",
																		"value": "0x0b"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4232:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4232:3:1"
																},
																"nativeSrc": "4232:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4232:14:1"
															},
															"variables": [
																{
																	"name": "start",
																	"nativeSrc": "4223:5:1",
																	"nodeType": "YulTypedName",
																	"src": "4223:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4345:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4345:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4352:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4352:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "mstore8",
																	"nativeSrc": "4337:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4337:7:1"
																},
																"nativeSrc": "4337:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4337:20:1"
															},
															"nativeSrc": "4337:20:1",
															"nodeType": "YulExpressionStatement",
															"src": "4337:20:1"
														},
														{
															"nativeSrc": "4370:77:1",
															"nodeType": "YulAssignment",
															"src": "4370:77:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "start",
																				"nativeSrc": "4392:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4392:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4399:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4399:2:1",
																				"type": "",
																				"value": "85"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "4382:9:1",
																			"nodeType": "YulIdentifier",
																			"src": "4382:9:1"
																		},
																		"nativeSrc": "4382:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4382:20:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4404:42:1",
																		"nodeType": "YulLiteral",
																		"src": "4404:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4378:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4378:3:1"
																},
																"nativeSrc": "4378:69:1",
																"nodeType": "YulFunctionCall",
																"src": "4378:69:1"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nativeSrc": "4370:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4370:4:1"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 492,
														"isOffset": false,
														"isSlot": false,
														"src": "4370:4:1",
														"valueSize": 1
													},
													{
														"declaration": 487,
														"isOffset": false,
														"isSlot": false,
														"src": "4069:12:1",
														"valueSize": 1
													},
													{
														"declaration": 489,
														"isOffset": false,
														"isSlot": false,
														"src": "4148:8:1",
														"valueSize": 1
													},
													{
														"declaration": 485,
														"isOffset": false,
														"isSlot": false,
														"src": "4118:4:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 494,
												"nodeType": "InlineAssembly",
												"src": "2794:1663:1"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "2432:232:1",
										"text": " @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nameLocation": "2678:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2701:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2693:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 484,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "bytecodeHash",
												"nameLocation": "2715:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2707:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 486,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2707:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "2737:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2729:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2729:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2692:54:1"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2778:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2770:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:14:1"
									},
									"scope": 497,
									"src": "2669:1794:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 498,
							"src": "533:3932:1",
							"usedErrors": [
								406
							],
							"usedEvents": []
						}
					],
					"src": "101:4365:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							519
						]
					},
					"id": 520,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 499,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 500,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:2",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 519,
							"linearizedBaseContracts": [
								519
							],
							"name": "Errors",
							"nameLocation": "419:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:2",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 507,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "557:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "574:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:2"
									},
									"src": "531:59:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:2",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 510,
									"name": "FailedCall",
									"nameLocation": "696:10:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:2"
									},
									"src": "690:19:2"
								},
								{
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:2",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 513,
									"name": "FailedDeployment",
									"nameLocation": "772:16:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:2"
									},
									"src": "766:25:2"
								},
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:2",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 518,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "884:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:2"
									},
									"src": "860:33:2"
								}
							],
							"scope": 520,
							"src": "411:484:2",
							"usedErrors": [
								507,
								510,
								513,
								518
							],
							"usedEvents": []
						}
					],
					"src": "100:796:2"
				},
				"id": 2
			},
			"hopium/common/interface/imDirectory.sol": {
				"ast": {
					"absolutePath": "hopium/common/interface/imDirectory.sol",
					"exportedSymbols": {
						"IDirectory": [
							535
						],
						"ImDirectory": [
							646
						]
					},
					"id": 647,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 521,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDirectory",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 522,
								"nodeType": "StructuredDocumentation",
								"src": "57:78:3",
								"text": "@notice Interface used by the registry to talk to the external directory."
							},
							"fullyImplemented": false,
							"id": 535,
							"linearizedBaseContracts": [
								535
							],
							"name": "IDirectory",
							"nameLocation": "145:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8da5cb5b",
									"id": 527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "171:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "176:2:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "202:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "201:9:3"
									},
									"scope": 535,
									"src": "162:49:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "27262618",
									"id": 534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fetchFromDirectory",
									"nameLocation": "225:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "258:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "244:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 528,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "244:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "243:20:3"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "287:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "286:9:3"
									},
									"scope": 535,
									"src": "216:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 647,
							"src": "135:163:3",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ImDirectory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 646,
							"linearizedBaseContracts": [
								646
							],
							"name": "ImDirectory",
							"nameLocation": "318:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "658a847a",
									"id": 538,
									"mutability": "mutable",
									"name": "Directory",
									"nameLocation": "354:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 646,
									"src": "336:27:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDirectory_$535",
										"typeString": "contract IDirectory"
									},
									"typeName": {
										"id": 537,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 536,
											"name": "IDirectory",
											"nameLocations": [
												"336:10:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 535,
											"src": "336:10:3"
										},
										"referencedDeclaration": 535,
										"src": "336:10:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDirectory_$535",
											"typeString": "contract IDirectory"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "402:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 544,
															"name": "_directory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "426:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 543,
														"name": "_setDirectory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "412:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "412:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "412:25:3"
											}
										]
									},
									"id": 548,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "_directory",
												"nameLocation": "390:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "382:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "382:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "381:20:3"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "402:0:3"
									},
									"scope": 646,
									"src": "370:94:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "541:42:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 556,
															"name": "_directory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "565:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 555,
														"name": "_setDirectory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "551:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "551:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "551:25:3"
											}
										]
									},
									"functionSelector": "ba4c7be1",
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 553,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 552,
												"name": "onlyOwner",
												"nameLocations": [
													"531:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 622,
												"src": "531:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "531:9:3"
										}
									],
									"name": "changeDirectoryAddress",
									"nameLocation": "479:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "_directory",
												"nameLocation": "510:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "502:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "501:20:3"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "541:0:3"
									},
									"scope": 646,
									"src": "470:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "641:409:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 566,
																"name": "_directory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "659:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "681:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "673:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 567,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "673:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "673:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "659:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4469726563746f72792063616e6e6f74206265207a65726f2061646472657373",
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "685:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
																"typeString": "literal_string \"Directory cannot be zero address\""
															},
															"value": "Directory cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
																"typeString": "literal_string \"Directory cannot be zero address\""
															}
														],
														"id": 565,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "651:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "651:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "651:69:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 576,
																		"name": "_directory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 562,
																		"src": "738:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "749:4:3",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "738:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "754:6:3",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "738:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "763:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "738:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4469726563746f7279206d757374206265206120636f6e7472616374",
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "766:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
																"typeString": "literal_string \"Directory must be a contract\""
															},
															"value": "Directory must be a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
																"typeString": "literal_string \"Directory must be a contract\""
															}
														],
														"id": 575,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "730:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "730:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "730:67:3"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 598,
															"nodeType": "Block",
															"src": "899:59:3",
															"statements": [
																{
																	"expression": {
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 592,
																			"name": "Directory",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 538,
																			"src": "913:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IDirectory_$535",
																				"typeString": "contract IDirectory"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 594,
																					"name": "_directory",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 562,
																					"src": "936:10:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 593,
																				"name": "IDirectory",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 535,
																				"src": "925:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IDirectory_$535_$",
																					"typeString": "type(contract IDirectory)"
																				}
																			},
																			"id": 595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "925:22:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IDirectory_$535",
																				"typeString": "contract IDirectory"
																			}
																		},
																		"src": "913:34:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IDirectory_$535",
																			"typeString": "contract IDirectory"
																		}
																	},
																	"id": 597,
																	"nodeType": "ExpressionStatement",
																	"src": "913:34:3"
																}
															]
														},
														"errorName": "",
														"id": 599,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 591,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 590,
																	"mutability": "mutable",
																	"name": "",
																	"nameLocation": "-1:-1:-1",
																	"nodeType": "VariableDeclaration",
																	"scope": 599,
																	"src": "890:7:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 589,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "890:7:3",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "889:9:3"
														},
														"src": "881:77:3"
													},
													{
														"block": {
															"id": 604,
															"nodeType": "Block",
															"src": "965:79:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "4469726563746f7279206164647265737320646f6573206e6f7420696d706c656d656e74206f776e65722829",
																				"id": 601,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "986:46:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
																					"typeString": "literal_string \"Directory address does not implement owner()\""
																				},
																				"value": "Directory address does not implement owner()"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
																					"typeString": "literal_string \"Directory address does not implement owner()\""
																				}
																			],
																			"id": 600,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "979:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "979:54:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 603,
																	"nodeType": "ExpressionStatement",
																	"src": "979:54:3"
																}
															]
														},
														"errorName": "",
														"id": 605,
														"nodeType": "TryCatchClause",
														"src": "959:85:3"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 585,
																	"name": "_directory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 562,
																	"src": "861:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 584,
																"name": "IDirectory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "850:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDirectory_$535_$",
																	"typeString": "type(contract IDirectory)"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "850:22:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDirectory_$535",
																"typeString": "contract IDirectory"
															}
														},
														"id": 587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "873:5:3",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 527,
														"src": "850:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "850:30:3",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 606,
												"nodeType": "TryStatement",
												"src": "846:198:3"
											}
										]
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setDirectory",
									"nameLocation": "598:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "_directory",
												"nameLocation": "620:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "612:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:20:3"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "641:0:3"
									},
									"scope": 646,
									"src": "589:461:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "1077:95:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 611,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1095:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1099:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1095:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 613,
																		"name": "Directory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 538,
																		"src": "1109:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IDirectory_$535",
																			"typeString": "contract IDirectory"
																		}
																	},
																	"id": 614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1119:5:3",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 527,
																	"src": "1109:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1109:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1095:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420746865206f776e6572",
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1128:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
																"typeString": "literal_string \"Caller is not the owner\""
															},
															"value": "Caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
																"typeString": "literal_string \"Caller is not the owner\""
															}
														],
														"id": 610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1087:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1087:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "1087:67:3"
											},
											{
												"id": 620,
												"nodeType": "PlaceholderStatement",
												"src": "1164:1:3"
											}
										]
									},
									"id": 622,
									"name": "onlyOwner",
									"nameLocation": "1065:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1074:2:3"
									},
									"src": "1056:116:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "1225:41:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 627,
															"name": "Directory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "1242:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDirectory_$535",
																"typeString": "contract IDirectory"
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1252:5:3",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 527,
														"src": "1242:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1242:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 626,
												"id": 630,
												"nodeType": "Return",
												"src": "1235:24:3"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1187:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1192:2:3"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1216:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1215:9:3"
									},
									"scope": 646,
									"src": "1178:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "1350:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 641,
															"name": "_key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "1396:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 639,
															"name": "Directory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "1367:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDirectory_$535",
																"typeString": "contract IDirectory"
															}
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1377:18:3",
														"memberName": "fetchFromDirectory",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 534,
														"src": "1367:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
															"typeString": "function (string memory) view external returns (address)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1367:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 638,
												"id": 643,
												"nodeType": "Return",
												"src": "1360:41:3"
											}
										]
									},
									"functionSelector": "27262618",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchFromDirectory",
									"nameLocation": "1281:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "1314:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "1300:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 633,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1300:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1299:20:3"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "1341:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:9:3"
									},
									"scope": 646,
									"src": "1272:136:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 647,
							"src": "300:1110:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1379:3"
				},
				"id": 3
			},
			"hopium/etf/interface/iEtfVault.sol": {
				"ast": {
					"absolutePath": "hopium/etf/interface/iEtfVault.sol",
					"exportedSymbols": {
						"IEtfVault": [
							663
						]
					},
					"id": 664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 648,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IEtfVault",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 663,
							"linearizedBaseContracts": [
								663
							],
							"name": "IEtfVault",
							"nameLocation": "67:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "5c833bfd",
									"id": 657,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "redeem",
									"nameLocation": "90:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "105:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "97:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "97:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "127:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "119:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "119:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "143:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "135:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "96:56:4"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "161:0:4"
									},
									"scope": 663,
									"src": "81:81:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c4d66de8",
									"id": 662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "175:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "_directory",
												"nameLocation": "194:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "186:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "186:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "185:20:4"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "214:0:4"
									},
									"scope": 663,
									"src": "166:49:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 664,
							"src": "57:160:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:186:4"
				},
				"id": 4
			},
			"hopium/etf/interface/imEtfFactory.sol": {
				"ast": {
					"absolutePath": "hopium/etf/interface/imEtfFactory.sol",
					"exportedSymbols": {
						"IDirectory": [
							535
						],
						"IEtfFactory": [
							702
						],
						"ImDirectory": [
							646
						],
						"ImEtfFactory": [
							732
						]
					},
					"id": 733,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 665,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "hopium/common/interface/imDirectory.sol",
							"file": "hopium/common/interface/imDirectory.sol",
							"id": 666,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 733,
							"sourceUnit": 647,
							"src": "57:49:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IEtfFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 702,
							"linearizedBaseContracts": [
								702
							],
							"name": "IEtfFactory",
							"nameLocation": "118:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "f2018a1f",
									"id": 673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEtfTokenAddress",
									"nameLocation": "145:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "indexId",
												"nameLocation": "172:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "164:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "164:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "163:17:5"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "204:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:9:5"
									},
									"scope": 702,
									"src": "136:77:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3ee79962",
									"id": 680,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEtfVaultAddress",
									"nameLocation": "227:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "indexId",
												"nameLocation": "254:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "246:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "246:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "245:17:5"
									},
									"returnParameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "286:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "285:9:5"
									},
									"scope": 702,
									"src": "218:77:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e4b603b3",
									"id": 687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEtfNavWeth",
									"nameLocation": "309:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "indexId",
												"nameLocation": "331:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "323:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:17:5"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "nav",
												"nameLocation": "371:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "363:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "363:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "362:13:5"
									},
									"scope": 702,
									"src": "300:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d00ed651",
									"id": 694,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getIndexIdFromEtfTokenAddress",
									"nameLocation": "390:29:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "etfTokenAddress",
												"nameLocation": "428:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "420:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:25:5"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "468:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "467:9:5"
									},
									"scope": 702,
									"src": "381:96:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1626542c",
									"id": 701,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateEtfVolume",
									"nameLocation": "491:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "indexId",
												"nameLocation": "515:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "507:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "tradeWethValue",
												"nameLocation": "532:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "524:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "524:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "506:41:5"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "556:0:5"
									},
									"scope": 702,
									"src": "482:75:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 733,
							"src": "108:451:5",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 703,
										"name": "ImDirectory",
										"nameLocations": [
											"595:11:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 646,
										"src": "595:11:5"
									},
									"id": 704,
									"nodeType": "InheritanceSpecifier",
									"src": "595:11:5"
								}
							],
							"canonicalName": "ImEtfFactory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 732,
							"linearizedBaseContracts": [
								732,
								646
							],
							"name": "ImEtfFactory",
							"nameLocation": "579:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "683:70:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "6574662d666163746f7279",
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "731:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_943729610839eba57b71f5d9959c11c5b12a75d61eab5ef533c966664c99cdca",
																		"typeString": "literal_string \"etf-factory\""
																	},
																	"value": "etf-factory"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_943729610839eba57b71f5d9959c11c5b12a75d61eab5ef533c966664c99cdca",
																		"typeString": "literal_string \"etf-factory\""
																	}
																],
																"id": 711,
																"name": "fetchFromDirectory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "712:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$",
																	"typeString": "function (string memory) view returns (address)"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "712:33:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 710,
														"name": "IEtfFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "700:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IEtfFactory_$702_$",
															"typeString": "type(contract IEtfFactory)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "700:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEtfFactory_$702",
														"typeString": "contract IEtfFactory"
													}
												},
												"functionReturnParameters": 709,
												"id": 715,
												"nodeType": "Return",
												"src": "693:53:5"
											}
										]
									},
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEtfFactory",
									"nameLocation": "623:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "636:2:5"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "670:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IEtfFactory_$702",
													"typeString": "contract IEtfFactory"
												},
												"typeName": {
													"id": 707,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 706,
														"name": "IEtfFactory",
														"nameLocations": [
															"670:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 702,
														"src": "670:11:5"
													},
													"referencedDeclaration": 702,
													"src": "670:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEtfFactory_$702",
														"typeString": "contract IEtfFactory"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "669:13:5"
									},
									"scope": 732,
									"src": "614:139:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "785:117:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 720,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "803:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "807:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "803:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "6574662d666163746f7279",
																		"id": 723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "836:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_943729610839eba57b71f5d9959c11c5b12a75d61eab5ef533c966664c99cdca",
																			"typeString": "literal_string \"etf-factory\""
																		},
																		"value": "etf-factory"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_943729610839eba57b71f5d9959c11c5b12a75d61eab5ef533c966664c99cdca",
																			"typeString": "literal_string \"etf-factory\""
																		}
																	],
																	"id": 722,
																	"name": "fetchFromDirectory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "817:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$",
																		"typeString": "function (string memory) view returns (address)"
																	}
																},
																"id": 724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "817:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "803:47:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d73672e73656e646572206973206e6f742065746620666163746f7279",
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "852:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_96d2274afc2e46d87651e0ea9c531d7bd4a8254dcdfc9658ecdc8737b93f78e9",
																"typeString": "literal_string \"msg.sender is not etf factory\""
															},
															"value": "msg.sender is not etf factory"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_96d2274afc2e46d87651e0ea9c531d7bd4a8254dcdfc9658ecdc8737b93f78e9",
																"typeString": "literal_string \"msg.sender is not etf factory\""
															}
														],
														"id": 719,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "795:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "795:89:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "795:89:5"
											},
											{
												"id": 729,
												"nodeType": "PlaceholderStatement",
												"src": "894:1:5"
											}
										]
									},
									"id": 731,
									"name": "onlyEtfFactory",
									"nameLocation": "768:14:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "782:2:5"
									},
									"src": "759:143:5",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 733,
							"src": "561:343:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:872:5"
				},
				"id": 5
			},
			"hopium/etf/main/etf-vault-deployer.sol": {
				"ast": {
					"absolutePath": "hopium/etf/main/etf-vault-deployer.sol",
					"exportedSymbols": {
						"Clones": [
							398
						],
						"Create2": [
							497
						],
						"Errors": [
							519
						],
						"EtfVaultDeployer": [
							838
						],
						"Helpers": [
							784
						],
						"IDirectory": [
							535
						],
						"IEtfFactory": [
							702
						],
						"IEtfVault": [
							663
						],
						"ImDirectory": [
							646
						],
						"ImEtfFactory": [
							732
						],
						"ImplNotSet": [
							740
						]
					},
					"id": 839,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 734,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
							"file": "@openzeppelin/contracts/proxy/Clones.sol",
							"id": 735,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 839,
							"sourceUnit": 399,
							"src": "57:50:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "hopium/common/interface/imDirectory.sol",
							"file": "hopium/common/interface/imDirectory.sol",
							"id": 736,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 839,
							"sourceUnit": 647,
							"src": "108:49:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "hopium/etf/interface/imEtfFactory.sol",
							"file": "hopium/etf/interface/imEtfFactory.sol",
							"id": 737,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 839,
							"sourceUnit": 733,
							"src": "158:47:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "hopium/etf/interface/iEtfVault.sol",
							"file": "hopium/etf/interface/iEtfVault.sol",
							"id": 738,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 839,
							"sourceUnit": 664,
							"src": "206:44:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"errorSelector": "8020a5c7",
							"id": 740,
							"name": "ImplNotSet",
							"nameLocation": "258:10:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 739,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "268:2:6"
							},
							"src": "252:19:6"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 741,
										"name": "ImDirectory",
										"nameLocations": [
											"302:11:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 646,
										"src": "302:11:6"
									},
									"id": 742,
									"nodeType": "InheritanceSpecifier",
									"src": "302:11:6"
								}
							],
							"canonicalName": "Helpers",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 784,
							"linearizedBaseContracts": [
								784,
								646
							],
							"name": "Helpers",
							"nameLocation": "291:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "469:73:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "4554465f5641554c54",
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "513:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f955503d96b7300413529fdb5cf5324810609da700b17d240c22a22cec0dbf80",
																		"typeString": "literal_string \"ETF_VAULT\""
																	},
																	"value": "ETF_VAULT"
																},
																{
																	"id": 754,
																	"name": "indexId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "526:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_f955503d96b7300413529fdb5cf5324810609da700b17d240c22a22cec0dbf80",
																		"typeString": "literal_string \"ETF_VAULT\""
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 751,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "496:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "500:12:6",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "496:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "496:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 750,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "486:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "486:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 749,
												"id": 757,
												"nodeType": "Return",
												"src": "479:56:6"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "320:80:6",
										"text": "@dev Deterministic salt per indexId for CREATE2 clones (optional but useful)"
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_salt",
									"nameLocation": "414:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "indexId",
												"nameLocation": "428:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "420:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:17:6"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "460:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 747,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:6"
									},
									"scope": 784,
									"src": "405:137:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "604:167:6",
										"statements": [
											{
												"assignments": [
													765
												],
												"declarations": [
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "vaultImpl",
														"nameLocation": "622:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "614:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 764,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "614:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 769,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "6574662d7661756c742d696d706c",
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "654:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_89790e4db3656c7810e1ef3f79b27e2b987665e94e754dfd4c3a4a5fe0762955",
																"typeString": "literal_string \"etf-vault-impl\""
															},
															"value": "etf-vault-impl"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_89790e4db3656c7810e1ef3f79b27e2b987665e94e754dfd4c3a4a5fe0762955",
																"typeString": "literal_string \"etf-vault-impl\""
															}
														],
														"id": 766,
														"name": "fetchFromDirectory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "635:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$",
															"typeString": "function (string memory) view returns (address)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "635:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "614:57:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 770,
														"name": "vaultImpl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "685:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "706:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "698:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 771,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "698:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "698:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "685:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 779,
												"nodeType": "IfStatement",
												"src": "681:48:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 776,
															"name": "ImplNotSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "717:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "717:12:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 778,
													"nodeType": "RevertStatement",
													"src": "710:19:6"
												}
											},
											{
												"expression": {
													"id": 780,
													"name": "vaultImpl",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "755:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 763,
												"id": 781,
												"nodeType": "Return",
												"src": "748:16:6"
											}
										]
									},
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVaultImpl",
									"nameLocation": "557:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "569:2:6"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "595:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "595:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "594:9:6"
									},
									"scope": 784,
									"src": "548:223:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 839,
							"src": "273:500:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 786,
										"name": "ImEtfFactory",
										"nameLocations": [
											"879:12:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 732,
										"src": "879:12:6"
									},
									"id": 787,
									"nodeType": "InheritanceSpecifier",
									"src": "879:12:6"
								},
								{
									"baseName": {
										"id": 788,
										"name": "Helpers",
										"nameLocations": [
											"893:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 784,
										"src": "893:7:6"
									},
									"id": 789,
									"nodeType": "InheritanceSpecifier",
									"src": "893:7:6"
								}
							],
							"canonicalName": "EtfVaultDeployer",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 785,
								"nodeType": "StructuredDocumentation",
								"src": "775:75:6",
								"text": "@notice Factory that mints minimal-proxy clones of EtfVault (EIP-1167)"
							},
							"fullyImplemented": true,
							"id": 838,
							"linearizedBaseContracts": [
								838,
								784,
								732,
								646
							],
							"name": "EtfVaultDeployer",
							"nameLocation": "859:16:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 792,
									"libraryName": {
										"id": 790,
										"name": "Clones",
										"nameLocations": [
											"913:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 398,
										"src": "913:6:6"
									},
									"nodeType": "UsingForDirective",
									"src": "907:25:6",
									"typeName": {
										"id": 791,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "924:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "994:2:6",
										"statements": []
									},
									"id": 801,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 797,
													"name": "_directory",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 794,
													"src": "982:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 798,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 796,
												"name": "ImDirectory",
												"nameLocations": [
													"970:11:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 646,
												"src": "970:11:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "970:23:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "_directory",
												"nameLocation": "958:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "950:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "949:20:6"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "994:0:6"
									},
									"scope": 838,
									"src": "938:58:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "1178:188:6",
										"statements": [
											{
												"assignments": [
													812
												],
												"declarations": [
													{
														"constant": false,
														"id": 812,
														"mutability": "mutable",
														"name": "vaultImpl",
														"nameLocation": "1196:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 836,
														"src": "1188:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 811,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1188:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 813,
														"name": "getVaultImpl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1208:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1208:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1188:34:6"
											},
											{
												"expression": {
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 816,
														"name": "proxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "1233:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 819,
																"name": "vaultImpl",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 812,
																"src": "1267:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 821,
																		"name": "indexId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 804,
																		"src": "1284:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 820,
																	"name": "_salt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "1278:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bytes32_$",
																		"typeString": "function (uint256) pure returns (bytes32)"
																	}
																},
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1278:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 817,
																"name": "Clones",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "1241:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Clones_$398_$",
																	"typeString": "type(library Clones)"
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1248:18:6",
															"memberName": "cloneDeterministic",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 84,
															"src": "1241:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$",
																"typeString": "function (address,bytes32) returns (address)"
															}
														},
														"id": 823,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1241:52:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1233:60:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "1233:60:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 832,
																	"name": "Directory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "1348:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IDirectory_$535",
																		"typeString": "contract IDirectory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IDirectory_$535",
																		"typeString": "contract IDirectory"
																	}
																],
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1340:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 830,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1340:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1340:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 827,
																	"name": "proxy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "1322:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 826,
																"name": "IEtfVault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "1312:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IEtfVault_$663_$",
																	"typeString": "type(contract IEtfVault)"
																}
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1312:16:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEtfVault_$663",
																"typeString": "contract IEtfVault"
															}
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1329:10:6",
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 662,
														"src": "1312:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1312:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "1312:47:6"
											}
										]
									},
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "1002:82:6",
										"text": "@notice Deploys a new EtfVault clone and initializes it with current Directory"
									},
									"functionSelector": "b57c59a7",
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 807,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 806,
												"name": "onlyEtfFactory",
												"nameLocations": [
													"1139:14:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 731,
												"src": "1139:14:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1139:14:6"
										}
									],
									"name": "deployEtfVault",
									"nameLocation": "1098:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "indexId",
												"nameLocation": "1121:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "1113:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1112:17:6"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "proxy",
												"nameLocation": "1171:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "1163:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1163:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1162:15:6"
									},
									"scope": 838,
									"src": "1089:277:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 839,
							"src": "850:518:6",
							"usedErrors": [
								507,
								513,
								740
							],
							"usedEvents": []
						}
					],
					"src": "32:1337:6"
				},
				"id": 6
			}
		}
	}
}