{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_directory",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "AlreadyInitialized",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "EthSendFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroAmount",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "Directory",
				"outputs": [
					{
						"internalType": "contract IDirectory",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_directory",
						"type": "address"
					}
				],
				"name": "changeDirectoryAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_key",
						"type": "string"
					}
				],
				"name": "fetchFromDirectory",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_directory",
						"type": "address"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "toAddress",
						"type": "address"
					}
				],
				"name": "recoverAsset",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					}
				],
				"name": "redeem",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"details": "Assumes ImEtfRouter -> ImDirectory for access control & Directory wiring.",
			"kind": "dev",
			"methods": {
				"constructor": {
					"details": "You can pass an existing Directory here; clones still call initialize()."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"constructor": {
					"notice": "Constructor runs once for the implementation only."
				},
				"initialize(address)": {
					"notice": "One-time initializer for clones (constructors don't run for proxies)"
				},
				"recoverAsset(address,address)": {
					"notice": "Owner (Directory.owner()) can recover stuck ETH/ERC20"
				},
				"redeem(address,uint256,address)": {
					"notice": "Redeem underlying tokens to receiver; callable only by EtfRouter"
				}
			},
			"notice": "Etf Vault implementation (logic). Clones delegatecall into this.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"hopium/etf/main/etf-vault.sol": "EtfVault"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"hopium/common/interface/imDirectory.sol": {
			"keccak256": "0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7",
			"license": "MIT",
			"urls": [
				"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626",
				"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e"
			]
		},
		"hopium/etf/interface/imEtfRouter.sol": {
			"keccak256": "0x4fd93f9ce7640689f5972fd5223e6f0736328c6b138a29305f55f0648265b1f2",
			"license": "MIT",
			"urls": [
				"bzz-raw://3cd6c04d58f6085e83d6b0397ff7da38f3f3ba002fad5291a806e9c0237f413d",
				"dweb:/ipfs/QmXgLguqgoW8HjmUJMiwbKWDdihwfcuJ7BsJ9UERvCc79G"
			]
		},
		"hopium/etf/main/etf-vault.sol": {
			"keccak256": "0xc660f5b335af9df35e2ad156364449fc83fe86d7d489cc0f756d866b235c9a1e",
			"license": "MIT",
			"urls": [
				"bzz-raw://f6b00327d3022a9575ae67659f90ca3331beec274a06dea34840b302200bfe5c",
				"dweb:/ipfs/QmRKFLquyBnL4KKFjpWGjm3wSV5CJN4QV3Nepar9uyH3bG"
			]
		}
	},
	"version": 1
}