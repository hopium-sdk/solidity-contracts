{
	"id": "114e3dc72e756dc425d085815e28f755",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"hopium/etf/main/etf-token-deployer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.30;\n\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\n\nimport \"hopium/common/interface/imDirectory.sol\";\nimport \"hopium/etf/interface/iEtfToken.sol\";\n\nabstract contract Helpers is ImDirectory {\n   \n    function _randomSalt() internal view returns (bytes32) {\n        return keccak256(\n            abi.encodePacked(\n                block.timestamp,\n                block.prevrandao, // replaces block.difficulty since 0.8.18\n                msg.sender,\n                gasleft()\n            )\n        );\n    }\n\n    error ImplNotSet();\n    function _getTokenImplAddress() internal view returns (address tokenImpl) {\n        tokenImpl = fetchFromDirectory(\"etf-token-impl\");\n        if (tokenImpl == address(0)) revert ImplNotSet();\n    }\n}\n\n/// @notice Factory that mints minimal-proxy clones of EtfToken (EIP-1167)\ncontract EtfTokenDeployer is ImDirectory, Helpers {\n    using Clones for address;\n\n    constructor(address _directory) ImDirectory(_directory) {}\n\n    /// @notice Deploy a new ETF token clone with per-clone name/symbol\n    function deployEtfToken(uint256 etfId, string calldata name, string calldata symbol) external returns (address proxy) {\n        // Create deterministic clone (CREATE2). Reverts if already deployed for same salt.\n        proxy = Clones.cloneDeterministic(_getTokenImplAddress(), _randomSalt());\n\n        // Initialize with per-clone params\n        IEtfToken(proxy).initialize(etfId, name, symbol, address(Directory));\n    }\n\n}\n"
			},
			"hopium/etf/interface/iEtfToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.30;\n\ninterface IEtfToken {\n   function initialize(uint256 etfId_, string memory name_, string memory symbol_, address directory_) external;\n   function mint(address to, uint256 amount) external;\n   function burn(address from, uint256 amount) external;\n}\n"
			},
			"hopium/common/interface/imDirectory.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.30;\n\n/// @notice Interface used by the registry to talk to the external directory.\ninterface IDirectory {\n    function owner() external view returns (address);\n    function fetchFromDirectory(string memory _key) external view returns (address);\n}\n\nabstract contract ImDirectory {\n    IDirectory public Directory;\n\n    constructor(address _directory) {\n        _setDirectory(_directory); // no modifier here\n    }\n\n    function changeDirectoryAddress(address _directory) external onlyOwner {\n        _setDirectory(_directory);\n    }\n\n    function _setDirectory(address _directory) internal {\n        require(_directory != address(0), \"Directory cannot be zero address\");\n        require(_directory.code.length > 0, \"Directory must be a contract\");\n\n        // Sanity check the interface\n        try IDirectory(_directory).owner() returns (address) {\n            Directory = IDirectory(_directory);\n        } catch {\n            revert(\"Directory address does not implement owner()\");\n        }\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == Directory.owner(), \"Caller is not the owner\");\n        _;\n    }\n\n    function owner() public view returns (address) {\n        return Directory.owner();\n    }\n\n    function fetchFromDirectory(string memory _key) public view returns (address) {\n        return Directory.fetchFromDirectory(_key);\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.20;\n\nimport {Create2} from \"../utils/Create2.sol\";\nimport {Errors} from \"../utils/Errors.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n */\nlibrary Clones {\n    error CloneArgumentsTooLong();\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        return clone(implementation, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n     * to the new contract.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function clone(address implementation, uint256 value) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(value, 0x09, 0x37)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple times will revert, since\n     * the clones cannot be deployed twice at the same address.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        return cloneDeterministic(implementation, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n     * a `value` parameter to send native currency to the new contract.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministic(\n        address implementation,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(value, 0x09, 0x37, salt)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := and(keccak256(add(ptr, 0x43), 0x55), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create opcode, which should never revert.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     */\n    function cloneWithImmutableArgs(address implementation, bytes memory args) internal returns (address instance) {\n        return cloneWithImmutableArgs(implementation, args, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n     * parameter to send native currency to the new contract.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        assembly (\"memory-safe\") {\n            instance := create(value, add(bytecode, 0x20), mload(bytecode))\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n     * `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n     * at the same address.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal returns (address instance) {\n        return cloneDeterministicWithImmutableArgs(implementation, args, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n     * but with a `value` parameter to send native currency to the new contract.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.deploy(value, salt, bytecode);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.computeAddress(salt, keccak256(bytecode), deployer);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddressWithImmutableArgs(implementation, args, salt, address(this));\n    }\n\n    /**\n     * @dev Get the immutable args attached to a clone.\n     *\n     * - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n     *   function will return an empty array.\n     * - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n     *   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n     *   creation.\n     * - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n     *   function should only be used to check addresses that are known to be clones.\n     */\n    function fetchCloneArgs(address instance) internal view returns (bytes memory) {\n        bytes memory result = new bytes(instance.code.length - 45); // revert if length is too short\n        assembly (\"memory-safe\") {\n            extcodecopy(instance, add(result, 32), 45, mload(result))\n        }\n        return result;\n    }\n\n    /**\n     * @dev Helper that prepares the initcode of the proxy with immutable args.\n     *\n     * An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n     * `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n     * abi.encodePacked is more expensive but also more portable and easier to review.\n     *\n     * NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n     * With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes.\n     */\n    function _cloneCodeWithImmutableArgs(\n        address implementation,\n        bytes memory args\n    ) private pure returns (bytes memory) {\n        if (args.length > 24531) revert CloneArgumentsTooLong();\n        return\n            abi.encodePacked(\n                hex\"61\",\n                uint16(args.length + 45),\n                hex\"3d81600a3d39f3363d3d373d3d3d363d73\",\n                implementation,\n                hex\"5af43d82803e903d91602b57fd5bf3\",\n                args\n            );\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Create2.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Create2.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev There's no code to deploy.\n     */\n    error Create2EmptyBytecode();\n\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n        if (bytecode.length == 0) {\n            revert Create2EmptyBytecode();\n        }\n        assembly (\"memory-safe\") {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n            // if no address was created, and returndata is not empty, bubble revert\n            if and(iszero(addr), not(iszero(returndatasize()))) {\n                let p := mload(0x40)\n                returndatacopy(p, 0, returndatasize())\n                revert(p, returndatasize())\n            }\n        }\n        if (addr == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := and(keccak256(start, 85), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"Clones": {
					"abi": [
						{
							"inputs": [],
							"name": "CloneArgumentsTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/Clones.sol\":817:14520  library Clones {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":817:14520  library Clones {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212201927144f7df1cc7ce3b7170813d6a234afd3646705f2c1bd2df341d0aa61b54e64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201927144f7df1cc7ce3b7170813d6a234afd3646705f2c1bd2df341d0aa61b54e64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0x27 EQ 0x4F PUSH30 0xF1CC7CE3B7170813D6A234AFD3646705F2C1BD2DF341D0AA61B54E64736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "817:13703:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201927144f7df1cc7ce3b7170813d6a234afd3646705f2c1bd2df341d0aa61b54e64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0x27 EQ 0x4F PUSH30 0xF1CC7CE3B7170813D6A234AFD3646705F2C1BD2DF341D0AA61B54E64736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "817:13703:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_cloneCodeWithImmutableArgs(address,bytes memory)": "infinite",
								"clone(address)": "infinite",
								"clone(address,uint256)": "infinite",
								"cloneDeterministic(address,bytes32)": "infinite",
								"cloneDeterministic(address,bytes32,uint256)": "infinite",
								"cloneDeterministicWithImmutableArgs(address,bytes memory,bytes32)": "infinite",
								"cloneDeterministicWithImmutableArgs(address,bytes memory,bytes32,uint256)": "infinite",
								"cloneWithImmutableArgs(address,bytes memory)": "infinite",
								"cloneWithImmutableArgs(address,bytes memory,uint256)": "infinite",
								"fetchCloneArgs(address)": "infinite",
								"predictDeterministicAddress(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32,address)": "infinite",
								"predictDeterministicAddressWithImmutableArgs(address,bytes memory,bytes32)": "infinite",
								"predictDeterministicAddressWithImmutableArgs(address,bytes memory,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 817,
									"end": 14520,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201927144f7df1cc7ce3b7170813d6a234afd3646705f2c1bd2df341d0aa61b54e64736f6c634300081e0033",
									".code": [
										{
											"begin": 817,
											"end": 14520,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 817,
											"end": 14520,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 817,
											"end": 14520,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 817,
											"end": 14520,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 817,
											"end": 14520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 14520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 817,
											"end": 14520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 14520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 14520,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"hopium/common/interface/imDirectory.sol",
								"hopium/etf/interface/iEtfToken.sol",
								"hopium/etf/main/etf-token-deployer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CloneArgumentsTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x7e918671c04972845975935ea13c9ce0be1228031ba0e929d0f1f68fd1f17214\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3027ebaeef3e678ad9bae26f0556469878e992bf7dec94bede328a92be529419\",\"dweb:/ipfs/Qmdu4RfMYv9Q7iHWuYfyUL6fZKc73nM4YWizNP8w1xay56\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Create2.sol": {
				"Create2": {
					"abi": [
						{
							"inputs": [],
							"name": "Create2EmptyBytecode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.",
						"errors": {
							"Create2EmptyBytecode()": [
								{
									"details": "There's no code to deploy."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Create2.sol\":533:4465  library Create2 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Create2.sol\":533:4465  library Create2 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122053cfacfcf6c794d529bda8dd9649a3fa31ba9a72ae53a27adb6f96ab70989e9a64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122053cfacfcf6c794d529bda8dd9649a3fa31ba9a72ae53a27adb6f96ab70989e9a64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xCF 0xAC 0xFC 0xF6 0xC7 SWAP5 0xD5 0x29 0xBD 0xA8 0xDD SWAP7 BLOBHASH LOG3 STATICCALL BALANCE 0xBA SWAP11 PUSH19 0xAE53A27ADB6F96AB70989E9A64736F6C634300 ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "533:3932:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122053cfacfcf6c794d529bda8dd9649a3fa31ba9a72ae53a27adb6f96ab70989e9a64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xCF 0xAC 0xFC 0xF6 0xC7 SWAP5 0xD5 0x29 0xBD 0xA8 0xDD SWAP7 BLOBHASH LOG3 STATICCALL BALANCE 0xBA SWAP11 PUSH19 0xAE53A27ADB6F96AB70989E9A64736F6C634300 ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "533:3932:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"computeAddress(bytes32,bytes32)": "infinite",
								"computeAddress(bytes32,bytes32,address)": "infinite",
								"deploy(uint256,bytes32,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122053cfacfcf6c794d529bda8dd9649a3fa31ba9a72ae53a27adb6f96ab70989e9a64736f6c634300081e0033",
									".code": [
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"hopium/common/interface/imDirectory.sol",
								"hopium/etf/interface/iEtfToken.sol",
								"hopium/etf/main/etf-token-deployer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Create2EmptyBytecode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"errors\":{\"Create2EmptyBytecode()\":[{\"details\":\"There's no code to deploy.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xB7BDD8BFAFAFCAF4815A18409339C23CD5 0x4F 0xA7 0xEA SDIV CREATE2 MSIZE SWAP1 0xDA SHR PUSH27 0x945D265E64736F6C634300081E0033000000000000000000000000 ",
							"sourceMap": "411:484:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xB7BDD8BFAFAFCAF4815A18409339C23CD5 0x4F 0xA7 0xEA SDIV CREATE2 MSIZE SWAP1 0xDA SHR PUSH27 0x945D265E64736F6C634300081E0033000000000000000000000000 ",
							"sourceMap": "411:484:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"hopium/common/interface/imDirectory.sol",
								"hopium/etf/interface/iEtfToken.sol",
								"hopium/etf/main/etf-token-deployer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hopium/common/interface/imDirectory.sol": {
				"IDirectory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_key",
									"type": "string"
								}
							],
							"name": "fetchFromDirectory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"fetchFromDirectory(string)": "27262618",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"fetchFromDirectory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface used by the registry to talk to the external directory.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/common/interface/imDirectory.sol\":\"IDirectory\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Interface used by the registry to talk to the external directory.",
						"version": 1
					}
				},
				"ImDirectory": {
					"abi": [
						{
							"inputs": [],
							"name": "Directory",
							"outputs": [
								{
									"internalType": "contract IDirectory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_directory",
									"type": "address"
								}
							],
							"name": "changeDirectoryAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_key",
									"type": "string"
								}
							],
							"name": "fetchFromDirectory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"Directory()": "658a847a",
							"changeDirectoryAddress(address)": "ba4c7be1",
							"fetchFromDirectory(string)": "27262618",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Directory\",\"outputs\":[{\"internalType\":\"contract IDirectory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_directory\",\"type\":\"address\"}],\"name\":\"changeDirectoryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"fetchFromDirectory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/common/interface/imDirectory.sol\":\"ImDirectory\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "hopium/common/interface/imDirectory.sol:ImDirectory",
								"label": "Directory",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDirectory)535"
							}
						],
						"types": {
							"t_contract(IDirectory)535": {
								"encoding": "inplace",
								"label": "contract IDirectory",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hopium/etf/interface/iEtfToken.sol": {
				"IEtfToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "etfId_",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "directory_",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(address,uint256)": "9dc29fac",
							"initialize(uint256,string,string,address)": "6ebd362c",
							"mint(address,uint256)": "40c10f19"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"etfId_\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"directory_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/etf/interface/iEtfToken.sol\":\"IEtfToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hopium/etf/interface/iEtfToken.sol\":{\"keccak256\":\"0x3c068530f073bf47696bae1bf5b8181043376b623aa225b3f7f9b53031899a45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55ed0dfc9d1cfa92c9411e8d22155fba488d63652d4312a3b71e3c3f97e475fe\",\"dweb:/ipfs/QmbTYVAqStGGNncDuGtt7HMJnfpw23zkBJD91yvyqeD1pj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hopium/etf/main/etf-token-deployer.sol": {
				"EtfTokenDeployer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_directory",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ImplNotSet",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Directory",
							"outputs": [
								{
									"internalType": "contract IDirectory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_directory",
									"type": "address"
								}
							],
							"name": "changeDirectoryAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "etfId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"name": "deployEtfToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxy",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_key",
									"type": "string"
								}
							],
							"name": "fetchFromDirectory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"hopium/etf/main/etf-token-deployer.sol\":868:1516  contract EtfTokenDeployer is ImDirectory, Helpers {... */\n  mstore(0x40, 0x80)\n    /* \"hopium/etf/main/etf-token-deployer.sol\":955:1013  constructor(address _directory) ImDirectory(_directory) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"hopium/etf/main/etf-token-deployer.sol\":999:1009  _directory */\n  dup1\n    /* \"hopium/common/interface/imDirectory.sol\":412:437  _setDirectory(_directory) */\n  tag_7\n    /* \"hopium/common/interface/imDirectory.sol\":426:436  _directory */\n  dup2\n    /* \"hopium/common/interface/imDirectory.sol\":412:425  _setDirectory */\n  shl(0x20, tag_8)\n    /* \"hopium/common/interface/imDirectory.sol\":412:437  _setDirectory(_directory) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"hopium/common/interface/imDirectory.sol\":370:464  constructor(address _directory) {... */\n  pop\n    /* \"hopium/etf/main/etf-token-deployer.sol\":955:1013  constructor(address _directory) ImDirectory(_directory) {} */\n  pop\n    /* \"hopium/etf/main/etf-token-deployer.sol\":868:1516  contract EtfTokenDeployer is ImDirectory, Helpers {... */\n  jump(tag_10)\n    /* \"hopium/common/interface/imDirectory.sol\":589:1050  function _setDirectory(address _directory) internal {... */\ntag_8:\n    /* \"hopium/common/interface/imDirectory.sol\":681:682  0 */\n  0x00\n    /* \"hopium/common/interface/imDirectory.sol\":659:683  _directory != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"hopium/common/interface/imDirectory.sol\":659:669  _directory */\n  dup2\n    /* \"hopium/common/interface/imDirectory.sol\":659:683  _directory != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"hopium/common/interface/imDirectory.sol\":651:720  require(_directory != address(0), \"Directory cannot be zero address\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"hopium/common/interface/imDirectory.sol\":763:764  0 */\n  0x00\n    /* \"hopium/common/interface/imDirectory.sol\":738:748  _directory */\n  dup2\n    /* \"hopium/common/interface/imDirectory.sol\":738:760  _directory.code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"hopium/common/interface/imDirectory.sol\":738:764  _directory.code.length > 0 */\n  gt\n    /* \"hopium/common/interface/imDirectory.sol\":730:797  require(_directory.code.length > 0, \"Directory must be a contract\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"hopium/common/interface/imDirectory.sol\":861:871  _directory */\n  dup1\n    /* \"hopium/common/interface/imDirectory.sol\":850:878  IDirectory(_directory).owner */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8da5cb5b\n    /* \"hopium/common/interface/imDirectory.sol\":850:880  IDirectory(_directory).owner() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  swap3\n  pop\n  pop\n  pop\n  dup1\n  iszero\n  tag_18\n  jumpi\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_19\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_19:\n  0x01\ntag_18:\n    /* \"hopium/common/interface/imDirectory.sol\":846:1044  try IDirectory(_directory).owner() returns (address) {... */\n  tag_20\n  jumpi\n    /* \"hopium/common/interface/imDirectory.sol\":979:1033  revert(\"Directory address does not implement owner()\") */\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"hopium/common/interface/imDirectory.sol\":846:1044  try IDirectory(_directory).owner() returns (address) {... */\ntag_20:\n    /* \"hopium/common/interface/imDirectory.sol\":936:946  _directory */\n  dup2\n    /* \"hopium/common/interface/imDirectory.sol\":913:922  Directory */\n  0x00\n  0x00\n    /* \"hopium/common/interface/imDirectory.sol\":913:947  Directory = IDirectory(_directory) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"hopium/common/interface/imDirectory.sol\":881:958  returns (address) {... */\n  pop\n    /* \"hopium/common/interface/imDirectory.sol\":589:1050  function _setDirectory(address _directory) internal {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_28:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_30:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_31:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_47\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_30\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_32:\n    /* \"#utility.yul\":641:665   */\n  tag_49\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_31\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_50:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_33:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_52\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_32\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_55\n  tag_28\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":932:1051   */\ntag_54:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_56\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_33\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1371   */\ntag_34:\n    /* \"#utility.yul\":1286:1297   */\n  0x00\n    /* \"#utility.yul\":1320:1326   */\n  dup3\n    /* \"#utility.yul\":1315:1318   */\n  dup3\n    /* \"#utility.yul\":1308:1327   */\n  mstore\n    /* \"#utility.yul\":1360:1364   */\n  0x20\n    /* \"#utility.yul\":1355:1358   */\n  dup3\n    /* \"#utility.yul\":1351:1365   */\n  add\n    /* \"#utility.yul\":1336:1365   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1371   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1377:1559   */\ntag_35:\n    /* \"#utility.yul\":1517:1551   */\n  0x4469726563746f72792063616e6e6f74206265207a65726f2061646472657373\n    /* \"#utility.yul\":1513:1514   */\n  0x00\n    /* \"#utility.yul\":1505:1511   */\n  dup3\n    /* \"#utility.yul\":1501:1515   */\n  add\n    /* \"#utility.yul\":1494:1552   */\n  mstore\n    /* \"#utility.yul\":1377:1559   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1565:1931   */\ntag_36:\n    /* \"#utility.yul\":1707:1710   */\n  0x00\n    /* \"#utility.yul\":1728:1795   */\n  tag_60\n    /* \"#utility.yul\":1792:1794   */\n  0x20\n    /* \"#utility.yul\":1787:1790   */\n  dup4\n    /* \"#utility.yul\":1728:1795   */\n  tag_34\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1721:1795   */\n  swap2\n  pop\n    /* \"#utility.yul\":1804:1897   */\n  tag_61\n    /* \"#utility.yul\":1893:1896   */\n  dup3\n    /* \"#utility.yul\":1804:1897   */\n  tag_35\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1922:1924   */\n  0x20\n    /* \"#utility.yul\":1917:1920   */\n  dup3\n    /* \"#utility.yul\":1913:1925   */\n  add\n    /* \"#utility.yul\":1906:1925   */\n  swap1\n  pop\n    /* \"#utility.yul\":1565:1931   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1937:2356   */\ntag_14:\n    /* \"#utility.yul\":2103:2107   */\n  0x00\n    /* \"#utility.yul\":2141:2143   */\n  0x20\n    /* \"#utility.yul\":2130:2139   */\n  dup3\n    /* \"#utility.yul\":2126:2144   */\n  add\n    /* \"#utility.yul\":2118:2144   */\n  swap1\n  pop\n    /* \"#utility.yul\":2190:2199   */\n  dup2\n    /* \"#utility.yul\":2184:2188   */\n  dup2\n    /* \"#utility.yul\":2180:2200   */\n  sub\n    /* \"#utility.yul\":2176:2177   */\n  0x00\n    /* \"#utility.yul\":2165:2174   */\n  dup4\n    /* \"#utility.yul\":2161:2178   */\n  add\n    /* \"#utility.yul\":2154:2201   */\n  mstore\n    /* \"#utility.yul\":2218:2349   */\n  tag_63\n    /* \"#utility.yul\":2344:2348   */\n  dup2\n    /* \"#utility.yul\":2218:2349   */\n  tag_36\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2210:2349   */\n  swap1\n  pop\n    /* \"#utility.yul\":1937:2356   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2362:2540   */\ntag_37:\n    /* \"#utility.yul\":2502:2532   */\n  0x4469726563746f7279206d757374206265206120636f6e747261637400000000\n    /* \"#utility.yul\":2498:2499   */\n  0x00\n    /* \"#utility.yul\":2490:2496   */\n  dup3\n    /* \"#utility.yul\":2486:2500   */\n  add\n    /* \"#utility.yul\":2479:2533   */\n  mstore\n    /* \"#utility.yul\":2362:2540   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2546:2912   */\ntag_38:\n    /* \"#utility.yul\":2688:2691   */\n  0x00\n    /* \"#utility.yul\":2709:2776   */\n  tag_66\n    /* \"#utility.yul\":2773:2775   */\n  0x1c\n    /* \"#utility.yul\":2768:2771   */\n  dup4\n    /* \"#utility.yul\":2709:2776   */\n  tag_34\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2702:2776   */\n  swap2\n  pop\n    /* \"#utility.yul\":2785:2878   */\n  tag_67\n    /* \"#utility.yul\":2874:2877   */\n  dup3\n    /* \"#utility.yul\":2785:2878   */\n  tag_37\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2903:2905   */\n  0x20\n    /* \"#utility.yul\":2898:2901   */\n  dup3\n    /* \"#utility.yul\":2894:2906   */\n  add\n    /* \"#utility.yul\":2887:2906   */\n  swap1\n  pop\n    /* \"#utility.yul\":2546:2912   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2918:3337   */\ntag_17:\n    /* \"#utility.yul\":3084:3088   */\n  0x00\n    /* \"#utility.yul\":3122:3124   */\n  0x20\n    /* \"#utility.yul\":3111:3120   */\n  dup3\n    /* \"#utility.yul\":3107:3125   */\n  add\n    /* \"#utility.yul\":3099:3125   */\n  swap1\n  pop\n    /* \"#utility.yul\":3171:3180   */\n  dup2\n    /* \"#utility.yul\":3165:3169   */\n  dup2\n    /* \"#utility.yul\":3161:3181   */\n  sub\n    /* \"#utility.yul\":3157:3158   */\n  0x00\n    /* \"#utility.yul\":3146:3155   */\n  dup4\n    /* \"#utility.yul\":3142:3159   */\n  add\n    /* \"#utility.yul\":3135:3182   */\n  mstore\n    /* \"#utility.yul\":3199:3330   */\n  tag_69\n    /* \"#utility.yul\":3325:3329   */\n  dup2\n    /* \"#utility.yul\":3199:3330   */\n  tag_38\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":3191:3330   */\n  swap1\n  pop\n    /* \"#utility.yul\":2918:3337   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3343:3574   */\ntag_39:\n    /* \"#utility.yul\":3483:3517   */\n  0x4469726563746f7279206164647265737320646f6573206e6f7420696d706c65\n    /* \"#utility.yul\":3479:3480   */\n  0x00\n    /* \"#utility.yul\":3471:3477   */\n  dup3\n    /* \"#utility.yul\":3467:3481   */\n  add\n    /* \"#utility.yul\":3460:3518   */\n  mstore\n    /* \"#utility.yul\":3552:3566   */\n  0x6d656e74206f776e657228290000000000000000000000000000000000000000\n    /* \"#utility.yul\":3547:3549   */\n  0x20\n    /* \"#utility.yul\":3539:3545   */\n  dup3\n    /* \"#utility.yul\":3535:3550   */\n  add\n    /* \"#utility.yul\":3528:3567   */\n  mstore\n    /* \"#utility.yul\":3343:3574   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3580:3946   */\ntag_40:\n    /* \"#utility.yul\":3722:3725   */\n  0x00\n    /* \"#utility.yul\":3743:3810   */\n  tag_72\n    /* \"#utility.yul\":3807:3809   */\n  0x2c\n    /* \"#utility.yul\":3802:3805   */\n  dup4\n    /* \"#utility.yul\":3743:3810   */\n  tag_34\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":3736:3810   */\n  swap2\n  pop\n    /* \"#utility.yul\":3819:3912   */\n  tag_73\n    /* \"#utility.yul\":3908:3911   */\n  dup3\n    /* \"#utility.yul\":3819:3912   */\n  tag_39\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3937:3939   */\n  0x40\n    /* \"#utility.yul\":3932:3935   */\n  dup3\n    /* \"#utility.yul\":3928:3940   */\n  add\n    /* \"#utility.yul\":3921:3940   */\n  swap1\n  pop\n    /* \"#utility.yul\":3580:3946   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3952:4371   */\ntag_25:\n    /* \"#utility.yul\":4118:4122   */\n  0x00\n    /* \"#utility.yul\":4156:4158   */\n  0x20\n    /* \"#utility.yul\":4145:4154   */\n  dup3\n    /* \"#utility.yul\":4141:4159   */\n  add\n    /* \"#utility.yul\":4133:4159   */\n  swap1\n  pop\n    /* \"#utility.yul\":4205:4214   */\n  dup2\n    /* \"#utility.yul\":4199:4203   */\n  dup2\n    /* \"#utility.yul\":4195:4215   */\n  sub\n    /* \"#utility.yul\":4191:4192   */\n  0x00\n    /* \"#utility.yul\":4180:4189   */\n  dup4\n    /* \"#utility.yul\":4176:4193   */\n  add\n    /* \"#utility.yul\":4169:4216   */\n  mstore\n    /* \"#utility.yul\":4233:4364   */\n  tag_75\n    /* \"#utility.yul\":4359:4363   */\n  dup2\n    /* \"#utility.yul\":4233:4364   */\n  tag_40\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":4225:4364   */\n  swap1\n  pop\n    /* \"#utility.yul\":3952:4371   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"hopium/etf/main/etf-token-deployer.sol\":868:1516  contract EtfTokenDeployer is ImDirectory, Helpers {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"hopium/etf/main/etf-token-deployer.sol\":868:1516  contract EtfTokenDeployer is ImDirectory, Helpers {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x27262618\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x658a847a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x78f6c7c4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xba4c7be1\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"hopium/common/interface/imDirectory.sol\":1272:1408  function fetchFromDirectory(string memory _key) public view returns (address) {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/common/interface/imDirectory.sol\":336:363  IDirectory public Directory */\n    tag_4:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/etf/main/etf-token-deployer.sol\":1091:1513  function deployEtfToken(uint256 etfId, string calldata name, string calldata symbol) external returns (address proxy) {... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/common/interface/imDirectory.sol\":1178:1266  function owner() public view returns (address) {... */\n    tag_6:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hopium/common/interface/imDirectory.sol\":470:583  function changeDirectoryAddress(address _directory) external onlyOwner {... */\n    tag_7:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"hopium/common/interface/imDirectory.sol\":1272:1408  function fetchFromDirectory(string memory _key) public view returns (address) {... */\n    tag_11:\n        /* \"hopium/common/interface/imDirectory.sol\":1341:1348  address */\n      0x00\n        /* \"hopium/common/interface/imDirectory.sol\":1367:1376  Directory */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/common/interface/imDirectory.sol\":1367:1395  Directory.fetchFromDirectory */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x27262618\n        /* \"hopium/common/interface/imDirectory.sol\":1396:1400  _key */\n      dup4\n        /* \"hopium/common/interface/imDirectory.sol\":1367:1401  Directory.fetchFromDirectory(_key) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"hopium/common/interface/imDirectory.sol\":1360:1401  return Directory.fetchFromDirectory(_key) */\n      swap1\n      pop\n        /* \"hopium/common/interface/imDirectory.sol\":1272:1408  function fetchFromDirectory(string memory _key) public view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"hopium/common/interface/imDirectory.sol\":336:363  IDirectory public Directory */\n    tag_15:\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"hopium/etf/main/etf-token-deployer.sol\":1091:1513  function deployEtfToken(uint256 etfId, string calldata name, string calldata symbol) external returns (address proxy) {... */\n    tag_21:\n        /* \"hopium/etf/main/etf-token-deployer.sol\":1194:1207  address proxy */\n      0x00\n        /* \"hopium/etf/main/etf-token-deployer.sol\":1319:1383  Clones.cloneDeterministic(_getTokenImplAddress(), _randomSalt()) */\n      tag_38\n        /* \"hopium/etf/main/etf-token-deployer.sol\":1345:1367  _getTokenImplAddress() */\n      tag_39\n        /* \"hopium/etf/main/etf-token-deployer.sol\":1345:1365  _getTokenImplAddress */\n      tag_40\n        /* \"hopium/etf/main/etf-token-deployer.sol\":1345:1367  _getTokenImplAddress() */\n      jump\t// in\n    tag_39:\n        /* \"hopium/etf/main/etf-token-deployer.sol\":1369:1382  _randomSalt() */\n      tag_41\n        /* \"hopium/etf/main/etf-token-deployer.sol\":1369:1380  _randomSalt */\n      tag_42\n        /* \"hopium/etf/main/etf-token-deployer.sol\":1369:1382  _randomSalt() */\n      jump\t// in\n    tag_41:\n        /* \"hopium/etf/main/etf-token-deployer.sol\":1319:1344  Clones.cloneDeterministic */\n      tag_43\n        /* \"hopium/etf/main/etf-token-deployer.sol\":1319:1383  Clones.cloneDeterministic(_getTokenImplAddress(), _randomSalt()) */\n      jump\t// in\n    tag_38:\n        /* \"hopium/etf/main/etf-token-deployer.sol\":1311:1383  proxy = Clones.cloneDeterministic(_getTokenImplAddress(), _randomSalt()) */\n      swap1\n      pop\n        /* \"hopium/etf/main/etf-token-deployer.sol\":1448:1453  proxy */\n      dup1\n        /* \"hopium/etf/main/etf-token-deployer.sol\":1438:1465  IEtfToken(proxy).initialize */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6ebd362c\n        /* \"hopium/etf/main/etf-token-deployer.sol\":1466:1471  etfId */\n      dup8\n        /* \"hopium/etf/main/etf-token-deployer.sol\":1473:1477  name */\n      dup8\n      dup8\n        /* \"hopium/etf/main/etf-token-deployer.sol\":1479:1485  symbol */\n      dup8\n      dup8\n        /* \"hopium/etf/main/etf-token-deployer.sol\":1495:1504  Directory */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/etf/main/etf-token-deployer.sol\":1438:1506  IEtfToken(proxy).initialize(etfId, name, symbol, address(Directory)) */\n      mload(0x40)\n      dup8\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      revert(0x00, 0x00)\n    tag_46:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n        /* \"hopium/etf/main/etf-token-deployer.sol\":1091:1513  function deployEtfToken(uint256 etfId, string calldata name, string calldata symbol) external returns (address proxy) {... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"hopium/common/interface/imDirectory.sol\":1178:1266  function owner() public view returns (address) {... */\n    tag_24:\n        /* \"hopium/common/interface/imDirectory.sol\":1216:1223  address */\n      0x00\n        /* \"hopium/common/interface/imDirectory.sol\":1242:1251  Directory */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/common/interface/imDirectory.sol\":1242:1257  Directory.owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"hopium/common/interface/imDirectory.sol\":1242:1259  Directory.owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_51\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_51:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_52:\n        /* \"hopium/common/interface/imDirectory.sol\":1235:1259  return Directory.owner() */\n      swap1\n      pop\n        /* \"hopium/common/interface/imDirectory.sol\":1178:1266  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"hopium/common/interface/imDirectory.sol\":470:583  function changeDirectoryAddress(address _directory) external onlyOwner {... */\n    tag_29:\n        /* \"hopium/common/interface/imDirectory.sol\":1109:1118  Directory */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/common/interface/imDirectory.sol\":1109:1124  Directory.owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"hopium/common/interface/imDirectory.sol\":1109:1126  Directory.owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_55\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_55:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_56:\n        /* \"hopium/common/interface/imDirectory.sol\":1095:1126  msg.sender == Directory.owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/common/interface/imDirectory.sol\":1095:1105  msg.sender */\n      caller\n        /* \"hopium/common/interface/imDirectory.sol\":1095:1126  msg.sender == Directory.owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"hopium/common/interface/imDirectory.sol\":1087:1154  require(msg.sender == Directory.owner(), \"Caller is not the owner\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_57:\n        /* \"hopium/common/interface/imDirectory.sol\":551:576  _setDirectory(_directory) */\n      tag_61\n        /* \"hopium/common/interface/imDirectory.sol\":565:575  _directory */\n      dup2\n        /* \"hopium/common/interface/imDirectory.sol\":551:564  _setDirectory */\n      tag_62\n        /* \"hopium/common/interface/imDirectory.sol\":551:576  _setDirectory(_directory) */\n      jump\t// in\n    tag_61:\n        /* \"hopium/common/interface/imDirectory.sol\":470:583  function changeDirectoryAddress(address _directory) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"hopium/etf/main/etf-token-deployer.sol\":592:789  function _getTokenImplAddress() internal view returns (address tokenImpl) {... */\n    tag_40:\n        /* \"hopium/etf/main/etf-token-deployer.sol\":647:664  address tokenImpl */\n      0x00\n        /* \"hopium/etf/main/etf-token-deployer.sol\":688:724  fetchFromDirectory(\"etf-token-impl\") */\n      tag_64\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      0x6574662d746f6b656e2d696d706c000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"hopium/etf/main/etf-token-deployer.sol\":688:706  fetchFromDirectory */\n      tag_11\n        /* \"hopium/etf/main/etf-token-deployer.sol\":688:724  fetchFromDirectory(\"etf-token-impl\") */\n      jump\t// in\n    tag_64:\n        /* \"hopium/etf/main/etf-token-deployer.sol\":676:724  tokenImpl = fetchFromDirectory(\"etf-token-impl\") */\n      swap1\n      pop\n        /* \"hopium/etf/main/etf-token-deployer.sol\":759:760  0 */\n      0x00\n        /* \"hopium/etf/main/etf-token-deployer.sol\":738:761  tokenImpl == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/etf/main/etf-token-deployer.sol\":738:747  tokenImpl */\n      dup2\n        /* \"hopium/etf/main/etf-token-deployer.sol\":738:761  tokenImpl == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"hopium/etf/main/etf-token-deployer.sol\":734:782  if (tokenImpl == address(0)) revert ImplNotSet() */\n      tag_65\n      jumpi\n        /* \"hopium/etf/main/etf-token-deployer.sol\":770:782  ImplNotSet() */\n      mload(0x40)\n      0x8020a5c700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hopium/etf/main/etf-token-deployer.sol\":734:782  if (tokenImpl == address(0)) revert ImplNotSet() */\n    tag_65:\n        /* \"hopium/etf/main/etf-token-deployer.sol\":592:789  function _getTokenImplAddress() internal view returns (address tokenImpl) {... */\n      swap1\n      jump\t// out\n        /* \"hopium/etf/main/etf-token-deployer.sol\":256:562  function _randomSalt() internal view returns (bytes32) {... */\n    tag_42:\n        /* \"hopium/etf/main/etf-token-deployer.sol\":302:309  bytes32 */\n      0x00\n        /* \"hopium/etf/main/etf-token-deployer.sol\":385:400  block.timestamp */\n      timestamp\n        /* \"hopium/etf/main/etf-token-deployer.sol\":418:434  block.prevrandao */\n      prevrandao\n        /* \"hopium/etf/main/etf-token-deployer.sol\":494:504  msg.sender */\n      caller\n        /* \"hopium/etf/main/etf-token-deployer.sol\":522:531  gasleft() */\n      gas\n        /* \"hopium/etf/main/etf-token-deployer.sol\":351:545  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_67\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"hopium/etf/main/etf-token-deployer.sol\":328:555  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"hopium/etf/main/etf-token-deployer.sol\":321:555  return keccak256(... */\n      swap1\n      pop\n        /* \"hopium/etf/main/etf-token-deployer.sol\":256:562  function _randomSalt() internal view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3875:4044  function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3959:3975  address instance */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3994:4037  cloneDeterministic(implementation, salt, 0) */\n      tag_70\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4013:4027  implementation */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4029:4033  salt */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4035:4036  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3994:4012  cloneDeterministic */\n      tag_71\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3994:4037  cloneDeterministic(implementation, salt, 0) */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3987:4037  return cloneDeterministic(implementation, salt, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3875:4044  function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"hopium/common/interface/imDirectory.sol\":589:1050  function _setDirectory(address _directory) internal {... */\n    tag_62:\n        /* \"hopium/common/interface/imDirectory.sol\":681:682  0 */\n      0x00\n        /* \"hopium/common/interface/imDirectory.sol\":659:683  _directory != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"hopium/common/interface/imDirectory.sol\":659:669  _directory */\n      dup2\n        /* \"hopium/common/interface/imDirectory.sol\":659:683  _directory != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"hopium/common/interface/imDirectory.sol\":651:720  require(_directory != address(0), \"Directory cannot be zero address\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"hopium/common/interface/imDirectory.sol\":763:764  0 */\n      0x00\n        /* \"hopium/common/interface/imDirectory.sol\":738:748  _directory */\n      dup2\n        /* \"hopium/common/interface/imDirectory.sol\":738:760  _directory.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"hopium/common/interface/imDirectory.sol\":738:764  _directory.code.length > 0 */\n      gt\n        /* \"hopium/common/interface/imDirectory.sol\":730:797  require(_directory.code.length > 0, \"Directory must be a contract\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"hopium/common/interface/imDirectory.sol\":861:871  _directory */\n      dup1\n        /* \"hopium/common/interface/imDirectory.sol\":850:878  IDirectory(_directory).owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"hopium/common/interface/imDirectory.sol\":850:880  IDirectory(_directory).owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_79\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_80:\n      0x01\n    tag_79:\n        /* \"hopium/common/interface/imDirectory.sol\":846:1044  try IDirectory(_directory).owner() returns (address) {... */\n      tag_81\n      jumpi\n        /* \"hopium/common/interface/imDirectory.sol\":979:1033  revert(\"Directory address does not implement owner()\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hopium/common/interface/imDirectory.sol\":846:1044  try IDirectory(_directory).owner() returns (address) {... */\n    tag_81:\n        /* \"hopium/common/interface/imDirectory.sol\":936:946  _directory */\n      dup2\n        /* \"hopium/common/interface/imDirectory.sol\":913:922  Directory */\n      0x00\n      0x00\n        /* \"hopium/common/interface/imDirectory.sol\":913:947  Directory = IDirectory(_directory) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"hopium/common/interface/imDirectory.sol\":881:958  returns (address) {... */\n      pop\n        /* \"hopium/common/interface/imDirectory.sol\":589:1050  function _setDirectory(address _directory) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4805:5779  function cloneDeterministic(... */\n    tag_71:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4934:4950  address instance */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4990:4995  value */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4966:4987  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4966:4995  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4962:5085  if (address(this).balance < value) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5045:5066  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5068:5073  value */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5018:5074  Errors.InsufficientBalance(address(this).balance, value) */\n      mload(0x40)\n      0xcf47918100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap3\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4962:5085  if (address(this).balance < value) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5371:5419  0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000 */\n      0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5353:5367  implementation */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5347:5351  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5343:5368  shl(0x60, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5337:5341  0xe8 */\n      0xe8\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5333:5369  shr(0xe8, shl(0x60, implementation)) */\n      shr\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5330:5420  or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5324:5328  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5317:5421  mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5578:5610  0x5af43d82803e903d91602b57fd5bf3 */\n      0x5af43d82803e903d91602b57fd5bf3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5561:5575  implementation */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5555:5559  0x78 */\n      0x78\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5551:5576  shl(0x78, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5548:5611  or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5542:5546  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5535:5612  mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5664:5668  salt */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5658:5662  0x37 */\n      0x37\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5652:5656  0x09 */\n      0x09\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5645:5650  value */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5637:5669  create2(value, 0x09, 0x37, salt) */\n      create2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5625:5669  instance := create2(value, 0x09, 0x37, salt) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5712:5713  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5692:5714  instance == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5692:5700  instance */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5692:5714  instance == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5688:5773  if (instance == address(0)) {... */\n      tag_92\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5737:5762  Errors.FailedDeployment() */\n      mload(0x40)\n      0xb06ebf3d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":5688:5773  if (instance == address(0)) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4805:5779  function cloneDeterministic(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_93:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_94:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_95:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_96:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      0x00\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_97:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      0x00\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:682   */\n    tag_98:\n        /* \"#utility.yul\":621:627   */\n      0x00\n        /* \"#utility.yul\":672:674   */\n      0x1f\n        /* \"#utility.yul\":668:675   */\n      not\n        /* \"#utility.yul\":663:665   */\n      0x1f\n        /* \"#utility.yul\":656:661   */\n      dup4\n        /* \"#utility.yul\":652:666   */\n      add\n        /* \"#utility.yul\":648:676   */\n      and\n        /* \"#utility.yul\":638:676   */\n      swap1\n      pop\n        /* \"#utility.yul\":580:682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":688:868   */\n    tag_99:\n        /* \"#utility.yul\":736:813   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":733:734   */\n      0x00\n        /* \"#utility.yul\":726:814   */\n      mstore\n        /* \"#utility.yul\":833:837   */\n      0x41\n        /* \"#utility.yul\":830:831   */\n      0x04\n        /* \"#utility.yul\":823:838   */\n      mstore\n        /* \"#utility.yul\":857:861   */\n      0x24\n        /* \"#utility.yul\":854:855   */\n      0x00\n        /* \"#utility.yul\":847:862   */\n      revert\n        /* \"#utility.yul\":874:1155   */\n    tag_100:\n        /* \"#utility.yul\":957:984   */\n      tag_152\n        /* \"#utility.yul\":979:983   */\n      dup3\n        /* \"#utility.yul\":957:984   */\n      tag_98\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":949:955   */\n      dup2\n        /* \"#utility.yul\":945:985   */\n      add\n        /* \"#utility.yul\":1087:1093   */\n      dup2\n        /* \"#utility.yul\":1075:1085   */\n      dup2\n        /* \"#utility.yul\":1072:1094   */\n      lt\n        /* \"#utility.yul\":1051:1069   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1039:1049   */\n      dup3\n        /* \"#utility.yul\":1036:1070   */\n      gt\n        /* \"#utility.yul\":1033:1095   */\n      or\n        /* \"#utility.yul\":1030:1118   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":1098:1116   */\n      tag_154\n      tag_99\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1030:1118   */\n    tag_153:\n        /* \"#utility.yul\":1138:1148   */\n      dup1\n        /* \"#utility.yul\":1134:1136   */\n      0x40\n        /* \"#utility.yul\":1127:1149   */\n      mstore\n        /* \"#utility.yul\":917:1155   */\n      pop\n        /* \"#utility.yul\":874:1155   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1161:1290   */\n    tag_101:\n        /* \"#utility.yul\":1195:1201   */\n      0x00\n        /* \"#utility.yul\":1222:1242   */\n      tag_156\n      tag_93\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1212:1242   */\n      swap1\n      pop\n        /* \"#utility.yul\":1251:1284   */\n      tag_157\n        /* \"#utility.yul\":1279:1283   */\n      dup3\n        /* \"#utility.yul\":1271:1277   */\n      dup3\n        /* \"#utility.yul\":1251:1284   */\n      tag_100\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1161:1290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1296:1604   */\n    tag_102:\n        /* \"#utility.yul\":1358:1362   */\n      0x00\n        /* \"#utility.yul\":1448:1466   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1440:1446   */\n      dup3\n        /* \"#utility.yul\":1437:1467   */\n      gt\n        /* \"#utility.yul\":1434:1490   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":1470:1488   */\n      tag_160\n      tag_99\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":1434:1490   */\n    tag_159:\n        /* \"#utility.yul\":1508:1537   */\n      tag_161\n        /* \"#utility.yul\":1530:1536   */\n      dup3\n        /* \"#utility.yul\":1508:1537   */\n      tag_98\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1500:1537   */\n      swap1\n      pop\n        /* \"#utility.yul\":1592:1596   */\n      0x20\n        /* \"#utility.yul\":1586:1590   */\n      dup2\n        /* \"#utility.yul\":1582:1597   */\n      add\n        /* \"#utility.yul\":1574:1597   */\n      swap1\n      pop\n        /* \"#utility.yul\":1296:1604   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1758   */\n    tag_103:\n        /* \"#utility.yul\":1708:1714   */\n      dup3\n        /* \"#utility.yul\":1703:1706   */\n      dup2\n        /* \"#utility.yul\":1698:1701   */\n      dup4\n        /* \"#utility.yul\":1685:1715   */\n      calldatacopy\n        /* \"#utility.yul\":1749:1750   */\n      0x00\n        /* \"#utility.yul\":1740:1746   */\n      dup4\n        /* \"#utility.yul\":1735:1738   */\n      dup4\n        /* \"#utility.yul\":1731:1747   */\n      add\n        /* \"#utility.yul\":1724:1751   */\n      mstore\n        /* \"#utility.yul\":1610:1758   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1764:2189   */\n    tag_104:\n        /* \"#utility.yul\":1842:1847   */\n      0x00\n        /* \"#utility.yul\":1867:1933   */\n      tag_164\n        /* \"#utility.yul\":1883:1932   */\n      tag_165\n        /* \"#utility.yul\":1925:1931   */\n      dup5\n        /* \"#utility.yul\":1883:1932   */\n      tag_102\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1867:1933   */\n      tag_101\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1858:1933   */\n      swap1\n      pop\n        /* \"#utility.yul\":1956:1962   */\n      dup3\n        /* \"#utility.yul\":1949:1954   */\n      dup2\n        /* \"#utility.yul\":1942:1963   */\n      mstore\n        /* \"#utility.yul\":1994:1998   */\n      0x20\n        /* \"#utility.yul\":1987:1992   */\n      dup2\n        /* \"#utility.yul\":1983:1999   */\n      add\n        /* \"#utility.yul\":2032:2035   */\n      dup5\n        /* \"#utility.yul\":2023:2029   */\n      dup5\n        /* \"#utility.yul\":2018:2021   */\n      dup5\n        /* \"#utility.yul\":2014:2030   */\n      add\n        /* \"#utility.yul\":2011:2036   */\n      gt\n        /* \"#utility.yul\":2008:2120   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2039:2118   */\n      tag_167\n      tag_97\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":2008:2120   */\n    tag_166:\n        /* \"#utility.yul\":2129:2183   */\n      tag_168\n        /* \"#utility.yul\":2176:2182   */\n      dup5\n        /* \"#utility.yul\":2171:2174   */\n      dup3\n        /* \"#utility.yul\":2166:2169   */\n      dup6\n        /* \"#utility.yul\":2129:2183   */\n      tag_103\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1848:2189   */\n      pop\n        /* \"#utility.yul\":1764:2189   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2549   */\n    tag_105:\n        /* \"#utility.yul\":2265:2270   */\n      0x00\n        /* \"#utility.yul\":2314:2317   */\n      dup3\n        /* \"#utility.yul\":2307:2311   */\n      0x1f\n        /* \"#utility.yul\":2299:2305   */\n      dup4\n        /* \"#utility.yul\":2295:2312   */\n      add\n        /* \"#utility.yul\":2291:2318   */\n      slt\n        /* \"#utility.yul\":2281:2403   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2322:2401   */\n      tag_171\n      tag_96\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2281:2403   */\n    tag_170:\n        /* \"#utility.yul\":2439:2445   */\n      dup2\n        /* \"#utility.yul\":2426:2446   */\n      calldataload\n        /* \"#utility.yul\":2464:2543   */\n      tag_172\n        /* \"#utility.yul\":2539:2542   */\n      dup5\n        /* \"#utility.yul\":2531:2537   */\n      dup3\n        /* \"#utility.yul\":2524:2528   */\n      0x20\n        /* \"#utility.yul\":2516:2522   */\n      dup7\n        /* \"#utility.yul\":2512:2529   */\n      add\n        /* \"#utility.yul\":2464:2543   */\n      tag_104\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2455:2543   */\n      swap2\n      pop\n        /* \"#utility.yul\":2271:2549   */\n      pop\n        /* \"#utility.yul\":2209:2549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2555:3064   */\n    tag_10:\n        /* \"#utility.yul\":2624:2630   */\n      0x00\n        /* \"#utility.yul\":2673:2675   */\n      0x20\n        /* \"#utility.yul\":2661:2670   */\n      dup3\n        /* \"#utility.yul\":2652:2659   */\n      dup5\n        /* \"#utility.yul\":2648:2671   */\n      sub\n        /* \"#utility.yul\":2644:2676   */\n      slt\n        /* \"#utility.yul\":2641:2760   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":2679:2758   */\n      tag_175\n      tag_94\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2641:2760   */\n    tag_174:\n        /* \"#utility.yul\":2827:2828   */\n      0x00\n        /* \"#utility.yul\":2816:2825   */\n      dup3\n        /* \"#utility.yul\":2812:2829   */\n      add\n        /* \"#utility.yul\":2799:2830   */\n      calldataload\n        /* \"#utility.yul\":2857:2875   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2849:2855   */\n      dup2\n        /* \"#utility.yul\":2846:2876   */\n      gt\n        /* \"#utility.yul\":2843:2960   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":2879:2958   */\n      tag_177\n      tag_95\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":2843:2960   */\n    tag_176:\n        /* \"#utility.yul\":2984:3047   */\n      tag_178\n        /* \"#utility.yul\":3039:3046   */\n      dup5\n        /* \"#utility.yul\":3030:3036   */\n      dup3\n        /* \"#utility.yul\":3019:3028   */\n      dup6\n        /* \"#utility.yul\":3015:3037   */\n      add\n        /* \"#utility.yul\":2984:3047   */\n      tag_105\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2974:3047   */\n      swap2\n      pop\n        /* \"#utility.yul\":2770:3057   */\n      pop\n        /* \"#utility.yul\":2555:3064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3070:3196   */\n    tag_106:\n        /* \"#utility.yul\":3107:3114   */\n      0x00\n        /* \"#utility.yul\":3147:3189   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3140:3145   */\n      dup3\n        /* \"#utility.yul\":3136:3190   */\n      and\n        /* \"#utility.yul\":3125:3190   */\n      swap1\n      pop\n        /* \"#utility.yul\":3070:3196   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3202:3298   */\n    tag_107:\n        /* \"#utility.yul\":3239:3246   */\n      0x00\n        /* \"#utility.yul\":3268:3292   */\n      tag_181\n        /* \"#utility.yul\":3286:3291   */\n      dup3\n        /* \"#utility.yul\":3268:3292   */\n      tag_106\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":3257:3292   */\n      swap1\n      pop\n        /* \"#utility.yul\":3202:3298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3304:3422   */\n    tag_108:\n        /* \"#utility.yul\":3391:3415   */\n      tag_183\n        /* \"#utility.yul\":3409:3414   */\n      dup2\n        /* \"#utility.yul\":3391:3415   */\n      tag_107\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":3386:3389   */\n      dup3\n        /* \"#utility.yul\":3379:3416   */\n      mstore\n        /* \"#utility.yul\":3304:3422   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3428:3650   */\n    tag_13:\n        /* \"#utility.yul\":3521:3525   */\n      0x00\n        /* \"#utility.yul\":3559:3561   */\n      0x20\n        /* \"#utility.yul\":3548:3557   */\n      dup3\n        /* \"#utility.yul\":3544:3562   */\n      add\n        /* \"#utility.yul\":3536:3562   */\n      swap1\n      pop\n        /* \"#utility.yul\":3572:3643   */\n      tag_185\n        /* \"#utility.yul\":3640:3641   */\n      0x00\n        /* \"#utility.yul\":3629:3638   */\n      dup4\n        /* \"#utility.yul\":3625:3642   */\n      add\n        /* \"#utility.yul\":3616:3622   */\n      dup5\n        /* \"#utility.yul\":3572:3643   */\n      tag_108\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":3428:3650   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3656:3716   */\n    tag_109:\n        /* \"#utility.yul\":3684:3687   */\n      0x00\n        /* \"#utility.yul\":3705:3710   */\n      dup2\n        /* \"#utility.yul\":3698:3710   */\n      swap1\n      pop\n        /* \"#utility.yul\":3656:3716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3722:3864   */\n    tag_110:\n        /* \"#utility.yul\":3772:3781   */\n      0x00\n        /* \"#utility.yul\":3805:3858   */\n      tag_188\n        /* \"#utility.yul\":3823:3857   */\n      tag_189\n        /* \"#utility.yul\":3832:3856   */\n      tag_190\n        /* \"#utility.yul\":3850:3855   */\n      dup5\n        /* \"#utility.yul\":3832:3856   */\n      tag_106\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":3823:3857   */\n      tag_109\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3805:3858   */\n      tag_106\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3792:3858   */\n      swap1\n      pop\n        /* \"#utility.yul\":3722:3864   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3870:3996   */\n    tag_111:\n        /* \"#utility.yul\":3920:3929   */\n      0x00\n        /* \"#utility.yul\":3953:3990   */\n      tag_192\n        /* \"#utility.yul\":3984:3989   */\n      dup3\n        /* \"#utility.yul\":3953:3990   */\n      tag_110\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3940:3990   */\n      swap1\n      pop\n        /* \"#utility.yul\":3870:3996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4002:4146   */\n    tag_112:\n        /* \"#utility.yul\":4070:4079   */\n      0x00\n        /* \"#utility.yul\":4103:4140   */\n      tag_194\n        /* \"#utility.yul\":4134:4139   */\n      dup3\n        /* \"#utility.yul\":4103:4140   */\n      tag_111\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4090:4140   */\n      swap1\n      pop\n        /* \"#utility.yul\":4002:4146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4152:4319   */\n    tag_113:\n        /* \"#utility.yul\":4257:4312   */\n      tag_196\n        /* \"#utility.yul\":4306:4311   */\n      dup2\n        /* \"#utility.yul\":4257:4312   */\n      tag_112\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":4252:4255   */\n      dup3\n        /* \"#utility.yul\":4245:4313   */\n      mstore\n        /* \"#utility.yul\":4152:4319   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4325:4583   */\n    tag_17:\n        /* \"#utility.yul\":4436:4440   */\n      0x00\n        /* \"#utility.yul\":4474:4476   */\n      0x20\n        /* \"#utility.yul\":4463:4472   */\n      dup3\n        /* \"#utility.yul\":4459:4477   */\n      add\n        /* \"#utility.yul\":4451:4477   */\n      swap1\n      pop\n        /* \"#utility.yul\":4487:4576   */\n      tag_198\n        /* \"#utility.yul\":4573:4574   */\n      0x00\n        /* \"#utility.yul\":4562:4571   */\n      dup4\n        /* \"#utility.yul\":4558:4575   */\n      add\n        /* \"#utility.yul\":4549:4555   */\n      dup5\n        /* \"#utility.yul\":4487:4576   */\n      tag_113\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4325:4583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4589:4666   */\n    tag_114:\n        /* \"#utility.yul\":4626:4633   */\n      0x00\n        /* \"#utility.yul\":4655:4660   */\n      dup2\n        /* \"#utility.yul\":4644:4660   */\n      swap1\n      pop\n        /* \"#utility.yul\":4589:4666   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4672:4794   */\n    tag_115:\n        /* \"#utility.yul\":4745:4769   */\n      tag_201\n        /* \"#utility.yul\":4763:4768   */\n      dup2\n        /* \"#utility.yul\":4745:4769   */\n      tag_114\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":4738:4743   */\n      dup2\n        /* \"#utility.yul\":4735:4770   */\n      eq\n        /* \"#utility.yul\":4725:4788   */\n      tag_202\n      jumpi\n        /* \"#utility.yul\":4784:4785   */\n      0x00\n        /* \"#utility.yul\":4781:4782   */\n      0x00\n        /* \"#utility.yul\":4774:4786   */\n      revert\n        /* \"#utility.yul\":4725:4788   */\n    tag_202:\n        /* \"#utility.yul\":4672:4794   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4800:4939   */\n    tag_116:\n        /* \"#utility.yul\":4846:4851   */\n      0x00\n        /* \"#utility.yul\":4884:4890   */\n      dup2\n        /* \"#utility.yul\":4871:4891   */\n      calldataload\n        /* \"#utility.yul\":4862:4891   */\n      swap1\n      pop\n        /* \"#utility.yul\":4900:4933   */\n      tag_204\n        /* \"#utility.yul\":4927:4932   */\n      dup2\n        /* \"#utility.yul\":4900:4933   */\n      tag_115\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4800:4939   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4945:5062   */\n    tag_117:\n        /* \"#utility.yul\":5054:5055   */\n      0x00\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5044:5056   */\n      revert\n        /* \"#utility.yul\":5068:5185   */\n    tag_118:\n        /* \"#utility.yul\":5177:5178   */\n      0x00\n        /* \"#utility.yul\":5174:5175   */\n      0x00\n        /* \"#utility.yul\":5167:5179   */\n      revert\n        /* \"#utility.yul\":5205:5758   */\n    tag_119:\n        /* \"#utility.yul\":5263:5271   */\n      0x00\n        /* \"#utility.yul\":5273:5279   */\n      0x00\n        /* \"#utility.yul\":5323:5326   */\n      dup4\n        /* \"#utility.yul\":5316:5320   */\n      0x1f\n        /* \"#utility.yul\":5308:5314   */\n      dup5\n        /* \"#utility.yul\":5304:5321   */\n      add\n        /* \"#utility.yul\":5300:5327   */\n      slt\n        /* \"#utility.yul\":5290:5412   */\n      tag_208\n      jumpi\n        /* \"#utility.yul\":5331:5410   */\n      tag_209\n      tag_96\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":5290:5412   */\n    tag_208:\n        /* \"#utility.yul\":5444:5450   */\n      dup3\n        /* \"#utility.yul\":5431:5451   */\n      calldataload\n        /* \"#utility.yul\":5421:5451   */\n      swap1\n      pop\n        /* \"#utility.yul\":5474:5492   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5466:5472   */\n      dup2\n        /* \"#utility.yul\":5463:5493   */\n      gt\n        /* \"#utility.yul\":5460:5577   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":5496:5575   */\n      tag_211\n      tag_117\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":5460:5577   */\n    tag_210:\n        /* \"#utility.yul\":5610:5614   */\n      0x20\n        /* \"#utility.yul\":5602:5608   */\n      dup4\n        /* \"#utility.yul\":5598:5615   */\n      add\n        /* \"#utility.yul\":5586:5615   */\n      swap2\n      pop\n        /* \"#utility.yul\":5664:5667   */\n      dup4\n        /* \"#utility.yul\":5656:5660   */\n      0x01\n        /* \"#utility.yul\":5648:5654   */\n      dup3\n        /* \"#utility.yul\":5644:5661   */\n      mul\n        /* \"#utility.yul\":5634:5642   */\n      dup4\n        /* \"#utility.yul\":5630:5662   */\n      add\n        /* \"#utility.yul\":5627:5668   */\n      gt\n        /* \"#utility.yul\":5624:5752   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":5671:5750   */\n      tag_213\n      tag_118\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":5624:5752   */\n    tag_212:\n        /* \"#utility.yul\":5205:5758   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:6783   */\n    tag_20:\n        /* \"#utility.yul\":5865:5871   */\n      0x00\n        /* \"#utility.yul\":5873:5879   */\n      0x00\n        /* \"#utility.yul\":5881:5887   */\n      0x00\n        /* \"#utility.yul\":5889:5895   */\n      0x00\n        /* \"#utility.yul\":5897:5903   */\n      0x00\n        /* \"#utility.yul\":5946:5948   */\n      0x60\n        /* \"#utility.yul\":5934:5943   */\n      dup7\n        /* \"#utility.yul\":5925:5932   */\n      dup9\n        /* \"#utility.yul\":5921:5944   */\n      sub\n        /* \"#utility.yul\":5917:5949   */\n      slt\n        /* \"#utility.yul\":5914:6033   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":5952:6031   */\n      tag_216\n      tag_94\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":5914:6033   */\n    tag_215:\n        /* \"#utility.yul\":6072:6073   */\n      0x00\n        /* \"#utility.yul\":6097:6150   */\n      tag_217\n        /* \"#utility.yul\":6142:6149   */\n      dup9\n        /* \"#utility.yul\":6133:6139   */\n      dup3\n        /* \"#utility.yul\":6122:6131   */\n      dup10\n        /* \"#utility.yul\":6118:6140   */\n      add\n        /* \"#utility.yul\":6097:6150   */\n      tag_116\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":6087:6150   */\n      swap6\n      pop\n        /* \"#utility.yul\":6043:6160   */\n      pop\n        /* \"#utility.yul\":6227:6229   */\n      0x20\n        /* \"#utility.yul\":6216:6225   */\n      dup7\n        /* \"#utility.yul\":6212:6230   */\n      add\n        /* \"#utility.yul\":6199:6231   */\n      calldataload\n        /* \"#utility.yul\":6258:6276   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6250:6256   */\n      dup2\n        /* \"#utility.yul\":6247:6277   */\n      gt\n        /* \"#utility.yul\":6244:6361   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":6280:6359   */\n      tag_219\n      tag_95\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":6244:6361   */\n    tag_218:\n        /* \"#utility.yul\":6393:6458   */\n      tag_220\n        /* \"#utility.yul\":6450:6457   */\n      dup9\n        /* \"#utility.yul\":6441:6447   */\n      dup3\n        /* \"#utility.yul\":6430:6439   */\n      dup10\n        /* \"#utility.yul\":6426:6448   */\n      add\n        /* \"#utility.yul\":6393:6458   */\n      tag_119\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":6375:6458   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":6170:6468   */\n      pop\n        /* \"#utility.yul\":6535:6537   */\n      0x40\n        /* \"#utility.yul\":6524:6533   */\n      dup7\n        /* \"#utility.yul\":6520:6538   */\n      add\n        /* \"#utility.yul\":6507:6539   */\n      calldataload\n        /* \"#utility.yul\":6566:6584   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6558:6564   */\n      dup2\n        /* \"#utility.yul\":6555:6585   */\n      gt\n        /* \"#utility.yul\":6552:6669   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":6588:6667   */\n      tag_222\n      tag_95\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6552:6669   */\n    tag_221:\n        /* \"#utility.yul\":6701:6766   */\n      tag_223\n        /* \"#utility.yul\":6758:6765   */\n      dup9\n        /* \"#utility.yul\":6749:6755   */\n      dup3\n        /* \"#utility.yul\":6738:6747   */\n      dup10\n        /* \"#utility.yul\":6734:6756   */\n      add\n        /* \"#utility.yul\":6701:6766   */\n      tag_119\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":6683:6766   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":6478:6776   */\n      pop\n        /* \"#utility.yul\":5764:6783   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6789:6911   */\n    tag_120:\n        /* \"#utility.yul\":6862:6886   */\n      tag_225\n        /* \"#utility.yul\":6880:6885   */\n      dup2\n        /* \"#utility.yul\":6862:6886   */\n      tag_107\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":6855:6860   */\n      dup2\n        /* \"#utility.yul\":6852:6887   */\n      eq\n        /* \"#utility.yul\":6842:6905   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":6901:6902   */\n      0x00\n        /* \"#utility.yul\":6898:6899   */\n      0x00\n        /* \"#utility.yul\":6891:6903   */\n      revert\n        /* \"#utility.yul\":6842:6905   */\n    tag_226:\n        /* \"#utility.yul\":6789:6911   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6917:7056   */\n    tag_121:\n        /* \"#utility.yul\":6963:6968   */\n      0x00\n        /* \"#utility.yul\":7001:7007   */\n      dup2\n        /* \"#utility.yul\":6988:7008   */\n      calldataload\n        /* \"#utility.yul\":6979:7008   */\n      swap1\n      pop\n        /* \"#utility.yul\":7017:7050   */\n      tag_228\n        /* \"#utility.yul\":7044:7049   */\n      dup2\n        /* \"#utility.yul\":7017:7050   */\n      tag_120\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":6917:7056   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7062:7391   */\n    tag_28:\n        /* \"#utility.yul\":7121:7127   */\n      0x00\n        /* \"#utility.yul\":7170:7172   */\n      0x20\n        /* \"#utility.yul\":7158:7167   */\n      dup3\n        /* \"#utility.yul\":7149:7156   */\n      dup5\n        /* \"#utility.yul\":7145:7168   */\n      sub\n        /* \"#utility.yul\":7141:7173   */\n      slt\n        /* \"#utility.yul\":7138:7257   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":7176:7255   */\n      tag_231\n      tag_94\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":7138:7257   */\n    tag_230:\n        /* \"#utility.yul\":7296:7297   */\n      0x00\n        /* \"#utility.yul\":7321:7374   */\n      tag_232\n        /* \"#utility.yul\":7366:7373   */\n      dup5\n        /* \"#utility.yul\":7357:7363   */\n      dup3\n        /* \"#utility.yul\":7346:7355   */\n      dup6\n        /* \"#utility.yul\":7342:7364   */\n      add\n        /* \"#utility.yul\":7321:7374   */\n      tag_121\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":7311:7374   */\n      swap2\n      pop\n        /* \"#utility.yul\":7267:7384   */\n      pop\n        /* \"#utility.yul\":7062:7391   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7397:7496   */\n    tag_122:\n        /* \"#utility.yul\":7449:7455   */\n      0x00\n        /* \"#utility.yul\":7483:7488   */\n      dup2\n        /* \"#utility.yul\":7477:7489   */\n      mload\n        /* \"#utility.yul\":7467:7489   */\n      swap1\n      pop\n        /* \"#utility.yul\":7397:7496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7502:7671   */\n    tag_123:\n        /* \"#utility.yul\":7586:7597   */\n      0x00\n        /* \"#utility.yul\":7620:7626   */\n      dup3\n        /* \"#utility.yul\":7615:7618   */\n      dup3\n        /* \"#utility.yul\":7608:7627   */\n      mstore\n        /* \"#utility.yul\":7660:7664   */\n      0x20\n        /* \"#utility.yul\":7655:7658   */\n      dup3\n        /* \"#utility.yul\":7651:7665   */\n      add\n        /* \"#utility.yul\":7636:7665   */\n      swap1\n      pop\n        /* \"#utility.yul\":7502:7671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7677:7816   */\n    tag_124:\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7761:7764   */\n      dup2\n        /* \"#utility.yul\":7756:7759   */\n      dup4\n        /* \"#utility.yul\":7750:7773   */\n      mcopy\n        /* \"#utility.yul\":7807:7808   */\n      0x00\n        /* \"#utility.yul\":7798:7804   */\n      dup4\n        /* \"#utility.yul\":7793:7796   */\n      dup4\n        /* \"#utility.yul\":7789:7805   */\n      add\n        /* \"#utility.yul\":7782:7809   */\n      mstore\n        /* \"#utility.yul\":7677:7816   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7822:8199   */\n    tag_125:\n        /* \"#utility.yul\":7910:7913   */\n      0x00\n        /* \"#utility.yul\":7938:7977   */\n      tag_237\n        /* \"#utility.yul\":7971:7976   */\n      dup3\n        /* \"#utility.yul\":7938:7977   */\n      tag_122\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":7993:8064   */\n      tag_238\n        /* \"#utility.yul\":8057:8063   */\n      dup2\n        /* \"#utility.yul\":8052:8055   */\n      dup6\n        /* \"#utility.yul\":7993:8064   */\n      tag_123\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":7986:8064   */\n      swap4\n      pop\n        /* \"#utility.yul\":8073:8138   */\n      tag_239\n        /* \"#utility.yul\":8131:8137   */\n      dup2\n        /* \"#utility.yul\":8126:8129   */\n      dup6\n        /* \"#utility.yul\":8119:8123   */\n      0x20\n        /* \"#utility.yul\":8112:8117   */\n      dup7\n        /* \"#utility.yul\":8108:8124   */\n      add\n        /* \"#utility.yul\":8073:8138   */\n      tag_124\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":8163:8192   */\n      tag_240\n        /* \"#utility.yul\":8185:8191   */\n      dup2\n        /* \"#utility.yul\":8163:8192   */\n      tag_98\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":8158:8161   */\n      dup5\n        /* \"#utility.yul\":8154:8193   */\n      add\n        /* \"#utility.yul\":8147:8193   */\n      swap2\n      pop\n        /* \"#utility.yul\":7914:8199   */\n      pop\n        /* \"#utility.yul\":7822:8199   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8205:8518   */\n    tag_32:\n        /* \"#utility.yul\":8318:8322   */\n      0x00\n        /* \"#utility.yul\":8356:8358   */\n      0x20\n        /* \"#utility.yul\":8345:8354   */\n      dup3\n        /* \"#utility.yul\":8341:8359   */\n      add\n        /* \"#utility.yul\":8333:8359   */\n      swap1\n      pop\n        /* \"#utility.yul\":8405:8414   */\n      dup2\n        /* \"#utility.yul\":8399:8403   */\n      dup2\n        /* \"#utility.yul\":8395:8415   */\n      sub\n        /* \"#utility.yul\":8391:8392   */\n      0x00\n        /* \"#utility.yul\":8380:8389   */\n      dup4\n        /* \"#utility.yul\":8376:8393   */\n      add\n        /* \"#utility.yul\":8369:8416   */\n      mstore\n        /* \"#utility.yul\":8433:8511   */\n      tag_242\n        /* \"#utility.yul\":8506:8510   */\n      dup2\n        /* \"#utility.yul\":8497:8503   */\n      dup5\n        /* \"#utility.yul\":8433:8511   */\n      tag_125\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":8425:8511   */\n      swap1\n      pop\n        /* \"#utility.yul\":8205:8518   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8524:8667   */\n    tag_126:\n        /* \"#utility.yul\":8581:8586   */\n      0x00\n        /* \"#utility.yul\":8612:8618   */\n      dup2\n        /* \"#utility.yul\":8606:8619   */\n      mload\n        /* \"#utility.yul\":8597:8619   */\n      swap1\n      pop\n        /* \"#utility.yul\":8628:8661   */\n      tag_244\n        /* \"#utility.yul\":8655:8660   */\n      dup2\n        /* \"#utility.yul\":8628:8661   */\n      tag_120\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":8524:8667   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8673:9024   */\n    tag_36:\n        /* \"#utility.yul\":8743:8749   */\n      0x00\n        /* \"#utility.yul\":8792:8794   */\n      0x20\n        /* \"#utility.yul\":8780:8789   */\n      dup3\n        /* \"#utility.yul\":8771:8778   */\n      dup5\n        /* \"#utility.yul\":8767:8790   */\n      sub\n        /* \"#utility.yul\":8763:8795   */\n      slt\n        /* \"#utility.yul\":8760:8879   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":8798:8877   */\n      tag_247\n      tag_94\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":8760:8879   */\n    tag_246:\n        /* \"#utility.yul\":8918:8919   */\n      0x00\n        /* \"#utility.yul\":8943:9007   */\n      tag_248\n        /* \"#utility.yul\":8999:9006   */\n      dup5\n        /* \"#utility.yul\":8990:8996   */\n      dup3\n        /* \"#utility.yul\":8979:8988   */\n      dup6\n        /* \"#utility.yul\":8975:8997   */\n      add\n        /* \"#utility.yul\":8943:9007   */\n      tag_126\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":8933:9007   */\n      swap2\n      pop\n        /* \"#utility.yul\":8889:9017   */\n      pop\n        /* \"#utility.yul\":8673:9024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9030:9148   */\n    tag_127:\n        /* \"#utility.yul\":9117:9141   */\n      tag_250\n        /* \"#utility.yul\":9135:9140   */\n      dup2\n        /* \"#utility.yul\":9117:9141   */\n      tag_114\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":9112:9115   */\n      dup3\n        /* \"#utility.yul\":9105:9142   */\n      mstore\n        /* \"#utility.yul\":9030:9148   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9178:9495   */\n    tag_128:\n        /* \"#utility.yul\":9276:9279   */\n      0x00\n        /* \"#utility.yul\":9297:9368   */\n      tag_252\n        /* \"#utility.yul\":9361:9367   */\n      dup4\n        /* \"#utility.yul\":9356:9359   */\n      dup6\n        /* \"#utility.yul\":9297:9368   */\n      tag_123\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":9290:9368   */\n      swap4\n      pop\n        /* \"#utility.yul\":9378:9434   */\n      tag_253\n        /* \"#utility.yul\":9427:9433   */\n      dup4\n        /* \"#utility.yul\":9422:9425   */\n      dup6\n        /* \"#utility.yul\":9415:9420   */\n      dup5\n        /* \"#utility.yul\":9378:9434   */\n      tag_103\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":9459:9488   */\n      tag_254\n        /* \"#utility.yul\":9481:9487   */\n      dup4\n        /* \"#utility.yul\":9459:9488   */\n      tag_98\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":9454:9457   */\n      dup5\n        /* \"#utility.yul\":9450:9489   */\n      add\n        /* \"#utility.yul\":9443:9489   */\n      swap1\n      pop\n        /* \"#utility.yul\":9178:9495   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9501:10276   */\n    tag_45:\n        /* \"#utility.yul\":9738:9742   */\n      0x00\n        /* \"#utility.yul\":9776:9779   */\n      0x80\n        /* \"#utility.yul\":9765:9774   */\n      dup3\n        /* \"#utility.yul\":9761:9780   */\n      add\n        /* \"#utility.yul\":9753:9780   */\n      swap1\n      pop\n        /* \"#utility.yul\":9790:9861   */\n      tag_256\n        /* \"#utility.yul\":9858:9859   */\n      0x00\n        /* \"#utility.yul\":9847:9856   */\n      dup4\n        /* \"#utility.yul\":9843:9860   */\n      add\n        /* \"#utility.yul\":9834:9840   */\n      dup10\n        /* \"#utility.yul\":9790:9861   */\n      tag_127\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":9908:9917   */\n      dup2\n        /* \"#utility.yul\":9902:9906   */\n      dup2\n        /* \"#utility.yul\":9898:9918   */\n      sub\n        /* \"#utility.yul\":9893:9895   */\n      0x20\n        /* \"#utility.yul\":9882:9891   */\n      dup4\n        /* \"#utility.yul\":9878:9896   */\n      add\n        /* \"#utility.yul\":9871:9919   */\n      mstore\n        /* \"#utility.yul\":9936:10024   */\n      tag_257\n        /* \"#utility.yul\":10019:10023   */\n      dup2\n        /* \"#utility.yul\":10010:10016   */\n      dup8\n        /* \"#utility.yul\":10002:10008   */\n      dup10\n        /* \"#utility.yul\":9936:10024   */\n      tag_128\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":9928:10024   */\n      swap1\n      pop\n        /* \"#utility.yul\":10071:10080   */\n      dup2\n        /* \"#utility.yul\":10065:10069   */\n      dup2\n        /* \"#utility.yul\":10061:10081   */\n      sub\n        /* \"#utility.yul\":10056:10058   */\n      0x40\n        /* \"#utility.yul\":10045:10054   */\n      dup4\n        /* \"#utility.yul\":10041:10059   */\n      add\n        /* \"#utility.yul\":10034:10082   */\n      mstore\n        /* \"#utility.yul\":10099:10187   */\n      tag_258\n        /* \"#utility.yul\":10182:10186   */\n      dup2\n        /* \"#utility.yul\":10173:10179   */\n      dup6\n        /* \"#utility.yul\":10165:10171   */\n      dup8\n        /* \"#utility.yul\":10099:10187   */\n      tag_128\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":10091:10187   */\n      swap1\n      pop\n        /* \"#utility.yul\":10197:10269   */\n      tag_259\n        /* \"#utility.yul\":10265:10267   */\n      0x60\n        /* \"#utility.yul\":10254:10263   */\n      dup4\n        /* \"#utility.yul\":10250:10268   */\n      add\n        /* \"#utility.yul\":10241:10247   */\n      dup5\n        /* \"#utility.yul\":10197:10269   */\n      tag_108\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":9501:10276   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10282:10455   */\n    tag_129:\n        /* \"#utility.yul\":10422:10447   */\n      0x43616c6c6572206973206e6f7420746865206f776e6572000000000000000000\n        /* \"#utility.yul\":10418:10419   */\n      0x00\n        /* \"#utility.yul\":10410:10416   */\n      dup3\n        /* \"#utility.yul\":10406:10420   */\n      add\n        /* \"#utility.yul\":10399:10448   */\n      mstore\n        /* \"#utility.yul\":10282:10455   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10461:10827   */\n    tag_130:\n        /* \"#utility.yul\":10603:10606   */\n      0x00\n        /* \"#utility.yul\":10624:10691   */\n      tag_262\n        /* \"#utility.yul\":10688:10690   */\n      0x17\n        /* \"#utility.yul\":10683:10686   */\n      dup4\n        /* \"#utility.yul\":10624:10691   */\n      tag_123\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":10617:10691   */\n      swap2\n      pop\n        /* \"#utility.yul\":10700:10793   */\n      tag_263\n        /* \"#utility.yul\":10789:10792   */\n      dup3\n        /* \"#utility.yul\":10700:10793   */\n      tag_129\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":10818:10820   */\n      0x20\n        /* \"#utility.yul\":10813:10816   */\n      dup3\n        /* \"#utility.yul\":10809:10821   */\n      add\n        /* \"#utility.yul\":10802:10821   */\n      swap1\n      pop\n        /* \"#utility.yul\":10461:10827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10833:11252   */\n    tag_59:\n        /* \"#utility.yul\":10999:11003   */\n      0x00\n        /* \"#utility.yul\":11037:11039   */\n      0x20\n        /* \"#utility.yul\":11026:11035   */\n      dup3\n        /* \"#utility.yul\":11022:11040   */\n      add\n        /* \"#utility.yul\":11014:11040   */\n      swap1\n      pop\n        /* \"#utility.yul\":11086:11095   */\n      dup2\n        /* \"#utility.yul\":11080:11084   */\n      dup2\n        /* \"#utility.yul\":11076:11096   */\n      sub\n        /* \"#utility.yul\":11072:11073   */\n      0x00\n        /* \"#utility.yul\":11061:11070   */\n      dup4\n        /* \"#utility.yul\":11057:11074   */\n      add\n        /* \"#utility.yul\":11050:11097   */\n      mstore\n        /* \"#utility.yul\":11114:11245   */\n      tag_265\n        /* \"#utility.yul\":11240:11244   */\n      dup2\n        /* \"#utility.yul\":11114:11245   */\n      tag_130\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":11106:11245   */\n      swap1\n      pop\n        /* \"#utility.yul\":10833:11252   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11258:11337   */\n    tag_131:\n        /* \"#utility.yul\":11297:11304   */\n      0x00\n        /* \"#utility.yul\":11326:11331   */\n      dup2\n        /* \"#utility.yul\":11315:11331   */\n      swap1\n      pop\n        /* \"#utility.yul\":11258:11337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11343:11500   */\n    tag_132:\n        /* \"#utility.yul\":11448:11493   */\n      tag_268\n        /* \"#utility.yul\":11468:11492   */\n      tag_269\n        /* \"#utility.yul\":11486:11491   */\n      dup3\n        /* \"#utility.yul\":11468:11492   */\n      tag_114\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":11448:11493   */\n      tag_131\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":11443:11446   */\n      dup3\n        /* \"#utility.yul\":11436:11494   */\n      mstore\n        /* \"#utility.yul\":11343:11500   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11506:11600   */\n    tag_133:\n        /* \"#utility.yul\":11539:11547   */\n      0x00\n        /* \"#utility.yul\":11587:11592   */\n      dup2\n        /* \"#utility.yul\":11583:11585   */\n      0x60\n        /* \"#utility.yul\":11579:11593   */\n      shl\n        /* \"#utility.yul\":11558:11593   */\n      swap1\n      pop\n        /* \"#utility.yul\":11506:11600   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11606:11700   */\n    tag_134:\n        /* \"#utility.yul\":11645:11652   */\n      0x00\n        /* \"#utility.yul\":11674:11694   */\n      tag_272\n        /* \"#utility.yul\":11688:11693   */\n      dup3\n        /* \"#utility.yul\":11674:11694   */\n      tag_133\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":11663:11694   */\n      swap1\n      pop\n        /* \"#utility.yul\":11606:11700   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11706:11806   */\n    tag_135:\n        /* \"#utility.yul\":11745:11752   */\n      0x00\n        /* \"#utility.yul\":11774:11800   */\n      tag_274\n        /* \"#utility.yul\":11794:11799   */\n      dup3\n        /* \"#utility.yul\":11774:11800   */\n      tag_134\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":11763:11800   */\n      swap1\n      pop\n        /* \"#utility.yul\":11706:11806   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11812:11969   */\n    tag_136:\n        /* \"#utility.yul\":11917:11962   */\n      tag_276\n        /* \"#utility.yul\":11937:11961   */\n      tag_277\n        /* \"#utility.yul\":11955:11960   */\n      dup3\n        /* \"#utility.yul\":11937:11961   */\n      tag_107\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":11917:11962   */\n      tag_135\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":11912:11915   */\n      dup3\n        /* \"#utility.yul\":11905:11963   */\n      mstore\n        /* \"#utility.yul\":11812:11969   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11975:12654   */\n    tag_68:\n        /* \"#utility.yul\":12171:12174   */\n      0x00\n        /* \"#utility.yul\":12186:12261   */\n      tag_279\n        /* \"#utility.yul\":12257:12260   */\n      dup3\n        /* \"#utility.yul\":12248:12254   */\n      dup8\n        /* \"#utility.yul\":12186:12261   */\n      tag_132\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":12286:12288   */\n      0x20\n        /* \"#utility.yul\":12281:12284   */\n      dup3\n        /* \"#utility.yul\":12277:12289   */\n      add\n        /* \"#utility.yul\":12270:12289   */\n      swap2\n      pop\n        /* \"#utility.yul\":12299:12374   */\n      tag_280\n        /* \"#utility.yul\":12370:12373   */\n      dup3\n        /* \"#utility.yul\":12361:12367   */\n      dup7\n        /* \"#utility.yul\":12299:12374   */\n      tag_132\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":12399:12401   */\n      0x20\n        /* \"#utility.yul\":12394:12397   */\n      dup3\n        /* \"#utility.yul\":12390:12402   */\n      add\n        /* \"#utility.yul\":12383:12402   */\n      swap2\n      pop\n        /* \"#utility.yul\":12412:12487   */\n      tag_281\n        /* \"#utility.yul\":12483:12486   */\n      dup3\n        /* \"#utility.yul\":12474:12480   */\n      dup6\n        /* \"#utility.yul\":12412:12487   */\n      tag_136\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":12512:12514   */\n      0x14\n        /* \"#utility.yul\":12507:12510   */\n      dup3\n        /* \"#utility.yul\":12503:12515   */\n      add\n        /* \"#utility.yul\":12496:12515   */\n      swap2\n      pop\n        /* \"#utility.yul\":12525:12600   */\n      tag_282\n        /* \"#utility.yul\":12596:12599   */\n      dup3\n        /* \"#utility.yul\":12587:12593   */\n      dup5\n        /* \"#utility.yul\":12525:12600   */\n      tag_132\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":12625:12627   */\n      0x20\n        /* \"#utility.yul\":12620:12623   */\n      dup3\n        /* \"#utility.yul\":12616:12628   */\n      add\n        /* \"#utility.yul\":12609:12628   */\n      swap2\n      pop\n        /* \"#utility.yul\":12645:12648   */\n      dup2\n        /* \"#utility.yul\":12638:12648   */\n      swap1\n      pop\n        /* \"#utility.yul\":11975:12654   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12660:12842   */\n    tag_137:\n        /* \"#utility.yul\":12800:12834   */\n      0x4469726563746f72792063616e6e6f74206265207a65726f2061646472657373\n        /* \"#utility.yul\":12796:12797   */\n      0x00\n        /* \"#utility.yul\":12788:12794   */\n      dup3\n        /* \"#utility.yul\":12784:12798   */\n      add\n        /* \"#utility.yul\":12777:12835   */\n      mstore\n        /* \"#utility.yul\":12660:12842   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12848:13214   */\n    tag_138:\n        /* \"#utility.yul\":12990:12993   */\n      0x00\n        /* \"#utility.yul\":13011:13078   */\n      tag_285\n        /* \"#utility.yul\":13075:13077   */\n      0x20\n        /* \"#utility.yul\":13070:13073   */\n      dup4\n        /* \"#utility.yul\":13011:13078   */\n      tag_123\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":13004:13078   */\n      swap2\n      pop\n        /* \"#utility.yul\":13087:13180   */\n      tag_286\n        /* \"#utility.yul\":13176:13179   */\n      dup3\n        /* \"#utility.yul\":13087:13180   */\n      tag_137\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":13205:13207   */\n      0x20\n        /* \"#utility.yul\":13200:13203   */\n      dup3\n        /* \"#utility.yul\":13196:13208   */\n      add\n        /* \"#utility.yul\":13189:13208   */\n      swap1\n      pop\n        /* \"#utility.yul\":12848:13214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13220:13639   */\n    tag_75:\n        /* \"#utility.yul\":13386:13390   */\n      0x00\n        /* \"#utility.yul\":13424:13426   */\n      0x20\n        /* \"#utility.yul\":13413:13422   */\n      dup3\n        /* \"#utility.yul\":13409:13427   */\n      add\n        /* \"#utility.yul\":13401:13427   */\n      swap1\n      pop\n        /* \"#utility.yul\":13473:13482   */\n      dup2\n        /* \"#utility.yul\":13467:13471   */\n      dup2\n        /* \"#utility.yul\":13463:13483   */\n      sub\n        /* \"#utility.yul\":13459:13460   */\n      0x00\n        /* \"#utility.yul\":13448:13457   */\n      dup4\n        /* \"#utility.yul\":13444:13461   */\n      add\n        /* \"#utility.yul\":13437:13484   */\n      mstore\n        /* \"#utility.yul\":13501:13632   */\n      tag_288\n        /* \"#utility.yul\":13627:13631   */\n      dup2\n        /* \"#utility.yul\":13501:13632   */\n      tag_138\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":13493:13632   */\n      swap1\n      pop\n        /* \"#utility.yul\":13220:13639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13645:13823   */\n    tag_139:\n        /* \"#utility.yul\":13785:13815   */\n      0x4469726563746f7279206d757374206265206120636f6e747261637400000000\n        /* \"#utility.yul\":13781:13782   */\n      0x00\n        /* \"#utility.yul\":13773:13779   */\n      dup3\n        /* \"#utility.yul\":13769:13783   */\n      add\n        /* \"#utility.yul\":13762:13816   */\n      mstore\n        /* \"#utility.yul\":13645:13823   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13829:14195   */\n    tag_140:\n        /* \"#utility.yul\":13971:13974   */\n      0x00\n        /* \"#utility.yul\":13992:14059   */\n      tag_291\n        /* \"#utility.yul\":14056:14058   */\n      0x1c\n        /* \"#utility.yul\":14051:14054   */\n      dup4\n        /* \"#utility.yul\":13992:14059   */\n      tag_123\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":13985:14059   */\n      swap2\n      pop\n        /* \"#utility.yul\":14068:14161   */\n      tag_292\n        /* \"#utility.yul\":14157:14160   */\n      dup3\n        /* \"#utility.yul\":14068:14161   */\n      tag_139\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":14186:14188   */\n      0x20\n        /* \"#utility.yul\":14181:14184   */\n      dup3\n        /* \"#utility.yul\":14177:14189   */\n      add\n        /* \"#utility.yul\":14170:14189   */\n      swap1\n      pop\n        /* \"#utility.yul\":13829:14195   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14201:14620   */\n    tag_78:\n        /* \"#utility.yul\":14367:14371   */\n      0x00\n        /* \"#utility.yul\":14405:14407   */\n      0x20\n        /* \"#utility.yul\":14394:14403   */\n      dup3\n        /* \"#utility.yul\":14390:14408   */\n      add\n        /* \"#utility.yul\":14382:14408   */\n      swap1\n      pop\n        /* \"#utility.yul\":14454:14463   */\n      dup2\n        /* \"#utility.yul\":14448:14452   */\n      dup2\n        /* \"#utility.yul\":14444:14464   */\n      sub\n        /* \"#utility.yul\":14440:14441   */\n      0x00\n        /* \"#utility.yul\":14429:14438   */\n      dup4\n        /* \"#utility.yul\":14425:14442   */\n      add\n        /* \"#utility.yul\":14418:14465   */\n      mstore\n        /* \"#utility.yul\":14482:14613   */\n      tag_294\n        /* \"#utility.yul\":14608:14612   */\n      dup2\n        /* \"#utility.yul\":14482:14613   */\n      tag_140\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":14474:14613   */\n      swap1\n      pop\n        /* \"#utility.yul\":14201:14620   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14626:14857   */\n    tag_141:\n        /* \"#utility.yul\":14766:14800   */\n      0x4469726563746f7279206164647265737320646f6573206e6f7420696d706c65\n        /* \"#utility.yul\":14762:14763   */\n      0x00\n        /* \"#utility.yul\":14754:14760   */\n      dup3\n        /* \"#utility.yul\":14750:14764   */\n      add\n        /* \"#utility.yul\":14743:14801   */\n      mstore\n        /* \"#utility.yul\":14835:14849   */\n      0x6d656e74206f776e657228290000000000000000000000000000000000000000\n        /* \"#utility.yul\":14830:14832   */\n      0x20\n        /* \"#utility.yul\":14822:14828   */\n      dup3\n        /* \"#utility.yul\":14818:14833   */\n      add\n        /* \"#utility.yul\":14811:14850   */\n      mstore\n        /* \"#utility.yul\":14626:14857   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14863:15229   */\n    tag_142:\n        /* \"#utility.yul\":15005:15008   */\n      0x00\n        /* \"#utility.yul\":15026:15093   */\n      tag_297\n        /* \"#utility.yul\":15090:15092   */\n      0x2c\n        /* \"#utility.yul\":15085:15088   */\n      dup4\n        /* \"#utility.yul\":15026:15093   */\n      tag_123\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":15019:15093   */\n      swap2\n      pop\n        /* \"#utility.yul\":15102:15195   */\n      tag_298\n        /* \"#utility.yul\":15191:15194   */\n      dup3\n        /* \"#utility.yul\":15102:15195   */\n      tag_141\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":15220:15222   */\n      0x40\n        /* \"#utility.yul\":15215:15218   */\n      dup3\n        /* \"#utility.yul\":15211:15223   */\n      add\n        /* \"#utility.yul\":15204:15223   */\n      swap1\n      pop\n        /* \"#utility.yul\":14863:15229   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15235:15654   */\n    tag_86:\n        /* \"#utility.yul\":15401:15405   */\n      0x00\n        /* \"#utility.yul\":15439:15441   */\n      0x20\n        /* \"#utility.yul\":15428:15437   */\n      dup3\n        /* \"#utility.yul\":15424:15442   */\n      add\n        /* \"#utility.yul\":15416:15442   */\n      swap1\n      pop\n        /* \"#utility.yul\":15488:15497   */\n      dup2\n        /* \"#utility.yul\":15482:15486   */\n      dup2\n        /* \"#utility.yul\":15478:15498   */\n      sub\n        /* \"#utility.yul\":15474:15475   */\n      0x00\n        /* \"#utility.yul\":15463:15472   */\n      dup4\n        /* \"#utility.yul\":15459:15476   */\n      add\n        /* \"#utility.yul\":15452:15499   */\n      mstore\n        /* \"#utility.yul\":15516:15647   */\n      tag_300\n        /* \"#utility.yul\":15642:15646   */\n      dup2\n        /* \"#utility.yul\":15516:15647   */\n      tag_142\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":15508:15647   */\n      swap1\n      pop\n        /* \"#utility.yul\":15235:15654   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15660:15992   */\n    tag_91:\n        /* \"#utility.yul\":15781:15785   */\n      0x00\n        /* \"#utility.yul\":15819:15821   */\n      0x40\n        /* \"#utility.yul\":15808:15817   */\n      dup3\n        /* \"#utility.yul\":15804:15822   */\n      add\n        /* \"#utility.yul\":15796:15822   */\n      swap1\n      pop\n        /* \"#utility.yul\":15832:15903   */\n      tag_302\n        /* \"#utility.yul\":15900:15901   */\n      0x00\n        /* \"#utility.yul\":15889:15898   */\n      dup4\n        /* \"#utility.yul\":15885:15902   */\n      add\n        /* \"#utility.yul\":15876:15882   */\n      dup6\n        /* \"#utility.yul\":15832:15903   */\n      tag_127\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":15913:15985   */\n      tag_303\n        /* \"#utility.yul\":15981:15983   */\n      0x20\n        /* \"#utility.yul\":15970:15979   */\n      dup4\n        /* \"#utility.yul\":15966:15984   */\n      add\n        /* \"#utility.yul\":15957:15963   */\n      dup5\n        /* \"#utility.yul\":15913:15985   */\n      tag_127\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":15660:15992   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d4296ff354e3a2c190f376c12bbefe9d3f59239c0899ef4d26af17af3bcce99764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_548": {
									"entryPoint": null,
									"id": 548,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_743": {
									"entryPoint": null,
									"id": 743,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setDirectory_608": {
									"entryPoint": 72,
									"id": 608,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af": {
									"entryPoint": 866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4374:6",
										"nodeType": "YulBlock",
										"src": "0:4374:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "759:80:6",
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nativeSrc": "769:22:6",
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nativeSrc": "778:13:6",
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nativeSrc": "800:33:6",
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nativeSrc": "800:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:6",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:6",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:6",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nativeSrc": "922:274:6",
													"nodeType": "YulBlock",
													"src": "922:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:6",
																"nodeType": "YulBlock",
																"src": "968:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:6"
																			},
																			"nativeSrc": "970:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:6"
																		},
																		"nativeSrc": "970:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:6"
																		},
																		"nativeSrc": "939:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:6",
																		"nodeType": "YulLiteral",
																		"src": "964:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:6"
																},
																"nativeSrc": "935:32:6",
																"nodeType": "YulFunctionCall",
																"src": "935:32:6"
															},
															"nativeSrc": "932:119:6",
															"nodeType": "YulIf",
															"src": "932:119:6"
														},
														{
															"nativeSrc": "1061:128:6",
															"nodeType": "YulBlock",
															"src": "1061:128:6",
															"statements": [
																{
																	"nativeSrc": "1076:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:6"
																				},
																				"nativeSrc": "1147:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:6"
																		},
																		"nativeSrc": "1115:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:6",
														"nodeType": "YulTypedName",
														"src": "892:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:6",
														"nodeType": "YulTypedName",
														"src": "903:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:6",
														"nodeType": "YulTypedName",
														"src": "915:6:6",
														"type": ""
													}
												],
												"src": "845:351:6"
											},
											{
												"body": {
													"nativeSrc": "1298:73:6",
													"nodeType": "YulBlock",
													"src": "1298:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1315:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1315:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1320:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1320:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1308:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1308:6:6"
																},
																"nativeSrc": "1308:19:6",
																"nodeType": "YulFunctionCall",
																"src": "1308:19:6"
															},
															"nativeSrc": "1308:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "1308:19:6"
														},
														{
															"nativeSrc": "1336:29:6",
															"nodeType": "YulAssignment",
															"src": "1336:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1355:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1355:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1360:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1360:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1351:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1351:3:6"
																},
																"nativeSrc": "1351:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1351:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1336:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "1336:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1202:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1270:3:6",
														"nodeType": "YulTypedName",
														"src": "1270:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1275:6:6",
														"nodeType": "YulTypedName",
														"src": "1275:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1286:11:6",
														"nodeType": "YulTypedName",
														"src": "1286:11:6",
														"type": ""
													}
												],
												"src": "1202:169:6"
											},
											{
												"body": {
													"nativeSrc": "1483:76:6",
													"nodeType": "YulBlock",
													"src": "1483:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1505:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1505:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1513:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1513:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1501:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1501:3:6"
																		},
																		"nativeSrc": "1501:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1501:14:6"
																	},
																	{
																		"hexValue": "4469726563746f72792063616e6e6f74206265207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "1517:34:6",
																		"nodeType": "YulLiteral",
																		"src": "1517:34:6",
																		"type": "",
																		"value": "Directory cannot be zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1494:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1494:6:6"
																},
																"nativeSrc": "1494:58:6",
																"nodeType": "YulFunctionCall",
																"src": "1494:58:6"
															},
															"nativeSrc": "1494:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "1494:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
												"nativeSrc": "1377:182:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1475:6:6",
														"nodeType": "YulTypedName",
														"src": "1475:6:6",
														"type": ""
													}
												],
												"src": "1377:182:6"
											},
											{
												"body": {
													"nativeSrc": "1711:220:6",
													"nodeType": "YulBlock",
													"src": "1711:220:6",
													"statements": [
														{
															"nativeSrc": "1721:74:6",
															"nodeType": "YulAssignment",
															"src": "1721:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1787:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1787:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1792:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1792:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1728:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "1728:58:6"
																},
																"nativeSrc": "1728:67:6",
																"nodeType": "YulFunctionCall",
																"src": "1728:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1721:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1721:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1893:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1893:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
																	"nativeSrc": "1804:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "1804:88:6"
																},
																"nativeSrc": "1804:93:6",
																"nodeType": "YulFunctionCall",
																"src": "1804:93:6"
															},
															"nativeSrc": "1804:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "1804:93:6"
														},
														{
															"nativeSrc": "1906:19:6",
															"nodeType": "YulAssignment",
															"src": "1906:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1917:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1917:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1922:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1922:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1913:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1913:3:6"
																},
																"nativeSrc": "1913:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1913:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1906:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1906:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1565:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1699:3:6",
														"nodeType": "YulTypedName",
														"src": "1699:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1707:3:6",
														"nodeType": "YulTypedName",
														"src": "1707:3:6",
														"type": ""
													}
												],
												"src": "1565:366:6"
											},
											{
												"body": {
													"nativeSrc": "2108:248:6",
													"nodeType": "YulBlock",
													"src": "2108:248:6",
													"statements": [
														{
															"nativeSrc": "2118:26:6",
															"nodeType": "YulAssignment",
															"src": "2118:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2130:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2130:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2141:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2141:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2126:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2126:3:6"
																},
																"nativeSrc": "2126:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2126:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2118:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2118:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2165:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2165:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2176:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2176:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2161:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2161:3:6"
																		},
																		"nativeSrc": "2161:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2161:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2184:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2184:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2190:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2190:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2180:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2180:3:6"
																		},
																		"nativeSrc": "2180:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2180:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2154:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2154:6:6"
																},
																"nativeSrc": "2154:47:6",
																"nodeType": "YulFunctionCall",
																"src": "2154:47:6"
															},
															"nativeSrc": "2154:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "2154:47:6"
														},
														{
															"nativeSrc": "2210:139:6",
															"nodeType": "YulAssignment",
															"src": "2210:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2344:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2344:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2218:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "2218:124:6"
																},
																"nativeSrc": "2218:131:6",
																"nodeType": "YulFunctionCall",
																"src": "2218:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2210:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2210:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1937:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2088:9:6",
														"nodeType": "YulTypedName",
														"src": "2088:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2103:4:6",
														"nodeType": "YulTypedName",
														"src": "2103:4:6",
														"type": ""
													}
												],
												"src": "1937:419:6"
											},
											{
												"body": {
													"nativeSrc": "2468:72:6",
													"nodeType": "YulBlock",
													"src": "2468:72:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2490:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2490:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2498:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2498:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2486:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2486:3:6"
																		},
																		"nativeSrc": "2486:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2486:14:6"
																	},
																	{
																		"hexValue": "4469726563746f7279206d757374206265206120636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "2502:30:6",
																		"nodeType": "YulLiteral",
																		"src": "2502:30:6",
																		"type": "",
																		"value": "Directory must be a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2479:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2479:6:6"
																},
																"nativeSrc": "2479:54:6",
																"nodeType": "YulFunctionCall",
																"src": "2479:54:6"
															},
															"nativeSrc": "2479:54:6",
															"nodeType": "YulExpressionStatement",
															"src": "2479:54:6"
														}
													]
												},
												"name": "store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
												"nativeSrc": "2362:178:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2460:6:6",
														"nodeType": "YulTypedName",
														"src": "2460:6:6",
														"type": ""
													}
												],
												"src": "2362:178:6"
											},
											{
												"body": {
													"nativeSrc": "2692:220:6",
													"nodeType": "YulBlock",
													"src": "2692:220:6",
													"statements": [
														{
															"nativeSrc": "2702:74:6",
															"nodeType": "YulAssignment",
															"src": "2702:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2768:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2768:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2773:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2773:2:6",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2709:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2709:58:6"
																},
																"nativeSrc": "2709:67:6",
																"nodeType": "YulFunctionCall",
																"src": "2709:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2702:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2702:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2874:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2874:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
																	"nativeSrc": "2785:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "2785:88:6"
																},
																"nativeSrc": "2785:93:6",
																"nodeType": "YulFunctionCall",
																"src": "2785:93:6"
															},
															"nativeSrc": "2785:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "2785:93:6"
														},
														{
															"nativeSrc": "2887:19:6",
															"nodeType": "YulAssignment",
															"src": "2887:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2898:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2898:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2903:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2903:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2894:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2894:3:6"
																},
																"nativeSrc": "2894:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2894:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2887:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2887:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2546:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2680:3:6",
														"nodeType": "YulTypedName",
														"src": "2680:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2688:3:6",
														"nodeType": "YulTypedName",
														"src": "2688:3:6",
														"type": ""
													}
												],
												"src": "2546:366:6"
											},
											{
												"body": {
													"nativeSrc": "3089:248:6",
													"nodeType": "YulBlock",
													"src": "3089:248:6",
													"statements": [
														{
															"nativeSrc": "3099:26:6",
															"nodeType": "YulAssignment",
															"src": "3099:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3111:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3122:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3107:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:6"
																},
																"nativeSrc": "3107:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3107:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3099:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3146:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3146:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3157:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3157:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3142:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3142:3:6"
																		},
																		"nativeSrc": "3142:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3142:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3165:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3165:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3171:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3171:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3161:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3161:3:6"
																		},
																		"nativeSrc": "3161:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3161:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3135:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3135:6:6"
																},
																"nativeSrc": "3135:47:6",
																"nodeType": "YulFunctionCall",
																"src": "3135:47:6"
															},
															"nativeSrc": "3135:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "3135:47:6"
														},
														{
															"nativeSrc": "3191:139:6",
															"nodeType": "YulAssignment",
															"src": "3191:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3325:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3325:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3199:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "3199:124:6"
																},
																"nativeSrc": "3199:131:6",
																"nodeType": "YulFunctionCall",
																"src": "3199:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3191:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3191:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2918:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3069:9:6",
														"nodeType": "YulTypedName",
														"src": "3069:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3084:4:6",
														"nodeType": "YulTypedName",
														"src": "3084:4:6",
														"type": ""
													}
												],
												"src": "2918:419:6"
											},
											{
												"body": {
													"nativeSrc": "3449:125:6",
													"nodeType": "YulBlock",
													"src": "3449:125:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3471:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3471:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3479:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3479:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3467:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3467:3:6"
																		},
																		"nativeSrc": "3467:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3467:14:6"
																	},
																	{
																		"hexValue": "4469726563746f7279206164647265737320646f6573206e6f7420696d706c65",
																		"kind": "string",
																		"nativeSrc": "3483:34:6",
																		"nodeType": "YulLiteral",
																		"src": "3483:34:6",
																		"type": "",
																		"value": "Directory address does not imple"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3460:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3460:6:6"
																},
																"nativeSrc": "3460:58:6",
																"nodeType": "YulFunctionCall",
																"src": "3460:58:6"
															},
															"nativeSrc": "3460:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "3460:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3539:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3539:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3547:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3547:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3535:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3535:3:6"
																		},
																		"nativeSrc": "3535:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3535:15:6"
																	},
																	{
																		"hexValue": "6d656e74206f776e65722829",
																		"kind": "string",
																		"nativeSrc": "3552:14:6",
																		"nodeType": "YulLiteral",
																		"src": "3552:14:6",
																		"type": "",
																		"value": "ment owner()"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3528:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3528:6:6"
																},
																"nativeSrc": "3528:39:6",
																"nodeType": "YulFunctionCall",
																"src": "3528:39:6"
															},
															"nativeSrc": "3528:39:6",
															"nodeType": "YulExpressionStatement",
															"src": "3528:39:6"
														}
													]
												},
												"name": "store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
												"nativeSrc": "3343:231:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3441:6:6",
														"nodeType": "YulTypedName",
														"src": "3441:6:6",
														"type": ""
													}
												],
												"src": "3343:231:6"
											},
											{
												"body": {
													"nativeSrc": "3726:220:6",
													"nodeType": "YulBlock",
													"src": "3726:220:6",
													"statements": [
														{
															"nativeSrc": "3736:74:6",
															"nodeType": "YulAssignment",
															"src": "3736:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3802:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3802:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3807:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3807:2:6",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3743:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "3743:58:6"
																},
																"nativeSrc": "3743:67:6",
																"nodeType": "YulFunctionCall",
																"src": "3743:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3736:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3736:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3908:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3908:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
																	"nativeSrc": "3819:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "3819:88:6"
																},
																"nativeSrc": "3819:93:6",
																"nodeType": "YulFunctionCall",
																"src": "3819:93:6"
															},
															"nativeSrc": "3819:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "3819:93:6"
														},
														{
															"nativeSrc": "3921:19:6",
															"nodeType": "YulAssignment",
															"src": "3921:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3932:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3932:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3937:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3937:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3928:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3928:3:6"
																},
																"nativeSrc": "3928:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3928:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3921:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3921:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3580:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3714:3:6",
														"nodeType": "YulTypedName",
														"src": "3714:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3722:3:6",
														"nodeType": "YulTypedName",
														"src": "3722:3:6",
														"type": ""
													}
												],
												"src": "3580:366:6"
											},
											{
												"body": {
													"nativeSrc": "4123:248:6",
													"nodeType": "YulBlock",
													"src": "4123:248:6",
													"statements": [
														{
															"nativeSrc": "4133:26:6",
															"nodeType": "YulAssignment",
															"src": "4133:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4145:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4145:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4156:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4156:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4141:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4141:3:6"
																},
																"nativeSrc": "4141:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4141:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4133:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4133:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4180:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4180:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4191:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4191:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4176:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4176:3:6"
																		},
																		"nativeSrc": "4176:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4176:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4199:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4199:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4205:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4205:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4195:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4195:3:6"
																		},
																		"nativeSrc": "4195:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4195:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4169:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4169:6:6"
																},
																"nativeSrc": "4169:47:6",
																"nodeType": "YulFunctionCall",
																"src": "4169:47:6"
															},
															"nativeSrc": "4169:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "4169:47:6"
														},
														{
															"nativeSrc": "4225:139:6",
															"nodeType": "YulAssignment",
															"src": "4225:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4359:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4359:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4233:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "4233:124:6"
																},
																"nativeSrc": "4233:131:6",
																"nodeType": "YulFunctionCall",
																"src": "4233:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4225:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4225:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3952:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4103:9:6",
														"nodeType": "YulTypedName",
														"src": "4103:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4118:4:6",
														"nodeType": "YulTypedName",
														"src": "4118:4:6",
														"type": ""
													}
												],
												"src": "3952:419:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory cannot be zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory must be a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory address does not imple\")\n\n        mstore(add(memPtr, 32), \"ment owner()\")\n\n    }\n\n    function abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040516113b13803806113b183398181016040528101906100319190610257565b806100418161004860201b60201c565b50506103f0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ad906102dc565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff163b1161010f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010690610344565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561017757506040513d601f19601f820116820180604052508101906101749190610257565b60015b6101b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ad906103d2565b60405180910390fd5b815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610226826101fd565b9050919050565b6102368161021c565b8114610240575f5ffd5b50565b5f815190506102518161022d565b92915050565b5f6020828403121561026c5761026b6101f9565b5b5f61027984828501610243565b91505092915050565b5f82825260208201905092915050565b7f4469726563746f72792063616e6e6f74206265207a65726f20616464726573735f82015250565b5f6102c6602083610282565b91506102d182610292565b602082019050919050565b5f6020820190508181035f8301526102f3816102ba565b9050919050565b7f4469726563746f7279206d757374206265206120636f6e7472616374000000005f82015250565b5f61032e601c83610282565b9150610339826102fa565b602082019050919050565b5f6020820190508181035f83015261035b81610322565b9050919050565b7f4469726563746f7279206164647265737320646f6573206e6f7420696d706c655f8201527f6d656e74206f776e657228290000000000000000000000000000000000000000602082015250565b5f6103bc602c83610282565b91506103c782610362565b604082019050919050565b5f6020820190508181035f8301526103e9816103b0565b9050919050565b610fb4806103fd5f395ff3fe608060405234801561000f575f5ffd5b5060043610610055575f3560e01c80632726261814610059578063658a847a1461008957806378f6c7c4146100a75780638da5cb5b146100d7578063ba4c7be1146100f5575b5f5ffd5b610073600480360381019061006e9190610907565b610111565b604051610080919061098d565b60405180910390f35b6100916101b1565b60405161009e9190610a01565b60405180910390f35b6100c160048036038101906100bc9190610aaa565b6101d5565b6040516100ce919061098d565b60405180910390f35b6100df610289565b6040516100ec919061098d565b60405180910390f35b61010f600480360381019061010a9190610b65565b61031c565b005b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327262618836040518263ffffffff1660e01b815260040161016b9190610bf0565b602060405180830381865afa158015610186573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101aa9190610c24565b9050919050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6101ee6101e1610422565b6101e96104cb565b6104fe565b90508073ffffffffffffffffffffffffffffffffffffffff16636ebd362c87878787875f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518763ffffffff1660e01b815260040161025396959493929190610c8a565b5f604051808303815f87803b15801561026a575f5ffd5b505af115801561027c573d5f5f3e3d5ffd5b5050505095945050505050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102f3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103179190610c24565b905090565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610385573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103a99190610c24565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040d90610d29565b60405180910390fd5b61041f81610512565b50565b5f6104616040518060400160405280600e81526020017f6574662d746f6b656e2d696d706c000000000000000000000000000000000000815250610111565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104c8576040517f8020a5c700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b90565b5f4244335a6040516020016104e39493929190610dac565b60405160208183030381529060405280519060200120905090565b5f61050a83835f6106c3565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610580576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057790610e43565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff163b116105d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d090610eab565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561064157506040513d601f19601f8201168201806040525081019061063e9190610c24565b60015b610680576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067790610f39565b60405180910390fd5b815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b5f8147101561070b5747826040517fcf479181000000000000000000000000000000000000000000000000000000008152600401610702929190610f57565b60405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008460601b60e81c175f526e5af43d82803e903d91602b57fd5bf38460781b17602052826037600984f590505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107b3576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610819826107d3565b810181811067ffffffffffffffff82111715610838576108376107e3565b5b80604052505050565b5f61084a6107ba565b90506108568282610810565b919050565b5f67ffffffffffffffff821115610875576108746107e3565b5b61087e826107d3565b9050602081019050919050565b828183375f83830152505050565b5f6108ab6108a68461085b565b610841565b9050828152602081018484840111156108c7576108c66107cf565b5b6108d284828561088b565b509392505050565b5f82601f8301126108ee576108ed6107cb565b5b81356108fe848260208601610899565b91505092915050565b5f6020828403121561091c5761091b6107c3565b5b5f82013567ffffffffffffffff811115610939576109386107c7565b5b610945848285016108da565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109778261094e565b9050919050565b6109878161096d565b82525050565b5f6020820190506109a05f83018461097e565b92915050565b5f819050919050565b5f6109c96109c46109bf8461094e565b6109a6565b61094e565b9050919050565b5f6109da826109af565b9050919050565b5f6109eb826109d0565b9050919050565b6109fb816109e1565b82525050565b5f602082019050610a145f8301846109f2565b92915050565b5f819050919050565b610a2c81610a1a565b8114610a36575f5ffd5b50565b5f81359050610a4781610a23565b92915050565b5f5ffd5b5f5ffd5b5f5f83601f840112610a6a57610a696107cb565b5b8235905067ffffffffffffffff811115610a8757610a86610a4d565b5b602083019150836001820283011115610aa357610aa2610a51565b5b9250929050565b5f5f5f5f5f60608688031215610ac357610ac26107c3565b5b5f610ad088828901610a39565b955050602086013567ffffffffffffffff811115610af157610af06107c7565b5b610afd88828901610a55565b9450945050604086013567ffffffffffffffff811115610b2057610b1f6107c7565b5b610b2c88828901610a55565b92509250509295509295909350565b610b448161096d565b8114610b4e575f5ffd5b50565b5f81359050610b5f81610b3b565b92915050565b5f60208284031215610b7a57610b796107c3565b5b5f610b8784828501610b51565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f610bc282610b90565b610bcc8185610b9a565b9350610bdc818560208601610baa565b610be5816107d3565b840191505092915050565b5f6020820190508181035f830152610c088184610bb8565b905092915050565b5f81519050610c1e81610b3b565b92915050565b5f60208284031215610c3957610c386107c3565b5b5f610c4684828501610c10565b91505092915050565b610c5881610a1a565b82525050565b5f610c698385610b9a565b9350610c7683858461088b565b610c7f836107d3565b840190509392505050565b5f608082019050610c9d5f830189610c4f565b8181036020830152610cb0818789610c5e565b90508181036040830152610cc5818587610c5e565b9050610cd4606083018461097e565b979650505050505050565b7f43616c6c6572206973206e6f7420746865206f776e65720000000000000000005f82015250565b5f610d13601783610b9a565b9150610d1e82610cdf565b602082019050919050565b5f6020820190508181035f830152610d4081610d07565b9050919050565b5f819050919050565b610d61610d5c82610a1a565b610d47565b82525050565b5f8160601b9050919050565b5f610d7d82610d67565b9050919050565b5f610d8e82610d73565b9050919050565b610da6610da18261096d565b610d84565b82525050565b5f610db78287610d50565b602082019150610dc78286610d50565b602082019150610dd78285610d95565b601482019150610de78284610d50565b60208201915081905095945050505050565b7f4469726563746f72792063616e6e6f74206265207a65726f20616464726573735f82015250565b5f610e2d602083610b9a565b9150610e3882610df9565b602082019050919050565b5f6020820190508181035f830152610e5a81610e21565b9050919050565b7f4469726563746f7279206d757374206265206120636f6e7472616374000000005f82015250565b5f610e95601c83610b9a565b9150610ea082610e61565b602082019050919050565b5f6020820190508181035f830152610ec281610e89565b9050919050565b7f4469726563746f7279206164647265737320646f6573206e6f7420696d706c655f8201527f6d656e74206f776e657228290000000000000000000000000000000000000000602082015250565b5f610f23602c83610b9a565b9150610f2e82610ec9565b604082019050919050565b5f6020820190508181035f830152610f5081610f17565b9050919050565b5f604082019050610f6a5f830185610c4f565b610f776020830184610c4f565b939250505056fea2646970667358221220d4296ff354e3a2c190f376c12bbefe9d3f59239c0899ef4d26af17af3bcce99764736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x13B1 CODESIZE SUB DUP1 PUSH2 0x13B1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x257 JUMP JUMPDEST DUP1 PUSH2 0x41 DUP2 PUSH2 0x48 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x3F0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD SWAP1 PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT PUSH2 0x10F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP1 PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x177 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x257 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD SWAP1 PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x226 DUP3 PUSH2 0x1FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x236 DUP2 PUSH2 0x21C JUMP JUMPDEST DUP2 EQ PUSH2 0x240 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x251 DUP2 PUSH2 0x22D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26C JUMPI PUSH2 0x26B PUSH2 0x1F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x279 DUP5 DUP3 DUP6 ADD PUSH2 0x243 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4469726563746F72792063616E6E6F74206265207A65726F2061646472657373 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C6 PUSH1 0x20 DUP4 PUSH2 0x282 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D1 DUP3 PUSH2 0x292 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F3 DUP2 PUSH2 0x2BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206D757374206265206120636F6E747261637400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x32E PUSH1 0x1C DUP4 PUSH2 0x282 JUMP JUMPDEST SWAP2 POP PUSH2 0x339 DUP3 PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x35B DUP2 PUSH2 0x322 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206164647265737320646F6573206E6F7420696D706C65 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D656E74206F776E657228290000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3BC PUSH1 0x2C DUP4 PUSH2 0x282 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C7 DUP3 PUSH2 0x362 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3E9 DUP2 PUSH2 0x3B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB4 DUP1 PUSH2 0x3FD PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27262618 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x658A847A EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x78F6C7C4 EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0xBA4C7BE1 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST PUSH2 0x111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x98D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH2 0x1B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x98D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x98D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10A SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x27262618 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0xBF0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x186 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x1EE PUSH2 0x1E1 PUSH2 0x422 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x4CB JUMP JUMPDEST PUSH2 0x4FE JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6EBD362C DUP8 DUP8 DUP8 DUP8 DUP8 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x253 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC8A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x385 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0xC24 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x416 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40D SWAP1 PUSH2 0xD29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41F DUP2 PUSH2 0x512 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x461 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6574662D746F6B656E2D696D706C000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x111 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8020A5C700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 TIMESTAMP PREVRANDAO CALLER GAS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4E3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x50A DUP4 DUP4 PUSH0 PUSH2 0x6C3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x577 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT PUSH2 0x5D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D0 SWAP1 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x641 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63E SWAP2 SWAP1 PUSH2 0xC24 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x680 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x677 SWAP1 PUSH2 0xF39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x70B JUMPI SELFBALANCE DUP3 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x702 SWAP3 SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP5 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP5 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE DUP3 PUSH1 0x37 PUSH1 0x9 DUP5 CREATE2 SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06EBF3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x819 DUP3 PUSH2 0x7D3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x838 JUMPI PUSH2 0x837 PUSH2 0x7E3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x84A PUSH2 0x7BA JUMP JUMPDEST SWAP1 POP PUSH2 0x856 DUP3 DUP3 PUSH2 0x810 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x875 JUMPI PUSH2 0x874 PUSH2 0x7E3 JUMP JUMPDEST JUMPDEST PUSH2 0x87E DUP3 PUSH2 0x7D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8AB PUSH2 0x8A6 DUP5 PUSH2 0x85B JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x8C7 JUMPI PUSH2 0x8C6 PUSH2 0x7CF JUMP JUMPDEST JUMPDEST PUSH2 0x8D2 DUP5 DUP3 DUP6 PUSH2 0x88B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8EE JUMPI PUSH2 0x8ED PUSH2 0x7CB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8FE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x899 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x91C JUMPI PUSH2 0x91B PUSH2 0x7C3 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x939 JUMPI PUSH2 0x938 PUSH2 0x7C7 JUMP JUMPDEST JUMPDEST PUSH2 0x945 DUP5 DUP3 DUP6 ADD PUSH2 0x8DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x977 DUP3 PUSH2 0x94E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x987 DUP2 PUSH2 0x96D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9A0 PUSH0 DUP4 ADD DUP5 PUSH2 0x97E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9C9 PUSH2 0x9C4 PUSH2 0x9BF DUP5 PUSH2 0x94E JUMP JUMPDEST PUSH2 0x9A6 JUMP JUMPDEST PUSH2 0x94E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9DA DUP3 PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9EB DUP3 PUSH2 0x9D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9FB DUP2 PUSH2 0x9E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA14 PUSH0 DUP4 ADD DUP5 PUSH2 0x9F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA2C DUP2 PUSH2 0xA1A JUMP JUMPDEST DUP2 EQ PUSH2 0xA36 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA47 DUP2 PUSH2 0xA23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xA6A JUMPI PUSH2 0xA69 PUSH2 0x7CB JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA87 JUMPI PUSH2 0xA86 PUSH2 0xA4D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xAA3 JUMPI PUSH2 0xAA2 PUSH2 0xA51 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xAC3 JUMPI PUSH2 0xAC2 PUSH2 0x7C3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAD0 DUP9 DUP3 DUP10 ADD PUSH2 0xA39 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAF1 JUMPI PUSH2 0xAF0 PUSH2 0x7C7 JUMP JUMPDEST JUMPDEST PUSH2 0xAFD DUP9 DUP3 DUP10 ADD PUSH2 0xA55 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB20 JUMPI PUSH2 0xB1F PUSH2 0x7C7 JUMP JUMPDEST JUMPDEST PUSH2 0xB2C DUP9 DUP3 DUP10 ADD PUSH2 0xA55 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0xB44 DUP2 PUSH2 0x96D JUMP JUMPDEST DUP2 EQ PUSH2 0xB4E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB5F DUP2 PUSH2 0xB3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB7A JUMPI PUSH2 0xB79 PUSH2 0x7C3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB87 DUP5 DUP3 DUP6 ADD PUSH2 0xB51 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBC2 DUP3 PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xBCC DUP2 DUP6 PUSH2 0xB9A JUMP JUMPDEST SWAP4 POP PUSH2 0xBDC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xBAA JUMP JUMPDEST PUSH2 0xBE5 DUP2 PUSH2 0x7D3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC08 DUP2 DUP5 PUSH2 0xBB8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC1E DUP2 PUSH2 0xB3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC39 JUMPI PUSH2 0xC38 PUSH2 0x7C3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC46 DUP5 DUP3 DUP6 ADD PUSH2 0xC10 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC58 DUP2 PUSH2 0xA1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC69 DUP4 DUP6 PUSH2 0xB9A JUMP JUMPDEST SWAP4 POP PUSH2 0xC76 DUP4 DUP6 DUP5 PUSH2 0x88B JUMP JUMPDEST PUSH2 0xC7F DUP4 PUSH2 0x7D3 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xC9D PUSH0 DUP4 ADD DUP10 PUSH2 0xC4F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xCB0 DUP2 DUP8 DUP10 PUSH2 0xC5E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0xCC5 DUP2 DUP6 DUP8 PUSH2 0xC5E JUMP JUMPDEST SWAP1 POP PUSH2 0xCD4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x97E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420746865206F776E6572000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD13 PUSH1 0x17 DUP4 PUSH2 0xB9A JUMP JUMPDEST SWAP2 POP PUSH2 0xD1E DUP3 PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD40 DUP2 PUSH2 0xD07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD61 PUSH2 0xD5C DUP3 PUSH2 0xA1A JUMP JUMPDEST PUSH2 0xD47 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD7D DUP3 PUSH2 0xD67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD8E DUP3 PUSH2 0xD73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDA6 PUSH2 0xDA1 DUP3 PUSH2 0x96D JUMP JUMPDEST PUSH2 0xD84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDB7 DUP3 DUP8 PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xDC7 DUP3 DUP7 PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xDD7 DUP3 DUP6 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xDE7 DUP3 DUP5 PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4469726563746F72792063616E6E6F74206265207A65726F2061646472657373 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE2D PUSH1 0x20 DUP4 PUSH2 0xB9A JUMP JUMPDEST SWAP2 POP PUSH2 0xE38 DUP3 PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE5A DUP2 PUSH2 0xE21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206D757374206265206120636F6E747261637400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE95 PUSH1 0x1C DUP4 PUSH2 0xB9A JUMP JUMPDEST SWAP2 POP PUSH2 0xEA0 DUP3 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEC2 DUP2 PUSH2 0xE89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206164647265737320646F6573206E6F7420696D706C65 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D656E74206F776E657228290000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF23 PUSH1 0x2C DUP4 PUSH2 0xB9A JUMP JUMPDEST SWAP2 POP PUSH2 0xF2E DUP3 PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF50 DUP2 PUSH2 0xF17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF6A PUSH0 DUP4 ADD DUP6 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0xF77 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC4F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0x29 PUSH16 0xF354E3A2C190F376C12BBEFE9D3F5923 SWAP13 ADDMOD SWAP10 0xEF 0x4D 0x26 0xAF OR 0xAF EXTCODESIZE 0xCC 0xE9 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "868:648:5:-:0;;;955:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;999:10;412:25:3;426:10;412:13;;;:25;;:::i;:::-;370:94;955:58:5;868:648;;589:461:3;681:1;659:24;;:10;:24;;;651:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;763:1;738:10;:22;;;:26;730:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;861:10;850:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;846:198;;979:54;;;;;;;;;;:::i;:::-;;;;;;;;846:198;936:10;913:9;;:34;;;;;;;;;;;;;;;;;;881:77;589:461;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:169::-;1286:11;1320:6;1315:3;1308:19;1360:4;1355:3;1351:14;1336:29;;1202:169;;;;:::o;1377:182::-;1517:34;1513:1;1505:6;1501:14;1494:58;1377:182;:::o;1565:366::-;1707:3;1728:67;1792:2;1787:3;1728:67;:::i;:::-;1721:74;;1804:93;1893:3;1804:93;:::i;:::-;1922:2;1917:3;1913:12;1906:19;;1565:366;;;:::o;1937:419::-;2103:4;2141:2;2130:9;2126:18;2118:26;;2190:9;2184:4;2180:20;2176:1;2165:9;2161:17;2154:47;2218:131;2344:4;2218:131;:::i;:::-;2210:139;;1937:419;;;:::o;2362:178::-;2502:30;2498:1;2490:6;2486:14;2479:54;2362:178;:::o;2546:366::-;2688:3;2709:67;2773:2;2768:3;2709:67;:::i;:::-;2702:74;;2785:93;2874:3;2785:93;:::i;:::-;2903:2;2898:3;2894:12;2887:19;;2546:366;;;:::o;2918:419::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3171:9;3165:4;3161:20;3157:1;3146:9;3142:17;3135:47;3199:131;3325:4;3199:131;:::i;:::-;3191:139;;2918:419;;;:::o;3343:231::-;3483:34;3479:1;3471:6;3467:14;3460:58;3552:14;3547:2;3539:6;3535:15;3528:39;3343:231;:::o;3580:366::-;3722:3;3743:67;3807:2;3802:3;3743:67;:::i;:::-;3736:74;;3819:93;3908:3;3819:93;:::i;:::-;3937:2;3932:3;3928:12;3921:19;;3580:366;;;:::o;3952:419::-;4118:4;4156:2;4145:9;4141:18;4133:26;;4205:9;4199:4;4195:20;4191:1;4180:9;4176:17;4169:47;4233:131;4359:4;4233:131;:::i;:::-;4225:139;;3952:419;;;:::o;868:648:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Directory_538": {
									"entryPoint": 433,
									"id": 538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getTokenImplAddress_725": {
									"entryPoint": 1058,
									"id": 725,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_randomSalt_701": {
									"entryPoint": 1227,
									"id": 701,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setDirectory_608": {
									"entryPoint": 1298,
									"id": 608,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeDirectoryAddress_560": {
									"entryPoint": 796,
									"id": 560,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cloneDeterministic_131": {
									"entryPoint": 1731,
									"id": 131,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@cloneDeterministic_84": {
									"entryPoint": 1278,
									"id": 84,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@deployEtfToken_779": {
									"entryPoint": 469,
									"id": 779,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@fetchFromDirectory_645": {
									"entryPoint": 273,
									"id": 645,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_632": {
									"entryPoint": 649,
									"id": 632,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 2201,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 3088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_calldata_ptr": {
									"entryPoint": 2645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 2266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 3108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 2311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_string_calldata_ptrt_string_calldata_ptr": {
									"entryPoint": 2730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 3477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IDirectory_$535_to_t_address_fromStack": {
									"entryPoint": 2546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3166,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 3408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_uint256_t_uint256_t_address_t_uint256__to_t_uint256_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3500,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IDirectory_$535__to_t_address__fromStack_reversed": {
									"entryPoint": 2561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_calldata_ptr_t_string_calldata_ptr_t_address__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed": {
									"entryPoint": 3210,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3927,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1978,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 2139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IDirectory_$535_to_t_address": {
									"entryPoint": 2529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 2187,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2986,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 2064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 3460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 3443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 3399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 2019,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 2637,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1995,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2641,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1999,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1991,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1987,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_96": {
									"entryPoint": 3431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33": {
									"entryPoint": 3295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679": {
									"entryPoint": 3681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758": {
									"entryPoint": 3577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af": {
									"entryPoint": 3785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15995:6",
										"nodeType": "YulBlock",
										"src": "0:15995:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "423:28:6",
													"nodeType": "YulBlock",
													"src": "423:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:6",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:6",
																		"nodeType": "YulLiteral",
																		"src": "443:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nativeSrc": "433:12:6",
																"nodeType": "YulFunctionCall",
																"src": "433:12:6"
															},
															"nativeSrc": "433:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:6"
											},
											{
												"body": {
													"nativeSrc": "546:28:6",
													"nodeType": "YulBlock",
													"src": "546:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:6",
																		"nodeType": "YulLiteral",
																		"src": "563:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:6",
																		"nodeType": "YulLiteral",
																		"src": "566:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:6"
																},
																"nativeSrc": "556:12:6",
																"nodeType": "YulFunctionCall",
																"src": "556:12:6"
															},
															"nativeSrc": "556:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:6"
											},
											{
												"body": {
													"nativeSrc": "628:54:6",
													"nodeType": "YulBlock",
													"src": "628:54:6",
													"statements": [
														{
															"nativeSrc": "638:38:6",
															"nodeType": "YulAssignment",
															"src": "638:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:6",
																				"nodeType": "YulLiteral",
																				"src": "663:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:6"
																		},
																		"nativeSrc": "652:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:6",
																				"nodeType": "YulLiteral",
																				"src": "672:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:6"
																		},
																		"nativeSrc": "668:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:6"
																},
																"nativeSrc": "648:28:6",
																"nodeType": "YulFunctionCall",
																"src": "648:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:6",
														"nodeType": "YulTypedName",
														"src": "611:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:6",
														"nodeType": "YulTypedName",
														"src": "621:6:6",
														"type": ""
													}
												],
												"src": "580:102:6"
											},
											{
												"body": {
													"nativeSrc": "716:152:6",
													"nodeType": "YulBlock",
													"src": "716:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:6",
																		"nodeType": "YulLiteral",
																		"src": "733:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:6",
																		"nodeType": "YulLiteral",
																		"src": "736:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:6"
																},
																"nativeSrc": "726:88:6",
																"nodeType": "YulFunctionCall",
																"src": "726:88:6"
															},
															"nativeSrc": "726:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:6",
																		"nodeType": "YulLiteral",
																		"src": "830:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:6",
																		"nodeType": "YulLiteral",
																		"src": "833:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:6"
																},
																"nativeSrc": "823:15:6",
																"nodeType": "YulFunctionCall",
																"src": "823:15:6"
															},
															"nativeSrc": "823:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:6",
																		"nodeType": "YulLiteral",
																		"src": "854:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:6",
																		"nodeType": "YulLiteral",
																		"src": "857:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:6"
																},
																"nativeSrc": "847:15:6",
																"nodeType": "YulFunctionCall",
																"src": "847:15:6"
															},
															"nativeSrc": "847:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:6"
											},
											{
												"body": {
													"nativeSrc": "917:238:6",
													"nodeType": "YulBlock",
													"src": "917:238:6",
													"statements": [
														{
															"nativeSrc": "927:58:6",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:6"
																		},
																		"nativeSrc": "957:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:6"
																},
																"nativeSrc": "945:40:6",
																"nodeType": "YulFunctionCall",
																"src": "945:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:6",
																	"nodeType": "YulTypedName",
																	"src": "931:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:6",
																"nodeType": "YulBlock",
																"src": "1096:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:6"
																			},
																			"nativeSrc": "1098:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:6"
																		},
																		"nativeSrc": "1098:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:6",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:6"
																		},
																		"nativeSrc": "1036:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:6"
																		},
																		"nativeSrc": "1072:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:6"
																},
																"nativeSrc": "1033:62:6",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:6"
															},
															"nativeSrc": "1030:88:6",
															"nodeType": "YulIf",
															"src": "1030:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:6"
																},
																"nativeSrc": "1127:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:6"
															},
															"nativeSrc": "1127:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:6",
														"nodeType": "YulTypedName",
														"src": "903:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:6",
														"nodeType": "YulTypedName",
														"src": "911:4:6",
														"type": ""
													}
												],
												"src": "874:281:6"
											},
											{
												"body": {
													"nativeSrc": "1202:88:6",
													"nodeType": "YulBlock",
													"src": "1202:88:6",
													"statements": [
														{
															"nativeSrc": "1212:30:6",
															"nodeType": "YulAssignment",
															"src": "1212:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:6"
																},
																"nativeSrc": "1222:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:6"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:6"
																},
																"nativeSrc": "1251:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:6"
															},
															"nativeSrc": "1251:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:6",
														"nodeType": "YulTypedName",
														"src": "1186:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:6",
														"nodeType": "YulTypedName",
														"src": "1195:6:6",
														"type": ""
													}
												],
												"src": "1161:129:6"
											},
											{
												"body": {
													"nativeSrc": "1363:241:6",
													"nodeType": "YulBlock",
													"src": "1363:241:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:6",
																"nodeType": "YulBlock",
																"src": "1468:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:6"
																			},
																			"nativeSrc": "1470:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:6"
																		},
																		"nativeSrc": "1470:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:6",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:6"
																},
																"nativeSrc": "1437:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:6"
															},
															"nativeSrc": "1434:56:6",
															"nodeType": "YulIf",
															"src": "1434:56:6"
														},
														{
															"nativeSrc": "1500:37:6",
															"nodeType": "YulAssignment",
															"src": "1500:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:6",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:6"
																},
																"nativeSrc": "1508:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:6"
																}
															]
														},
														{
															"nativeSrc": "1574:23:6",
															"nodeType": "YulAssignment",
															"src": "1574:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:6"
																},
																"nativeSrc": "1582:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:6",
														"nodeType": "YulTypedName",
														"src": "1347:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:6",
														"nodeType": "YulTypedName",
														"src": "1358:4:6",
														"type": ""
													}
												],
												"src": "1296:308:6"
											},
											{
												"body": {
													"nativeSrc": "1674:84:6",
													"nodeType": "YulBlock",
													"src": "1674:84:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1698:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1698:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1703:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1703:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1708:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1708:6:6"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1685:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1685:12:6"
																},
																"nativeSrc": "1685:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1685:30:6"
															},
															"nativeSrc": "1685:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "1685:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1735:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1735:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1740:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1740:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1731:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1731:3:6"
																		},
																		"nativeSrc": "1731:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1731:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1749:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1724:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1724:6:6"
																},
																"nativeSrc": "1724:27:6",
																"nodeType": "YulFunctionCall",
																"src": "1724:27:6"
															},
															"nativeSrc": "1724:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "1724:27:6"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "1610:148:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1656:3:6",
														"nodeType": "YulTypedName",
														"src": "1656:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1661:3:6",
														"nodeType": "YulTypedName",
														"src": "1661:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1666:6:6",
														"nodeType": "YulTypedName",
														"src": "1666:6:6",
														"type": ""
													}
												],
												"src": "1610:148:6"
											},
											{
												"body": {
													"nativeSrc": "1848:341:6",
													"nodeType": "YulBlock",
													"src": "1848:341:6",
													"statements": [
														{
															"nativeSrc": "1858:75:6",
															"nodeType": "YulAssignment",
															"src": "1858:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1925:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1925:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1883:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "1883:41:6"
																		},
																		"nativeSrc": "1883:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1883:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1867:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "1867:15:6"
																},
																"nativeSrc": "1867:66:6",
																"nodeType": "YulFunctionCall",
																"src": "1867:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1858:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1858:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1949:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1949:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1956:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1956:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1942:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1942:6:6"
																},
																"nativeSrc": "1942:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1942:21:6"
															},
															"nativeSrc": "1942:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "1942:21:6"
														},
														{
															"nativeSrc": "1972:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1972:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1987:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1987:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1994:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1994:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1983:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:6"
																},
																"nativeSrc": "1983:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1983:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1976:3:6",
																	"nodeType": "YulTypedName",
																	"src": "1976:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2037:83:6",
																"nodeType": "YulBlock",
																"src": "2037:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2039:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2039:77:6"
																			},
																			"nativeSrc": "2039:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2039:79:6"
																		},
																		"nativeSrc": "2039:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2039:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2018:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2018:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2023:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2023:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2014:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2014:3:6"
																		},
																		"nativeSrc": "2014:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2014:16:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2032:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2032:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2011:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2011:2:6"
																},
																"nativeSrc": "2011:25:6",
																"nodeType": "YulFunctionCall",
																"src": "2011:25:6"
															},
															"nativeSrc": "2008:112:6",
															"nodeType": "YulIf",
															"src": "2008:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:6"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "2129:36:6",
																	"nodeType": "YulIdentifier",
																	"src": "2129:36:6"
																},
																"nativeSrc": "2129:54:6",
																"nodeType": "YulFunctionCall",
																"src": "2129:54:6"
															},
															"nativeSrc": "2129:54:6",
															"nodeType": "YulExpressionStatement",
															"src": "2129:54:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "1764:425:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1821:3:6",
														"nodeType": "YulTypedName",
														"src": "1821:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1826:6:6",
														"nodeType": "YulTypedName",
														"src": "1826:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1834:3:6",
														"nodeType": "YulTypedName",
														"src": "1834:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1842:5:6",
														"nodeType": "YulTypedName",
														"src": "1842:5:6",
														"type": ""
													}
												],
												"src": "1764:425:6"
											},
											{
												"body": {
													"nativeSrc": "2271:278:6",
													"nodeType": "YulBlock",
													"src": "2271:278:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2320:83:6",
																"nodeType": "YulBlock",
																"src": "2320:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2322:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2322:77:6"
																			},
																			"nativeSrc": "2322:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2322:79:6"
																		},
																		"nativeSrc": "2322:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2322:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2299:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2299:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2307:4:6",
																						"nodeType": "YulLiteral",
																						"src": "2307:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2295:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2295:3:6"
																				},
																				"nativeSrc": "2295:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2295:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2314:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2291:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2291:3:6"
																		},
																		"nativeSrc": "2291:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2291:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2284:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:6"
																},
																"nativeSrc": "2284:35:6",
																"nodeType": "YulFunctionCall",
																"src": "2284:35:6"
															},
															"nativeSrc": "2281:122:6",
															"nodeType": "YulIf",
															"src": "2281:122:6"
														},
														{
															"nativeSrc": "2412:34:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2412:34:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2439:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2439:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2426:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2426:12:6"
																},
																"nativeSrc": "2426:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2426:20:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2416:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2416:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2455:88:6",
															"nodeType": "YulAssignment",
															"src": "2455:88:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2516:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2516:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2524:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2524:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2512:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2512:3:6"
																		},
																		"nativeSrc": "2512:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2512:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2531:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2531:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2539:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2539:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "2464:47:6",
																	"nodeType": "YulIdentifier",
																	"src": "2464:47:6"
																},
																"nativeSrc": "2464:79:6",
																"nodeType": "YulFunctionCall",
																"src": "2464:79:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2455:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2455:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "2209:340:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2249:6:6",
														"nodeType": "YulTypedName",
														"src": "2249:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2257:3:6",
														"nodeType": "YulTypedName",
														"src": "2257:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2265:5:6",
														"nodeType": "YulTypedName",
														"src": "2265:5:6",
														"type": ""
													}
												],
												"src": "2209:340:6"
											},
											{
												"body": {
													"nativeSrc": "2631:433:6",
													"nodeType": "YulBlock",
													"src": "2631:433:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2677:83:6",
																"nodeType": "YulBlock",
																"src": "2677:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2679:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2679:77:6"
																			},
																			"nativeSrc": "2679:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2679:79:6"
																		},
																		"nativeSrc": "2679:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2679:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2652:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2652:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2661:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2661:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2648:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2648:3:6"
																		},
																		"nativeSrc": "2648:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2648:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2673:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2673:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2644:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:6"
																},
																"nativeSrc": "2644:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2644:32:6"
															},
															"nativeSrc": "2641:119:6",
															"nodeType": "YulIf",
															"src": "2641:119:6"
														},
														{
															"nativeSrc": "2770:287:6",
															"nodeType": "YulBlock",
															"src": "2770:287:6",
															"statements": [
																{
																	"nativeSrc": "2785:45:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2785:45:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2816:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2816:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2827:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2827:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2812:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2812:3:6"
																				},
																				"nativeSrc": "2812:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2812:17:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "2799:12:6",
																			"nodeType": "YulIdentifier",
																			"src": "2799:12:6"
																		},
																		"nativeSrc": "2799:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2799:31:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2789:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2789:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2877:83:6",
																		"nodeType": "YulBlock",
																		"src": "2877:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2879:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "2879:77:6"
																					},
																					"nativeSrc": "2879:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2879:79:6"
																				},
																				"nativeSrc": "2879:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "2879:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2849:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2849:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2857:18:6",
																				"nodeType": "YulLiteral",
																				"src": "2857:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2846:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2846:2:6"
																		},
																		"nativeSrc": "2846:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2846:30:6"
																	},
																	"nativeSrc": "2843:117:6",
																	"nodeType": "YulIf",
																	"src": "2843:117:6"
																},
																{
																	"nativeSrc": "2974:73:6",
																	"nodeType": "YulAssignment",
																	"src": "2974:73:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3019:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3019:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3030:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3030:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3015:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3015:3:6"
																				},
																				"nativeSrc": "3015:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3015:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3039:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3039:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "2984:30:6",
																			"nodeType": "YulIdentifier",
																			"src": "2984:30:6"
																		},
																		"nativeSrc": "2984:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2984:63:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2974:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2974:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "2555:509:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2601:9:6",
														"nodeType": "YulTypedName",
														"src": "2601:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2612:7:6",
														"nodeType": "YulTypedName",
														"src": "2612:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2624:6:6",
														"nodeType": "YulTypedName",
														"src": "2624:6:6",
														"type": ""
													}
												],
												"src": "2555:509:6"
											},
											{
												"body": {
													"nativeSrc": "3115:81:6",
													"nodeType": "YulBlock",
													"src": "3115:81:6",
													"statements": [
														{
															"nativeSrc": "3125:65:6",
															"nodeType": "YulAssignment",
															"src": "3125:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3140:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3140:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3147:42:6",
																		"nodeType": "YulLiteral",
																		"src": "3147:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3136:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3136:3:6"
																},
																"nativeSrc": "3136:54:6",
																"nodeType": "YulFunctionCall",
																"src": "3136:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3125:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3125:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3070:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3097:5:6",
														"nodeType": "YulTypedName",
														"src": "3097:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3107:7:6",
														"nodeType": "YulTypedName",
														"src": "3107:7:6",
														"type": ""
													}
												],
												"src": "3070:126:6"
											},
											{
												"body": {
													"nativeSrc": "3247:51:6",
													"nodeType": "YulBlock",
													"src": "3247:51:6",
													"statements": [
														{
															"nativeSrc": "3257:35:6",
															"nodeType": "YulAssignment",
															"src": "3257:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3286:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3286:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3268:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3268:17:6"
																},
																"nativeSrc": "3268:24:6",
																"nodeType": "YulFunctionCall",
																"src": "3268:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3257:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3257:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3202:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3229:5:6",
														"nodeType": "YulTypedName",
														"src": "3229:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3239:7:6",
														"nodeType": "YulTypedName",
														"src": "3239:7:6",
														"type": ""
													}
												],
												"src": "3202:96:6"
											},
											{
												"body": {
													"nativeSrc": "3369:53:6",
													"nodeType": "YulBlock",
													"src": "3369:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3386:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3386:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3409:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3409:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3391:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3391:17:6"
																		},
																		"nativeSrc": "3391:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3391:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3379:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3379:6:6"
																},
																"nativeSrc": "3379:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3379:37:6"
															},
															"nativeSrc": "3379:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3379:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3304:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3357:5:6",
														"nodeType": "YulTypedName",
														"src": "3357:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3364:3:6",
														"nodeType": "YulTypedName",
														"src": "3364:3:6",
														"type": ""
													}
												],
												"src": "3304:118:6"
											},
											{
												"body": {
													"nativeSrc": "3526:124:6",
													"nodeType": "YulBlock",
													"src": "3526:124:6",
													"statements": [
														{
															"nativeSrc": "3536:26:6",
															"nodeType": "YulAssignment",
															"src": "3536:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3548:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3548:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3559:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3559:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3544:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3544:3:6"
																},
																"nativeSrc": "3544:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3544:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3536:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3536:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3616:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3616:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3629:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3629:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3640:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3640:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3625:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3625:3:6"
																		},
																		"nativeSrc": "3625:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3625:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3572:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3572:43:6"
																},
																"nativeSrc": "3572:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3572:71:6"
															},
															"nativeSrc": "3572:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3572:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3428:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3498:9:6",
														"nodeType": "YulTypedName",
														"src": "3498:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3510:6:6",
														"nodeType": "YulTypedName",
														"src": "3510:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3521:4:6",
														"nodeType": "YulTypedName",
														"src": "3521:4:6",
														"type": ""
													}
												],
												"src": "3428:222:6"
											},
											{
												"body": {
													"nativeSrc": "3688:28:6",
													"nodeType": "YulBlock",
													"src": "3688:28:6",
													"statements": [
														{
															"nativeSrc": "3698:12:6",
															"nodeType": "YulAssignment",
															"src": "3698:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "3705:5:6",
																"nodeType": "YulIdentifier",
																"src": "3705:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3698:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3698:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3656:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3674:5:6",
														"nodeType": "YulTypedName",
														"src": "3674:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3684:3:6",
														"nodeType": "YulTypedName",
														"src": "3684:3:6",
														"type": ""
													}
												],
												"src": "3656:60:6"
											},
											{
												"body": {
													"nativeSrc": "3782:82:6",
													"nodeType": "YulBlock",
													"src": "3782:82:6",
													"statements": [
														{
															"nativeSrc": "3792:66:6",
															"nodeType": "YulAssignment",
															"src": "3792:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3850:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3850:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3832:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3832:17:6"
																				},
																				"nativeSrc": "3832:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3832:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3823:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "3823:8:6"
																		},
																		"nativeSrc": "3823:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3823:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3805:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3805:17:6"
																},
																"nativeSrc": "3805:53:6",
																"nodeType": "YulFunctionCall",
																"src": "3805:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3792:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3792:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3722:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3762:5:6",
														"nodeType": "YulTypedName",
														"src": "3762:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3772:9:6",
														"nodeType": "YulTypedName",
														"src": "3772:9:6",
														"type": ""
													}
												],
												"src": "3722:142:6"
											},
											{
												"body": {
													"nativeSrc": "3930:66:6",
													"nodeType": "YulBlock",
													"src": "3930:66:6",
													"statements": [
														{
															"nativeSrc": "3940:50:6",
															"nodeType": "YulAssignment",
															"src": "3940:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3984:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3984:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3953:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3953:30:6"
																},
																"nativeSrc": "3953:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3953:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3940:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3940:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3870:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3910:5:6",
														"nodeType": "YulTypedName",
														"src": "3910:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3920:9:6",
														"nodeType": "YulTypedName",
														"src": "3920:9:6",
														"type": ""
													}
												],
												"src": "3870:126:6"
											},
											{
												"body": {
													"nativeSrc": "4080:66:6",
													"nodeType": "YulBlock",
													"src": "4080:66:6",
													"statements": [
														{
															"nativeSrc": "4090:50:6",
															"nodeType": "YulAssignment",
															"src": "4090:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4134:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4134:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4103:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "4103:30:6"
																},
																"nativeSrc": "4103:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4103:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4090:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4090:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IDirectory_$535_to_t_address",
												"nativeSrc": "4002:144:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4060:5:6",
														"nodeType": "YulTypedName",
														"src": "4060:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4070:9:6",
														"nodeType": "YulTypedName",
														"src": "4070:9:6",
														"type": ""
													}
												],
												"src": "4002:144:6"
											},
											{
												"body": {
													"nativeSrc": "4235:84:6",
													"nodeType": "YulBlock",
													"src": "4235:84:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4252:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4252:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4306:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4306:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IDirectory_$535_to_t_address",
																			"nativeSrc": "4257:48:6",
																			"nodeType": "YulIdentifier",
																			"src": "4257:48:6"
																		},
																		"nativeSrc": "4257:55:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4257:55:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4245:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4245:6:6"
																},
																"nativeSrc": "4245:68:6",
																"nodeType": "YulFunctionCall",
																"src": "4245:68:6"
															},
															"nativeSrc": "4245:68:6",
															"nodeType": "YulExpressionStatement",
															"src": "4245:68:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IDirectory_$535_to_t_address_fromStack",
												"nativeSrc": "4152:167:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4223:5:6",
														"nodeType": "YulTypedName",
														"src": "4223:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4230:3:6",
														"nodeType": "YulTypedName",
														"src": "4230:3:6",
														"type": ""
													}
												],
												"src": "4152:167:6"
											},
											{
												"body": {
													"nativeSrc": "4441:142:6",
													"nodeType": "YulBlock",
													"src": "4441:142:6",
													"statements": [
														{
															"nativeSrc": "4451:26:6",
															"nodeType": "YulAssignment",
															"src": "4451:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4463:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4463:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4474:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4474:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4459:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4459:3:6"
																},
																"nativeSrc": "4459:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4459:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4451:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4451:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4549:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4549:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4562:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4562:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4573:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4573:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4558:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4558:3:6"
																		},
																		"nativeSrc": "4558:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4558:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IDirectory_$535_to_t_address_fromStack",
																	"nativeSrc": "4487:61:6",
																	"nodeType": "YulIdentifier",
																	"src": "4487:61:6"
																},
																"nativeSrc": "4487:89:6",
																"nodeType": "YulFunctionCall",
																"src": "4487:89:6"
															},
															"nativeSrc": "4487:89:6",
															"nodeType": "YulExpressionStatement",
															"src": "4487:89:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IDirectory_$535__to_t_address__fromStack_reversed",
												"nativeSrc": "4325:258:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4413:9:6",
														"nodeType": "YulTypedName",
														"src": "4413:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4425:6:6",
														"nodeType": "YulTypedName",
														"src": "4425:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4436:4:6",
														"nodeType": "YulTypedName",
														"src": "4436:4:6",
														"type": ""
													}
												],
												"src": "4325:258:6"
											},
											{
												"body": {
													"nativeSrc": "4634:32:6",
													"nodeType": "YulBlock",
													"src": "4634:32:6",
													"statements": [
														{
															"nativeSrc": "4644:16:6",
															"nodeType": "YulAssignment",
															"src": "4644:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "4655:5:6",
																"nodeType": "YulIdentifier",
																"src": "4655:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4644:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4644:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4589:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4616:5:6",
														"nodeType": "YulTypedName",
														"src": "4616:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4626:7:6",
														"nodeType": "YulTypedName",
														"src": "4626:7:6",
														"type": ""
													}
												],
												"src": "4589:77:6"
											},
											{
												"body": {
													"nativeSrc": "4715:79:6",
													"nodeType": "YulBlock",
													"src": "4715:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4772:16:6",
																"nodeType": "YulBlock",
																"src": "4772:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4781:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4781:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4784:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4784:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4774:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4774:6:6"
																			},
																			"nativeSrc": "4774:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4774:12:6"
																		},
																		"nativeSrc": "4774:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4774:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4738:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4738:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4763:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4763:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4745:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "4745:17:6"
																				},
																				"nativeSrc": "4745:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4745:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4735:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4735:2:6"
																		},
																		"nativeSrc": "4735:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4735:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4728:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4728:6:6"
																},
																"nativeSrc": "4728:43:6",
																"nodeType": "YulFunctionCall",
																"src": "4728:43:6"
															},
															"nativeSrc": "4725:63:6",
															"nodeType": "YulIf",
															"src": "4725:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4672:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4708:5:6",
														"nodeType": "YulTypedName",
														"src": "4708:5:6",
														"type": ""
													}
												],
												"src": "4672:122:6"
											},
											{
												"body": {
													"nativeSrc": "4852:87:6",
													"nodeType": "YulBlock",
													"src": "4852:87:6",
													"statements": [
														{
															"nativeSrc": "4862:29:6",
															"nodeType": "YulAssignment",
															"src": "4862:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4884:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4884:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4871:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "4871:12:6"
																},
																"nativeSrc": "4871:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4871:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4862:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4862:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4927:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4927:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4900:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "4900:26:6"
																},
																"nativeSrc": "4900:33:6",
																"nodeType": "YulFunctionCall",
																"src": "4900:33:6"
															},
															"nativeSrc": "4900:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "4900:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4800:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4830:6:6",
														"nodeType": "YulTypedName",
														"src": "4830:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4838:3:6",
														"nodeType": "YulTypedName",
														"src": "4838:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4846:5:6",
														"nodeType": "YulTypedName",
														"src": "4846:5:6",
														"type": ""
													}
												],
												"src": "4800:139:6"
											},
											{
												"body": {
													"nativeSrc": "5034:28:6",
													"nodeType": "YulBlock",
													"src": "5034:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5051:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5054:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5054:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5044:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5044:6:6"
																},
																"nativeSrc": "5044:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5044:12:6"
															},
															"nativeSrc": "5044:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "5044:12:6"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "4945:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4945:117:6"
											},
											{
												"body": {
													"nativeSrc": "5157:28:6",
													"nodeType": "YulBlock",
													"src": "5157:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5174:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5174:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5177:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5177:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5167:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5167:6:6"
																},
																"nativeSrc": "5167:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5167:12:6"
															},
															"nativeSrc": "5167:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "5167:12:6"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "5068:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5068:117:6"
											},
											{
												"body": {
													"nativeSrc": "5280:478:6",
													"nodeType": "YulBlock",
													"src": "5280:478:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5329:83:6",
																"nodeType": "YulBlock",
																"src": "5329:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5331:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5331:77:6"
																			},
																			"nativeSrc": "5331:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5331:79:6"
																		},
																		"nativeSrc": "5331:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5331:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5308:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5308:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5316:4:6",
																						"nodeType": "YulLiteral",
																						"src": "5316:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5304:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5304:3:6"
																				},
																				"nativeSrc": "5304:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5304:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5323:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5323:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5300:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5300:3:6"
																		},
																		"nativeSrc": "5300:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5300:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5293:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5293:6:6"
																},
																"nativeSrc": "5293:35:6",
																"nodeType": "YulFunctionCall",
																"src": "5293:35:6"
															},
															"nativeSrc": "5290:122:6",
															"nodeType": "YulIf",
															"src": "5290:122:6"
														},
														{
															"nativeSrc": "5421:30:6",
															"nodeType": "YulAssignment",
															"src": "5421:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5444:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5444:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5431:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "5431:12:6"
																},
																"nativeSrc": "5431:20:6",
																"nodeType": "YulFunctionCall",
																"src": "5431:20:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5421:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5421:6:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5494:83:6",
																"nodeType": "YulBlock",
																"src": "5494:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "5496:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5496:77:6"
																			},
																			"nativeSrc": "5496:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5496:79:6"
																		},
																		"nativeSrc": "5496:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5496:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5466:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5466:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5474:18:6",
																		"nodeType": "YulLiteral",
																		"src": "5474:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5463:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5463:2:6"
																},
																"nativeSrc": "5463:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5463:30:6"
															},
															"nativeSrc": "5460:117:6",
															"nodeType": "YulIf",
															"src": "5460:117:6"
														},
														{
															"nativeSrc": "5586:29:6",
															"nodeType": "YulAssignment",
															"src": "5586:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5602:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5602:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5610:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5610:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5598:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5598:3:6"
																},
																"nativeSrc": "5598:17:6",
																"nodeType": "YulFunctionCall",
																"src": "5598:17:6"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "5586:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "5586:8:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5669:83:6",
																"nodeType": "YulBlock",
																"src": "5669:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "5671:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5671:77:6"
																			},
																			"nativeSrc": "5671:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5671:79:6"
																		},
																		"nativeSrc": "5671:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5671:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "5634:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "5634:8:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "5648:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5648:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5656:4:6",
																						"nodeType": "YulLiteral",
																						"src": "5656:4:6",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5644:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5644:3:6"
																				},
																				"nativeSrc": "5644:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5644:17:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5630:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5630:3:6"
																		},
																		"nativeSrc": "5630:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5630:32:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5664:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5664:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5627:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5627:2:6"
																},
																"nativeSrc": "5627:41:6",
																"nodeType": "YulFunctionCall",
																"src": "5627:41:6"
															},
															"nativeSrc": "5624:128:6",
															"nodeType": "YulIf",
															"src": "5624:128:6"
														}
													]
												},
												"name": "abi_decode_t_string_calldata_ptr",
												"nativeSrc": "5205:553:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5247:6:6",
														"nodeType": "YulTypedName",
														"src": "5247:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5255:3:6",
														"nodeType": "YulTypedName",
														"src": "5255:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "5263:8:6",
														"nodeType": "YulTypedName",
														"src": "5263:8:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5273:6:6",
														"nodeType": "YulTypedName",
														"src": "5273:6:6",
														"type": ""
													}
												],
												"src": "5205:553:6"
											},
											{
												"body": {
													"nativeSrc": "5904:879:6",
													"nodeType": "YulBlock",
													"src": "5904:879:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5950:83:6",
																"nodeType": "YulBlock",
																"src": "5950:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5952:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5952:77:6"
																			},
																			"nativeSrc": "5952:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5952:79:6"
																		},
																		"nativeSrc": "5952:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5952:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5925:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5925:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5934:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5934:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5921:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5921:3:6"
																		},
																		"nativeSrc": "5921:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5921:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5946:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5946:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5917:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5917:3:6"
																},
																"nativeSrc": "5917:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5917:32:6"
															},
															"nativeSrc": "5914:119:6",
															"nodeType": "YulIf",
															"src": "5914:119:6"
														},
														{
															"nativeSrc": "6043:117:6",
															"nodeType": "YulBlock",
															"src": "6043:117:6",
															"statements": [
																{
																	"nativeSrc": "6058:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6058:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6072:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6072:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6062:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6062:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6087:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6087:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6122:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6122:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6133:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6133:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6118:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6118:3:6"
																				},
																				"nativeSrc": "6118:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6118:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6142:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6142:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6097:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6097:20:6"
																		},
																		"nativeSrc": "6097:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6097:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6087:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6087:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6170:298:6",
															"nodeType": "YulBlock",
															"src": "6170:298:6",
															"statements": [
																{
																	"nativeSrc": "6185:46:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6185:46:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6216:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6216:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6227:2:6",
																						"nodeType": "YulLiteral",
																						"src": "6227:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6212:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6212:3:6"
																				},
																				"nativeSrc": "6212:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6212:18:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6199:12:6",
																			"nodeType": "YulIdentifier",
																			"src": "6199:12:6"
																		},
																		"nativeSrc": "6199:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6199:32:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6189:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6189:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "6278:83:6",
																		"nodeType": "YulBlock",
																		"src": "6278:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "6280:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "6280:77:6"
																					},
																					"nativeSrc": "6280:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6280:79:6"
																				},
																				"nativeSrc": "6280:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "6280:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6250:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6250:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6258:18:6",
																				"nodeType": "YulLiteral",
																				"src": "6258:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6247:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6247:2:6"
																		},
																		"nativeSrc": "6247:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6247:30:6"
																	},
																	"nativeSrc": "6244:117:6",
																	"nodeType": "YulIf",
																	"src": "6244:117:6"
																},
																{
																	"nativeSrc": "6375:83:6",
																	"nodeType": "YulAssignment",
																	"src": "6375:83:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6430:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6430:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6441:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6441:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6426:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6426:3:6"
																				},
																				"nativeSrc": "6426:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6426:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6450:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6450:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "6393:32:6",
																			"nodeType": "YulIdentifier",
																			"src": "6393:32:6"
																		},
																		"nativeSrc": "6393:65:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6393:65:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6375:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6375:6:6"
																		},
																		{
																			"name": "value2",
																			"nativeSrc": "6383:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6383:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6478:298:6",
															"nodeType": "YulBlock",
															"src": "6478:298:6",
															"statements": [
																{
																	"nativeSrc": "6493:46:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6493:46:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6524:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6524:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6535:2:6",
																						"nodeType": "YulLiteral",
																						"src": "6535:2:6",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6520:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6520:3:6"
																				},
																				"nativeSrc": "6520:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6520:18:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6507:12:6",
																			"nodeType": "YulIdentifier",
																			"src": "6507:12:6"
																		},
																		"nativeSrc": "6507:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6507:32:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6497:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6497:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "6586:83:6",
																		"nodeType": "YulBlock",
																		"src": "6586:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "6588:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "6588:77:6"
																					},
																					"nativeSrc": "6588:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6588:79:6"
																				},
																				"nativeSrc": "6588:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "6588:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6558:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6558:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6566:18:6",
																				"nodeType": "YulLiteral",
																				"src": "6566:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6555:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6555:2:6"
																		},
																		"nativeSrc": "6555:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6555:30:6"
																	},
																	"nativeSrc": "6552:117:6",
																	"nodeType": "YulIf",
																	"src": "6552:117:6"
																},
																{
																	"nativeSrc": "6683:83:6",
																	"nodeType": "YulAssignment",
																	"src": "6683:83:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6738:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6738:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6749:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6749:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6734:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6734:3:6"
																				},
																				"nativeSrc": "6734:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6734:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6758:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6758:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "6701:32:6",
																			"nodeType": "YulIdentifier",
																			"src": "6701:32:6"
																		},
																		"nativeSrc": "6701:65:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6701:65:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "6683:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6683:6:6"
																		},
																		{
																			"name": "value4",
																			"nativeSrc": "6691:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6691:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_string_calldata_ptrt_string_calldata_ptr",
												"nativeSrc": "5764:1019:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5842:9:6",
														"nodeType": "YulTypedName",
														"src": "5842:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5853:7:6",
														"nodeType": "YulTypedName",
														"src": "5853:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5865:6:6",
														"nodeType": "YulTypedName",
														"src": "5865:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5873:6:6",
														"nodeType": "YulTypedName",
														"src": "5873:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5881:6:6",
														"nodeType": "YulTypedName",
														"src": "5881:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5889:6:6",
														"nodeType": "YulTypedName",
														"src": "5889:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5897:6:6",
														"nodeType": "YulTypedName",
														"src": "5897:6:6",
														"type": ""
													}
												],
												"src": "5764:1019:6"
											},
											{
												"body": {
													"nativeSrc": "6832:79:6",
													"nodeType": "YulBlock",
													"src": "6832:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6889:16:6",
																"nodeType": "YulBlock",
																"src": "6889:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6898:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6898:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6901:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6901:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6891:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6891:6:6"
																			},
																			"nativeSrc": "6891:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6891:12:6"
																		},
																		"nativeSrc": "6891:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6891:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6855:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6855:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6880:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "6880:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "6862:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "6862:17:6"
																				},
																				"nativeSrc": "6862:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6862:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6852:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6852:2:6"
																		},
																		"nativeSrc": "6852:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6852:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6845:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6845:6:6"
																},
																"nativeSrc": "6845:43:6",
																"nodeType": "YulFunctionCall",
																"src": "6845:43:6"
															},
															"nativeSrc": "6842:63:6",
															"nodeType": "YulIf",
															"src": "6842:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "6789:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6825:5:6",
														"nodeType": "YulTypedName",
														"src": "6825:5:6",
														"type": ""
													}
												],
												"src": "6789:122:6"
											},
											{
												"body": {
													"nativeSrc": "6969:87:6",
													"nodeType": "YulBlock",
													"src": "6969:87:6",
													"statements": [
														{
															"nativeSrc": "6979:29:6",
															"nodeType": "YulAssignment",
															"src": "6979:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7001:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7001:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6988:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "6988:12:6"
																},
																"nativeSrc": "6988:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6988:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6979:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6979:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7044:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7044:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "7017:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "7017:26:6"
																},
																"nativeSrc": "7017:33:6",
																"nodeType": "YulFunctionCall",
																"src": "7017:33:6"
															},
															"nativeSrc": "7017:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "7017:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "6917:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6947:6:6",
														"nodeType": "YulTypedName",
														"src": "6947:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6955:3:6",
														"nodeType": "YulTypedName",
														"src": "6955:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6963:5:6",
														"nodeType": "YulTypedName",
														"src": "6963:5:6",
														"type": ""
													}
												],
												"src": "6917:139:6"
											},
											{
												"body": {
													"nativeSrc": "7128:263:6",
													"nodeType": "YulBlock",
													"src": "7128:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7174:83:6",
																"nodeType": "YulBlock",
																"src": "7174:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7176:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "7176:77:6"
																			},
																			"nativeSrc": "7176:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7176:79:6"
																		},
																		"nativeSrc": "7176:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7176:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7149:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7149:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7158:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7158:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7145:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7145:3:6"
																		},
																		"nativeSrc": "7145:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7145:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7170:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7170:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7141:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7141:3:6"
																},
																"nativeSrc": "7141:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7141:32:6"
															},
															"nativeSrc": "7138:119:6",
															"nodeType": "YulIf",
															"src": "7138:119:6"
														},
														{
															"nativeSrc": "7267:117:6",
															"nodeType": "YulBlock",
															"src": "7267:117:6",
															"statements": [
																{
																	"nativeSrc": "7282:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7282:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7296:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7296:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7286:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7286:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7311:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7311:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7346:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7346:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7357:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7357:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7342:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7342:3:6"
																				},
																				"nativeSrc": "7342:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7342:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7366:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7366:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7321:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7321:20:6"
																		},
																		"nativeSrc": "7321:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7321:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7311:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7311:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7062:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7098:9:6",
														"nodeType": "YulTypedName",
														"src": "7098:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7109:7:6",
														"nodeType": "YulTypedName",
														"src": "7109:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7121:6:6",
														"nodeType": "YulTypedName",
														"src": "7121:6:6",
														"type": ""
													}
												],
												"src": "7062:329:6"
											},
											{
												"body": {
													"nativeSrc": "7456:40:6",
													"nodeType": "YulBlock",
													"src": "7456:40:6",
													"statements": [
														{
															"nativeSrc": "7467:22:6",
															"nodeType": "YulAssignment",
															"src": "7467:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7483:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7483:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7477:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7477:5:6"
																},
																"nativeSrc": "7477:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7477:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7467:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7467:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7397:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7439:5:6",
														"nodeType": "YulTypedName",
														"src": "7439:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7449:6:6",
														"nodeType": "YulTypedName",
														"src": "7449:6:6",
														"type": ""
													}
												],
												"src": "7397:99:6"
											},
											{
												"body": {
													"nativeSrc": "7598:73:6",
													"nodeType": "YulBlock",
													"src": "7598:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7615:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7615:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7620:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7620:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7608:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7608:6:6"
																},
																"nativeSrc": "7608:19:6",
																"nodeType": "YulFunctionCall",
																"src": "7608:19:6"
															},
															"nativeSrc": "7608:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "7608:19:6"
														},
														{
															"nativeSrc": "7636:29:6",
															"nodeType": "YulAssignment",
															"src": "7636:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7655:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7655:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7660:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7660:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7651:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7651:3:6"
																},
																"nativeSrc": "7651:14:6",
																"nodeType": "YulFunctionCall",
																"src": "7651:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7636:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "7636:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7502:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7570:3:6",
														"nodeType": "YulTypedName",
														"src": "7570:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7575:6:6",
														"nodeType": "YulTypedName",
														"src": "7575:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7586:11:6",
														"nodeType": "YulTypedName",
														"src": "7586:11:6",
														"type": ""
													}
												],
												"src": "7502:169:6"
											},
											{
												"body": {
													"nativeSrc": "7739:77:6",
													"nodeType": "YulBlock",
													"src": "7739:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7756:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7756:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7761:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7761:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7766:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "7750:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7750:5:6"
																},
																"nativeSrc": "7750:23:6",
																"nodeType": "YulFunctionCall",
																"src": "7750:23:6"
															},
															"nativeSrc": "7750:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "7750:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7793:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7793:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7798:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7798:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7789:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7789:3:6"
																		},
																		"nativeSrc": "7789:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7789:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7807:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7807:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7782:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7782:6:6"
																},
																"nativeSrc": "7782:27:6",
																"nodeType": "YulFunctionCall",
																"src": "7782:27:6"
															},
															"nativeSrc": "7782:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "7782:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "7677:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7721:3:6",
														"nodeType": "YulTypedName",
														"src": "7721:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7726:3:6",
														"nodeType": "YulTypedName",
														"src": "7726:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7731:6:6",
														"nodeType": "YulTypedName",
														"src": "7731:6:6",
														"type": ""
													}
												],
												"src": "7677:139:6"
											},
											{
												"body": {
													"nativeSrc": "7914:285:6",
													"nodeType": "YulBlock",
													"src": "7914:285:6",
													"statements": [
														{
															"nativeSrc": "7924:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7924:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7971:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7971:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7938:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "7938:32:6"
																},
																"nativeSrc": "7938:39:6",
																"nodeType": "YulFunctionCall",
																"src": "7938:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7928:6:6",
																	"nodeType": "YulTypedName",
																	"src": "7928:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7986:78:6",
															"nodeType": "YulAssignment",
															"src": "7986:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8052:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8052:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8057:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8057:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7993:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7993:58:6"
																},
																"nativeSrc": "7993:71:6",
																"nodeType": "YulFunctionCall",
																"src": "7993:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7986:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7986:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8112:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8112:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8119:4:6",
																				"nodeType": "YulLiteral",
																				"src": "8119:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8108:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8108:3:6"
																		},
																		"nativeSrc": "8108:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8108:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8126:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8126:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8131:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8131:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8073:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "8073:34:6"
																},
																"nativeSrc": "8073:65:6",
																"nodeType": "YulFunctionCall",
																"src": "8073:65:6"
															},
															"nativeSrc": "8073:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "8073:65:6"
														},
														{
															"nativeSrc": "8147:46:6",
															"nodeType": "YulAssignment",
															"src": "8147:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8158:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8158:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8185:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8185:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "8163:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "8163:21:6"
																		},
																		"nativeSrc": "8163:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8163:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8154:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8154:3:6"
																},
																"nativeSrc": "8154:39:6",
																"nodeType": "YulFunctionCall",
																"src": "8154:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8147:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8147:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7822:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7895:5:6",
														"nodeType": "YulTypedName",
														"src": "7895:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7902:3:6",
														"nodeType": "YulTypedName",
														"src": "7902:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7910:3:6",
														"nodeType": "YulTypedName",
														"src": "7910:3:6",
														"type": ""
													}
												],
												"src": "7822:377:6"
											},
											{
												"body": {
													"nativeSrc": "8323:195:6",
													"nodeType": "YulBlock",
													"src": "8323:195:6",
													"statements": [
														{
															"nativeSrc": "8333:26:6",
															"nodeType": "YulAssignment",
															"src": "8333:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8345:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8345:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8356:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8356:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8341:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8341:3:6"
																},
																"nativeSrc": "8341:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8341:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8333:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8333:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8380:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8380:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8391:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8391:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8376:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8376:3:6"
																		},
																		"nativeSrc": "8376:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8376:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8399:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8399:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8405:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8405:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8395:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8395:3:6"
																		},
																		"nativeSrc": "8395:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8395:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8369:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8369:6:6"
																},
																"nativeSrc": "8369:47:6",
																"nodeType": "YulFunctionCall",
																"src": "8369:47:6"
															},
															"nativeSrc": "8369:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "8369:47:6"
														},
														{
															"nativeSrc": "8425:86:6",
															"nodeType": "YulAssignment",
															"src": "8425:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8497:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8497:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8506:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8506:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8433:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "8433:63:6"
																},
																"nativeSrc": "8433:78:6",
																"nodeType": "YulFunctionCall",
																"src": "8433:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8425:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8425:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8205:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8295:9:6",
														"nodeType": "YulTypedName",
														"src": "8295:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8307:6:6",
														"nodeType": "YulTypedName",
														"src": "8307:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8318:4:6",
														"nodeType": "YulTypedName",
														"src": "8318:4:6",
														"type": ""
													}
												],
												"src": "8205:313:6"
											},
											{
												"body": {
													"nativeSrc": "8587:80:6",
													"nodeType": "YulBlock",
													"src": "8587:80:6",
													"statements": [
														{
															"nativeSrc": "8597:22:6",
															"nodeType": "YulAssignment",
															"src": "8597:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8612:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8612:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8606:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8606:5:6"
																},
																"nativeSrc": "8606:13:6",
																"nodeType": "YulFunctionCall",
																"src": "8606:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8597:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8597:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8655:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8655:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "8628:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "8628:26:6"
																},
																"nativeSrc": "8628:33:6",
																"nodeType": "YulFunctionCall",
																"src": "8628:33:6"
															},
															"nativeSrc": "8628:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "8628:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "8524:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8565:6:6",
														"nodeType": "YulTypedName",
														"src": "8565:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8573:3:6",
														"nodeType": "YulTypedName",
														"src": "8573:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8581:5:6",
														"nodeType": "YulTypedName",
														"src": "8581:5:6",
														"type": ""
													}
												],
												"src": "8524:143:6"
											},
											{
												"body": {
													"nativeSrc": "8750:274:6",
													"nodeType": "YulBlock",
													"src": "8750:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8796:83:6",
																"nodeType": "YulBlock",
																"src": "8796:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8798:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "8798:77:6"
																			},
																			"nativeSrc": "8798:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8798:79:6"
																		},
																		"nativeSrc": "8798:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8798:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8771:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8771:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8780:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8780:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8767:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8767:3:6"
																		},
																		"nativeSrc": "8767:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8767:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8792:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8792:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8763:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8763:3:6"
																},
																"nativeSrc": "8763:32:6",
																"nodeType": "YulFunctionCall",
																"src": "8763:32:6"
															},
															"nativeSrc": "8760:119:6",
															"nodeType": "YulIf",
															"src": "8760:119:6"
														},
														{
															"nativeSrc": "8889:128:6",
															"nodeType": "YulBlock",
															"src": "8889:128:6",
															"statements": [
																{
																	"nativeSrc": "8904:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8904:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8918:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8918:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8908:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8908:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8933:74:6",
																	"nodeType": "YulAssignment",
																	"src": "8933:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8979:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8979:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8990:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8990:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8975:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8975:3:6"
																				},
																				"nativeSrc": "8975:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8975:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8999:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8999:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "8943:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "8943:31:6"
																		},
																		"nativeSrc": "8943:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8943:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8933:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8933:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "8673:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8720:9:6",
														"nodeType": "YulTypedName",
														"src": "8720:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8731:7:6",
														"nodeType": "YulTypedName",
														"src": "8731:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8743:6:6",
														"nodeType": "YulTypedName",
														"src": "8743:6:6",
														"type": ""
													}
												],
												"src": "8673:351:6"
											},
											{
												"body": {
													"nativeSrc": "9095:53:6",
													"nodeType": "YulBlock",
													"src": "9095:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9112:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9112:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9135:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9135:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9117:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "9117:17:6"
																		},
																		"nativeSrc": "9117:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9117:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9105:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9105:6:6"
																},
																"nativeSrc": "9105:37:6",
																"nodeType": "YulFunctionCall",
																"src": "9105:37:6"
															},
															"nativeSrc": "9105:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "9105:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9030:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9083:5:6",
														"nodeType": "YulTypedName",
														"src": "9083:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9090:3:6",
														"nodeType": "YulTypedName",
														"src": "9090:3:6",
														"type": ""
													}
												],
												"src": "9030:118:6"
											},
											{
												"body": {
													"nativeSrc": "9280:215:6",
													"nodeType": "YulBlock",
													"src": "9280:215:6",
													"statements": [
														{
															"nativeSrc": "9290:78:6",
															"nodeType": "YulAssignment",
															"src": "9290:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9356:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9356:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9361:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9361:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9297:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "9297:58:6"
																},
																"nativeSrc": "9297:71:6",
																"nodeType": "YulFunctionCall",
																"src": "9297:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9290:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9290:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "9415:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9415:5:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9422:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9422:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9427:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9427:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "9378:36:6",
																	"nodeType": "YulIdentifier",
																	"src": "9378:36:6"
																},
																"nativeSrc": "9378:56:6",
																"nodeType": "YulFunctionCall",
																"src": "9378:56:6"
															},
															"nativeSrc": "9378:56:6",
															"nodeType": "YulExpressionStatement",
															"src": "9378:56:6"
														},
														{
															"nativeSrc": "9443:46:6",
															"nodeType": "YulAssignment",
															"src": "9443:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9454:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9454:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9481:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9481:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "9459:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "9459:21:6"
																		},
																		"nativeSrc": "9459:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9459:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9450:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9450:3:6"
																},
																"nativeSrc": "9450:39:6",
																"nodeType": "YulFunctionCall",
																"src": "9450:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9443:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9443:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9178:317:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "9253:5:6",
														"nodeType": "YulTypedName",
														"src": "9253:5:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9260:6:6",
														"nodeType": "YulTypedName",
														"src": "9260:6:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9268:3:6",
														"nodeType": "YulTypedName",
														"src": "9268:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9276:3:6",
														"nodeType": "YulTypedName",
														"src": "9276:3:6",
														"type": ""
													}
												],
												"src": "9178:317:6"
											},
											{
												"body": {
													"nativeSrc": "9743:533:6",
													"nodeType": "YulBlock",
													"src": "9743:533:6",
													"statements": [
														{
															"nativeSrc": "9753:27:6",
															"nodeType": "YulAssignment",
															"src": "9753:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9765:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9765:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9776:3:6",
																		"nodeType": "YulLiteral",
																		"src": "9776:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9761:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9761:3:6"
																},
																"nativeSrc": "9761:19:6",
																"nodeType": "YulFunctionCall",
																"src": "9761:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9753:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9753:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9834:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9834:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9847:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9847:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9858:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9858:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9843:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9843:3:6"
																		},
																		"nativeSrc": "9843:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9843:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9790:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9790:43:6"
																},
																"nativeSrc": "9790:71:6",
																"nodeType": "YulFunctionCall",
																"src": "9790:71:6"
															},
															"nativeSrc": "9790:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "9790:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9882:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9882:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9893:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9893:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9878:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9878:3:6"
																		},
																		"nativeSrc": "9878:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9878:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9902:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9902:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9908:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9908:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9898:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9898:3:6"
																		},
																		"nativeSrc": "9898:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9898:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9871:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9871:6:6"
																},
																"nativeSrc": "9871:48:6",
																"nodeType": "YulFunctionCall",
																"src": "9871:48:6"
															},
															"nativeSrc": "9871:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "9871:48:6"
														},
														{
															"nativeSrc": "9928:96:6",
															"nodeType": "YulAssignment",
															"src": "9928:96:6",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10002:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10002:6:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10010:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10010:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "10019:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10019:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9936:65:6",
																	"nodeType": "YulIdentifier",
																	"src": "9936:65:6"
																},
																"nativeSrc": "9936:88:6",
																"nodeType": "YulFunctionCall",
																"src": "9936:88:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9928:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9928:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10045:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10045:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10056:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10056:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10041:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10041:3:6"
																		},
																		"nativeSrc": "10041:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10041:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10065:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10065:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10071:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10071:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10061:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10061:3:6"
																		},
																		"nativeSrc": "10061:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10061:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10034:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10034:6:6"
																},
																"nativeSrc": "10034:48:6",
																"nodeType": "YulFunctionCall",
																"src": "10034:48:6"
															},
															"nativeSrc": "10034:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "10034:48:6"
														},
														{
															"nativeSrc": "10091:96:6",
															"nodeType": "YulAssignment",
															"src": "10091:96:6",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "10165:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10165:6:6"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "10173:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10173:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "10182:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10182:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10099:65:6",
																	"nodeType": "YulIdentifier",
																	"src": "10099:65:6"
																},
																"nativeSrc": "10099:88:6",
																"nodeType": "YulFunctionCall",
																"src": "10099:88:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10091:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10091:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "10241:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10241:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10254:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10254:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10265:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10265:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10250:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10250:3:6"
																		},
																		"nativeSrc": "10250:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10250:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10197:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10197:43:6"
																},
																"nativeSrc": "10197:72:6",
																"nodeType": "YulFunctionCall",
																"src": "10197:72:6"
															},
															"nativeSrc": "10197:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "10197:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_calldata_ptr_t_string_calldata_ptr_t_address__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed",
												"nativeSrc": "9501:775:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9675:9:6",
														"nodeType": "YulTypedName",
														"src": "9675:9:6",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "9687:6:6",
														"nodeType": "YulTypedName",
														"src": "9687:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9695:6:6",
														"nodeType": "YulTypedName",
														"src": "9695:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9703:6:6",
														"nodeType": "YulTypedName",
														"src": "9703:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9711:6:6",
														"nodeType": "YulTypedName",
														"src": "9711:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9719:6:6",
														"nodeType": "YulTypedName",
														"src": "9719:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9727:6:6",
														"nodeType": "YulTypedName",
														"src": "9727:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9738:4:6",
														"nodeType": "YulTypedName",
														"src": "9738:4:6",
														"type": ""
													}
												],
												"src": "9501:775:6"
											},
											{
												"body": {
													"nativeSrc": "10388:67:6",
													"nodeType": "YulBlock",
													"src": "10388:67:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10410:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10410:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10418:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10418:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10406:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10406:3:6"
																		},
																		"nativeSrc": "10406:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10406:14:6"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "10422:25:6",
																		"nodeType": "YulLiteral",
																		"src": "10422:25:6",
																		"type": "",
																		"value": "Caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10399:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10399:6:6"
																},
																"nativeSrc": "10399:49:6",
																"nodeType": "YulFunctionCall",
																"src": "10399:49:6"
															},
															"nativeSrc": "10399:49:6",
															"nodeType": "YulExpressionStatement",
															"src": "10399:49:6"
														}
													]
												},
												"name": "store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
												"nativeSrc": "10282:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10380:6:6",
														"nodeType": "YulTypedName",
														"src": "10380:6:6",
														"type": ""
													}
												],
												"src": "10282:173:6"
											},
											{
												"body": {
													"nativeSrc": "10607:220:6",
													"nodeType": "YulBlock",
													"src": "10607:220:6",
													"statements": [
														{
															"nativeSrc": "10617:74:6",
															"nodeType": "YulAssignment",
															"src": "10617:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10683:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10683:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10688:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10688:2:6",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10624:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "10624:58:6"
																},
																"nativeSrc": "10624:67:6",
																"nodeType": "YulFunctionCall",
																"src": "10624:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10617:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10617:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10789:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10789:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
																	"nativeSrc": "10700:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "10700:88:6"
																},
																"nativeSrc": "10700:93:6",
																"nodeType": "YulFunctionCall",
																"src": "10700:93:6"
															},
															"nativeSrc": "10700:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "10700:93:6"
														},
														{
															"nativeSrc": "10802:19:6",
															"nodeType": "YulAssignment",
															"src": "10802:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10813:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10813:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10818:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10818:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10809:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10809:3:6"
																},
																"nativeSrc": "10809:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10809:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10802:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10802:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10461:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10595:3:6",
														"nodeType": "YulTypedName",
														"src": "10595:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10603:3:6",
														"nodeType": "YulTypedName",
														"src": "10603:3:6",
														"type": ""
													}
												],
												"src": "10461:366:6"
											},
											{
												"body": {
													"nativeSrc": "11004:248:6",
													"nodeType": "YulBlock",
													"src": "11004:248:6",
													"statements": [
														{
															"nativeSrc": "11014:26:6",
															"nodeType": "YulAssignment",
															"src": "11014:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11026:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11026:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11037:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11037:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11022:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11022:3:6"
																},
																"nativeSrc": "11022:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11022:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11014:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11014:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11061:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11061:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11072:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11072:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11057:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11057:3:6"
																		},
																		"nativeSrc": "11057:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11057:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11080:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11080:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11086:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11086:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11076:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11076:3:6"
																		},
																		"nativeSrc": "11076:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11076:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11050:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11050:6:6"
																},
																"nativeSrc": "11050:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11050:47:6"
															},
															"nativeSrc": "11050:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11050:47:6"
														},
														{
															"nativeSrc": "11106:139:6",
															"nodeType": "YulAssignment",
															"src": "11106:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11240:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11240:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11114:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "11114:124:6"
																},
																"nativeSrc": "11114:131:6",
																"nodeType": "YulFunctionCall",
																"src": "11114:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11106:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11106:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10833:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10984:9:6",
														"nodeType": "YulTypedName",
														"src": "10984:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10999:4:6",
														"nodeType": "YulTypedName",
														"src": "10999:4:6",
														"type": ""
													}
												],
												"src": "10833:419:6"
											},
											{
												"body": {
													"nativeSrc": "11305:32:6",
													"nodeType": "YulBlock",
													"src": "11305:32:6",
													"statements": [
														{
															"nativeSrc": "11315:16:6",
															"nodeType": "YulAssignment",
															"src": "11315:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "11326:5:6",
																"nodeType": "YulIdentifier",
																"src": "11326:5:6"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "11315:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "11315:7:6"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nativeSrc": "11258:79:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11287:5:6",
														"nodeType": "YulTypedName",
														"src": "11287:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "11297:7:6",
														"nodeType": "YulTypedName",
														"src": "11297:7:6",
														"type": ""
													}
												],
												"src": "11258:79:6"
											},
											{
												"body": {
													"nativeSrc": "11426:74:6",
													"nodeType": "YulBlock",
													"src": "11426:74:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11443:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11443:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11486:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "11486:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "11468:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "11468:17:6"
																				},
																				"nativeSrc": "11468:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11468:24:6"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nativeSrc": "11448:19:6",
																			"nodeType": "YulIdentifier",
																			"src": "11448:19:6"
																		},
																		"nativeSrc": "11448:45:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11448:45:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11436:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11436:6:6"
																},
																"nativeSrc": "11436:58:6",
																"nodeType": "YulFunctionCall",
																"src": "11436:58:6"
															},
															"nativeSrc": "11436:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "11436:58:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nativeSrc": "11343:157:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11414:5:6",
														"nodeType": "YulTypedName",
														"src": "11414:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11421:3:6",
														"nodeType": "YulTypedName",
														"src": "11421:3:6",
														"type": ""
													}
												],
												"src": "11343:157:6"
											},
											{
												"body": {
													"nativeSrc": "11548:52:6",
													"nodeType": "YulBlock",
													"src": "11548:52:6",
													"statements": [
														{
															"nativeSrc": "11558:35:6",
															"nodeType": "YulAssignment",
															"src": "11558:35:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11583:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11583:2:6",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "11587:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "11587:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "11579:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11579:3:6"
																},
																"nativeSrc": "11579:14:6",
																"nodeType": "YulFunctionCall",
																"src": "11579:14:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "11558:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "11558:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "11506:94:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11529:5:6",
														"nodeType": "YulTypedName",
														"src": "11529:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "11539:8:6",
														"nodeType": "YulTypedName",
														"src": "11539:8:6",
														"type": ""
													}
												],
												"src": "11506:94:6"
											},
											{
												"body": {
													"nativeSrc": "11653:47:6",
													"nodeType": "YulBlock",
													"src": "11653:47:6",
													"statements": [
														{
															"nativeSrc": "11663:31:6",
															"nodeType": "YulAssignment",
															"src": "11663:31:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11688:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "11688:5:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "11674:13:6",
																	"nodeType": "YulIdentifier",
																	"src": "11674:13:6"
																},
																"nativeSrc": "11674:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11674:20:6"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "11663:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "11663:7:6"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "11606:94:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11635:5:6",
														"nodeType": "YulTypedName",
														"src": "11635:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "11645:7:6",
														"nodeType": "YulTypedName",
														"src": "11645:7:6",
														"type": ""
													}
												],
												"src": "11606:94:6"
											},
											{
												"body": {
													"nativeSrc": "11753:53:6",
													"nodeType": "YulBlock",
													"src": "11753:53:6",
													"statements": [
														{
															"nativeSrc": "11763:37:6",
															"nodeType": "YulAssignment",
															"src": "11763:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11794:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "11794:5:6"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "11774:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "11774:19:6"
																},
																"nativeSrc": "11774:26:6",
																"nodeType": "YulFunctionCall",
																"src": "11774:26:6"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "11763:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "11763:7:6"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "11706:100:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11735:5:6",
														"nodeType": "YulTypedName",
														"src": "11735:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "11745:7:6",
														"nodeType": "YulTypedName",
														"src": "11745:7:6",
														"type": ""
													}
												],
												"src": "11706:100:6"
											},
											{
												"body": {
													"nativeSrc": "11895:74:6",
													"nodeType": "YulBlock",
													"src": "11895:74:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11912:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11912:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11955:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "11955:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "11937:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "11937:17:6"
																				},
																				"nativeSrc": "11937:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11937:24:6"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "11917:19:6",
																			"nodeType": "YulIdentifier",
																			"src": "11917:19:6"
																		},
																		"nativeSrc": "11917:45:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11917:45:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11905:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11905:6:6"
																},
																"nativeSrc": "11905:58:6",
																"nodeType": "YulFunctionCall",
																"src": "11905:58:6"
															},
															"nativeSrc": "11905:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "11905:58:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "11812:157:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11883:5:6",
														"nodeType": "YulTypedName",
														"src": "11883:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11890:3:6",
														"nodeType": "YulTypedName",
														"src": "11890:3:6",
														"type": ""
													}
												],
												"src": "11812:157:6"
											},
											{
												"body": {
													"nativeSrc": "12175:479:6",
													"nodeType": "YulBlock",
													"src": "12175:479:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12248:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12248:6:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12257:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12257:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "12186:61:6",
																	"nodeType": "YulIdentifier",
																	"src": "12186:61:6"
																},
																"nativeSrc": "12186:75:6",
																"nodeType": "YulFunctionCall",
																"src": "12186:75:6"
															},
															"nativeSrc": "12186:75:6",
															"nodeType": "YulExpressionStatement",
															"src": "12186:75:6"
														},
														{
															"nativeSrc": "12270:19:6",
															"nodeType": "YulAssignment",
															"src": "12270:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12281:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12281:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12286:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12286:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12277:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12277:3:6"
																},
																"nativeSrc": "12277:12:6",
																"nodeType": "YulFunctionCall",
																"src": "12277:12:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12270:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12270:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12361:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12361:6:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12370:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12370:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "12299:61:6",
																	"nodeType": "YulIdentifier",
																	"src": "12299:61:6"
																},
																"nativeSrc": "12299:75:6",
																"nodeType": "YulFunctionCall",
																"src": "12299:75:6"
															},
															"nativeSrc": "12299:75:6",
															"nodeType": "YulExpressionStatement",
															"src": "12299:75:6"
														},
														{
															"nativeSrc": "12383:19:6",
															"nodeType": "YulAssignment",
															"src": "12383:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12394:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12394:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12399:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12399:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12390:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12390:3:6"
																},
																"nativeSrc": "12390:12:6",
																"nodeType": "YulFunctionCall",
																"src": "12390:12:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12383:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12383:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12474:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12474:6:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12483:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12483:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "12412:61:6",
																	"nodeType": "YulIdentifier",
																	"src": "12412:61:6"
																},
																"nativeSrc": "12412:75:6",
																"nodeType": "YulFunctionCall",
																"src": "12412:75:6"
															},
															"nativeSrc": "12412:75:6",
															"nodeType": "YulExpressionStatement",
															"src": "12412:75:6"
														},
														{
															"nativeSrc": "12496:19:6",
															"nodeType": "YulAssignment",
															"src": "12496:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12507:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12507:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12512:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12512:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12503:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12503:3:6"
																},
																"nativeSrc": "12503:12:6",
																"nodeType": "YulFunctionCall",
																"src": "12503:12:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12496:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12496:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "12587:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12587:6:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12596:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12596:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "12525:61:6",
																	"nodeType": "YulIdentifier",
																	"src": "12525:61:6"
																},
																"nativeSrc": "12525:75:6",
																"nodeType": "YulFunctionCall",
																"src": "12525:75:6"
															},
															"nativeSrc": "12525:75:6",
															"nodeType": "YulExpressionStatement",
															"src": "12525:75:6"
														},
														{
															"nativeSrc": "12609:19:6",
															"nodeType": "YulAssignment",
															"src": "12609:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12620:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12620:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12625:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12625:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12616:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12616:3:6"
																},
																"nativeSrc": "12616:12:6",
																"nodeType": "YulFunctionCall",
																"src": "12616:12:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12609:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12609:3:6"
																}
															]
														},
														{
															"nativeSrc": "12638:10:6",
															"nodeType": "YulAssignment",
															"src": "12638:10:6",
															"value": {
																"name": "pos",
																"nativeSrc": "12645:3:6",
																"nodeType": "YulIdentifier",
																"src": "12645:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12638:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12638:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_uint256_t_address_t_uint256__to_t_uint256_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11975:679:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12130:3:6",
														"nodeType": "YulTypedName",
														"src": "12130:3:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12136:6:6",
														"nodeType": "YulTypedName",
														"src": "12136:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12144:6:6",
														"nodeType": "YulTypedName",
														"src": "12144:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12152:6:6",
														"nodeType": "YulTypedName",
														"src": "12152:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12160:6:6",
														"nodeType": "YulTypedName",
														"src": "12160:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12171:3:6",
														"nodeType": "YulTypedName",
														"src": "12171:3:6",
														"type": ""
													}
												],
												"src": "11975:679:6"
											},
											{
												"body": {
													"nativeSrc": "12766:76:6",
													"nodeType": "YulBlock",
													"src": "12766:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12788:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "12788:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12796:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12796:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12784:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12784:3:6"
																		},
																		"nativeSrc": "12784:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12784:14:6"
																	},
																	{
																		"hexValue": "4469726563746f72792063616e6e6f74206265207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "12800:34:6",
																		"nodeType": "YulLiteral",
																		"src": "12800:34:6",
																		"type": "",
																		"value": "Directory cannot be zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12777:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12777:6:6"
																},
																"nativeSrc": "12777:58:6",
																"nodeType": "YulFunctionCall",
																"src": "12777:58:6"
															},
															"nativeSrc": "12777:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "12777:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
												"nativeSrc": "12660:182:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12758:6:6",
														"nodeType": "YulTypedName",
														"src": "12758:6:6",
														"type": ""
													}
												],
												"src": "12660:182:6"
											},
											{
												"body": {
													"nativeSrc": "12994:220:6",
													"nodeType": "YulBlock",
													"src": "12994:220:6",
													"statements": [
														{
															"nativeSrc": "13004:74:6",
															"nodeType": "YulAssignment",
															"src": "13004:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13070:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13070:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13075:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13075:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13011:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "13011:58:6"
																},
																"nativeSrc": "13011:67:6",
																"nodeType": "YulFunctionCall",
																"src": "13011:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13004:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13004:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13176:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13176:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
																	"nativeSrc": "13087:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "13087:88:6"
																},
																"nativeSrc": "13087:93:6",
																"nodeType": "YulFunctionCall",
																"src": "13087:93:6"
															},
															"nativeSrc": "13087:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "13087:93:6"
														},
														{
															"nativeSrc": "13189:19:6",
															"nodeType": "YulAssignment",
															"src": "13189:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13200:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13200:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13205:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13205:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13196:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13196:3:6"
																},
																"nativeSrc": "13196:12:6",
																"nodeType": "YulFunctionCall",
																"src": "13196:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13189:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13189:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12848:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12982:3:6",
														"nodeType": "YulTypedName",
														"src": "12982:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12990:3:6",
														"nodeType": "YulTypedName",
														"src": "12990:3:6",
														"type": ""
													}
												],
												"src": "12848:366:6"
											},
											{
												"body": {
													"nativeSrc": "13391:248:6",
													"nodeType": "YulBlock",
													"src": "13391:248:6",
													"statements": [
														{
															"nativeSrc": "13401:26:6",
															"nodeType": "YulAssignment",
															"src": "13401:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13413:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13413:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13424:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13424:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13409:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13409:3:6"
																},
																"nativeSrc": "13409:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13409:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13401:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13401:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13448:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13448:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13459:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13459:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13444:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13444:3:6"
																		},
																		"nativeSrc": "13444:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13444:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13467:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "13467:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13473:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13473:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13463:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13463:3:6"
																		},
																		"nativeSrc": "13463:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13463:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13437:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13437:6:6"
																},
																"nativeSrc": "13437:47:6",
																"nodeType": "YulFunctionCall",
																"src": "13437:47:6"
															},
															"nativeSrc": "13437:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "13437:47:6"
														},
														{
															"nativeSrc": "13493:139:6",
															"nodeType": "YulAssignment",
															"src": "13493:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13627:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "13627:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13501:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "13501:124:6"
																},
																"nativeSrc": "13501:131:6",
																"nodeType": "YulFunctionCall",
																"src": "13501:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13493:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13493:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13220:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13371:9:6",
														"nodeType": "YulTypedName",
														"src": "13371:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13386:4:6",
														"nodeType": "YulTypedName",
														"src": "13386:4:6",
														"type": ""
													}
												],
												"src": "13220:419:6"
											},
											{
												"body": {
													"nativeSrc": "13751:72:6",
													"nodeType": "YulBlock",
													"src": "13751:72:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13773:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "13773:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13781:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13781:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13769:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13769:3:6"
																		},
																		"nativeSrc": "13769:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13769:14:6"
																	},
																	{
																		"hexValue": "4469726563746f7279206d757374206265206120636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "13785:30:6",
																		"nodeType": "YulLiteral",
																		"src": "13785:30:6",
																		"type": "",
																		"value": "Directory must be a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13762:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13762:6:6"
																},
																"nativeSrc": "13762:54:6",
																"nodeType": "YulFunctionCall",
																"src": "13762:54:6"
															},
															"nativeSrc": "13762:54:6",
															"nodeType": "YulExpressionStatement",
															"src": "13762:54:6"
														}
													]
												},
												"name": "store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
												"nativeSrc": "13645:178:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13743:6:6",
														"nodeType": "YulTypedName",
														"src": "13743:6:6",
														"type": ""
													}
												],
												"src": "13645:178:6"
											},
											{
												"body": {
													"nativeSrc": "13975:220:6",
													"nodeType": "YulBlock",
													"src": "13975:220:6",
													"statements": [
														{
															"nativeSrc": "13985:74:6",
															"nodeType": "YulAssignment",
															"src": "13985:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14051:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14051:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14056:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14056:2:6",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13992:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "13992:58:6"
																},
																"nativeSrc": "13992:67:6",
																"nodeType": "YulFunctionCall",
																"src": "13992:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13985:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13985:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14157:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14157:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
																	"nativeSrc": "14068:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "14068:88:6"
																},
																"nativeSrc": "14068:93:6",
																"nodeType": "YulFunctionCall",
																"src": "14068:93:6"
															},
															"nativeSrc": "14068:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "14068:93:6"
														},
														{
															"nativeSrc": "14170:19:6",
															"nodeType": "YulAssignment",
															"src": "14170:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14181:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14181:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14186:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14186:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14177:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14177:3:6"
																},
																"nativeSrc": "14177:12:6",
																"nodeType": "YulFunctionCall",
																"src": "14177:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14170:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14170:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13829:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13963:3:6",
														"nodeType": "YulTypedName",
														"src": "13963:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13971:3:6",
														"nodeType": "YulTypedName",
														"src": "13971:3:6",
														"type": ""
													}
												],
												"src": "13829:366:6"
											},
											{
												"body": {
													"nativeSrc": "14372:248:6",
													"nodeType": "YulBlock",
													"src": "14372:248:6",
													"statements": [
														{
															"nativeSrc": "14382:26:6",
															"nodeType": "YulAssignment",
															"src": "14382:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14394:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "14394:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14405:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14405:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14390:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14390:3:6"
																},
																"nativeSrc": "14390:18:6",
																"nodeType": "YulFunctionCall",
																"src": "14390:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14382:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14382:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14429:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14429:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14440:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14440:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14425:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14425:3:6"
																		},
																		"nativeSrc": "14425:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14425:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14448:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "14448:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14454:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14454:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14444:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14444:3:6"
																		},
																		"nativeSrc": "14444:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14444:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14418:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14418:6:6"
																},
																"nativeSrc": "14418:47:6",
																"nodeType": "YulFunctionCall",
																"src": "14418:47:6"
															},
															"nativeSrc": "14418:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "14418:47:6"
														},
														{
															"nativeSrc": "14474:139:6",
															"nodeType": "YulAssignment",
															"src": "14474:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14608:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "14608:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14482:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "14482:124:6"
																},
																"nativeSrc": "14482:131:6",
																"nodeType": "YulFunctionCall",
																"src": "14482:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14474:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14474:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14201:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14352:9:6",
														"nodeType": "YulTypedName",
														"src": "14352:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14367:4:6",
														"nodeType": "YulTypedName",
														"src": "14367:4:6",
														"type": ""
													}
												],
												"src": "14201:419:6"
											},
											{
												"body": {
													"nativeSrc": "14732:125:6",
													"nodeType": "YulBlock",
													"src": "14732:125:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14754:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "14754:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14762:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14762:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14750:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14750:3:6"
																		},
																		"nativeSrc": "14750:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14750:14:6"
																	},
																	{
																		"hexValue": "4469726563746f7279206164647265737320646f6573206e6f7420696d706c65",
																		"kind": "string",
																		"nativeSrc": "14766:34:6",
																		"nodeType": "YulLiteral",
																		"src": "14766:34:6",
																		"type": "",
																		"value": "Directory address does not imple"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14743:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14743:6:6"
																},
																"nativeSrc": "14743:58:6",
																"nodeType": "YulFunctionCall",
																"src": "14743:58:6"
															},
															"nativeSrc": "14743:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "14743:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14822:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "14822:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14830:2:6",
																				"nodeType": "YulLiteral",
																				"src": "14830:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14818:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14818:3:6"
																		},
																		"nativeSrc": "14818:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14818:15:6"
																	},
																	{
																		"hexValue": "6d656e74206f776e65722829",
																		"kind": "string",
																		"nativeSrc": "14835:14:6",
																		"nodeType": "YulLiteral",
																		"src": "14835:14:6",
																		"type": "",
																		"value": "ment owner()"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14811:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14811:6:6"
																},
																"nativeSrc": "14811:39:6",
																"nodeType": "YulFunctionCall",
																"src": "14811:39:6"
															},
															"nativeSrc": "14811:39:6",
															"nodeType": "YulExpressionStatement",
															"src": "14811:39:6"
														}
													]
												},
												"name": "store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
												"nativeSrc": "14626:231:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14724:6:6",
														"nodeType": "YulTypedName",
														"src": "14724:6:6",
														"type": ""
													}
												],
												"src": "14626:231:6"
											},
											{
												"body": {
													"nativeSrc": "15009:220:6",
													"nodeType": "YulBlock",
													"src": "15009:220:6",
													"statements": [
														{
															"nativeSrc": "15019:74:6",
															"nodeType": "YulAssignment",
															"src": "15019:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15085:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15085:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15090:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15090:2:6",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15026:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "15026:58:6"
																},
																"nativeSrc": "15026:67:6",
																"nodeType": "YulFunctionCall",
																"src": "15026:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15019:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15019:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15191:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15191:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
																	"nativeSrc": "15102:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "15102:88:6"
																},
																"nativeSrc": "15102:93:6",
																"nodeType": "YulFunctionCall",
																"src": "15102:93:6"
															},
															"nativeSrc": "15102:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "15102:93:6"
														},
														{
															"nativeSrc": "15204:19:6",
															"nodeType": "YulAssignment",
															"src": "15204:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15215:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15215:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15220:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15220:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15211:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15211:3:6"
																},
																"nativeSrc": "15211:12:6",
																"nodeType": "YulFunctionCall",
																"src": "15211:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15204:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15204:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14863:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14997:3:6",
														"nodeType": "YulTypedName",
														"src": "14997:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15005:3:6",
														"nodeType": "YulTypedName",
														"src": "15005:3:6",
														"type": ""
													}
												],
												"src": "14863:366:6"
											},
											{
												"body": {
													"nativeSrc": "15406:248:6",
													"nodeType": "YulBlock",
													"src": "15406:248:6",
													"statements": [
														{
															"nativeSrc": "15416:26:6",
															"nodeType": "YulAssignment",
															"src": "15416:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15428:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "15428:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15439:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15439:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15424:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15424:3:6"
																},
																"nativeSrc": "15424:18:6",
																"nodeType": "YulFunctionCall",
																"src": "15424:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15416:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "15416:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15463:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15463:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15474:1:6",
																				"nodeType": "YulLiteral",
																				"src": "15474:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15459:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15459:3:6"
																		},
																		"nativeSrc": "15459:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15459:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15482:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "15482:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15488:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15488:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15478:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15478:3:6"
																		},
																		"nativeSrc": "15478:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15478:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15452:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15452:6:6"
																},
																"nativeSrc": "15452:47:6",
																"nodeType": "YulFunctionCall",
																"src": "15452:47:6"
															},
															"nativeSrc": "15452:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "15452:47:6"
														},
														{
															"nativeSrc": "15508:139:6",
															"nodeType": "YulAssignment",
															"src": "15508:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15642:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "15642:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15516:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "15516:124:6"
																},
																"nativeSrc": "15516:131:6",
																"nodeType": "YulFunctionCall",
																"src": "15516:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15508:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "15508:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15235:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15386:9:6",
														"nodeType": "YulTypedName",
														"src": "15386:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15401:4:6",
														"nodeType": "YulTypedName",
														"src": "15401:4:6",
														"type": ""
													}
												],
												"src": "15235:419:6"
											},
											{
												"body": {
													"nativeSrc": "15786:206:6",
													"nodeType": "YulBlock",
													"src": "15786:206:6",
													"statements": [
														{
															"nativeSrc": "15796:26:6",
															"nodeType": "YulAssignment",
															"src": "15796:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15808:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "15808:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15819:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15819:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15804:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15804:3:6"
																},
																"nativeSrc": "15804:18:6",
																"nodeType": "YulFunctionCall",
																"src": "15804:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15796:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "15796:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15876:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "15876:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15889:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15889:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15900:1:6",
																				"nodeType": "YulLiteral",
																				"src": "15900:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15885:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15885:3:6"
																		},
																		"nativeSrc": "15885:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15885:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15832:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "15832:43:6"
																},
																"nativeSrc": "15832:71:6",
																"nodeType": "YulFunctionCall",
																"src": "15832:71:6"
															},
															"nativeSrc": "15832:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "15832:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15957:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "15957:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15970:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15970:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15981:2:6",
																				"nodeType": "YulLiteral",
																				"src": "15981:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15966:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15966:3:6"
																		},
																		"nativeSrc": "15966:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15966:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15913:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "15913:43:6"
																},
																"nativeSrc": "15913:72:6",
																"nodeType": "YulFunctionCall",
																"src": "15913:72:6"
															},
															"nativeSrc": "15913:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "15913:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15660:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15750:9:6",
														"nodeType": "YulTypedName",
														"src": "15750:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15762:6:6",
														"nodeType": "YulTypedName",
														"src": "15762:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15770:6:6",
														"nodeType": "YulTypedName",
														"src": "15770:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15781:4:6",
														"nodeType": "YulTypedName",
														"src": "15781:4:6",
														"type": ""
													}
												],
												"src": "15660:332:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IDirectory_$535_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IDirectory_$535_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IDirectory_$535_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IDirectory_$535__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IDirectory_$535_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_string_calldata_ptrt_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_calldata_ptr_t_string_calldata_ptr_t_address__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value1, value2,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value3, value4,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_uint256_t_address_t_uint256__to_t_uint256_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value3, value2, value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value3,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory cannot be zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory must be a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af(memPtr) {\n\n        mstore(add(memPtr, 0), \"Directory address does not imple\")\n\n        mstore(add(memPtr, 32), \"ment owner()\")\n\n    }\n\n    function abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610055575f3560e01c80632726261814610059578063658a847a1461008957806378f6c7c4146100a75780638da5cb5b146100d7578063ba4c7be1146100f5575b5f5ffd5b610073600480360381019061006e9190610907565b610111565b604051610080919061098d565b60405180910390f35b6100916101b1565b60405161009e9190610a01565b60405180910390f35b6100c160048036038101906100bc9190610aaa565b6101d5565b6040516100ce919061098d565b60405180910390f35b6100df610289565b6040516100ec919061098d565b60405180910390f35b61010f600480360381019061010a9190610b65565b61031c565b005b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327262618836040518263ffffffff1660e01b815260040161016b9190610bf0565b602060405180830381865afa158015610186573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101aa9190610c24565b9050919050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6101ee6101e1610422565b6101e96104cb565b6104fe565b90508073ffffffffffffffffffffffffffffffffffffffff16636ebd362c87878787875f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518763ffffffff1660e01b815260040161025396959493929190610c8a565b5f604051808303815f87803b15801561026a575f5ffd5b505af115801561027c573d5f5f3e3d5ffd5b5050505095945050505050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102f3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103179190610c24565b905090565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610385573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103a99190610c24565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040d90610d29565b60405180910390fd5b61041f81610512565b50565b5f6104616040518060400160405280600e81526020017f6574662d746f6b656e2d696d706c000000000000000000000000000000000000815250610111565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104c8576040517f8020a5c700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b90565b5f4244335a6040516020016104e39493929190610dac565b60405160208183030381529060405280519060200120905090565b5f61050a83835f6106c3565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610580576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057790610e43565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff163b116105d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d090610eab565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561064157506040513d601f19601f8201168201806040525081019061063e9190610c24565b60015b610680576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067790610f39565b60405180910390fd5b815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b5f8147101561070b5747826040517fcf479181000000000000000000000000000000000000000000000000000000008152600401610702929190610f57565b60405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008460601b60e81c175f526e5af43d82803e903d91602b57fd5bf38460781b17602052826037600984f590505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107b3576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610819826107d3565b810181811067ffffffffffffffff82111715610838576108376107e3565b5b80604052505050565b5f61084a6107ba565b90506108568282610810565b919050565b5f67ffffffffffffffff821115610875576108746107e3565b5b61087e826107d3565b9050602081019050919050565b828183375f83830152505050565b5f6108ab6108a68461085b565b610841565b9050828152602081018484840111156108c7576108c66107cf565b5b6108d284828561088b565b509392505050565b5f82601f8301126108ee576108ed6107cb565b5b81356108fe848260208601610899565b91505092915050565b5f6020828403121561091c5761091b6107c3565b5b5f82013567ffffffffffffffff811115610939576109386107c7565b5b610945848285016108da565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109778261094e565b9050919050565b6109878161096d565b82525050565b5f6020820190506109a05f83018461097e565b92915050565b5f819050919050565b5f6109c96109c46109bf8461094e565b6109a6565b61094e565b9050919050565b5f6109da826109af565b9050919050565b5f6109eb826109d0565b9050919050565b6109fb816109e1565b82525050565b5f602082019050610a145f8301846109f2565b92915050565b5f819050919050565b610a2c81610a1a565b8114610a36575f5ffd5b50565b5f81359050610a4781610a23565b92915050565b5f5ffd5b5f5ffd5b5f5f83601f840112610a6a57610a696107cb565b5b8235905067ffffffffffffffff811115610a8757610a86610a4d565b5b602083019150836001820283011115610aa357610aa2610a51565b5b9250929050565b5f5f5f5f5f60608688031215610ac357610ac26107c3565b5b5f610ad088828901610a39565b955050602086013567ffffffffffffffff811115610af157610af06107c7565b5b610afd88828901610a55565b9450945050604086013567ffffffffffffffff811115610b2057610b1f6107c7565b5b610b2c88828901610a55565b92509250509295509295909350565b610b448161096d565b8114610b4e575f5ffd5b50565b5f81359050610b5f81610b3b565b92915050565b5f60208284031215610b7a57610b796107c3565b5b5f610b8784828501610b51565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f610bc282610b90565b610bcc8185610b9a565b9350610bdc818560208601610baa565b610be5816107d3565b840191505092915050565b5f6020820190508181035f830152610c088184610bb8565b905092915050565b5f81519050610c1e81610b3b565b92915050565b5f60208284031215610c3957610c386107c3565b5b5f610c4684828501610c10565b91505092915050565b610c5881610a1a565b82525050565b5f610c698385610b9a565b9350610c7683858461088b565b610c7f836107d3565b840190509392505050565b5f608082019050610c9d5f830189610c4f565b8181036020830152610cb0818789610c5e565b90508181036040830152610cc5818587610c5e565b9050610cd4606083018461097e565b979650505050505050565b7f43616c6c6572206973206e6f7420746865206f776e65720000000000000000005f82015250565b5f610d13601783610b9a565b9150610d1e82610cdf565b602082019050919050565b5f6020820190508181035f830152610d4081610d07565b9050919050565b5f819050919050565b610d61610d5c82610a1a565b610d47565b82525050565b5f8160601b9050919050565b5f610d7d82610d67565b9050919050565b5f610d8e82610d73565b9050919050565b610da6610da18261096d565b610d84565b82525050565b5f610db78287610d50565b602082019150610dc78286610d50565b602082019150610dd78285610d95565b601482019150610de78284610d50565b60208201915081905095945050505050565b7f4469726563746f72792063616e6e6f74206265207a65726f20616464726573735f82015250565b5f610e2d602083610b9a565b9150610e3882610df9565b602082019050919050565b5f6020820190508181035f830152610e5a81610e21565b9050919050565b7f4469726563746f7279206d757374206265206120636f6e7472616374000000005f82015250565b5f610e95601c83610b9a565b9150610ea082610e61565b602082019050919050565b5f6020820190508181035f830152610ec281610e89565b9050919050565b7f4469726563746f7279206164647265737320646f6573206e6f7420696d706c655f8201527f6d656e74206f776e657228290000000000000000000000000000000000000000602082015250565b5f610f23602c83610b9a565b9150610f2e82610ec9565b604082019050919050565b5f6020820190508181035f830152610f5081610f17565b9050919050565b5f604082019050610f6a5f830185610c4f565b610f776020830184610c4f565b939250505056fea2646970667358221220d4296ff354e3a2c190f376c12bbefe9d3f59239c0899ef4d26af17af3bcce99764736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27262618 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x658A847A EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x78F6C7C4 EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0xBA4C7BE1 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST PUSH2 0x111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x98D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH2 0x1B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x98D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x98D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10A SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x27262618 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0xBF0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x186 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x1EE PUSH2 0x1E1 PUSH2 0x422 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x4CB JUMP JUMPDEST PUSH2 0x4FE JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6EBD362C DUP8 DUP8 DUP8 DUP8 DUP8 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x253 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC8A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x385 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0xC24 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x416 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40D SWAP1 PUSH2 0xD29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41F DUP2 PUSH2 0x512 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x461 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6574662D746F6B656E2D696D706C000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x111 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8020A5C700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 TIMESTAMP PREVRANDAO CALLER GAS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4E3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x50A DUP4 DUP4 PUSH0 PUSH2 0x6C3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x577 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT PUSH2 0x5D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D0 SWAP1 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x641 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63E SWAP2 SWAP1 PUSH2 0xC24 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x680 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x677 SWAP1 PUSH2 0xF39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x70B JUMPI SELFBALANCE DUP3 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x702 SWAP3 SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP5 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP5 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE DUP3 PUSH1 0x37 PUSH1 0x9 DUP5 CREATE2 SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06EBF3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x819 DUP3 PUSH2 0x7D3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x838 JUMPI PUSH2 0x837 PUSH2 0x7E3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x84A PUSH2 0x7BA JUMP JUMPDEST SWAP1 POP PUSH2 0x856 DUP3 DUP3 PUSH2 0x810 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x875 JUMPI PUSH2 0x874 PUSH2 0x7E3 JUMP JUMPDEST JUMPDEST PUSH2 0x87E DUP3 PUSH2 0x7D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8AB PUSH2 0x8A6 DUP5 PUSH2 0x85B JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x8C7 JUMPI PUSH2 0x8C6 PUSH2 0x7CF JUMP JUMPDEST JUMPDEST PUSH2 0x8D2 DUP5 DUP3 DUP6 PUSH2 0x88B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8EE JUMPI PUSH2 0x8ED PUSH2 0x7CB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8FE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x899 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x91C JUMPI PUSH2 0x91B PUSH2 0x7C3 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x939 JUMPI PUSH2 0x938 PUSH2 0x7C7 JUMP JUMPDEST JUMPDEST PUSH2 0x945 DUP5 DUP3 DUP6 ADD PUSH2 0x8DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x977 DUP3 PUSH2 0x94E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x987 DUP2 PUSH2 0x96D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9A0 PUSH0 DUP4 ADD DUP5 PUSH2 0x97E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9C9 PUSH2 0x9C4 PUSH2 0x9BF DUP5 PUSH2 0x94E JUMP JUMPDEST PUSH2 0x9A6 JUMP JUMPDEST PUSH2 0x94E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9DA DUP3 PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9EB DUP3 PUSH2 0x9D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9FB DUP2 PUSH2 0x9E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA14 PUSH0 DUP4 ADD DUP5 PUSH2 0x9F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA2C DUP2 PUSH2 0xA1A JUMP JUMPDEST DUP2 EQ PUSH2 0xA36 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA47 DUP2 PUSH2 0xA23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xA6A JUMPI PUSH2 0xA69 PUSH2 0x7CB JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA87 JUMPI PUSH2 0xA86 PUSH2 0xA4D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xAA3 JUMPI PUSH2 0xAA2 PUSH2 0xA51 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xAC3 JUMPI PUSH2 0xAC2 PUSH2 0x7C3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAD0 DUP9 DUP3 DUP10 ADD PUSH2 0xA39 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAF1 JUMPI PUSH2 0xAF0 PUSH2 0x7C7 JUMP JUMPDEST JUMPDEST PUSH2 0xAFD DUP9 DUP3 DUP10 ADD PUSH2 0xA55 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB20 JUMPI PUSH2 0xB1F PUSH2 0x7C7 JUMP JUMPDEST JUMPDEST PUSH2 0xB2C DUP9 DUP3 DUP10 ADD PUSH2 0xA55 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0xB44 DUP2 PUSH2 0x96D JUMP JUMPDEST DUP2 EQ PUSH2 0xB4E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB5F DUP2 PUSH2 0xB3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB7A JUMPI PUSH2 0xB79 PUSH2 0x7C3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB87 DUP5 DUP3 DUP6 ADD PUSH2 0xB51 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBC2 DUP3 PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xBCC DUP2 DUP6 PUSH2 0xB9A JUMP JUMPDEST SWAP4 POP PUSH2 0xBDC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xBAA JUMP JUMPDEST PUSH2 0xBE5 DUP2 PUSH2 0x7D3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC08 DUP2 DUP5 PUSH2 0xBB8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC1E DUP2 PUSH2 0xB3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC39 JUMPI PUSH2 0xC38 PUSH2 0x7C3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC46 DUP5 DUP3 DUP6 ADD PUSH2 0xC10 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC58 DUP2 PUSH2 0xA1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC69 DUP4 DUP6 PUSH2 0xB9A JUMP JUMPDEST SWAP4 POP PUSH2 0xC76 DUP4 DUP6 DUP5 PUSH2 0x88B JUMP JUMPDEST PUSH2 0xC7F DUP4 PUSH2 0x7D3 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xC9D PUSH0 DUP4 ADD DUP10 PUSH2 0xC4F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xCB0 DUP2 DUP8 DUP10 PUSH2 0xC5E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0xCC5 DUP2 DUP6 DUP8 PUSH2 0xC5E JUMP JUMPDEST SWAP1 POP PUSH2 0xCD4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x97E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420746865206F776E6572000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD13 PUSH1 0x17 DUP4 PUSH2 0xB9A JUMP JUMPDEST SWAP2 POP PUSH2 0xD1E DUP3 PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD40 DUP2 PUSH2 0xD07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD61 PUSH2 0xD5C DUP3 PUSH2 0xA1A JUMP JUMPDEST PUSH2 0xD47 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD7D DUP3 PUSH2 0xD67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD8E DUP3 PUSH2 0xD73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDA6 PUSH2 0xDA1 DUP3 PUSH2 0x96D JUMP JUMPDEST PUSH2 0xD84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDB7 DUP3 DUP8 PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xDC7 DUP3 DUP7 PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xDD7 DUP3 DUP6 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xDE7 DUP3 DUP5 PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4469726563746F72792063616E6E6F74206265207A65726F2061646472657373 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE2D PUSH1 0x20 DUP4 PUSH2 0xB9A JUMP JUMPDEST SWAP2 POP PUSH2 0xE38 DUP3 PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE5A DUP2 PUSH2 0xE21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206D757374206265206120636F6E747261637400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE95 PUSH1 0x1C DUP4 PUSH2 0xB9A JUMP JUMPDEST SWAP2 POP PUSH2 0xEA0 DUP3 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEC2 DUP2 PUSH2 0xE89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469726563746F7279206164647265737320646F6573206E6F7420696D706C65 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D656E74206F776E657228290000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF23 PUSH1 0x2C DUP4 PUSH2 0xB9A JUMP JUMPDEST SWAP2 POP PUSH2 0xF2E DUP3 PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF50 DUP2 PUSH2 0xF17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF6A PUSH0 DUP4 ADD DUP6 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0xF77 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC4F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0x29 PUSH16 0xF354E3A2C190F376C12BBEFE9D3F5923 SWAP13 ADDMOD SWAP10 0xEF 0x4D 0x26 0xAF OR 0xAF EXTCODESIZE 0xCC 0xE9 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "868:648:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1272:136:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;336:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1091:422:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1178:88:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;470:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1272:136;1341:7;1367:9;;;;;;;;;;;:28;;;1396:4;1367:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1360:41;;1272:136;;;:::o;336:27::-;;;;;;;;;;;;;:::o;1091:422:5:-;1194:13;1319:64;1345:22;:20;:22::i;:::-;1369:13;:11;:13::i;:::-;1319:25;:64::i;:::-;1311:72;;1448:5;1438:27;;;1466:5;1473:4;;1479:6;;1495:9;;;;;;;;;;;1438:68;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1091:422;;;;;;;:::o;1178:88:3:-;1216:7;1242:9;;;;;;;;;;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1235:24;;1178:88;:::o;470:113::-;1109:9;;;;;;;;;;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1095:31;;:10;:31;;;1087:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;551:25:::1;565:10;551:13;:25::i;:::-;470:113:::0;:::o;592:197:5:-;647:17;688:36;;;;;;;;;;;;;;;;;;:18;:36::i;:::-;676:48;;759:1;738:23;;:9;:23;;;734:48;;770:12;;;;;;;;;;;;;;734:48;592:197;:::o;256:306::-;302:7;385:15;418:16;494:10;522:9;351:194;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;328:227;;;;;;321:234;;256:306;:::o;3875:169:0:-;3959:16;3994:43;4013:14;4029:4;4035:1;3994:18;:43::i;:::-;3987:50;;3875:169;;;;:::o;589:461:3:-;681:1;659:24;;:10;:24;;;651:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;763:1;738:10;:22;;;:26;730:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;861:10;850:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;846:198;;979:54;;;;;;;;;;:::i;:::-;;;;;;;;846:198;936:10;913:9;;:34;;;;;;;;;;;;;;;;;;881:77;589:461;:::o;4805:974:0:-;4934:16;4990:5;4966:21;:29;4962:123;;;5045:21;5068:5;5018:56;;;;;;;;;;;;:::i;:::-;;;;;;;;4962:123;5371:48;5353:14;5347:4;5343:25;5337:4;5333:36;5330:90;5324:4;5317:104;5578:32;5561:14;5555:4;5551:25;5548:63;5542:4;5535:77;5664:4;5658;5652;5645:5;5637:32;5625:44;;5712:1;5692:22;;:8;:22;;;5688:85;;5737:25;;;;;;;;;;;;;;5688:85;4805:974;;;;;:::o;7:75:6:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:148::-;1708:6;1703:3;1698;1685:30;1749:1;1740:6;1735:3;1731:16;1724:27;1610:148;;;:::o;1764:425::-;1842:5;1867:66;1883:49;1925:6;1883:49;:::i;:::-;1867:66;:::i;:::-;1858:75;;1956:6;1949:5;1942:21;1994:4;1987:5;1983:16;2032:3;2023:6;2018:3;2014:16;2011:25;2008:112;;;2039:79;;:::i;:::-;2008:112;2129:54;2176:6;2171:3;2166;2129:54;:::i;:::-;1848:341;1764:425;;;;;:::o;2209:340::-;2265:5;2314:3;2307:4;2299:6;2295:17;2291:27;2281:122;;2322:79;;:::i;:::-;2281:122;2439:6;2426:20;2464:79;2539:3;2531:6;2524:4;2516:6;2512:17;2464:79;:::i;:::-;2455:88;;2271:278;2209:340;;;;:::o;2555:509::-;2624:6;2673:2;2661:9;2652:7;2648:23;2644:32;2641:119;;;2679:79;;:::i;:::-;2641:119;2827:1;2816:9;2812:17;2799:31;2857:18;2849:6;2846:30;2843:117;;;2879:79;;:::i;:::-;2843:117;2984:63;3039:7;3030:6;3019:9;3015:22;2984:63;:::i;:::-;2974:73;;2770:287;2555:509;;;;:::o;3070:126::-;3107:7;3147:42;3140:5;3136:54;3125:65;;3070:126;;;:::o;3202:96::-;3239:7;3268:24;3286:5;3268:24;:::i;:::-;3257:35;;3202:96;;;:::o;3304:118::-;3391:24;3409:5;3391:24;:::i;:::-;3386:3;3379:37;3304:118;;:::o;3428:222::-;3521:4;3559:2;3548:9;3544:18;3536:26;;3572:71;3640:1;3629:9;3625:17;3616:6;3572:71;:::i;:::-;3428:222;;;;:::o;3656:60::-;3684:3;3705:5;3698:12;;3656:60;;;:::o;3722:142::-;3772:9;3805:53;3823:34;3832:24;3850:5;3832:24;:::i;:::-;3823:34;:::i;:::-;3805:53;:::i;:::-;3792:66;;3722:142;;;:::o;3870:126::-;3920:9;3953:37;3984:5;3953:37;:::i;:::-;3940:50;;3870:126;;;:::o;4002:144::-;4070:9;4103:37;4134:5;4103:37;:::i;:::-;4090:50;;4002:144;;;:::o;4152:167::-;4257:55;4306:5;4257:55;:::i;:::-;4252:3;4245:68;4152:167;;:::o;4325:258::-;4436:4;4474:2;4463:9;4459:18;4451:26;;4487:89;4573:1;4562:9;4558:17;4549:6;4487:89;:::i;:::-;4325:258;;;;:::o;4589:77::-;4626:7;4655:5;4644:16;;4589:77;;;:::o;4672:122::-;4745:24;4763:5;4745:24;:::i;:::-;4738:5;4735:35;4725:63;;4784:1;4781;4774:12;4725:63;4672:122;:::o;4800:139::-;4846:5;4884:6;4871:20;4862:29;;4900:33;4927:5;4900:33;:::i;:::-;4800:139;;;;:::o;4945:117::-;5054:1;5051;5044:12;5068:117;5177:1;5174;5167:12;5205:553;5263:8;5273:6;5323:3;5316:4;5308:6;5304:17;5300:27;5290:122;;5331:79;;:::i;:::-;5290:122;5444:6;5431:20;5421:30;;5474:18;5466:6;5463:30;5460:117;;;5496:79;;:::i;:::-;5460:117;5610:4;5602:6;5598:17;5586:29;;5664:3;5656:4;5648:6;5644:17;5634:8;5630:32;5627:41;5624:128;;;5671:79;;:::i;:::-;5624:128;5205:553;;;;;:::o;5764:1019::-;5865:6;5873;5881;5889;5897;5946:2;5934:9;5925:7;5921:23;5917:32;5914:119;;;5952:79;;:::i;:::-;5914:119;6072:1;6097:53;6142:7;6133:6;6122:9;6118:22;6097:53;:::i;:::-;6087:63;;6043:117;6227:2;6216:9;6212:18;6199:32;6258:18;6250:6;6247:30;6244:117;;;6280:79;;:::i;:::-;6244:117;6393:65;6450:7;6441:6;6430:9;6426:22;6393:65;:::i;:::-;6375:83;;;;6170:298;6535:2;6524:9;6520:18;6507:32;6566:18;6558:6;6555:30;6552:117;;;6588:79;;:::i;:::-;6552:117;6701:65;6758:7;6749:6;6738:9;6734:22;6701:65;:::i;:::-;6683:83;;;;6478:298;5764:1019;;;;;;;;:::o;6789:122::-;6862:24;6880:5;6862:24;:::i;:::-;6855:5;6852:35;6842:63;;6901:1;6898;6891:12;6842:63;6789:122;:::o;6917:139::-;6963:5;7001:6;6988:20;6979:29;;7017:33;7044:5;7017:33;:::i;:::-;6917:139;;;;:::o;7062:329::-;7121:6;7170:2;7158:9;7149:7;7145:23;7141:32;7138:119;;;7176:79;;:::i;:::-;7138:119;7296:1;7321:53;7366:7;7357:6;7346:9;7342:22;7321:53;:::i;:::-;7311:63;;7267:117;7062:329;;;;:::o;7397:99::-;7449:6;7483:5;7477:12;7467:22;;7397:99;;;:::o;7502:169::-;7586:11;7620:6;7615:3;7608:19;7660:4;7655:3;7651:14;7636:29;;7502:169;;;;:::o;7677:139::-;7766:6;7761:3;7756;7750:23;7807:1;7798:6;7793:3;7789:16;7782:27;7677:139;;;:::o;7822:377::-;7910:3;7938:39;7971:5;7938:39;:::i;:::-;7993:71;8057:6;8052:3;7993:71;:::i;:::-;7986:78;;8073:65;8131:6;8126:3;8119:4;8112:5;8108:16;8073:65;:::i;:::-;8163:29;8185:6;8163:29;:::i;:::-;8158:3;8154:39;8147:46;;7914:285;7822:377;;;;:::o;8205:313::-;8318:4;8356:2;8345:9;8341:18;8333:26;;8405:9;8399:4;8395:20;8391:1;8380:9;8376:17;8369:47;8433:78;8506:4;8497:6;8433:78;:::i;:::-;8425:86;;8205:313;;;;:::o;8524:143::-;8581:5;8612:6;8606:13;8597:22;;8628:33;8655:5;8628:33;:::i;:::-;8524:143;;;;:::o;8673:351::-;8743:6;8792:2;8780:9;8771:7;8767:23;8763:32;8760:119;;;8798:79;;:::i;:::-;8760:119;8918:1;8943:64;8999:7;8990:6;8979:9;8975:22;8943:64;:::i;:::-;8933:74;;8889:128;8673:351;;;;:::o;9030:118::-;9117:24;9135:5;9117:24;:::i;:::-;9112:3;9105:37;9030:118;;:::o;9178:317::-;9276:3;9297:71;9361:6;9356:3;9297:71;:::i;:::-;9290:78;;9378:56;9427:6;9422:3;9415:5;9378:56;:::i;:::-;9459:29;9481:6;9459:29;:::i;:::-;9454:3;9450:39;9443:46;;9178:317;;;;;:::o;9501:775::-;9738:4;9776:3;9765:9;9761:19;9753:27;;9790:71;9858:1;9847:9;9843:17;9834:6;9790:71;:::i;:::-;9908:9;9902:4;9898:20;9893:2;9882:9;9878:18;9871:48;9936:88;10019:4;10010:6;10002;9936:88;:::i;:::-;9928:96;;10071:9;10065:4;10061:20;10056:2;10045:9;10041:18;10034:48;10099:88;10182:4;10173:6;10165;10099:88;:::i;:::-;10091:96;;10197:72;10265:2;10254:9;10250:18;10241:6;10197:72;:::i;:::-;9501:775;;;;;;;;;:::o;10282:173::-;10422:25;10418:1;10410:6;10406:14;10399:49;10282:173;:::o;10461:366::-;10603:3;10624:67;10688:2;10683:3;10624:67;:::i;:::-;10617:74;;10700:93;10789:3;10700:93;:::i;:::-;10818:2;10813:3;10809:12;10802:19;;10461:366;;;:::o;10833:419::-;10999:4;11037:2;11026:9;11022:18;11014:26;;11086:9;11080:4;11076:20;11072:1;11061:9;11057:17;11050:47;11114:131;11240:4;11114:131;:::i;:::-;11106:139;;10833:419;;;:::o;11258:79::-;11297:7;11326:5;11315:16;;11258:79;;;:::o;11343:157::-;11448:45;11468:24;11486:5;11468:24;:::i;:::-;11448:45;:::i;:::-;11443:3;11436:58;11343:157;;:::o;11506:94::-;11539:8;11587:5;11583:2;11579:14;11558:35;;11506:94;;;:::o;11606:::-;11645:7;11674:20;11688:5;11674:20;:::i;:::-;11663:31;;11606:94;;;:::o;11706:100::-;11745:7;11774:26;11794:5;11774:26;:::i;:::-;11763:37;;11706:100;;;:::o;11812:157::-;11917:45;11937:24;11955:5;11937:24;:::i;:::-;11917:45;:::i;:::-;11912:3;11905:58;11812:157;;:::o;11975:679::-;12171:3;12186:75;12257:3;12248:6;12186:75;:::i;:::-;12286:2;12281:3;12277:12;12270:19;;12299:75;12370:3;12361:6;12299:75;:::i;:::-;12399:2;12394:3;12390:12;12383:19;;12412:75;12483:3;12474:6;12412:75;:::i;:::-;12512:2;12507:3;12503:12;12496:19;;12525:75;12596:3;12587:6;12525:75;:::i;:::-;12625:2;12620:3;12616:12;12609:19;;12645:3;12638:10;;11975:679;;;;;;;:::o;12660:182::-;12800:34;12796:1;12788:6;12784:14;12777:58;12660:182;:::o;12848:366::-;12990:3;13011:67;13075:2;13070:3;13011:67;:::i;:::-;13004:74;;13087:93;13176:3;13087:93;:::i;:::-;13205:2;13200:3;13196:12;13189:19;;12848:366;;;:::o;13220:419::-;13386:4;13424:2;13413:9;13409:18;13401:26;;13473:9;13467:4;13463:20;13459:1;13448:9;13444:17;13437:47;13501:131;13627:4;13501:131;:::i;:::-;13493:139;;13220:419;;;:::o;13645:178::-;13785:30;13781:1;13773:6;13769:14;13762:54;13645:178;:::o;13829:366::-;13971:3;13992:67;14056:2;14051:3;13992:67;:::i;:::-;13985:74;;14068:93;14157:3;14068:93;:::i;:::-;14186:2;14181:3;14177:12;14170:19;;13829:366;;;:::o;14201:419::-;14367:4;14405:2;14394:9;14390:18;14382:26;;14454:9;14448:4;14444:20;14440:1;14429:9;14425:17;14418:47;14482:131;14608:4;14482:131;:::i;:::-;14474:139;;14201:419;;;:::o;14626:231::-;14766:34;14762:1;14754:6;14750:14;14743:58;14835:14;14830:2;14822:6;14818:15;14811:39;14626:231;:::o;14863:366::-;15005:3;15026:67;15090:2;15085:3;15026:67;:::i;:::-;15019:74;;15102:93;15191:3;15102:93;:::i;:::-;15220:2;15215:3;15211:12;15204:19;;14863:366;;;:::o;15235:419::-;15401:4;15439:2;15428:9;15424:18;15416:26;;15488:9;15482:4;15478:20;15474:1;15463:9;15459:17;15452:47;15516:131;15642:4;15516:131;:::i;:::-;15508:139;;15235:419;;;:::o;15660:332::-;15781:4;15819:2;15808:9;15804:18;15796:26;;15832:71;15900:1;15889:9;15885:17;15876:6;15832:71;:::i;:::-;15913:72;15981:2;15970:9;15966:18;15957:6;15913:72;:::i;:::-;15660:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "804000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Directory()": "infinite",
								"changeDirectoryAddress(address)": "infinite",
								"deployEtfToken(uint256,string,string)": "infinite",
								"fetchFromDirectory(string)": "infinite",
								"owner()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 868,
									"end": 1516,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 868,
									"end": 1516,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 868,
									"end": 1516,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 955,
									"end": 1013,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 999,
									"end": 1009,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 412,
									"end": 437,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 426,
									"end": 436,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 412,
									"end": 425,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 412,
									"end": 425,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 412,
									"end": 425,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 412,
									"end": 437,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 412,
									"end": 437,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 412,
									"end": 437,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 412,
									"end": 437,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 412,
									"end": 437,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 370,
									"end": 464,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 955,
									"end": 1013,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 868,
									"end": 1516,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 868,
									"end": 1516,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 589,
									"end": 1050,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 589,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 681,
									"end": 682,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 659,
									"end": 683,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 659,
									"end": 683,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 659,
									"end": 669,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 659,
									"end": 683,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 659,
									"end": 683,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 659,
									"end": 683,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 651,
									"end": 720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 651,
									"end": 720,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 651,
									"end": 720,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 763,
									"end": 764,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 738,
									"end": 748,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 738,
									"end": 760,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 738,
									"end": 760,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 738,
									"end": 760,
									"name": "EXTCODESIZE",
									"source": 3
								},
								{
									"begin": 738,
									"end": 764,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 730,
									"end": 797,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 730,
									"end": 797,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 730,
									"end": 797,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 861,
									"end": 871,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 850,
									"end": 878,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 850,
									"end": 878,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 850,
									"end": 878,
									"name": "PUSH",
									"source": 3,
									"value": "8DA5CB5B"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "STATICCALL",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 850,
									"end": 880,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 850,
									"end": 880,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 850,
									"end": 880,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 846,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 846,
									"end": 1044,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 979,
									"end": 1033,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 979,
									"end": 1033,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 846,
									"end": 1044,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 846,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 936,
									"end": 946,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 913,
									"end": 922,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 913,
									"end": 922,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 913,
									"end": 947,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 913,
									"end": 947,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 913,
									"end": 947,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 913,
									"end": 947,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 913,
									"end": 947,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 881,
									"end": 958,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 589,
									"end": 1050,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 589,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1286,
									"end": 1297,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1320,
									"end": 1326,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1315,
									"end": 1318,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1308,
									"end": 1327,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1360,
									"end": 1364,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1355,
									"end": 1358,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1351,
									"end": 1365,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1336,
									"end": 1365,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1336,
									"end": 1365,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1559,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1377,
									"end": 1559,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1517,
									"end": 1551,
									"name": "PUSH",
									"source": 6,
									"value": "4469726563746F72792063616E6E6F74206265207A65726F2061646472657373"
								},
								{
									"begin": 1513,
									"end": 1514,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 1511,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1501,
									"end": 1515,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1494,
									"end": 1552,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1559,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1559,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1565,
									"end": 1931,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1565,
									"end": 1931,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1707,
									"end": 1710,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1728,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1792,
									"end": 1794,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1787,
									"end": 1790,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1728,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1728,
									"end": 1795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1728,
									"end": 1795,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1728,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1721,
									"end": 1795,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1721,
									"end": 1795,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1804,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1893,
									"end": 1896,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1804,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1804,
									"end": 1897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1804,
									"end": 1897,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1804,
									"end": 1897,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1924,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1917,
									"end": 1920,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1913,
									"end": 1925,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1906,
									"end": 1925,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1906,
									"end": 1925,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1565,
									"end": 1931,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1565,
									"end": 1931,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1565,
									"end": 1931,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1565,
									"end": 1931,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1937,
									"end": 2356,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1937,
									"end": 2356,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2141,
									"end": 2143,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2130,
									"end": 2139,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2126,
									"end": 2144,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2118,
									"end": 2144,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2118,
									"end": 2144,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2190,
									"end": 2199,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2184,
									"end": 2188,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2180,
									"end": 2200,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2176,
									"end": 2177,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2165,
									"end": 2174,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2161,
									"end": 2178,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2154,
									"end": 2201,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2218,
									"end": 2349,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2344,
									"end": 2348,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2218,
									"end": 2349,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 2218,
									"end": 2349,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2218,
									"end": 2349,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2218,
									"end": 2349,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2210,
									"end": 2349,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2210,
									"end": 2349,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1937,
									"end": 2356,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1937,
									"end": 2356,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1937,
									"end": 2356,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1937,
									"end": 2356,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2362,
									"end": 2540,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 2362,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2502,
									"end": 2532,
									"name": "PUSH",
									"source": 6,
									"value": "4469726563746F7279206D757374206265206120636F6E747261637400000000"
								},
								{
									"begin": 2498,
									"end": 2499,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2490,
									"end": 2496,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2486,
									"end": 2500,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2479,
									"end": 2533,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2362,
									"end": 2540,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2362,
									"end": 2540,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2546,
									"end": 2912,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 2546,
									"end": 2912,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2688,
									"end": 2691,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2709,
									"end": 2776,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 2773,
									"end": 2775,
									"name": "PUSH",
									"source": 6,
									"value": "1C"
								},
								{
									"begin": 2768,
									"end": 2771,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2709,
									"end": 2776,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 2709,
									"end": 2776,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2709,
									"end": 2776,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 2709,
									"end": 2776,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2702,
									"end": 2776,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2702,
									"end": 2776,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2785,
									"end": 2878,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2785,
									"end": 2878,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 2785,
									"end": 2878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2785,
									"end": 2878,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 2785,
									"end": 2878,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2903,
									"end": 2905,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2898,
									"end": 2901,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2894,
									"end": 2906,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2887,
									"end": 2906,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2887,
									"end": 2906,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2546,
									"end": 2912,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2546,
									"end": 2912,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2546,
									"end": 2912,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2546,
									"end": 2912,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2918,
									"end": 3337,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 2918,
									"end": 3337,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3084,
									"end": 3088,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3122,
									"end": 3124,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3111,
									"end": 3120,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3107,
									"end": 3125,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3099,
									"end": 3125,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3099,
									"end": 3125,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3171,
									"end": 3180,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3165,
									"end": 3169,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3161,
									"end": 3181,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3157,
									"end": 3158,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3146,
									"end": 3155,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3142,
									"end": 3159,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3135,
									"end": 3182,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 3325,
									"end": 3329,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 3199,
									"end": 3330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3330,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 3199,
									"end": 3330,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3191,
									"end": 3330,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3191,
									"end": 3330,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2918,
									"end": 3337,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2918,
									"end": 3337,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2918,
									"end": 3337,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2918,
									"end": 3337,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3343,
									"end": 3574,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 3343,
									"end": 3574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3483,
									"end": 3517,
									"name": "PUSH",
									"source": 6,
									"value": "4469726563746F7279206164647265737320646F6573206E6F7420696D706C65"
								},
								{
									"begin": 3479,
									"end": 3480,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3471,
									"end": 3477,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3467,
									"end": 3481,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3460,
									"end": 3518,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3552,
									"end": 3566,
									"name": "PUSH",
									"source": 6,
									"value": "6D656E74206F776E657228290000000000000000000000000000000000000000"
								},
								{
									"begin": 3547,
									"end": 3549,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3539,
									"end": 3545,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3535,
									"end": 3550,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3528,
									"end": 3567,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3343,
									"end": 3574,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3343,
									"end": 3574,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3580,
									"end": 3946,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3580,
									"end": 3946,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3722,
									"end": 3725,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3743,
									"end": 3810,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 3807,
									"end": 3809,
									"name": "PUSH",
									"source": 6,
									"value": "2C"
								},
								{
									"begin": 3802,
									"end": 3805,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3743,
									"end": 3810,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 3743,
									"end": 3810,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3743,
									"end": 3810,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 3743,
									"end": 3810,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3736,
									"end": 3810,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3736,
									"end": 3810,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3819,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3908,
									"end": 3911,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3819,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 3819,
									"end": 3912,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3819,
									"end": 3912,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3819,
									"end": 3912,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3937,
									"end": 3939,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3932,
									"end": 3935,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3928,
									"end": 3940,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3921,
									"end": 3940,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3921,
									"end": 3940,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3580,
									"end": 3946,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3580,
									"end": 3946,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3580,
									"end": 3946,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3580,
									"end": 3946,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3952,
									"end": 4371,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 3952,
									"end": 4371,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4118,
									"end": 4122,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4156,
									"end": 4158,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4145,
									"end": 4154,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4141,
									"end": 4159,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4133,
									"end": 4159,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4133,
									"end": 4159,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4205,
									"end": 4214,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4199,
									"end": 4203,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4195,
									"end": 4215,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4191,
									"end": 4192,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4180,
									"end": 4189,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4176,
									"end": 4193,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4169,
									"end": 4216,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4233,
									"end": 4364,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 4359,
									"end": 4363,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4233,
									"end": 4364,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4233,
									"end": 4364,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4233,
									"end": 4364,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 4233,
									"end": 4364,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4225,
									"end": 4364,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4225,
									"end": 4364,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3952,
									"end": 4371,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3952,
									"end": 4371,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3952,
									"end": 4371,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3952,
									"end": 4371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 868,
									"end": 1516,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 868,
									"end": 1516,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 868,
									"end": 1516,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 868,
									"end": 1516,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 868,
									"end": 1516,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 868,
									"end": 1516,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 868,
									"end": 1516,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 868,
									"end": 1516,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 868,
									"end": 1516,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d4296ff354e3a2c190f376c12bbefe9d3f59239c0899ef4d26af17af3bcce99764736f6c634300081e0033",
									".code": [
										{
											"begin": 868,
											"end": 1516,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "PUSH",
											"source": 5,
											"value": "27262618"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "PUSH",
											"source": 5,
											"value": "658A847A"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "PUSH",
											"source": 5,
											"value": "78F6C7C4"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "PUSH",
											"source": 5,
											"value": "BA4C7BE1"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 1516,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1272,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1272,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1272,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 336,
											"end": 363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 336,
											"end": 363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1091,
											"end": 1513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1091,
											"end": 1513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1178,
											"end": 1266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1178,
											"end": 1266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 470,
											"end": 583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 470,
											"end": 583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1348,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1395,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1367,
											"end": 1395,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1395,
											"name": "PUSH",
											"source": 3,
											"value": "27262618"
										},
										{
											"begin": 1396,
											"end": 1400,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1367,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1367,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1401,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 336,
											"end": 363,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 336,
											"end": 363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1207,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1345,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1369,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1369,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1369,
											"end": 1382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1369,
											"end": 1382,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1369,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1319,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1319,
											"end": 1383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1319,
											"end": 1383,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1319,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1311,
											"end": 1383,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1311,
											"end": 1383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1465,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1438,
											"end": 1465,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1465,
											"name": "PUSH",
											"source": 5,
											"value": "6EBD362C"
										},
										{
											"begin": 1466,
											"end": 1471,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1473,
											"end": 1477,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1473,
											"end": 1477,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1479,
											"end": 1485,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1479,
											"end": 1485,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1504,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1495,
											"end": 1504,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1504,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1495,
											"end": 1504,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1438,
											"end": 1506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1506,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1216,
											"end": 1223,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1242,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1242,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 470,
											"end": 583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1109,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1095,
											"end": 1105,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1087,
											"end": 1154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1087,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 551,
											"end": 576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 565,
											"end": 575,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 551,
											"end": 564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 551,
											"end": 576,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 551,
											"end": 576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 551,
											"end": 576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 470,
											"end": 583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 592,
											"end": 789,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 647,
											"end": 664,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 688,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 688,
											"end": 724,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 688,
											"end": 724,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 688,
											"end": 724,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 688,
											"end": 724,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 688,
											"end": 724,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 688,
											"end": 724,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 688,
											"end": 724,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 688,
											"end": 724,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 688,
											"end": 724,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 688,
											"end": 724,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 688,
											"end": 724,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 688,
											"end": 724,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 688,
											"end": 724,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 688,
											"end": 724,
											"name": "PUSH",
											"source": 5,
											"value": "6574662D746F6B656E2D696D706C000000000000000000000000000000000000"
										},
										{
											"begin": 688,
											"end": 724,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 688,
											"end": 724,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 688,
											"end": 724,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 688,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 688,
											"end": 724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 688,
											"end": 724,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 688,
											"end": 724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 676,
											"end": 724,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 676,
											"end": 724,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 759,
											"end": 760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 761,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 738,
											"end": 761,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 738,
											"end": 747,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 738,
											"end": 761,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 738,
											"end": 761,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 738,
											"end": 761,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 734,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 734,
											"end": 782,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 770,
											"end": 782,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 782,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 770,
											"end": 782,
											"name": "PUSH",
											"source": 5,
											"value": "8020A5C700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 770,
											"end": 782,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 770,
											"end": 782,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 770,
											"end": 782,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 770,
											"end": 782,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 770,
											"end": 782,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 782,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 770,
											"end": 782,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 770,
											"end": 782,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 770,
											"end": 782,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 770,
											"end": 782,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 770,
											"end": 782,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 734,
											"end": 782,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 734,
											"end": 782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 592,
											"end": 789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 592,
											"end": 789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 256,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 256,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 302,
											"end": 309,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 400,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 418,
											"end": 434,
											"name": "PREVRANDAO",
											"source": 5
										},
										{
											"begin": 494,
											"end": 504,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 522,
											"end": 531,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 351,
											"end": 545,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 545,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 351,
											"end": 545,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 351,
											"end": 545,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 351,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 351,
											"end": 545,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 351,
											"end": 545,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 351,
											"end": 545,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 351,
											"end": 545,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 351,
											"end": 545,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 351,
											"end": 545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 545,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 351,
											"end": 545,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 545,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 545,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 351,
											"end": 545,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 351,
											"end": 545,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 351,
											"end": 545,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 351,
											"end": 545,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 351,
											"end": 545,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 351,
											"end": 545,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 351,
											"end": 545,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 351,
											"end": 545,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 545,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 545,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 328,
											"end": 555,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 328,
											"end": 555,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 328,
											"end": 555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 328,
											"end": 555,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 328,
											"end": 555,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 328,
											"end": 555,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 321,
											"end": 555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 321,
											"end": 555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 256,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 256,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 4044,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3875,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3994,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4013,
											"end": 4027,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4029,
											"end": 4033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3994,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3994,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4037,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3994,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 4044,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 4044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 4044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 4044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 4044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1050,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 589,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 681,
											"end": 682,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 659,
											"end": 683,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 659,
											"end": 669,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 659,
											"end": 683,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 659,
											"end": 683,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 659,
											"end": 683,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 651,
											"end": 720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 651,
											"end": 720,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 651,
											"end": 720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 763,
											"end": 764,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 738,
											"end": 760,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 738,
											"end": 760,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 738,
											"end": 764,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 730,
											"end": 797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 730,
											"end": 797,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 730,
											"end": 797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 861,
											"end": 871,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 850,
											"end": 878,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 850,
											"end": 878,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 850,
											"end": 878,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 850,
											"end": 880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 850,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 850,
											"end": 880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 846,
											"end": 1044,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 979,
											"end": 1033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1033,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1044,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 846,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 936,
											"end": 946,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 913,
											"end": 922,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 922,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 947,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 913,
											"end": 947,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 913,
											"end": 947,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 913,
											"end": 947,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 881,
											"end": 958,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 1050,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 1050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4805,
											"end": 5779,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4805,
											"end": 5779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4934,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4990,
											"end": 4995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4966,
											"end": 4987,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 4966,
											"end": 4995,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5085,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4962,
											"end": 5085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5045,
											"end": 5066,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 5068,
											"end": 5073,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "PUSH",
											"source": 0,
											"value": "CF47918100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5018,
											"end": 5074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5018,
											"end": 5074,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5085,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4962,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5371,
											"end": 5419,
											"name": "PUSH",
											"source": 0,
											"value": "3D602D80600A3D3981F3363D3D373D3D3D363D73000000"
										},
										{
											"begin": 5353,
											"end": 5367,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5347,
											"end": 5351,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5343,
											"end": 5368,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5337,
											"end": 5341,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 5333,
											"end": 5369,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 5330,
											"end": 5420,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5317,
											"end": 5421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5578,
											"end": 5610,
											"name": "PUSH",
											"source": 0,
											"value": "5AF43D82803E903D91602B57FD5BF3"
										},
										{
											"begin": 5561,
											"end": 5575,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5555,
											"end": 5559,
											"name": "PUSH",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5551,
											"end": 5576,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5548,
											"end": 5611,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5535,
											"end": 5612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5668,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5658,
											"end": 5662,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5652,
											"end": 5656,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5645,
											"end": 5650,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5637,
											"end": 5669,
											"name": "CREATE2",
											"source": 0
										},
										{
											"begin": 5625,
											"end": 5669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5625,
											"end": 5669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5692,
											"end": 5714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5692,
											"end": 5700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5692,
											"end": 5714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5692,
											"end": 5714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5692,
											"end": 5714,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5688,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5688,
											"end": 5773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "PUSH",
											"source": 0,
											"value": "B06EBF3D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5688,
											"end": 5773,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5688,
											"end": 5773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 5779,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 5779,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 5779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 5779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 5779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 5779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 580,
											"end": 682,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 580,
											"end": 682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 621,
											"end": 627,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 674,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 668,
											"end": 675,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 663,
											"end": 665,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 652,
											"end": 666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 648,
											"end": 676,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 638,
											"end": 676,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 638,
											"end": 676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 580,
											"end": 682,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 580,
											"end": 682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 688,
											"end": 868,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 688,
											"end": 868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 736,
											"end": 813,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 733,
											"end": 734,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 814,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 833,
											"end": 837,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 823,
											"end": 838,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 857,
											"end": 861,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 862,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 979,
											"end": 983,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 957,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 957,
											"end": 984,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 957,
											"end": 984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 949,
											"end": 955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 945,
											"end": 985,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1049,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1070,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1033,
											"end": 1095,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1098,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1138,
											"end": 1148,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1149,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 874,
											"end": 1155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1195,
											"end": 1201,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1222,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1279,
											"end": 1283,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1277,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1251,
											"end": 1284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1358,
											"end": 1362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1466,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1446,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1467,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1470,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1530,
											"end": 1536,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1508,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1596,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1582,
											"end": 1597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1706,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1701,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 1749,
											"end": 1750,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1740,
											"end": 1746,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1738,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1751,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1610,
											"end": 1758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1847,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1925,
											"end": 1931,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1883,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1867,
											"end": 1933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1933,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1933,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1956,
											"end": 1962,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1954,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 1998,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 1992,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 1999,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2032,
											"end": 2035,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2023,
											"end": 2029,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2018,
											"end": 2021,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2036,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2039,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2176,
											"end": 2182,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2169,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2129,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 2189,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 2189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2270,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2317,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2311,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2312,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2318,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2322,
											"end": 2401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2439,
											"end": 2445,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2446,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2539,
											"end": 2542,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2524,
											"end": 2528,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2512,
											"end": 2529,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2464,
											"end": 2543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2455,
											"end": 2543,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2455,
											"end": 2543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2630,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2661,
											"end": 2670,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2659,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2676,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2679,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2827,
											"end": 2828,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2825,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2829,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2830,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2875,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2876,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2879,
											"end": 2958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3039,
											"end": 3046,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3030,
											"end": 3036,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2984,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3047,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 3057,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2555,
											"end": 3064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3070,
											"end": 3196,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3070,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3107,
											"end": 3114,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3189,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3140,
											"end": 3145,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3190,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3190,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3070,
											"end": 3196,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3070,
											"end": 3196,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3070,
											"end": 3196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3070,
											"end": 3196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3298,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3202,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3239,
											"end": 3246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3286,
											"end": 3291,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3268,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3268,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3268,
											"end": 3292,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3268,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3292,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3298,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3298,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3422,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3304,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3391,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3391,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3391,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3391,
											"end": 3415,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3391,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3386,
											"end": 3389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3379,
											"end": 3416,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3422,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3422,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3650,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3428,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3521,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3561,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3548,
											"end": 3557,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3562,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3640,
											"end": 3641,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3629,
											"end": 3638,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3642,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3622,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3572,
											"end": 3643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 3643,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3572,
											"end": 3643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3650,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3650,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3716,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3656,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3687,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3710,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3716,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3716,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3716,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3864,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3722,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3781,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3805,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3823,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3832,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3850,
											"end": 3855,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3832,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3832,
											"end": 3856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3832,
											"end": 3856,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3832,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3823,
											"end": 3857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3857,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3823,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3805,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3805,
											"end": 3858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3805,
											"end": 3858,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3805,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3792,
											"end": 3858,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3792,
											"end": 3858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3864,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3996,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3870,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3929,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3984,
											"end": 3989,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3953,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3953,
											"end": 3990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3953,
											"end": 3990,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3953,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 3990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 3990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4002,
											"end": 4146,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 4002,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4070,
											"end": 4079,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4103,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4103,
											"end": 4140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4103,
											"end": 4140,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4103,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4090,
											"end": 4140,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4090,
											"end": 4140,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4002,
											"end": 4146,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4002,
											"end": 4146,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4002,
											"end": 4146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4002,
											"end": 4146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4152,
											"end": 4319,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 4152,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4257,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4306,
											"end": 4311,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4257,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 4257,
											"end": 4312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4257,
											"end": 4312,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4257,
											"end": 4312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4252,
											"end": 4255,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4245,
											"end": 4313,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4152,
											"end": 4319,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4152,
											"end": 4319,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4152,
											"end": 4319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4325,
											"end": 4583,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 4325,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4440,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4474,
											"end": 4476,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4463,
											"end": 4472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4451,
											"end": 4477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4451,
											"end": 4477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4573,
											"end": 4574,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4571,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4558,
											"end": 4575,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4549,
											"end": 4555,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 4487,
											"end": 4576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4576,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4487,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4325,
											"end": 4583,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4325,
											"end": 4583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4325,
											"end": 4583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4325,
											"end": 4583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4325,
											"end": 4583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4589,
											"end": 4666,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4589,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4626,
											"end": 4633,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4655,
											"end": 4660,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4660,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4660,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4589,
											"end": 4666,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4589,
											"end": 4666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4589,
											"end": 4666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4589,
											"end": 4666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4672,
											"end": 4794,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4672,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4763,
											"end": 4768,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4745,
											"end": 4769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4769,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4745,
											"end": 4769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4738,
											"end": 4743,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4770,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4725,
											"end": 4788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4725,
											"end": 4788,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4784,
											"end": 4785,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4774,
											"end": 4786,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4725,
											"end": 4788,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4725,
											"end": 4788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4672,
											"end": 4794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4672,
											"end": 4794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4939,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4800,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4846,
											"end": 4851,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4884,
											"end": 4890,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 4891,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4862,
											"end": 4891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4862,
											"end": 4891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4900,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4927,
											"end": 4932,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4900,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4900,
											"end": 4933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4900,
											"end": 4933,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4900,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4939,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4939,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4945,
											"end": 5062,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4945,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5044,
											"end": 5056,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5068,
											"end": 5185,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5068,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5174,
											"end": 5175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5167,
											"end": 5179,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5758,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 5205,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5263,
											"end": 5271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5273,
											"end": 5279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5323,
											"end": 5326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5316,
											"end": 5320,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5308,
											"end": 5314,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5300,
											"end": 5327,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5290,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5290,
											"end": 5412,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5331,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 5331,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 5331,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5331,
											"end": 5410,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 5331,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5290,
											"end": 5412,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5290,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5450,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5431,
											"end": 5451,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5466,
											"end": 5472,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5463,
											"end": 5493,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5577,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 5460,
											"end": 5577,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5496,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 5496,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 5496,
											"end": 5575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5496,
											"end": 5575,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 5496,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5577,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 5460,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5614,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5602,
											"end": 5608,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5615,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5586,
											"end": 5615,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5586,
											"end": 5615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5664,
											"end": 5667,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5656,
											"end": 5660,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5648,
											"end": 5654,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5642,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5630,
											"end": 5662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5627,
											"end": 5668,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5624,
											"end": 5752,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5624,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 5624,
											"end": 5752,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5671,
											"end": 5750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5624,
											"end": 5752,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 5624,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5758,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5758,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5758,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 6783,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5764,
											"end": 6783,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5865,
											"end": 5871,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5881,
											"end": 5887,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5889,
											"end": 5895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5897,
											"end": 5903,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5946,
											"end": 5948,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5934,
											"end": 5943,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5921,
											"end": 5944,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5917,
											"end": 5949,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 6033,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 6033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 5914,
											"end": 6033,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5952,
											"end": 6031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 5952,
											"end": 6031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 5952,
											"end": 6031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5952,
											"end": 6031,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 5952,
											"end": 6031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 6033,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 5914,
											"end": 6033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6072,
											"end": 6073,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 6142,
											"end": 6149,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6133,
											"end": 6139,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6122,
											"end": 6131,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6118,
											"end": 6140,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 6097,
											"end": 6150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6150,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 6097,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6087,
											"end": 6150,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 6087,
											"end": 6150,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6043,
											"end": 6160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6227,
											"end": 6229,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6216,
											"end": 6225,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6212,
											"end": 6230,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6231,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 6258,
											"end": 6276,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6250,
											"end": 6256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6277,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6361,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 6244,
											"end": 6361,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6280,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 6280,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 6280,
											"end": 6359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6280,
											"end": 6359,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 6280,
											"end": 6359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6361,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 6244,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 6450,
											"end": 6457,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6441,
											"end": 6447,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6430,
											"end": 6439,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6426,
											"end": 6448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 6393,
											"end": 6458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6458,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 6393,
											"end": 6458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6375,
											"end": 6458,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6375,
											"end": 6458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6375,
											"end": 6458,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6375,
											"end": 6458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6170,
											"end": 6468,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6535,
											"end": 6537,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6524,
											"end": 6533,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6538,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6539,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 6566,
											"end": 6584,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6558,
											"end": 6564,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6585,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6669,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 6552,
											"end": 6669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6588,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 6588,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 6588,
											"end": 6667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6588,
											"end": 6667,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 6588,
											"end": 6667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6669,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 6552,
											"end": 6669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6701,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 6758,
											"end": 6765,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6749,
											"end": 6755,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6738,
											"end": 6747,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6734,
											"end": 6756,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6701,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 6701,
											"end": 6766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6701,
											"end": 6766,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 6701,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6766,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6766,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6766,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6766,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6478,
											"end": 6776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 6783,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 6783,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 6783,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 6783,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 6783,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 6783,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 6783,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 6783,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 6783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6789,
											"end": 6911,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 6789,
											"end": 6911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6862,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 6880,
											"end": 6885,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6862,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 6862,
											"end": 6886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6862,
											"end": 6886,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 6862,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6855,
											"end": 6860,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6852,
											"end": 6887,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 6842,
											"end": 6905,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6901,
											"end": 6902,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6898,
											"end": 6899,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6891,
											"end": 6903,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6905,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 6842,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6789,
											"end": 6911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6789,
											"end": 6911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6917,
											"end": 7056,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 6917,
											"end": 7056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6963,
											"end": 6968,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7001,
											"end": 7007,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6988,
											"end": 7008,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 6979,
											"end": 7008,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6979,
											"end": 7008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7017,
											"end": 7050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 7044,
											"end": 7049,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7017,
											"end": 7050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 7017,
											"end": 7050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7017,
											"end": 7050,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 7017,
											"end": 7050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6917,
											"end": 7056,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6917,
											"end": 7056,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6917,
											"end": 7056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6917,
											"end": 7056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6917,
											"end": 7056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7062,
											"end": 7391,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 7062,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7170,
											"end": 7172,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7158,
											"end": 7167,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7149,
											"end": 7156,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7145,
											"end": 7168,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7141,
											"end": 7173,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 7138,
											"end": 7257,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7138,
											"end": 7257,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 7138,
											"end": 7257,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 7176,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 7176,
											"end": 7255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7255,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 7176,
											"end": 7255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7138,
											"end": 7257,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 7138,
											"end": 7257,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7296,
											"end": 7297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7321,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 7366,
											"end": 7373,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7357,
											"end": 7363,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7346,
											"end": 7355,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7364,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7321,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 7321,
											"end": 7374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7321,
											"end": 7374,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 7321,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7311,
											"end": 7374,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7311,
											"end": 7374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7267,
											"end": 7384,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7062,
											"end": 7391,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7062,
											"end": 7391,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7062,
											"end": 7391,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7062,
											"end": 7391,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7062,
											"end": 7391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7397,
											"end": 7496,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 7397,
											"end": 7496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7449,
											"end": 7455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7483,
											"end": 7488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7477,
											"end": 7489,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7467,
											"end": 7489,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7467,
											"end": 7489,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7397,
											"end": 7496,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7397,
											"end": 7496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7397,
											"end": 7496,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7397,
											"end": 7496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7502,
											"end": 7671,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 7502,
											"end": 7671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7620,
											"end": 7626,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7615,
											"end": 7618,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7608,
											"end": 7627,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7660,
											"end": 7664,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7655,
											"end": 7658,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7651,
											"end": 7665,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7636,
											"end": 7665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7636,
											"end": 7665,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7502,
											"end": 7671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7502,
											"end": 7671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7502,
											"end": 7671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7502,
											"end": 7671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7502,
											"end": 7671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7677,
											"end": 7816,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 7677,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7764,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7756,
											"end": 7759,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7750,
											"end": 7773,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7808,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7798,
											"end": 7804,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7793,
											"end": 7796,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7789,
											"end": 7805,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7782,
											"end": 7809,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7677,
											"end": 7816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7677,
											"end": 7816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7677,
											"end": 7816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7677,
											"end": 7816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7822,
											"end": 8199,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 7822,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7910,
											"end": 7913,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7938,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 7971,
											"end": 7976,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7938,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 7938,
											"end": 7977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7938,
											"end": 7977,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 7938,
											"end": 7977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 8057,
											"end": 8063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8052,
											"end": 8055,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 7993,
											"end": 8064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8064,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 7993,
											"end": 8064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7986,
											"end": 8064,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7986,
											"end": 8064,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8073,
											"end": 8138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 8131,
											"end": 8137,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8126,
											"end": 8129,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8123,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8117,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8124,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8073,
											"end": 8138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 8073,
											"end": 8138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8073,
											"end": 8138,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 8073,
											"end": 8138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 8185,
											"end": 8191,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 8163,
											"end": 8192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8192,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 8163,
											"end": 8192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8158,
											"end": 8161,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8193,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8147,
											"end": 8193,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8147,
											"end": 8193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7914,
											"end": 8199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7822,
											"end": 8199,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7822,
											"end": 8199,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7822,
											"end": 8199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7822,
											"end": 8199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7822,
											"end": 8199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8205,
											"end": 8518,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 8205,
											"end": 8518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8356,
											"end": 8358,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8345,
											"end": 8354,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8341,
											"end": 8359,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8333,
											"end": 8359,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8333,
											"end": 8359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8405,
											"end": 8414,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8399,
											"end": 8403,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8395,
											"end": 8415,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8391,
											"end": 8392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8380,
											"end": 8389,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8376,
											"end": 8393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8369,
											"end": 8416,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 8506,
											"end": 8510,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8497,
											"end": 8503,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 8433,
											"end": 8511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8511,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 8433,
											"end": 8511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8425,
											"end": 8511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8425,
											"end": 8511,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8205,
											"end": 8518,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8205,
											"end": 8518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8205,
											"end": 8518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8205,
											"end": 8518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8205,
											"end": 8518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8524,
											"end": 8667,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 8524,
											"end": 8667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8581,
											"end": 8586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8612,
											"end": 8618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8597,
											"end": 8619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8597,
											"end": 8619,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8628,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 8655,
											"end": 8660,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8628,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 8628,
											"end": 8661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8628,
											"end": 8661,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 8628,
											"end": 8661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8524,
											"end": 8667,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8524,
											"end": 8667,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8524,
											"end": 8667,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8524,
											"end": 8667,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8524,
											"end": 8667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 9024,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 8673,
											"end": 9024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8743,
											"end": 8749,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8792,
											"end": 8794,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8780,
											"end": 8789,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8771,
											"end": 8778,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8767,
											"end": 8790,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8763,
											"end": 8795,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 8760,
											"end": 8879,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8760,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 8760,
											"end": 8879,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8798,
											"end": 8877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 8798,
											"end": 8877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 8798,
											"end": 8877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8798,
											"end": 8877,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 8798,
											"end": 8877,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8760,
											"end": 8879,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 8760,
											"end": 8879,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8918,
											"end": 8919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 8999,
											"end": 9006,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 8996,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8979,
											"end": 8988,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8975,
											"end": 8997,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8943,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 8943,
											"end": 9007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8943,
											"end": 9007,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 8943,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8933,
											"end": 9007,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8933,
											"end": 9007,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8889,
											"end": 9017,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 9024,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 9024,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 9024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 9024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 9024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9030,
											"end": 9148,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 9030,
											"end": 9148,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 9135,
											"end": 9140,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 9117,
											"end": 9141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9141,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 9117,
											"end": 9141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9112,
											"end": 9115,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9105,
											"end": 9142,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9030,
											"end": 9148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9030,
											"end": 9148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9030,
											"end": 9148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9178,
											"end": 9495,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 9178,
											"end": 9495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9297,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 9361,
											"end": 9367,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9356,
											"end": 9359,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9297,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 9297,
											"end": 9368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9297,
											"end": 9368,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 9297,
											"end": 9368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9290,
											"end": 9368,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9290,
											"end": 9368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9378,
											"end": 9434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 9427,
											"end": 9433,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9422,
											"end": 9425,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9415,
											"end": 9420,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9378,
											"end": 9434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 9378,
											"end": 9434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9378,
											"end": 9434,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 9378,
											"end": 9434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9459,
											"end": 9488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 9481,
											"end": 9487,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9459,
											"end": 9488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 9459,
											"end": 9488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9459,
											"end": 9488,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 9459,
											"end": 9488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9454,
											"end": 9457,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9450,
											"end": 9489,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9443,
											"end": 9489,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9443,
											"end": 9489,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9178,
											"end": 9495,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9178,
											"end": 9495,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9178,
											"end": 9495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9178,
											"end": 9495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9178,
											"end": 9495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9178,
											"end": 9495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9501,
											"end": 10276,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 9501,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9738,
											"end": 9742,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 9765,
											"end": 9774,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9761,
											"end": 9780,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9753,
											"end": 9780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9753,
											"end": 9780,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9790,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 9858,
											"end": 9859,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9847,
											"end": 9856,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9843,
											"end": 9860,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9834,
											"end": 9840,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 9790,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 9790,
											"end": 9861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9790,
											"end": 9861,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 9790,
											"end": 9861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9908,
											"end": 9917,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9902,
											"end": 9906,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 9918,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9893,
											"end": 9895,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9882,
											"end": 9891,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9878,
											"end": 9896,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9871,
											"end": 9919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9936,
											"end": 10024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 10019,
											"end": 10023,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10010,
											"end": 10016,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10008,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 9936,
											"end": 10024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 9936,
											"end": 10024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9936,
											"end": 10024,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 9936,
											"end": 10024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9928,
											"end": 10024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9928,
											"end": 10024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10071,
											"end": 10080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10065,
											"end": 10069,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10081,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10056,
											"end": 10058,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10045,
											"end": 10054,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10041,
											"end": 10059,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10034,
											"end": 10082,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10099,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 10182,
											"end": 10186,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10173,
											"end": 10179,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10165,
											"end": 10171,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10099,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 10099,
											"end": 10187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10099,
											"end": 10187,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 10099,
											"end": 10187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10091,
											"end": 10187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10091,
											"end": 10187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10197,
											"end": 10269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 10265,
											"end": 10267,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10254,
											"end": 10263,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10268,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10241,
											"end": 10247,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10197,
											"end": 10269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 10197,
											"end": 10269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10197,
											"end": 10269,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 10197,
											"end": 10269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9501,
											"end": 10276,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 9501,
											"end": 10276,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 9501,
											"end": 10276,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9501,
											"end": 10276,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9501,
											"end": 10276,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9501,
											"end": 10276,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9501,
											"end": 10276,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9501,
											"end": 10276,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9501,
											"end": 10276,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9501,
											"end": 10276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10282,
											"end": 10455,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 10282,
											"end": 10455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10422,
											"end": 10447,
											"name": "PUSH",
											"source": 6,
											"value": "43616C6C6572206973206E6F7420746865206F776E6572000000000000000000"
										},
										{
											"begin": 10418,
											"end": 10419,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10410,
											"end": 10416,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10406,
											"end": 10420,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10282,
											"end": 10455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10282,
											"end": 10455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10461,
											"end": 10827,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 10461,
											"end": 10827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10603,
											"end": 10606,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10624,
											"end": 10691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 10688,
											"end": 10690,
											"name": "PUSH",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 10683,
											"end": 10686,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10624,
											"end": 10691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 10624,
											"end": 10691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10624,
											"end": 10691,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 10624,
											"end": 10691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10617,
											"end": 10691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10617,
											"end": 10691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10700,
											"end": 10793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 10789,
											"end": 10792,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10700,
											"end": 10793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 10700,
											"end": 10793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10700,
											"end": 10793,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 10700,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10818,
											"end": 10820,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10813,
											"end": 10816,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10802,
											"end": 10821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10802,
											"end": 10821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10461,
											"end": 10827,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10461,
											"end": 10827,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10461,
											"end": 10827,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10461,
											"end": 10827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10833,
											"end": 11252,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 10833,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10999,
											"end": 11003,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11037,
											"end": 11039,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11026,
											"end": 11035,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11022,
											"end": 11040,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11014,
											"end": 11040,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11014,
											"end": 11040,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11086,
											"end": 11095,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11080,
											"end": 11084,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11076,
											"end": 11096,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11072,
											"end": 11073,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11061,
											"end": 11070,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11057,
											"end": 11074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11050,
											"end": 11097,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 11240,
											"end": 11244,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 11114,
											"end": 11245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11245,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 11114,
											"end": 11245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11106,
											"end": 11245,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11106,
											"end": 11245,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10833,
											"end": 11252,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10833,
											"end": 11252,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10833,
											"end": 11252,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10833,
											"end": 11252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11258,
											"end": 11337,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 11258,
											"end": 11337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11304,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11326,
											"end": 11331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11258,
											"end": 11337,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11258,
											"end": 11337,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11258,
											"end": 11337,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11258,
											"end": 11337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11343,
											"end": 11500,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 11343,
											"end": 11500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11448,
											"end": 11493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 11468,
											"end": 11492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 11486,
											"end": 11491,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11468,
											"end": 11492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 11468,
											"end": 11492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11468,
											"end": 11492,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 11468,
											"end": 11492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11448,
											"end": 11493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 11448,
											"end": 11493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11448,
											"end": 11493,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 11448,
											"end": 11493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11443,
											"end": 11446,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11436,
											"end": 11494,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11343,
											"end": 11500,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11343,
											"end": 11500,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11343,
											"end": 11500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11506,
											"end": 11600,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 11506,
											"end": 11600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11539,
											"end": 11547,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11587,
											"end": 11592,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11583,
											"end": 11585,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 11579,
											"end": 11593,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 11558,
											"end": 11593,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11558,
											"end": 11593,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11506,
											"end": 11600,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11506,
											"end": 11600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11506,
											"end": 11600,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11506,
											"end": 11600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11606,
											"end": 11700,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 11606,
											"end": 11700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11645,
											"end": 11652,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11674,
											"end": 11694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 11688,
											"end": 11693,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11674,
											"end": 11694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 11674,
											"end": 11694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11674,
											"end": 11694,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 11674,
											"end": 11694,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11606,
											"end": 11700,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11606,
											"end": 11700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11606,
											"end": 11700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11606,
											"end": 11700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11706,
											"end": 11806,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 11706,
											"end": 11806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11745,
											"end": 11752,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11774,
											"end": 11800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 11794,
											"end": 11799,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11774,
											"end": 11800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 11774,
											"end": 11800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11774,
											"end": 11800,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 11774,
											"end": 11800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11763,
											"end": 11800,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11763,
											"end": 11800,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11706,
											"end": 11806,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11706,
											"end": 11806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11706,
											"end": 11806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11706,
											"end": 11806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11812,
											"end": 11969,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 11812,
											"end": 11969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11917,
											"end": 11962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 11937,
											"end": 11961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 11955,
											"end": 11960,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11937,
											"end": 11961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 11937,
											"end": 11961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11937,
											"end": 11961,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 11937,
											"end": 11961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11917,
											"end": 11962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 11917,
											"end": 11962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11917,
											"end": 11962,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 11917,
											"end": 11962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11912,
											"end": 11915,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11905,
											"end": 11963,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11812,
											"end": 11969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11812,
											"end": 11969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11812,
											"end": 11969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11975,
											"end": 12654,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 11975,
											"end": 12654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12171,
											"end": 12174,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12186,
											"end": 12261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 12257,
											"end": 12260,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12248,
											"end": 12254,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 12186,
											"end": 12261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 12186,
											"end": 12261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12186,
											"end": 12261,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 12186,
											"end": 12261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12286,
											"end": 12288,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12281,
											"end": 12284,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12277,
											"end": 12289,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12270,
											"end": 12289,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12270,
											"end": 12289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12299,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 12370,
											"end": 12373,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12361,
											"end": 12367,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 12299,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 12299,
											"end": 12374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12299,
											"end": 12374,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 12299,
											"end": 12374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12399,
											"end": 12401,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12394,
											"end": 12397,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12390,
											"end": 12402,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12383,
											"end": 12402,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12383,
											"end": 12402,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12412,
											"end": 12487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 12483,
											"end": 12486,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12474,
											"end": 12480,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12412,
											"end": 12487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 12412,
											"end": 12487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12412,
											"end": 12487,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 12412,
											"end": 12487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12512,
											"end": 12514,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 12507,
											"end": 12510,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12503,
											"end": 12515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12496,
											"end": 12515,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12496,
											"end": 12515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12525,
											"end": 12600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 12596,
											"end": 12599,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12587,
											"end": 12593,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12525,
											"end": 12600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 12525,
											"end": 12600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12525,
											"end": 12600,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 12525,
											"end": 12600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12625,
											"end": 12627,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12620,
											"end": 12623,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12616,
											"end": 12628,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12609,
											"end": 12628,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12609,
											"end": 12628,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12645,
											"end": 12648,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12638,
											"end": 12648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12638,
											"end": 12648,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11975,
											"end": 12654,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 11975,
											"end": 12654,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 11975,
											"end": 12654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11975,
											"end": 12654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11975,
											"end": 12654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11975,
											"end": 12654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11975,
											"end": 12654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11975,
											"end": 12654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12660,
											"end": 12842,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 12660,
											"end": 12842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12800,
											"end": 12834,
											"name": "PUSH",
											"source": 6,
											"value": "4469726563746F72792063616E6E6F74206265207A65726F2061646472657373"
										},
										{
											"begin": 12796,
											"end": 12797,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12788,
											"end": 12794,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12784,
											"end": 12798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12777,
											"end": 12835,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12660,
											"end": 12842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12660,
											"end": 12842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12848,
											"end": 13214,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 12848,
											"end": 13214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12990,
											"end": 12993,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13011,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 13075,
											"end": 13077,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13070,
											"end": 13073,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13011,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 13011,
											"end": 13078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13011,
											"end": 13078,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 13011,
											"end": 13078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13004,
											"end": 13078,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13004,
											"end": 13078,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13087,
											"end": 13180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 13176,
											"end": 13179,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13087,
											"end": 13180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 13087,
											"end": 13180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13087,
											"end": 13180,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 13087,
											"end": 13180,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13205,
											"end": 13207,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13200,
											"end": 13203,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13196,
											"end": 13208,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13189,
											"end": 13208,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13189,
											"end": 13208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12848,
											"end": 13214,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12848,
											"end": 13214,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12848,
											"end": 13214,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12848,
											"end": 13214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13220,
											"end": 13639,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 13220,
											"end": 13639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13386,
											"end": 13390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13424,
											"end": 13426,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13413,
											"end": 13422,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13409,
											"end": 13427,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13401,
											"end": 13427,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13401,
											"end": 13427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13473,
											"end": 13482,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13467,
											"end": 13471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13463,
											"end": 13483,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13459,
											"end": 13460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13448,
											"end": 13457,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13444,
											"end": 13461,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13437,
											"end": 13484,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13501,
											"end": 13632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 13627,
											"end": 13631,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13501,
											"end": 13632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 13501,
											"end": 13632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13501,
											"end": 13632,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 13501,
											"end": 13632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13493,
											"end": 13632,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13493,
											"end": 13632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13220,
											"end": 13639,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13220,
											"end": 13639,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13220,
											"end": 13639,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13220,
											"end": 13639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13645,
											"end": 13823,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 13645,
											"end": 13823,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13785,
											"end": 13815,
											"name": "PUSH",
											"source": 6,
											"value": "4469726563746F7279206D757374206265206120636F6E747261637400000000"
										},
										{
											"begin": 13781,
											"end": 13782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13773,
											"end": 13779,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13769,
											"end": 13783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13762,
											"end": 13816,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13645,
											"end": 13823,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13645,
											"end": 13823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13829,
											"end": 14195,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 13829,
											"end": 14195,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13971,
											"end": 13974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13992,
											"end": 14059,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 14056,
											"end": 14058,
											"name": "PUSH",
											"source": 6,
											"value": "1C"
										},
										{
											"begin": 14051,
											"end": 14054,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13992,
											"end": 14059,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 13992,
											"end": 14059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13992,
											"end": 14059,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 13992,
											"end": 14059,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13985,
											"end": 14059,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13985,
											"end": 14059,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14068,
											"end": 14161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 14157,
											"end": 14160,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14068,
											"end": 14161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 14068,
											"end": 14161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14068,
											"end": 14161,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 14068,
											"end": 14161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14186,
											"end": 14188,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14181,
											"end": 14184,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14177,
											"end": 14189,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14170,
											"end": 14189,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14170,
											"end": 14189,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13829,
											"end": 14195,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13829,
											"end": 14195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13829,
											"end": 14195,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13829,
											"end": 14195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14201,
											"end": 14620,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 14201,
											"end": 14620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14367,
											"end": 14371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14405,
											"end": 14407,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14394,
											"end": 14403,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14390,
											"end": 14408,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14382,
											"end": 14408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14382,
											"end": 14408,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14454,
											"end": 14463,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14448,
											"end": 14452,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14444,
											"end": 14464,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 14440,
											"end": 14441,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14429,
											"end": 14438,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14425,
											"end": 14442,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14418,
											"end": 14465,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14482,
											"end": 14613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 14608,
											"end": 14612,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14482,
											"end": 14613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 14482,
											"end": 14613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14482,
											"end": 14613,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 14482,
											"end": 14613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14474,
											"end": 14613,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14474,
											"end": 14613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14201,
											"end": 14620,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14201,
											"end": 14620,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14201,
											"end": 14620,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14201,
											"end": 14620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14626,
											"end": 14857,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 14626,
											"end": 14857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14766,
											"end": 14800,
											"name": "PUSH",
											"source": 6,
											"value": "4469726563746F7279206164647265737320646F6573206E6F7420696D706C65"
										},
										{
											"begin": 14762,
											"end": 14763,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14754,
											"end": 14760,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14750,
											"end": 14764,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14743,
											"end": 14801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14835,
											"end": 14849,
											"name": "PUSH",
											"source": 6,
											"value": "6D656E74206F776E657228290000000000000000000000000000000000000000"
										},
										{
											"begin": 14830,
											"end": 14832,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14822,
											"end": 14828,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14818,
											"end": 14833,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14811,
											"end": 14850,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14626,
											"end": 14857,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14626,
											"end": 14857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14863,
											"end": 15229,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 14863,
											"end": 15229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15005,
											"end": 15008,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15026,
											"end": 15093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 15090,
											"end": 15092,
											"name": "PUSH",
											"source": 6,
											"value": "2C"
										},
										{
											"begin": 15085,
											"end": 15088,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15026,
											"end": 15093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 15026,
											"end": 15093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15026,
											"end": 15093,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 15026,
											"end": 15093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15019,
											"end": 15093,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15019,
											"end": 15093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15102,
											"end": 15195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 15191,
											"end": 15194,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15102,
											"end": 15195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 15102,
											"end": 15195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15102,
											"end": 15195,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 15102,
											"end": 15195,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15220,
											"end": 15222,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15215,
											"end": 15218,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15211,
											"end": 15223,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15204,
											"end": 15223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15204,
											"end": 15223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14863,
											"end": 15229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14863,
											"end": 15229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14863,
											"end": 15229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14863,
											"end": 15229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15235,
											"end": 15654,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 15235,
											"end": 15654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15401,
											"end": 15405,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15439,
											"end": 15441,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15428,
											"end": 15437,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15424,
											"end": 15442,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15416,
											"end": 15442,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15416,
											"end": 15442,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15488,
											"end": 15497,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15482,
											"end": 15486,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15478,
											"end": 15498,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15474,
											"end": 15475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15463,
											"end": 15472,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15459,
											"end": 15476,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15452,
											"end": 15499,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15516,
											"end": 15647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 15642,
											"end": 15646,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15516,
											"end": 15647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 15516,
											"end": 15647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15516,
											"end": 15647,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 15516,
											"end": 15647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15508,
											"end": 15647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15508,
											"end": 15647,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15235,
											"end": 15654,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15235,
											"end": 15654,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15235,
											"end": 15654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15235,
											"end": 15654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15660,
											"end": 15992,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 15660,
											"end": 15992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15781,
											"end": 15785,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15819,
											"end": 15821,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15808,
											"end": 15817,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15804,
											"end": 15822,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15796,
											"end": 15822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15796,
											"end": 15822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15832,
											"end": 15903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 15900,
											"end": 15901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15889,
											"end": 15898,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15885,
											"end": 15902,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15876,
											"end": 15882,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 15832,
											"end": 15903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 15832,
											"end": 15903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15832,
											"end": 15903,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 15832,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15913,
											"end": 15985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 15981,
											"end": 15983,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15970,
											"end": 15979,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15966,
											"end": 15984,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15957,
											"end": 15963,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 15913,
											"end": 15985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 15913,
											"end": 15985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15913,
											"end": 15985,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 15913,
											"end": 15985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15660,
											"end": 15992,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 15660,
											"end": 15992,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 15660,
											"end": 15992,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15660,
											"end": 15992,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15660,
											"end": 15992,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15660,
											"end": 15992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"hopium/common/interface/imDirectory.sol",
								"hopium/etf/interface/iEtfToken.sol",
								"hopium/etf/main/etf-token-deployer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Directory()": "658a847a",
							"changeDirectoryAddress(address)": "ba4c7be1",
							"deployEtfToken(uint256,string,string)": "78f6c7c4",
							"fetchFromDirectory(string)": "27262618",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_directory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImplNotSet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Directory\",\"outputs\":[{\"internalType\":\"contract IDirectory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_directory\",\"type\":\"address\"}],\"name\":\"changeDirectoryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"etfId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"deployEtfToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"fetchFromDirectory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deployEtfToken(uint256,string,string)\":{\"notice\":\"Deploy a new ETF token clone with per-clone name/symbol\"}},\"notice\":\"Factory that mints minimal-proxy clones of EtfToken (EIP-1167)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/etf/main/etf-token-deployer.sol\":\"EtfTokenDeployer\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x7e918671c04972845975935ea13c9ce0be1228031ba0e929d0f1f68fd1f17214\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3027ebaeef3e678ad9bae26f0556469878e992bf7dec94bede328a92be529419\",\"dweb:/ipfs/Qmdu4RfMYv9Q7iHWuYfyUL6fZKc73nM4YWizNP8w1xay56\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]},\"hopium/etf/interface/iEtfToken.sol\":{\"keccak256\":\"0x3c068530f073bf47696bae1bf5b8181043376b623aa225b3f7f9b53031899a45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55ed0dfc9d1cfa92c9411e8d22155fba488d63652d4312a3b71e3c3f97e475fe\",\"dweb:/ipfs/QmbTYVAqStGGNncDuGtt7HMJnfpw23zkBJD91yvyqeD1pj\"]},\"hopium/etf/main/etf-token-deployer.sol\":{\"keccak256\":\"0x6e5d9804a1c1bb09276de7f49e24bf773d3d28f3034fe01122321c876b64a7c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4b5ec9a6cc6ce9c13aaf98c246825ed37e3c683095f8a91f5ce693048d9890d\",\"dweb:/ipfs/QmT3TriEcU7B8wow7AC9MkEzd2hJdSoppBqJr1iFN7Hozr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "hopium/etf/main/etf-token-deployer.sol:EtfTokenDeployer",
								"label": "Directory",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDirectory)535"
							}
						],
						"types": {
							"t_contract(IDirectory)535": {
								"encoding": "inplace",
								"label": "contract IDirectory",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deployEtfToken(uint256,string,string)": {
								"notice": "Deploy a new ETF token clone with per-clone name/symbol"
							}
						},
						"notice": "Factory that mints minimal-proxy clones of EtfToken (EIP-1167)",
						"version": 1
					}
				},
				"Helpers": {
					"abi": [
						{
							"inputs": [],
							"name": "ImplNotSet",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Directory",
							"outputs": [
								{
									"internalType": "contract IDirectory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_directory",
									"type": "address"
								}
							],
							"name": "changeDirectoryAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_key",
									"type": "string"
								}
							],
							"name": "fetchFromDirectory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"Directory()": "658a847a",
							"changeDirectoryAddress(address)": "ba4c7be1",
							"fetchFromDirectory(string)": "27262618",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ImplNotSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Directory\",\"outputs\":[{\"internalType\":\"contract IDirectory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_directory\",\"type\":\"address\"}],\"name\":\"changeDirectoryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"fetchFromDirectory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hopium/etf/main/etf-token-deployer.sol\":\"Helpers\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x7e918671c04972845975935ea13c9ce0be1228031ba0e929d0f1f68fd1f17214\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3027ebaeef3e678ad9bae26f0556469878e992bf7dec94bede328a92be529419\",\"dweb:/ipfs/Qmdu4RfMYv9Q7iHWuYfyUL6fZKc73nM4YWizNP8w1xay56\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"hopium/common/interface/imDirectory.sol\":{\"keccak256\":\"0x7209180b40577206895c55a28715c488e9618fa58613d17e7d0997ab5eef2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2677acab47f023b93d8194df8d4b1067437d1491c153d7448368df9831c626\",\"dweb:/ipfs/QmPFbJo6MyLm6z5AygEcEoNGYmRk13coFFBkRTyxXF9s8e\"]},\"hopium/etf/interface/iEtfToken.sol\":{\"keccak256\":\"0x3c068530f073bf47696bae1bf5b8181043376b623aa225b3f7f9b53031899a45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55ed0dfc9d1cfa92c9411e8d22155fba488d63652d4312a3b71e3c3f97e475fe\",\"dweb:/ipfs/QmbTYVAqStGGNncDuGtt7HMJnfpw23zkBJD91yvyqeD1pj\"]},\"hopium/etf/main/etf-token-deployer.sol\":{\"keccak256\":\"0x6e5d9804a1c1bb09276de7f49e24bf773d3d28f3034fe01122321c876b64a7c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4b5ec9a6cc6ce9c13aaf98c246825ed37e3c683095f8a91f5ce693048d9890d\",\"dweb:/ipfs/QmT3TriEcU7B8wow7AC9MkEzd2hJdSoppBqJr1iFN7Hozr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "hopium/etf/main/etf-token-deployer.sol:Helpers",
								"label": "Directory",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDirectory)535"
							}
						],
						"types": {
							"t_contract(IDirectory)535": {
								"encoding": "inplace",
								"label": "contract IDirectory",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
					"exportedSymbols": {
						"Clones": [
							398
						],
						"Create2": [
							497
						],
						"Errors": [
							519
						]
					},
					"id": 399,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
							"file": "../utils/Create2.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 399,
							"sourceUnit": 498,
							"src": "126:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Create2",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 497,
										"src": "134:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "../utils/Errors.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 399,
							"sourceUnit": 520,
							"src": "172:43:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 519,
										"src": "180:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Clones",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "217:599:0",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method."
							},
							"fullyImplemented": true,
							"id": 398,
							"linearizedBaseContracts": [
								398
							],
							"name": "Clones",
							"nameLocation": "825:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "94289054",
									"id": 8,
									"name": "CloneArgumentsTooLong",
									"nameLocation": "844:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:2:0"
									},
									"src": "838:30:0"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "1480:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 17,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1503:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1519:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 16,
														"name": "clone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															22,
															67
														],
														"referencedDeclaration": 67,
														"src": "1497:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,uint256) returns (address)"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1497:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 15,
												"id": 20,
												"nodeType": "Return",
												"src": "1490:31:0"
											}
										]
									},
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "874:526:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n This function uses the create opcode, which should never revert.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later."
									},
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "1414:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1428:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1420:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1419:24:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1470:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1462:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:18:0"
									},
									"scope": 398,
									"src": "1405:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "2345:820:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 34,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2367:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2359:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 32,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2359:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2359:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2373:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "2359:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 37,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2383:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2359:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 51,
												"nodeType": "IfStatement",
												"src": "2355:123:0",
												"trueBody": {
													"id": 50,
													"nodeType": "Block",
													"src": "2390:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 44,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "2446:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 43,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2438:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 42,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2438:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 45,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2438:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 46,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2452:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "2438:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 47,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "2461:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 39,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "2411:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2418:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "2411:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2411:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 49,
															"nodeType": "RevertStatement",
															"src": "2404:63:0"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "2512:553:0",
													"nodeType": "YulBlock",
													"src": "2512:553:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2717:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2717:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2730:4:0",
																						"nodeType": "YulLiteral",
																						"src": "2730:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2740:4:0",
																								"nodeType": "YulLiteral",
																								"src": "2740:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "2746:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "2746:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2736:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "2736:3:0"
																						},
																						"nativeSrc": "2736:25:0",
																						"nodeType": "YulFunctionCall",
																						"src": "2736:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "2726:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2726:3:0"
																				},
																				"nativeSrc": "2726:36:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2726:36:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2764:48:0",
																				"nodeType": "YulLiteral",
																				"src": "2764:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2723:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2723:2:0"
																		},
																		"nativeSrc": "2723:90:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2723:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2710:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2710:6:0"
																},
																"nativeSrc": "2710:104:0",
																"nodeType": "YulFunctionCall",
																"src": "2710:104:0"
															},
															"nativeSrc": "2710:104:0",
															"nodeType": "YulExpressionStatement",
															"src": "2710:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2935:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2935:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2948:4:0",
																						"nodeType": "YulLiteral",
																						"src": "2948:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "2954:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "2954:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2944:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2944:3:0"
																				},
																				"nativeSrc": "2944:25:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2944:25:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2971:32:0",
																				"nodeType": "YulLiteral",
																				"src": "2971:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2941:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2941:2:0"
																		},
																		"nativeSrc": "2941:63:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2941:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2928:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2928:6:0"
																},
																"nativeSrc": "2928:77:0",
																"nodeType": "YulFunctionCall",
																"src": "2928:77:0"
															},
															"nativeSrc": "2928:77:0",
															"nodeType": "YulExpressionStatement",
															"src": "2928:77:0"
														},
														{
															"nativeSrc": "3018:37:0",
															"nodeType": "YulAssignment",
															"src": "3018:37:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3037:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "3037:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3044:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3044:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3050:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3050:4:0",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nativeSrc": "3030:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3030:6:0"
																},
																"nativeSrc": "3030:25:0",
																"nodeType": "YulFunctionCall",
																"src": "3030:25:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "3018:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "3018:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 25,
														"isOffset": false,
														"isSlot": false,
														"src": "2746:14:0",
														"valueSize": 1
													},
													{
														"declaration": 25,
														"isOffset": false,
														"isSlot": false,
														"src": "2954:14:0",
														"valueSize": 1
													},
													{
														"declaration": 30,
														"isOffset": false,
														"isSlot": false,
														"src": "3018:8:0",
														"valueSize": 1
													},
													{
														"declaration": 27,
														"isOffset": false,
														"isSlot": false,
														"src": "3037:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 52,
												"nodeType": "InlineAssembly",
												"src": "2487:578:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 53,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "3078:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3098:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3090:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 54,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3090:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3090:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3078:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 65,
												"nodeType": "IfStatement",
												"src": "3074:85:0",
												"trueBody": {
													"id": 64,
													"nodeType": "Block",
													"src": "3102:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 59,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "3123:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3130:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "3123:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3123:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 63,
															"nodeType": "RevertStatement",
															"src": "3116:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "1534:716:0",
										"text": " @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n to the new contract.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "2264:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2278:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2270:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2270:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2302:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2294:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2294:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2269:39:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "2335:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2327:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:18:0"
									},
									"scope": 398,
									"src": "2255:910:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "3977:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 78,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "4013:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 79,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "4029:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "30",
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4035:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 77,
														"name": "cloneDeterministic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															84,
															131
														],
														"referencedDeclaration": 131,
														"src": "3994:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes32,uint256) returns (address)"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3994:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 76,
												"id": 82,
												"nodeType": "Return",
												"src": "3987:50:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "3171:699:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple times will revert, since\n the clones cannot be deployed twice at the same address.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "3884:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3911:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3903:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3935:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3927:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 71,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3927:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3902:38:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "3967:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3959:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3958:18:0"
									},
									"scope": 398,
									"src": "3875:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "4952:827:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 98,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4974:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4966:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 96,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4966:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4966:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4980:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "4966:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 101,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "4990:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4966:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 115,
												"nodeType": "IfStatement",
												"src": "4962:123:0",
												"trueBody": {
													"id": 114,
													"nodeType": "Block",
													"src": "4997:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 108,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "5053:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 107,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5045:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 106,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5045:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5045:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5059:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "5045:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 111,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "5068:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 103,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "5018:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5025:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "5018:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5018:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 113,
															"nodeType": "RevertStatement",
															"src": "5011:63:0"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "5119:560:0",
													"nodeType": "YulBlock",
													"src": "5119:560:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5324:4:0",
																		"nodeType": "YulLiteral",
																		"src": "5324:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5337:4:0",
																						"nodeType": "YulLiteral",
																						"src": "5337:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5347:4:0",
																								"nodeType": "YulLiteral",
																								"src": "5347:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "5353:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "5353:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5343:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "5343:3:0"
																						},
																						"nativeSrc": "5343:25:0",
																						"nodeType": "YulFunctionCall",
																						"src": "5343:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "5333:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "5333:3:0"
																				},
																				"nativeSrc": "5333:36:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5333:36:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5371:48:0",
																				"nodeType": "YulLiteral",
																				"src": "5371:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5330:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "5330:2:0"
																		},
																		"nativeSrc": "5330:90:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5330:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5317:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5317:6:0"
																},
																"nativeSrc": "5317:104:0",
																"nodeType": "YulFunctionCall",
																"src": "5317:104:0"
															},
															"nativeSrc": "5317:104:0",
															"nodeType": "YulExpressionStatement",
															"src": "5317:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5542:4:0",
																		"nodeType": "YulLiteral",
																		"src": "5542:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5555:4:0",
																						"nodeType": "YulLiteral",
																						"src": "5555:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "5561:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "5561:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "5551:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "5551:3:0"
																				},
																				"nativeSrc": "5551:25:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5551:25:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5578:32:0",
																				"nodeType": "YulLiteral",
																				"src": "5578:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5548:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "5548:2:0"
																		},
																		"nativeSrc": "5548:63:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5548:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5535:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5535:6:0"
																},
																"nativeSrc": "5535:77:0",
																"nodeType": "YulFunctionCall",
																"src": "5535:77:0"
															},
															"nativeSrc": "5535:77:0",
															"nodeType": "YulExpressionStatement",
															"src": "5535:77:0"
														},
														{
															"nativeSrc": "5625:44:0",
															"nodeType": "YulAssignment",
															"src": "5625:44:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5645:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "5645:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5652:4:0",
																		"nodeType": "YulLiteral",
																		"src": "5652:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5658:4:0",
																		"nodeType": "YulLiteral",
																		"src": "5658:4:0",
																		"type": "",
																		"value": "0x37"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "5664:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "5664:4:0"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nativeSrc": "5637:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "5637:7:0"
																},
																"nativeSrc": "5637:32:0",
																"nodeType": "YulFunctionCall",
																"src": "5637:32:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "5625:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "5625:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 87,
														"isOffset": false,
														"isSlot": false,
														"src": "5353:14:0",
														"valueSize": 1
													},
													{
														"declaration": 87,
														"isOffset": false,
														"isSlot": false,
														"src": "5561:14:0",
														"valueSize": 1
													},
													{
														"declaration": 94,
														"isOffset": false,
														"isSlot": false,
														"src": "5625:8:0",
														"valueSize": 1
													},
													{
														"declaration": 89,
														"isOffset": false,
														"isSlot": false,
														"src": "5664:4:0",
														"valueSize": 1
													},
													{
														"declaration": 91,
														"isOffset": false,
														"isSlot": false,
														"src": "5645:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 116,
												"nodeType": "InlineAssembly",
												"src": "5094:585:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 117,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "5692:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5712:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5704:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 118,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5704:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5704:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5692:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "5688:85:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "5716:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 123,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "5737:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5744:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "5737:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5737:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "5730:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "4050:750:0",
										"text": " @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n a `value` parameter to send native currency to the new contract.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "4814:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "4850:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4842:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4842:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "4882:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4874:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 88,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4904:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4896:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4832:83:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "4942:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4934:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4934:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4933:18:0"
									},
									"scope": 398,
									"src": "4805:974:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "6054:537:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "6089:496:0",
													"nodeType": "YulBlock",
													"src": "6089:496:0",
													"statements": [
														{
															"nativeSrc": "6103:22:0",
															"nodeType": "YulVariableDeclaration",
															"src": "6103:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6120:4:0",
																		"nodeType": "YulLiteral",
																		"src": "6120:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6114:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "6114:5:0"
																},
																"nativeSrc": "6114:11:0",
																"nodeType": "YulFunctionCall",
																"src": "6114:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "6107:3:0",
																	"nodeType": "YulTypedName",
																	"src": "6107:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "6149:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6149:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6154:4:0",
																				"nodeType": "YulLiteral",
																				"src": "6154:4:0",
																				"type": "",
																				"value": "0x38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6145:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "6145:3:0"
																		},
																		"nativeSrc": "6145:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6145:14:0"
																	},
																	{
																		"name": "deployer",
																		"nativeSrc": "6161:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "6161:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6138:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6138:6:0"
																},
																"nativeSrc": "6138:32:0",
																"nodeType": "YulFunctionCall",
																"src": "6138:32:0"
															},
															"nativeSrc": "6138:32:0",
															"nodeType": "YulExpressionStatement",
															"src": "6138:32:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "6194:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6194:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6199:4:0",
																				"nodeType": "YulLiteral",
																				"src": "6199:4:0",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6190:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "6190:3:0"
																		},
																		"nativeSrc": "6190:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6190:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6206:34:0",
																		"nodeType": "YulLiteral",
																		"src": "6206:34:0",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3ff"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6183:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6183:6:0"
																},
																"nativeSrc": "6183:58:0",
																"nodeType": "YulFunctionCall",
																"src": "6183:58:0"
															},
															"nativeSrc": "6183:58:0",
															"nodeType": "YulExpressionStatement",
															"src": "6183:58:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "6265:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6265:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6270:4:0",
																				"nodeType": "YulLiteral",
																				"src": "6270:4:0",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6261:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "6261:3:0"
																		},
																		"nativeSrc": "6261:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6261:14:0"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "6277:14:0",
																		"nodeType": "YulIdentifier",
																		"src": "6277:14:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6254:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6254:6:0"
																},
																"nativeSrc": "6254:38:0",
																"nodeType": "YulFunctionCall",
																"src": "6254:38:0"
															},
															"nativeSrc": "6254:38:0",
															"nodeType": "YulExpressionStatement",
															"src": "6254:38:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6312:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "6312:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6317:42:0",
																		"nodeType": "YulLiteral",
																		"src": "6317:42:0",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6305:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6305:6:0"
																},
																"nativeSrc": "6305:55:0",
																"nodeType": "YulFunctionCall",
																"src": "6305:55:0"
															},
															"nativeSrc": "6305:55:0",
															"nodeType": "YulExpressionStatement",
															"src": "6305:55:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "6384:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6384:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6389:4:0",
																				"nodeType": "YulLiteral",
																				"src": "6389:4:0",
																				"type": "",
																				"value": "0x58"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6380:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "6380:3:0"
																		},
																		"nativeSrc": "6380:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6380:14:0"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "6396:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "6396:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6373:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6373:6:0"
																},
																"nativeSrc": "6373:28:0",
																"nodeType": "YulFunctionCall",
																"src": "6373:28:0"
															},
															"nativeSrc": "6373:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "6373:28:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "6425:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "6425:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6430:4:0",
																				"nodeType": "YulLiteral",
																				"src": "6430:4:0",
																				"type": "",
																				"value": "0x78"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6421:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "6421:3:0"
																		},
																		"nativeSrc": "6421:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6421:14:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "6451:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "6451:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6456:4:0",
																						"nodeType": "YulLiteral",
																						"src": "6456:4:0",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6447:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "6447:3:0"
																				},
																				"nativeSrc": "6447:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "6447:14:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6463:4:0",
																				"nodeType": "YulLiteral",
																				"src": "6463:4:0",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "6437:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "6437:9:0"
																		},
																		"nativeSrc": "6437:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6437:31:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6414:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6414:6:0"
																},
																"nativeSrc": "6414:55:0",
																"nodeType": "YulFunctionCall",
																"src": "6414:55:0"
															},
															"nativeSrc": "6414:55:0",
															"nodeType": "YulExpressionStatement",
															"src": "6414:55:0"
														},
														{
															"nativeSrc": "6482:93:0",
															"nodeType": "YulAssignment",
															"src": "6482:93:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "6513:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "6513:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6518:4:0",
																						"nodeType": "YulLiteral",
																						"src": "6518:4:0",
																						"type": "",
																						"value": "0x43"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6509:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "6509:3:0"
																				},
																				"nativeSrc": "6509:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "6509:14:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6525:4:0",
																				"nodeType": "YulLiteral",
																				"src": "6525:4:0",
																				"type": "",
																				"value": "0x55"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "6499:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "6499:9:0"
																		},
																		"nativeSrc": "6499:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6499:31:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6532:42:0",
																		"nodeType": "YulLiteral",
																		"src": "6532:42:0",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6495:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "6495:3:0"
																},
																"nativeSrc": "6495:80:0",
																"nodeType": "YulFunctionCall",
																"src": "6495:80:0"
															},
															"variableNames": [
																{
																	"name": "predicted",
																	"nativeSrc": "6482:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "6482:9:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 138,
														"isOffset": false,
														"isSlot": false,
														"src": "6161:8:0",
														"valueSize": 1
													},
													{
														"declaration": 134,
														"isOffset": false,
														"isSlot": false,
														"src": "6277:14:0",
														"valueSize": 1
													},
													{
														"declaration": 141,
														"isOffset": false,
														"isSlot": false,
														"src": "6482:9:0",
														"valueSize": 1
													},
													{
														"declaration": 136,
														"isOffset": false,
														"isSlot": false,
														"src": "6396:4:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 143,
												"nodeType": "InlineAssembly",
												"src": "6064:521:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "5785:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "5898:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "5943:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5935:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5935:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5975:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5967:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 135,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "5997:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5989:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5989:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5925:86:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "6043:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "6035:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6034:19:0"
									},
									"scope": 398,
									"src": "5889:702:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "6840:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 156,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "6885:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 157,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "6901:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 160,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6915:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 158,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6907:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 155,
														"name": "predictDeterministicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															145,
															165
														],
														"referencedDeclaration": 145,
														"src": "6857:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes32,address) pure returns (address)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6857:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 163,
												"nodeType": "Return",
												"src": "6850:71:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "6597:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "6710:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "6755:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "6747:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "6787:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "6779:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6737:60:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "6829:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "6821:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6821:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6820:19:0"
									},
									"scope": 398,
									"src": "6701:227:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "7769:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 176,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "7809:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 177,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "7825:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7831:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 175,
														"name": "cloneWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															182,
															236
														],
														"referencedDeclaration": 236,
														"src": "7786:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes memory,uint256) returns (address)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7786:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 174,
												"id": 180,
												"nodeType": "Return",
												"src": "7779:54:0"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "6934:719:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create opcode, which should never revert.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later."
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneWithImmutableArgs",
									"nameLocation": "7667:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "7698:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "7690:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7690:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "7727:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "7714:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 169,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7714:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7689:43:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "7759:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "7751:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7751:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7750:18:0"
									},
									"scope": 398,
									"src": "7658:182:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "8763:437:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8785:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8777:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 194,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8777:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8777:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8791:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "8777:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 199,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "8801:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8777:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 213,
												"nodeType": "IfStatement",
												"src": "8773:123:0",
												"trueBody": {
													"id": 212,
													"nodeType": "Block",
													"src": "8808:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 206,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "8864:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8856:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 204,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "8856:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8856:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8870:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "8856:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 209,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "8879:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 201,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "8829:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8836:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "8829:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8829:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 211,
															"nodeType": "RevertStatement",
															"src": "8822:63:0"
														}
													]
												}
											},
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "8918:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "8905:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 214,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8905:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 220,
												"initialValue": {
													"arguments": [
														{
															"id": 217,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "8957:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 218,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "8973:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 216,
														"name": "_cloneCodeWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "8929:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8929:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8905:73:0"
											},
											{
												"AST": {
													"nativeSrc": "9013:87:0",
													"nodeType": "YulBlock",
													"src": "9013:87:0",
													"statements": [
														{
															"nativeSrc": "9027:63:0",
															"nodeType": "YulAssignment",
															"src": "9027:63:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9046:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "9046:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "9057:8:0",
																				"nodeType": "YulIdentifier",
																				"src": "9057:8:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9067:4:0",
																				"nodeType": "YulLiteral",
																				"src": "9067:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9053:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "9053:3:0"
																		},
																		"nativeSrc": "9053:19:0",
																		"nodeType": "YulFunctionCall",
																		"src": "9053:19:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "9080:8:0",
																				"nodeType": "YulIdentifier",
																				"src": "9080:8:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9074:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "9074:5:0"
																		},
																		"nativeSrc": "9074:15:0",
																		"nodeType": "YulFunctionCall",
																		"src": "9074:15:0"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nativeSrc": "9039:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "9039:6:0"
																},
																"nativeSrc": "9039:51:0",
																"nodeType": "YulFunctionCall",
																"src": "9039:51:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "9027:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "9027:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 215,
														"isOffset": false,
														"isSlot": false,
														"src": "9057:8:0",
														"valueSize": 1
													},
													{
														"declaration": 215,
														"isOffset": false,
														"isSlot": false,
														"src": "9080:8:0",
														"valueSize": 1
													},
													{
														"declaration": 192,
														"isOffset": false,
														"isSlot": false,
														"src": "9027:8:0",
														"valueSize": 1
													},
													{
														"declaration": 189,
														"isOffset": false,
														"isSlot": false,
														"src": "9046:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 221,
												"nodeType": "InlineAssembly",
												"src": "8988:112:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 222,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "9113:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9133:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9125:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 223,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9125:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9125:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9113:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 234,
												"nodeType": "IfStatement",
												"src": "9109:85:0",
												"trueBody": {
													"id": 233,
													"nodeType": "Block",
													"src": "9137:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 228,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "9158:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9165:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "9158:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9158:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 232,
															"nodeType": "RevertStatement",
															"src": "9151:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "7846:756:0",
										"text": " @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n parameter to send native currency to the new contract.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneWithImmutableArgs",
									"nameLocation": "8616:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "8656:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "8648:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "8693:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "8680:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8680:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8715:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "8707:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8638:88:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "8753:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "8745:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8744:18:0"
									},
									"scope": 398,
									"src": "8607:593:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "10279:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 249,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "10332:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 250,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "10348:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 251,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "10354:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "30",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10360:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 248,
														"name": "cloneDeterministicWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															256,
															285
														],
														"referencedDeclaration": 285,
														"src": "10296:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes memory,bytes32,uint256) returns (address)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10296:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 247,
												"id": 254,
												"nodeType": "Return",
												"src": "10289:73:0"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "9206:900:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n at the same address.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministicWithImmutableArgs",
									"nameLocation": "10120:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "10173:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "10165:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10165:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "10210:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "10197:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 240,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10197:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "10232:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "10224:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10155:87:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "10269:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "10261:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10260:18:0"
									},
									"scope": 398,
									"src": "10111:258:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "11361:144:0",
										"statements": [
											{
												"assignments": [
													271
												],
												"declarations": [
													{
														"constant": false,
														"id": 271,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "11384:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "11371:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 270,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "11371:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 276,
												"initialValue": {
													"arguments": [
														{
															"id": 273,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "11423:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 274,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "11439:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 272,
														"name": "_cloneCodeWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "11395:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11395:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11371:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 279,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "11476:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 280,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "11483:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 281,
															"name": "bytecode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "11489:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 277,
															"name": "Create2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "11461:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Create2_$497_$",
																"typeString": "type(library Create2)"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11469:6:0",
														"memberName": "deploy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 462,
														"src": "11461:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
															"typeString": "function (uint256,bytes32,bytes memory) returns (address)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11461:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 269,
												"id": 283,
												"nodeType": "Return",
												"src": "11454:44:0"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "10375:790:0",
										"text": " @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n but with a `value` parameter to send native currency to the new contract.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministicWithImmutableArgs",
									"nameLocation": "11179:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "11232:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "11224:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "11269:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "11256:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11256:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "11291:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "11283:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 262,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11283:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11313:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "11305:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11214:110:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "11351:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "11343:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11343:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11342:18:0"
									},
									"scope": 398,
									"src": "11170:335:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "11841:166:0",
										"statements": [
											{
												"assignments": [
													300
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "11864:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 315,
														"src": "11851:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 299,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "11851:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"arguments": [
														{
															"id": 302,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "11903:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "11919:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 301,
														"name": "_cloneCodeWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "11875:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11875:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11851:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 308,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "11964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 310,
																	"name": "bytecode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "11980:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 309,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "11970:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11970:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 312,
															"name": "deployer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "11991:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 306,
															"name": "Create2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "11941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Create2_$497_$",
																"typeString": "type(library Create2)"
															}
														},
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11949:14:0",
														"memberName": "computeAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 496,
														"src": "11941:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (bytes32,bytes32,address) pure returns (address)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11941:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 298,
												"id": 314,
												"nodeType": "Return",
												"src": "11934:66:0"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "11511:116:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddressWithImmutableArgs",
									"nameLocation": "11641:44:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "11703:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "11695:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "11740:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "11727:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11727:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "11762:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "11754:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 291,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "11784:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "11776:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11685:113:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "11830:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "11822:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11822:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11821:19:0"
									},
									"scope": 398,
									"src": "11632:375:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "12317:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 329,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "12379:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "12395:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 331,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "12401:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 334,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "12415:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12407:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 332,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12407:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12407:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 328,
														"name": "predictDeterministicAddressWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															316,
															339
														],
														"referencedDeclaration": 316,
														"src": "12334:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes memory,bytes32,address) pure returns (address)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12334:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 327,
												"id": 337,
												"nodeType": "Return",
												"src": "12327:94:0"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "12013:116:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."
									},
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddressWithImmutableArgs",
									"nameLocation": "12143:44:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "12205:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "12197:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "12242:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "12229:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 320,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12229:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "12264:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "12256:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12256:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12187:87:0"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "12306:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "12298:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12297:19:0"
									},
									"scope": 398,
									"src": "12134:294:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "13121:246:0",
										"statements": [
											{
												"assignments": [
													348
												],
												"declarations": [
													{
														"constant": false,
														"id": 348,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13144:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 361,
														"src": "13131:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 347,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13131:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 357,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 351,
																		"name": "instance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "13163:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13172:4:0",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "13163:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13177:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "13163:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "3435",
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13186:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_45_by_1",
																	"typeString": "int_const 45"
																},
																"value": "45"
															},
															"src": "13163:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "13153:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 349,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13157:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13153:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13131:58:0"
											},
											{
												"AST": {
													"nativeSrc": "13257:81:0",
													"nodeType": "YulBlock",
													"src": "13257:81:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "instance",
																		"nativeSrc": "13283:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "13283:8:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "13297:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "13297:6:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13305:2:0",
																				"nodeType": "YulLiteral",
																				"src": "13305:2:0",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13293:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "13293:3:0"
																		},
																		"nativeSrc": "13293:15:0",
																		"nodeType": "YulFunctionCall",
																		"src": "13293:15:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13310:2:0",
																		"nodeType": "YulLiteral",
																		"src": "13310:2:0",
																		"type": "",
																		"value": "45"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "13320:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "13320:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13314:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "13314:5:0"
																		},
																		"nativeSrc": "13314:13:0",
																		"nodeType": "YulFunctionCall",
																		"src": "13314:13:0"
																	}
																],
																"functionName": {
																	"name": "extcodecopy",
																	"nativeSrc": "13271:11:0",
																	"nodeType": "YulIdentifier",
																	"src": "13271:11:0"
																},
																"nativeSrc": "13271:57:0",
																"nodeType": "YulFunctionCall",
																"src": "13271:57:0"
															},
															"nativeSrc": "13271:57:0",
															"nodeType": "YulExpressionStatement",
															"src": "13271:57:0"
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 342,
														"isOffset": false,
														"isSlot": false,
														"src": "13283:8:0",
														"valueSize": 1
													},
													{
														"declaration": 348,
														"isOffset": false,
														"isSlot": false,
														"src": "13297:6:0",
														"valueSize": 1
													},
													{
														"declaration": 348,
														"isOffset": false,
														"isSlot": false,
														"src": "13320:6:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 358,
												"nodeType": "InlineAssembly",
												"src": "13232:106:0"
											},
											{
												"expression": {
													"id": 359,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 348,
													"src": "13354:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 346,
												"id": 360,
												"nodeType": "Return",
												"src": "13347:13:0"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "12434:603:0",
										"text": " @dev Get the immutable args attached to a clone.\n - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n   function will return an empty array.\n - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n   creation.\n - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n   function should only be used to check addresses that are known to be clones."
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchCloneArgs",
									"nameLocation": "13051:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "13074:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "13066:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13066:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13065:18:0"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "13107:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 344,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13107:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13106:14:0"
									},
									"scope": 398,
									"src": "13042:325:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "14156:362:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 372,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "14170:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14175:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14170:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3234353331",
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14184:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_24531_by_1",
															"typeString": "int_const 24531"
														},
														"value": "24531"
													},
													"src": "14170:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 379,
												"nodeType": "IfStatement",
												"src": "14166:55:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 376,
															"name": "CloneArgumentsTooLong",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "14198:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14198:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 378,
													"nodeType": "RevertStatement",
													"src": "14191:30:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "61",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14284:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																"typeString": "literal_string \"a\""
															},
															"value": "a"
														},
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 385,
																			"name": "args",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 367,
																			"src": "14316:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14321:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "14316:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3435",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14330:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_45_by_1",
																			"typeString": "int_const 45"
																		},
																		"value": "45"
																	},
																	"src": "14316:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14309:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint16_$",
																	"typeString": "type(uint16)"
																},
																"typeName": {
																	"id": 383,
																	"name": "uint16",
																	"nodeType": "ElementaryTypeName",
																	"src": "14309:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14309:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"hexValue": "3d81600a3d39f3363d3d373d3d3d363d73",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14351:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4",
																"typeString": "literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""
															}
														},
														{
															"id": 391,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "14408:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "5af43d82803e903d91602b57fd5bf3",
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14440:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45",
																"typeString": "literal_string hex\"5af43d82803e903d91602b57fd5bf3\""
															}
														},
														{
															"id": 393,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "14493:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																"typeString": "literal_string \"a\""
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4",
																"typeString": "literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45",
																"typeString": "literal_string hex\"5af43d82803e903d91602b57fd5bf3\""
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 380,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "14250:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14254:12:0",
														"memberName": "encodePacked",
														"nodeType": "MemberAccess",
														"src": "14250:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14250:261:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 371,
												"id": 395,
												"nodeType": "Return",
												"src": "14231:280:0"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "13373:640:0",
										"text": " @dev Helper that prepares the initcode of the proxy with immutable args.\n An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n abi.encodePacked is more expensive but also more portable and easier to review.\n NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes."
									},
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_cloneCodeWithImmutableArgs",
									"nameLocation": "14027:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "14072:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "14064:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14064:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "14109:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "14096:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 366,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14096:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14054:65:0"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "14142:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14142:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14141:14:0"
									},
									"scope": 398,
									"src": "14018:500:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 399,
							"src": "817:13703:0",
							"usedErrors": [
								8
							],
							"usedEvents": []
						}
					],
					"src": "100:14421:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Create2.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
					"exportedSymbols": {
						"Create2": [
							497
						],
						"Errors": [
							519
						]
					},
					"id": 498,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 400,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 498,
							"sourceUnit": 520,
							"src": "127:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 401,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 519,
										"src": "135:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Create2",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 403,
								"nodeType": "StructuredDocumentation",
								"src": "165:367:1",
								"text": " @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."
							},
							"fullyImplemented": true,
							"id": 497,
							"linearizedBaseContracts": [
								497
							],
							"name": "Create2",
							"nameLocation": "541:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "555:50:1",
										"text": " @dev There's no code to deploy."
									},
									"errorSelector": "4ca249dc",
									"id": 406,
									"name": "Create2EmptyBytecode",
									"nameLocation": "616:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "636:2:1"
									},
									"src": "610:29:1"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "1311:746:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 420,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1333:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																],
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 418,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1325:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1325:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1339:7:1",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1325:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 423,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "1349:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1325:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 437,
												"nodeType": "IfStatement",
												"src": "1321:125:1",
												"trueBody": {
													"id": 436,
													"nodeType": "Block",
													"src": "1357:89:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 430,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1413:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Create2_$497",
																						"typeString": "library Create2"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Create2_$497",
																						"typeString": "library Create2"
																					}
																				],
																				"id": 429,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1405:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 428,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1405:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1405:13:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1419:7:1",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1405:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 433,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "1428:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 425,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "1378:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1385:19:1",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "1378:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1378:57:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 435,
															"nodeType": "RevertStatement",
															"src": "1371:64:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 438,
															"name": "bytecode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "1459:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1468:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1459:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1478:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1459:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 446,
												"nodeType": "IfStatement",
												"src": "1455:80:1",
												"trueBody": {
													"id": 445,
													"nodeType": "Block",
													"src": "1481:54:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 442,
																	"name": "Create2EmptyBytecode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "1502:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1502:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 444,
															"nodeType": "RevertStatement",
															"src": "1495:29:1"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "1569:392:1",
													"nodeType": "YulBlock",
													"src": "1569:392:1",
													"statements": [
														{
															"nativeSrc": "1583:67:1",
															"nodeType": "YulAssignment",
															"src": "1583:67:1",
															"value": {
																"arguments": [
																	{
																		"name": "amount",
																		"nativeSrc": "1599:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1599:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "1611:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1611:8:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1621:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1621:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1607:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1607:3:1"
																		},
																		"nativeSrc": "1607:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1607:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "1634:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1634:8:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1628:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "1628:5:1"
																		},
																		"nativeSrc": "1628:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1628:15:1"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "1645:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1645:4:1"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nativeSrc": "1591:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1591:7:1"
																},
																"nativeSrc": "1591:59:1",
																"nodeType": "YulFunctionCall",
																"src": "1591:59:1"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nativeSrc": "1583:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1583:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1800:151:1",
																"nodeType": "YulBlock",
																"src": "1800:151:1",
																"statements": [
																	{
																		"nativeSrc": "1818:20:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1818:20:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1833:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1833:4:1",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "1827:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1827:5:1"
																			},
																			"nativeSrc": "1827:11:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1827:11:1"
																		},
																		"variables": [
																			{
																				"name": "p",
																				"nativeSrc": "1822:1:1",
																				"nodeType": "YulTypedName",
																				"src": "1822:1:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "p",
																					"nativeSrc": "1870:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1870:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1873:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1873:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "1876:14:1",
																						"nodeType": "YulIdentifier",
																						"src": "1876:14:1"
																					},
																					"nativeSrc": "1876:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1876:16:1"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "1855:14:1",
																				"nodeType": "YulIdentifier",
																				"src": "1855:14:1"
																			},
																			"nativeSrc": "1855:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1855:38:1"
																		},
																		"nativeSrc": "1855:38:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1855:38:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "p",
																					"nativeSrc": "1917:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1917:1:1"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "1920:14:1",
																						"nodeType": "YulIdentifier",
																						"src": "1920:14:1"
																					},
																					"nativeSrc": "1920:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1920:16:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1910:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1910:6:1"
																			},
																			"nativeSrc": "1910:27:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1910:27:1"
																		},
																		"nativeSrc": "1910:27:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1910:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "addr",
																				"nativeSrc": "1762:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1762:4:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1755:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1755:6:1"
																		},
																		"nativeSrc": "1755:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1755:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nativeSrc": "1780:14:1",
																							"nodeType": "YulIdentifier",
																							"src": "1780:14:1"
																						},
																						"nativeSrc": "1780:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1780:16:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1773:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1773:6:1"
																				},
																				"nativeSrc": "1773:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1773:24:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1769:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1769:3:1"
																		},
																		"nativeSrc": "1769:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1769:29:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1751:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1751:3:1"
																},
																"nativeSrc": "1751:48:1",
																"nodeType": "YulFunctionCall",
																"src": "1751:48:1"
															},
															"nativeSrc": "1748:203:1",
															"nodeType": "YulIf",
															"src": "1748:203:1"
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 416,
														"isOffset": false,
														"isSlot": false,
														"src": "1583:4:1",
														"valueSize": 1
													},
													{
														"declaration": 416,
														"isOffset": false,
														"isSlot": false,
														"src": "1762:4:1",
														"valueSize": 1
													},
													{
														"declaration": 409,
														"isOffset": false,
														"isSlot": false,
														"src": "1599:6:1",
														"valueSize": 1
													},
													{
														"declaration": 413,
														"isOffset": false,
														"isSlot": false,
														"src": "1611:8:1",
														"valueSize": 1
													},
													{
														"declaration": 413,
														"isOffset": false,
														"isSlot": false,
														"src": "1634:8:1",
														"valueSize": 1
													},
													{
														"declaration": 411,
														"isOffset": false,
														"isSlot": false,
														"src": "1645:4:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 447,
												"nodeType": "InlineAssembly",
												"src": "1544:417:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 448,
														"name": "addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "1974:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1990:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1982:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 449,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1982:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1982:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1974:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 460,
												"nodeType": "IfStatement",
												"src": "1970:81:1",
												"trueBody": {
													"id": 459,
													"nodeType": "Block",
													"src": "1994:57:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 454,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "2015:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2022:16:1",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "2015:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2015:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 458,
															"nodeType": "RevertStatement",
															"src": "2008:32:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "645:560:1",
										"text": " @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."
									},
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deploy",
									"nameLocation": "1219:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1234:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1226:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "1250:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1242:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 410,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "bytecode",
												"nameLocation": "1269:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1256:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 412,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1256:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1225:53:1"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1297:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:14:1"
									},
									"scope": 497,
									"src": "1210:847:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "2353:73:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 473,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "2385:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 474,
															"name": "bytecodeHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "2391:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 477,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2413:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																],
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2405:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 475,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2405:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2405:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 472,
														"name": "computeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															482,
															496
														],
														"referencedDeclaration": 496,
														"src": "2370:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (bytes32,bytes32,address) pure returns (address)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 480,
												"nodeType": "Return",
												"src": "2363:56:1"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2063:193:1",
										"text": " @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nameLocation": "2270:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2293:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2285:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 464,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "bytecodeHash",
												"nameLocation": "2307:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2299:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 466,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2299:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:36:1"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2344:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2343:9:1"
									},
									"scope": 497,
									"src": "2261:165:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2784:1679:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2819:1638:1",
													"nodeType": "YulBlock",
													"src": "2819:1638:1",
													"statements": [
														{
															"nativeSrc": "2833:22:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2833:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2850:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2850:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2844:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2844:5:1"
																},
																"nativeSrc": "2844:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2844:11:1"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "2837:3:1",
																	"nodeType": "YulTypedName",
																	"src": "2837:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4057:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4057:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4062:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4062:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4053:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4053:3:1"
																		},
																		"nativeSrc": "4053:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4053:14:1"
																	},
																	{
																		"name": "bytecodeHash",
																		"nativeSrc": "4069:12:1",
																		"nodeType": "YulIdentifier",
																		"src": "4069:12:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4046:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:1"
																},
																"nativeSrc": "4046:36:1",
																"nodeType": "YulFunctionCall",
																"src": "4046:36:1"
															},
															"nativeSrc": "4046:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "4046:36:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4106:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4106:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4111:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4111:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4102:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4102:3:1"
																		},
																		"nativeSrc": "4102:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4102:14:1"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "4118:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4118:4:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4095:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4095:6:1"
																},
																"nativeSrc": "4095:28:1",
																"nodeType": "YulFunctionCall",
																"src": "4095:28:1"
															},
															"nativeSrc": "4095:28:1",
															"nodeType": "YulExpressionStatement",
															"src": "4095:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4143:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4143:3:1"
																	},
																	{
																		"name": "deployer",
																		"nativeSrc": "4148:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "4148:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4136:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4136:6:1"
																},
																"nativeSrc": "4136:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4136:21:1"
															},
															"nativeSrc": "4136:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4136:21:1"
														},
														{
															"nativeSrc": "4219:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4219:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4236:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4236:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4241:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4241:4:1",
																		"type": "",
																		"value": "0x0b"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4232:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4232:3:1"
																},
																"nativeSrc": "4232:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4232:14:1"
															},
															"variables": [
																{
																	"name": "start",
																	"nativeSrc": "4223:5:1",
																	"nodeType": "YulTypedName",
																	"src": "4223:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4345:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4345:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4352:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4352:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "mstore8",
																	"nativeSrc": "4337:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4337:7:1"
																},
																"nativeSrc": "4337:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4337:20:1"
															},
															"nativeSrc": "4337:20:1",
															"nodeType": "YulExpressionStatement",
															"src": "4337:20:1"
														},
														{
															"nativeSrc": "4370:77:1",
															"nodeType": "YulAssignment",
															"src": "4370:77:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "start",
																				"nativeSrc": "4392:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4392:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4399:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4399:2:1",
																				"type": "",
																				"value": "85"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "4382:9:1",
																			"nodeType": "YulIdentifier",
																			"src": "4382:9:1"
																		},
																		"nativeSrc": "4382:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4382:20:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4404:42:1",
																		"nodeType": "YulLiteral",
																		"src": "4404:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4378:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4378:3:1"
																},
																"nativeSrc": "4378:69:1",
																"nodeType": "YulFunctionCall",
																"src": "4378:69:1"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nativeSrc": "4370:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4370:4:1"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 492,
														"isOffset": false,
														"isSlot": false,
														"src": "4370:4:1",
														"valueSize": 1
													},
													{
														"declaration": 487,
														"isOffset": false,
														"isSlot": false,
														"src": "4069:12:1",
														"valueSize": 1
													},
													{
														"declaration": 489,
														"isOffset": false,
														"isSlot": false,
														"src": "4148:8:1",
														"valueSize": 1
													},
													{
														"declaration": 485,
														"isOffset": false,
														"isSlot": false,
														"src": "4118:4:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 494,
												"nodeType": "InlineAssembly",
												"src": "2794:1663:1"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "2432:232:1",
										"text": " @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nameLocation": "2678:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2701:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2693:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 484,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "bytecodeHash",
												"nameLocation": "2715:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2707:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 486,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2707:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "2737:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2729:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2729:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2692:54:1"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2778:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2770:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:14:1"
									},
									"scope": 497,
									"src": "2669:1794:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 498,
							"src": "533:3932:1",
							"usedErrors": [
								406
							],
							"usedEvents": []
						}
					],
					"src": "101:4365:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							519
						]
					},
					"id": 520,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 499,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 500,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:2",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 519,
							"linearizedBaseContracts": [
								519
							],
							"name": "Errors",
							"nameLocation": "419:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:2",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 507,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "557:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "574:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:2"
									},
									"src": "531:59:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:2",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 510,
									"name": "FailedCall",
									"nameLocation": "696:10:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:2"
									},
									"src": "690:19:2"
								},
								{
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:2",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 513,
									"name": "FailedDeployment",
									"nameLocation": "772:16:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:2"
									},
									"src": "766:25:2"
								},
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:2",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 518,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "884:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:2"
									},
									"src": "860:33:2"
								}
							],
							"scope": 520,
							"src": "411:484:2",
							"usedErrors": [
								507,
								510,
								513,
								518
							],
							"usedEvents": []
						}
					],
					"src": "100:796:2"
				},
				"id": 2
			},
			"hopium/common/interface/imDirectory.sol": {
				"ast": {
					"absolutePath": "hopium/common/interface/imDirectory.sol",
					"exportedSymbols": {
						"IDirectory": [
							535
						],
						"ImDirectory": [
							646
						]
					},
					"id": 647,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 521,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDirectory",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 522,
								"nodeType": "StructuredDocumentation",
								"src": "57:78:3",
								"text": "@notice Interface used by the registry to talk to the external directory."
							},
							"fullyImplemented": false,
							"id": 535,
							"linearizedBaseContracts": [
								535
							],
							"name": "IDirectory",
							"nameLocation": "145:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8da5cb5b",
									"id": 527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "171:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "176:2:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "202:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "201:9:3"
									},
									"scope": 535,
									"src": "162:49:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "27262618",
									"id": 534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fetchFromDirectory",
									"nameLocation": "225:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "258:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "244:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 528,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "244:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "243:20:3"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "287:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "286:9:3"
									},
									"scope": 535,
									"src": "216:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 647,
							"src": "135:163:3",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ImDirectory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 646,
							"linearizedBaseContracts": [
								646
							],
							"name": "ImDirectory",
							"nameLocation": "318:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "658a847a",
									"id": 538,
									"mutability": "mutable",
									"name": "Directory",
									"nameLocation": "354:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 646,
									"src": "336:27:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDirectory_$535",
										"typeString": "contract IDirectory"
									},
									"typeName": {
										"id": 537,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 536,
											"name": "IDirectory",
											"nameLocations": [
												"336:10:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 535,
											"src": "336:10:3"
										},
										"referencedDeclaration": 535,
										"src": "336:10:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDirectory_$535",
											"typeString": "contract IDirectory"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "402:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 544,
															"name": "_directory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "426:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 543,
														"name": "_setDirectory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "412:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "412:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "412:25:3"
											}
										]
									},
									"id": 548,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "_directory",
												"nameLocation": "390:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "382:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "382:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "381:20:3"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "402:0:3"
									},
									"scope": 646,
									"src": "370:94:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "541:42:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 556,
															"name": "_directory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "565:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 555,
														"name": "_setDirectory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "551:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "551:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "551:25:3"
											}
										]
									},
									"functionSelector": "ba4c7be1",
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 553,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 552,
												"name": "onlyOwner",
												"nameLocations": [
													"531:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 622,
												"src": "531:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "531:9:3"
										}
									],
									"name": "changeDirectoryAddress",
									"nameLocation": "479:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "_directory",
												"nameLocation": "510:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "502:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "501:20:3"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "541:0:3"
									},
									"scope": 646,
									"src": "470:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "641:409:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 566,
																"name": "_directory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "659:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "681:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "673:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 567,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "673:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "673:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "659:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4469726563746f72792063616e6e6f74206265207a65726f2061646472657373",
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "685:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
																"typeString": "literal_string \"Directory cannot be zero address\""
															},
															"value": "Directory cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_78cc6aaae238ab675dc48c2eb3019a0ff779a48bef53c79ee9994bc497571758",
																"typeString": "literal_string \"Directory cannot be zero address\""
															}
														],
														"id": 565,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "651:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "651:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "651:69:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 576,
																		"name": "_directory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 562,
																		"src": "738:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "749:4:3",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "738:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "754:6:3",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "738:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "763:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "738:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4469726563746f7279206d757374206265206120636f6e7472616374",
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "766:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
																"typeString": "literal_string \"Directory must be a contract\""
															},
															"value": "Directory must be a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5de2676c383414c8c97c76121b8b206c0509810e45e3b1a2baa8a6a892282679",
																"typeString": "literal_string \"Directory must be a contract\""
															}
														],
														"id": 575,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "730:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "730:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "730:67:3"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 598,
															"nodeType": "Block",
															"src": "899:59:3",
															"statements": [
																{
																	"expression": {
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 592,
																			"name": "Directory",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 538,
																			"src": "913:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IDirectory_$535",
																				"typeString": "contract IDirectory"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 594,
																					"name": "_directory",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 562,
																					"src": "936:10:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 593,
																				"name": "IDirectory",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 535,
																				"src": "925:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IDirectory_$535_$",
																					"typeString": "type(contract IDirectory)"
																				}
																			},
																			"id": 595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "925:22:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IDirectory_$535",
																				"typeString": "contract IDirectory"
																			}
																		},
																		"src": "913:34:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IDirectory_$535",
																			"typeString": "contract IDirectory"
																		}
																	},
																	"id": 597,
																	"nodeType": "ExpressionStatement",
																	"src": "913:34:3"
																}
															]
														},
														"errorName": "",
														"id": 599,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 591,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 590,
																	"mutability": "mutable",
																	"name": "",
																	"nameLocation": "-1:-1:-1",
																	"nodeType": "VariableDeclaration",
																	"scope": 599,
																	"src": "890:7:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 589,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "890:7:3",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "889:9:3"
														},
														"src": "881:77:3"
													},
													{
														"block": {
															"id": 604,
															"nodeType": "Block",
															"src": "965:79:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "4469726563746f7279206164647265737320646f6573206e6f7420696d706c656d656e74206f776e65722829",
																				"id": 601,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "986:46:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
																					"typeString": "literal_string \"Directory address does not implement owner()\""
																				},
																				"value": "Directory address does not implement owner()"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_81f24397e0c39af1e2d9ecf9da7f2cc5bad3301b06b0c6242026e544dd7b72af",
																					"typeString": "literal_string \"Directory address does not implement owner()\""
																				}
																			],
																			"id": 600,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "979:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "979:54:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 603,
																	"nodeType": "ExpressionStatement",
																	"src": "979:54:3"
																}
															]
														},
														"errorName": "",
														"id": 605,
														"nodeType": "TryCatchClause",
														"src": "959:85:3"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 585,
																	"name": "_directory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 562,
																	"src": "861:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 584,
																"name": "IDirectory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "850:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDirectory_$535_$",
																	"typeString": "type(contract IDirectory)"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "850:22:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDirectory_$535",
																"typeString": "contract IDirectory"
															}
														},
														"id": 587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "873:5:3",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 527,
														"src": "850:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "850:30:3",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 606,
												"nodeType": "TryStatement",
												"src": "846:198:3"
											}
										]
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setDirectory",
									"nameLocation": "598:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "_directory",
												"nameLocation": "620:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "612:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:20:3"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "641:0:3"
									},
									"scope": 646,
									"src": "589:461:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "1077:95:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 611,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1095:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1099:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1095:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 613,
																		"name": "Directory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 538,
																		"src": "1109:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IDirectory_$535",
																			"typeString": "contract IDirectory"
																		}
																	},
																	"id": 614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1119:5:3",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 527,
																	"src": "1109:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1109:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1095:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420746865206f776e6572",
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1128:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
																"typeString": "literal_string \"Caller is not the owner\""
															},
															"value": "Caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
																"typeString": "literal_string \"Caller is not the owner\""
															}
														],
														"id": 610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1087:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1087:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "1087:67:3"
											},
											{
												"id": 620,
												"nodeType": "PlaceholderStatement",
												"src": "1164:1:3"
											}
										]
									},
									"id": 622,
									"name": "onlyOwner",
									"nameLocation": "1065:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1074:2:3"
									},
									"src": "1056:116:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "1225:41:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 627,
															"name": "Directory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "1242:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDirectory_$535",
																"typeString": "contract IDirectory"
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1252:5:3",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 527,
														"src": "1242:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1242:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 626,
												"id": 630,
												"nodeType": "Return",
												"src": "1235:24:3"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1187:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1192:2:3"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1216:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1215:9:3"
									},
									"scope": 646,
									"src": "1178:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "1350:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 641,
															"name": "_key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "1396:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 639,
															"name": "Directory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "1367:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDirectory_$535",
																"typeString": "contract IDirectory"
															}
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1377:18:3",
														"memberName": "fetchFromDirectory",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 534,
														"src": "1367:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
															"typeString": "function (string memory) view external returns (address)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1367:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 638,
												"id": 643,
												"nodeType": "Return",
												"src": "1360:41:3"
											}
										]
									},
									"functionSelector": "27262618",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchFromDirectory",
									"nameLocation": "1281:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "1314:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "1300:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 633,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1300:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1299:20:3"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "1341:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:9:3"
									},
									"scope": 646,
									"src": "1272:136:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 647,
							"src": "300:1110:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1379:3"
				},
				"id": 3
			},
			"hopium/etf/interface/iEtfToken.sol": {
				"ast": {
					"absolutePath": "hopium/etf/interface/iEtfToken.sol",
					"exportedSymbols": {
						"IEtfToken": [
							674
						]
					},
					"id": 675,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 648,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IEtfToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 674,
							"linearizedBaseContracts": [
								674
							],
							"name": "IEtfToken",
							"nameLocation": "67:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "6ebd362c",
									"id": 659,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "91:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "etfId_",
												"nameLocation": "110:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "102:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "102:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "132:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "118:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 651,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "118:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "153:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "139:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 653,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "139:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "directory_",
												"nameLocation": "170:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "162:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "162:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "101:80:4"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "190:0:4"
									},
									"scope": 674,
									"src": "82:109:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "204:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "217:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "209:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "209:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "229:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "221:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "221:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "208:28:4"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "245:0:4"
									},
									"scope": 674,
									"src": "195:51:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9dc29fac",
									"id": 673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "259:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "272:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "264:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "286:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "278:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "278:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "263:30:4"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "302:0:4"
									},
									"scope": 674,
									"src": "250:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 675,
							"src": "57:248:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:274:4"
				},
				"id": 4
			},
			"hopium/etf/main/etf-token-deployer.sol": {
				"ast": {
					"absolutePath": "hopium/etf/main/etf-token-deployer.sol",
					"exportedSymbols": {
						"Clones": [
							398
						],
						"Create2": [
							497
						],
						"Errors": [
							519
						],
						"EtfTokenDeployer": [
							780
						],
						"Helpers": [
							726
						],
						"IDirectory": [
							535
						],
						"IEtfToken": [
							674
						],
						"ImDirectory": [
							646
						]
					},
					"id": 781,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 676,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
							"file": "@openzeppelin/contracts/proxy/Clones.sol",
							"id": 677,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 781,
							"sourceUnit": 399,
							"src": "57:50:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "hopium/common/interface/imDirectory.sol",
							"file": "hopium/common/interface/imDirectory.sol",
							"id": 678,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 781,
							"sourceUnit": 647,
							"src": "109:49:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "hopium/etf/interface/iEtfToken.sol",
							"file": "hopium/etf/interface/iEtfToken.sol",
							"id": 679,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 781,
							"sourceUnit": 675,
							"src": "159:44:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 680,
										"name": "ImDirectory",
										"nameLocations": [
											"234:11:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 646,
										"src": "234:11:5"
									},
									"id": 681,
									"nodeType": "InheritanceSpecifier",
									"src": "234:11:5"
								}
							],
							"canonicalName": "Helpers",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 726,
							"linearizedBaseContracts": [
								726,
								646
							],
							"name": "Helpers",
							"nameLocation": "223:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "311:251:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 689,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "385:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "391:9:5",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "385:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 691,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "418:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "424:10:5",
																	"memberName": "prevrandao",
																	"nodeType": "MemberAccess",
																	"src": "418:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 693,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "494:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "498:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "494:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 695,
																		"name": "gasleft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967289,
																		"src": "522:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "522:9:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 687,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "351:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "355:12:5",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "351:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "351:194:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 686,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "328:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "328:227:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 685,
												"id": 699,
												"nodeType": "Return",
												"src": "321:234:5"
											}
										]
									},
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_randomSalt",
									"nameLocation": "265:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "276:2:5"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "302:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 683,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "302:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "301:9:5"
									},
									"scope": 726,
									"src": "256:306:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"errorSelector": "8020a5c7",
									"id": 703,
									"name": "ImplNotSet",
									"nameLocation": "574:10:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "584:2:5"
									},
									"src": "568:19:5"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "666:123:5",
										"statements": [
											{
												"expression": {
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 708,
														"name": "tokenImpl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "676:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "6574662d746f6b656e2d696d706c",
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "707:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_35720ea11b7d7a1eebd1dc74e0e7fc44cec8d8635deb21dfd9b6e0033dd38705",
																	"typeString": "literal_string \"etf-token-impl\""
																},
																"value": "etf-token-impl"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_35720ea11b7d7a1eebd1dc74e0e7fc44cec8d8635deb21dfd9b6e0033dd38705",
																	"typeString": "literal_string \"etf-token-impl\""
																}
															],
															"id": 709,
															"name": "fetchFromDirectory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "688:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$",
																"typeString": "function (string memory) view returns (address)"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "688:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "676:48:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "676:48:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 714,
														"name": "tokenImpl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "738:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "759:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "751:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 715,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "751:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "751:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "738:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 723,
												"nodeType": "IfStatement",
												"src": "734:48:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 720,
															"name": "ImplNotSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "770:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "770:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 722,
													"nodeType": "RevertStatement",
													"src": "763:19:5"
												}
											}
										]
									},
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTokenImplAddress",
									"nameLocation": "601:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "621:2:5"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "tokenImpl",
												"nameLocation": "655:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "647:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:19:5"
									},
									"scope": 726,
									"src": "592:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 781,
							"src": "205:586:5",
							"usedErrors": [
								703
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 728,
										"name": "ImDirectory",
										"nameLocations": [
											"897:11:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 646,
										"src": "897:11:5"
									},
									"id": 729,
									"nodeType": "InheritanceSpecifier",
									"src": "897:11:5"
								},
								{
									"baseName": {
										"id": 730,
										"name": "Helpers",
										"nameLocations": [
											"910:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 726,
										"src": "910:7:5"
									},
									"id": 731,
									"nodeType": "InheritanceSpecifier",
									"src": "910:7:5"
								}
							],
							"canonicalName": "EtfTokenDeployer",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 727,
								"nodeType": "StructuredDocumentation",
								"src": "793:75:5",
								"text": "@notice Factory that mints minimal-proxy clones of EtfToken (EIP-1167)"
							},
							"fullyImplemented": true,
							"id": 780,
							"linearizedBaseContracts": [
								780,
								726,
								646
							],
							"name": "EtfTokenDeployer",
							"nameLocation": "877:16:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 734,
									"libraryName": {
										"id": 732,
										"name": "Clones",
										"nameLocations": [
											"930:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 398,
										"src": "930:6:5"
									},
									"nodeType": "UsingForDirective",
									"src": "924:25:5",
									"typeName": {
										"id": 733,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "941:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "1011:2:5",
										"statements": []
									},
									"id": 743,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 739,
													"name": "_directory",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 736,
													"src": "999:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 740,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 738,
												"name": "ImDirectory",
												"nameLocations": [
													"987:11:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 646,
												"src": "987:11:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "987:23:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "_directory",
												"nameLocation": "975:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "967:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:20:5"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1011:0:5"
									},
									"scope": 780,
									"src": "955:58:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "1209:304:5",
										"statements": [
											{
												"expression": {
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 755,
														"name": "proxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "1311:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 758,
																	"name": "_getTokenImplAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "1345:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1345:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 760,
																	"name": "_randomSalt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "1369:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1369:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 756,
																"name": "Clones",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "1319:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Clones_$398_$",
																	"typeString": "type(library Clones)"
																}
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1326:18:5",
															"memberName": "cloneDeterministic",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 84,
															"src": "1319:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$",
																"typeString": "function (address,bytes32) returns (address)"
															}
														},
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1319:64:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1311:72:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "1311:72:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 769,
															"name": "etfId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "1466:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 770,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "1473:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														{
															"id": 771,
															"name": "symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "1479:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														{
															"arguments": [
																{
																	"id": 774,
																	"name": "Directory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "1495:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IDirectory_$535",
																		"typeString": "contract IDirectory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IDirectory_$535",
																		"typeString": "contract IDirectory"
																	}
																],
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1487:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 772,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1487:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1487:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 766,
																	"name": "proxy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "1448:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 765,
																"name": "IEtfToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "1438:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IEtfToken_$674_$",
																	"typeString": "type(contract IEtfToken)"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1438:16:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEtfToken_$674",
																"typeString": "contract IEtfToken"
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1455:10:5",
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 659,
														"src": "1438:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (uint256,string memory,string memory,address) external"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1438:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "1438:68:5"
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "1019:67:5",
										"text": "@notice Deploy a new ETF token clone with per-clone name/symbol"
									},
									"functionSelector": "78f6c7c4",
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deployEtfToken",
									"nameLocation": "1100:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "etfId",
												"nameLocation": "1123:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "1115:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1115:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1146:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "1130:20:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 747,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1130:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1168:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "1152:22:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 749,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1152:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1114:61:5"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "proxy",
												"nameLocation": "1202:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "1194:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1194:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1193:15:5"
									},
									"scope": 780,
									"src": "1091:422:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 781,
							"src": "868:648:5",
							"usedErrors": [
								507,
								513,
								703
							],
							"usedEvents": []
						}
					],
					"src": "32:1485:5"
				},
				"id": 5
			}
		}
	}
}